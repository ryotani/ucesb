
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

class CAMAC_LECROY_4434
{
  raw_array_zero_suppress<DATA24,DATA24,32> data;
} ;
class CAMAC_PHILLIPS_7164
{
  raw_array_zero_suppress<DATA12,DATA12,16> data;
} ;
class CAMAC_SILENA_4418
{
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,8> data;
} ;
class DAQ_STATUS
{
  uint32 spill_nr;
  uint32 trigger;
  uint32 time;
  raw_array_zero_suppress<DATA32,DATA32,48> scaler;
  raw_array_zero_suppress<DATA32,DATA32,16> trig_count;
  uint32 events;
  uint32 errors;
  uint32 errors_data_corrupt;
  uint32 errors_data_missing;
  uint32 errors_data_too_much;
  uint32 errors_event_counter_mismatch;
  uint32 errors_event_counter_incr_mismatch;
  uint32 errors_trigger_mismatch;
  uint32 ticks_count;
  uint32 ticks_deadtime;
  raw_array_zero_suppress<DATA32,DATA32,16> ticks_dt_trig;
} ;
class DUMMY_WORD
{
  uint32 dummy_word;
} ;
class FASTBUS_LECROY_1875
{
  raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,64> data;
} ;
class FASTBUS_LECROY_1885
{
  raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,96> data;
} ;
class FEBEX_EVENTHEADER
{
  union 
  {
    struct 
    {
      uint32 N_febex1 : 8;
      uint32 N_febex2 : 8;
      uint32 N_febex3 : 8;
      uint32 N_febex4 : 8;
    } ;
    uint32 u32;
  } febexcards;
} ;
class FEBEX_NOTRACE
{
  raw_array<DATA8,DATA8,16> Nhit;
  raw_array_multi_zero_suppress<DATA12,DATA12,16,10> t;
  raw_array_multi_zero_suppress<DATA32,DATA32,16,10> E;
} ;
class FEBEX_PADDING
{
  ;
} ;
class LAND_STD_VME
{
  union 
  {
    struct 
    {
      uint32 fail_general : 1;
      uint32 fail_data_corrupt : 1;
      uint32 fail_data_missing : 1;
      uint32 fail_data_too_much : 1;
      uint32 fail_event_counter_mismatch : 1;
      uint32 fail_readout_error_driver : 1;
      uint32 fail_unexpected_trigger : 1;
      uint32 fail_firmware_mismatch : 1;
      uint32 dummy_8_21 : 14;
      uint32 has_multi_trlo_ii_counter0 : 1;
      uint32 has_clock_counter_stamp : 1;
      uint32 has_continous_event_counter : 1;
      uint32 has_update_qdc_iped_value : 1;
      uint32 spurious_start_before_tcal : 1;
      uint32 has_no_zero_suppression : 1;
      uint32 has_multi_adctdc_counter0 : 1;
      uint32 has_multi_scaler_counter0 : 1;
      uint32 has_multi_event : 1;
      uint32 has_time_stamp : 1;
    } ;
    uint32 u32;
  } failure;
  uint32 continous_event_counter;
  uint32 time_stamp;
  uint32 clock_counter_stamp;
  uint32 iped;
  uint32 multi_events;
  uint32 multi_trlo_ii_counter0;
  uint32 multi_scaler_counter0;
  uint32 multi_adctdc_counter0;
} ;
class NTP64_TIME
{
  uint32 sec;
  uint32 frac;
} ;
class NTP_MESSAGE
{
  union 
  {
    struct 
    {
      uint32 word_count : 16;
      uint32 quick_burst : 1;
      uint32 dummy_17_23 : 7;
      uint32 id : 8;
    } ;
    uint32 u32;
  } header;
  uint32 server_id;
  union 
  {
    struct 
    {
      uint32 precision : 8;
      uint32 poll : 8;
      uint32 stratum : 4;
      uint32 dummy_20_23 : 4;
      uint32 mode : 3;
      uint32 version : 3;
      uint32 leap : 2;
    } ;
    uint32 u32;
  } sspp;
  union 
  {
    struct 
    {
      uint32 frac : 16;
      uint32 sec : 16;
    } ;
    uint32 u32;
  } root_dly;
  union 
  {
    struct 
    {
      uint32 frac : 16;
      uint32 sec : 16;
    } ;
    uint32 u32;
  } root_disp;
  uint32 refid;
  NTP64_TIME orig2time;
  NTP64_TIME tmit2time;
  NTP64_TIME rec2time;
  NTP64_TIME rx2time;
  NTP64_TIME reftime;
  NTP64_TIME origtime;
  NTP64_TIME rectime;
  NTP64_TIME tmittime;
  NTP64_TIME rxtime;
} ;
class NXYTER
{
  DATA8 gemex;
  DATA8 nxyter;
  DATA8 err;
  DATA16 trigger_counter_head;
  DATA16 trigger_counter_foot;
  DATA16 ts_epoch_trigger;
  raw_list_ii_zero_suppress<DATA12,DATA12,10000> channel;
  raw_list_ii_zero_suppress<DATA12,DATA12,10000> adc;
  raw_list_ii_zero_suppress<DATA16,DATA16,10000> ts_epoch_hit;
  raw_list_ii_zero_suppress<DATA16,DATA16,10000> ts_nxy;
} ;
class NXYTER_PADDING
{
  ;
} ;
class RANDOM_TCAL_TSTAMP_CLOCK
{
  uint32 soft_latches;
  uint32 hard_latches;
  uint32 clock_ticks;
  NTP64_TIME before;
  NTP64_TIME after;
} ;
class RANDOM_TCAL
{
  union 
  {
    struct 
    {
      uint32 word_count : 8;
      uint32 pulses : 4;
      uint32 clock_bits : 6;
      uint32 has_tstamp1 : 1;
      uint32 has_tstamp2 : 1;
      uint32 dummy_20_23 : 4;
      uint32 id : 8;
    } ;
    uint32 u32;
  } header;
  RANDOM_TCAL_TSTAMP_CLOCK tstamp1;
  RANDOM_TCAL_TSTAMP_CLOCK tstamp2;
} ;
class SIS3316_ACTAR_S438
{
  raw_array<DATA32,DATA32,128> channel_header;
  raw_array_zero_suppress<DATA16,DATA16,40000> trace;
  union 
  {
    struct 
    {
      uint32 id : 8;
      uint32 channel_num : 8;
      uint32 unnamed_16_31 : 16;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 sampleLength : 26;
      uint32 unnamed_26_26 : 1;
      uint32 mawFlag : 1;
      uint32 unnamed_28_31 : 4;
    } ;
    uint32 u32;
  } header3;
} ;
class SIS3316_PSP_S438
{
  raw_array<DATA32,DATA32,128> channel_header;
  raw_array_zero_suppress<DATA16,DATA16,16000> trace;
  union 
  {
    struct 
    {
      uint32 id : 8;
      uint32 channel_num : 8;
      uint32 unnamed_16_31 : 16;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 sampleLength : 26;
      uint32 unnamed_26_26 : 1;
      uint32 mawFlag : 1;
      uint32 unnamed_28_31 : 4;
    } ;
    uint32 u32;
  } header3;
} ;
class SIS3316_S2_S438
{
  raw_array<DATA32,DATA32,128> channel_header;
  raw_array_zero_suppress<DATA16,DATA16,800> trace;
  union 
  {
    struct 
    {
      uint32 id : 8;
      uint32 channel_num : 8;
      uint32 unnamed_16_31 : 16;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 sampleLength : 26;
      uint32 unnamed_26_26 : 1;
      uint32 mawFlag : 1;
      uint32 unnamed_28_31 : 4;
    } ;
    uint32 u32;
  } header3;
} ;
class SIS3316_S2_SCALERS_S438
{
  raw_array<DATA32,DATA32,192> scalers;
  union 
  {
    struct 
    {
      uint32 unnamed_0_31 : 32;
    } ;
    uint32 u32;
  } custom_header;
} ;
class SIS3316_SCALERS_S438
{
  raw_array<DATA32,DATA32,480> scalers;
  union 
  {
    struct 
    {
      uint32 unnamed_0_31 : 32;
    } ;
    uint32 u32;
  } custom_header;
} ;
class SOFT_SCALER32
{
  raw_array_zero_suppress<DATA32,DATA32,32> data;
} ;
class TACQUILA_DATA
{
  raw_array_zero_suppress<DATA12,DATA12,17> tac[30];
  raw_array_zero_suppress<DATA12,DATA12,17> adc[30];
  raw_array_zero_suppress<DATA12,DATA12,17> clk[30];
  union 
  {
    struct 
    {
      uint32 count : 9;
      uint32 dummy1 : 3;
      uint32 trigger_tac : 4;
      uint32 trigger_sam : 4;
      uint32 lec : 4;
      uint32 gtb : 4;
      uint32 sam : 4;
    } ;
    uint32 u32;
  } header;
} ;
class TACQUILA_DATA_S438B
{
  raw_array_zero_suppress<DATA12,DATA12,32> tac[30];
  raw_array_zero_suppress<DATA12,DATA12,17> adc[30];
  raw_array_zero_suppress<DATA12,DATA12,17> clk[30];
  union 
  {
    struct 
    {
      uint32 count : 9;
      uint32 dummy1 : 3;
      uint32 trigger_tac : 4;
      uint32 trigger_sam : 4;
      uint32 lec : 4;
      uint32 gtb : 4;
      uint32 sam : 4;
    } ;
    uint32 u32;
  } header;
} ;
class TAMEX_CHANNEL
{
  raw_array_zero_suppress<DATA32,DATA32,128> type;
  raw_array_zero_suppress<DATA32,DATA32,128> tdc;
  union 
  {
    struct 
    {
      uint32 unnamed_0_7 : 8;
      uint32 trigger_type : 4;
      uint32 sfp_index : 4;
      uint32 card_index : 8;
      uint32 channel_index : 8;
    } ;
    uint32 u32;
  } header;
  uint32 data_size;
  union 
  {
    struct 
    {
      uint32 yanana_phone : 24;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } tdc_header;
  union 
  {
    struct 
    {
      uint32 wanana_phone : 24;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } tdc_trailer;
} ;
class TIMESTAMP_WHITERABBIT
{
  DATA12 subsystem_id;
  DATA16 t1;
  DATA16 t2;
  DATA16 t3;
  DATA16 t4;
} ;
class TRIDI
{
  union 
  {
    struct 
    {
      uint32 tpat : 16;
      uint32 unnamed_16_31 : 16;
    } ;
    uint32 u32;
  } header;
  uint32 ts_msb;
  uint32 ts_lsb;
} ;
class TRLO_SAMPLER
{
  raw_list_ii_zero_suppress<DATA32,DATA32,512> stamps;
  union 
  {
    struct 
    {
      uint32 count : 10;
      uint32 dummy_10_23 : 14;
      uint32 id : 8;
    } ;
    uint32 u32;
  } header;
} ;
class TRLO_SCALER
{
  raw_list_ii_zero_suppress<DATA32,DATA32,16> stamps;
  union 
  {
    struct 
    {
      uint32 crate_id : 8;
      uint32 unnamed_8_31 : 24;
    } ;
    uint32 u32;
  } header;
} ;
class VME_CAEN_V1190_SUBTDC
{
  union 
  {
    struct 
    {
      uint32 bunch_id : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
  union 
  {
    struct 
    {
      uint32 word_count : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1190
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1190_SUBTDC tdc[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1190_S438_SUBTDC
{
  union 
  {
    struct 
    {
      uint32 bunch_id : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
  union 
  {
    struct 
    {
      uint32 word_count : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1190_S438
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 dummy_5_23 : 19;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } ucesb_separator;
  union 
  {
    struct 
    {
      uint32 dummy_0_4 : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1190_S438_SUBTDC tdc[4];
  union 
  {
    struct 
    {
      uint32 dummy_0_4 : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1190_S438_SHORT_SUBTDC
{
  ;
} ;
class VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR
{
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
} ;
class VME_CAEN_V1190_S438_SHORT
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1190_S438_SHORT_SUBTDC tdc[4];
  VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR err[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1190_SHORT_SUBTDC
{
  ;
} ;
class VME_CAEN_V1190_SHORT_SUBTDC_ERROR
{
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
} ;
class VME_CAEN_V1190_SHORT
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1190_SHORT_SUBTDC tdc[4];
  VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290_SUBTDC
{
  union 
  {
    struct 
    {
      uint32 bunch_id : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
  union 
  {
    struct 
    {
      uint32 word_count : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1290_SUBTDC tdc[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290_S438_SUBTDC
{
  union 
  {
    struct 
    {
      uint32 bunch_id : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
  union 
  {
    struct 
    {
      uint32 word_count : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290_S438
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 dummy_5_23 : 19;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } ucesb_separator;
  union 
  {
    struct 
    {
      uint32 dummy_0_4 : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1290_S438_SUBTDC tdc[4];
  union 
  {
    struct 
    {
      uint32 dummy_0_4 : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290_S438_SHORT_SUBTDC
{
  ;
} ;
class VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR
{
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
} ;
class VME_CAEN_V1290_S438_SHORT
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1290_S438_SHORT_SUBTDC tdc[4];
  VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR err[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290_SHORT_SUBTDC
{
  ;
} ;
class VME_CAEN_V1290_SHORT_SUBTDC_ERROR
{
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
} ;
class VME_CAEN_V1290_SHORT
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1290_SHORT_SUBTDC tdc[4];
  VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V775
{
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  union 
  {
    struct 
    {
      uint32 event_number : 24;
      uint32 unnamed_24_26 : 3;
      uint32 geom : 5;
    } ;
    uint32 u32;
  } eob;
} ;
class VME_CAEN_V830
{
  raw_array_zero_suppress<DATA32,DATA32,32> data;
  union 
  {
    struct 
    {
      uint32 event_number : 16;
      uint32 ts : 2;
      uint32 count : 6;
      uint32 dummy_24_25 : 2;
      uint32 unnamed_26_26 : 1;
      uint32 geom : 5;
    } ;
    uint32 u32;
  } header;
} ;
class VME_GSI_VFTX2
{
  raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 id : 5;
      uint32 internal_status : 4;
      uint32 count : 9;
      uint32 dummy_18_23 : 6;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 unnamed_0_7 : 8;
      uint32 dummy_8_10 : 3;
      uint32 trigger_timestamp : 13;
      uint32 dummy_24_28 : 5;
      uint32 unnamed_29_30 : 2;
      uint32 unnamed_31_31 : 1;
    } ;
    uint32 u32;
  } event_header;
} ;
class VME_GSI_VFTX2_7PS
{
  raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 id : 5;
      uint32 internal_status : 4;
      uint32 count : 9;
      uint32 dummy_18_23 : 6;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
} ;
class VME_GSI_VFTX2_LT
{
  raw_array_multi_zero_suppress<DATA12,DATA12,64,100> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,64,100> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 id : 5;
      uint32 internal_status : 4;
      uint32 count : 9;
      uint32 dummy_18_23 : 6;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 unnamed_0_7 : 8;
      uint32 dummy_8_10 : 3;
      uint32 trigger_timestamp : 13;
      uint32 dummy_24_28 : 5;
      uint32 unnamed_29_30 : 2;
      uint32 unnamed_31_31 : 1;
    } ;
    uint32 u32;
  } event_header;
} ;
class VME_MESYTEC_MADC32
{
  raw_array_zero_suppress<DATA14_OVERFLOW,DATA14_OVERFLOW,32> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class VME_MESYTEC_MDPP16
{
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,34,100> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class VME_STRUCK_SIS3316
{
  raw_array_zero_suppress<DATA16,DATA16,900> data[2];
  raw_array_zero_suppress<DATA32,DATA32,3> maw[2];
  raw_array_zero_suppress<DATA32,DATA32,2> timeStamp[2];
  raw_array_zero_suppress<DATA32,DATA32,2> gate[2];
  union 
  {
    struct 
    {
      uint32 chanNo : 16;
      uint32 unnamed_16_31 : 16;
    } ;
    uint32 u32;
  } header0;
  union 
  {
    struct 
    {
      uint32 format : 4;
      uint32 channelID : 12;
      uint32 timeS : 16;
    } ;
    uint32 u32;
  } header1;
  union 
  {
    struct 
    {
      uint32 timeS : 32;
    } ;
    uint32 u32;
  } header2;
  union 
  {
    struct 
    {
      uint32 sum : 28;
      uint32 unnamed_28_31 : 4;
    } ;
    uint32 u32;
  } gate7;
  union 
  {
    struct 
    {
      uint32 sum : 28;
      uint32 unnamed_28_31 : 4;
    } ;
    uint32 u32;
  } gate8;
  union 
  {
    struct 
    {
      uint32 max : 28;
      uint32 unnamed_28_31 : 4;
    } ;
    uint32 u32;
  } maw1;
  union 
  {
    struct 
    {
      uint32 after : 28;
      uint32 unnamed_28_31 : 4;
    } ;
    uint32 u32;
  } maw2;
  union 
  {
    struct 
    {
      uint32 before : 28;
      uint32 unnamed_28_31 : 4;
    } ;
    uint32 u32;
  } maw3;
  union 
  {
    struct 
    {
      uint32 sampleLength : 26;
      uint32 unnamed_26_26 : 1;
      uint32 mawFlag : 1;
      uint32 unnamed_28_31 : 4;
    } ;
    uint32 u32;
  } header3;
} ;
class WR_MULTI
{
  DATA32 time_hi;
  DATA32 time_lo;
} ;
class LAND_CAMAC_CONVERTER : public unpack_subevent_base
{
  uint16 tpat;
  uint16 tprev;
  uint16 tnext;
  uint16 tprev2;
} ;
class LAND_CAMAC_SCALER : public unpack_subevent_base
{
  uint32 timestamp;
  union 
  {
    struct 
    {
      uint32 unnamed_0_31 : 32;
    } ;
    uint32 u32;
  } endianess;
  CAMAC_LECROY_4434 scaler0;
  CAMAC_LECROY_4434 scaler2;
  CAMAC_LECROY_4434 scaler1;
  SOFT_SCALER32 scaler3;
} ;
class LAND_CAMAC_START_STOP_STAMP : public unpack_subevent_base
{
  uint32 timestamp;
  union 
  {
    struct 
    {
      uint32 unnamed_0_31 : 32;
    } ;
    uint32 u32;
  } endianess;
} ;
class LAND_CAMAC_TCAL_INFO : public unpack_subevent_base
{
  uint32 info;
  RANDOM_TCAL rtcal;
  NTP_MESSAGE ntp;
} ;
class TACQUILA_LAND_SUBEVENT : public unpack_subevent_base
{
  TACQUILA_DATA data_sam5_gtb0;
  TACQUILA_DATA data_sam6_gtb1;
  TACQUILA_DATA data_sam6_gtb0;
} ;
class califa_subev : public unpack_subevent_base
{
  DUMMY_WORD dummy;
  TIMESTAMP_WHITERABBIT ts;
} ;
class daq_status_subev : public unpack_subevent_base
{
  DAQ_STATUS status;
} ;
class empty_subev : public unpack_subevent_base
{
  ;
} ;
class fiber_subev : public unpack_subevent_base
{
  FEBEX_NOTRACE GFI0;
  FEBEX_NOTRACE GFI2;
  FEBEX_NOTRACE GFI1;
  FEBEX_NOTRACE GFI3;
  FEBEX_NOTRACE GFI4;
  FEBEX_NOTRACE fi4[4];
  FEBEX_EVENTHEADER evhe;
} ;
class los_psp_subev : public unpack_subevent_base
{
  VME_GSI_VFTX2_7PS vftx2_1;
  VME_MESYTEC_MADC32 madc32;
  VME_GSI_VFTX2_7PS vftx2_2;
  LAND_STD_VME land_vme;
} ;
class los_scaler_subev : public unpack_subevent_base
{
  TRLO_SCALER scaler;
} ;
class mark_event_time : public unpack_subevent_base
{
  TRLO_SAMPLER sampler_los;
  TRLO_SAMPLER sampler_cb_sum;
  LAND_STD_VME land_vme;
} ;
class mfi_subev : public unpack_subevent_base
{
  NXYTER_PADDING pads;
  NXYTER data01;
  NXYTER data00;
  NXYTER data10;
  NXYTER data11;
  NXYTER data20;
  NXYTER data21;
  NXYTER data30;
  NXYTER data31;
} ;
class neuland_subevent : public unpack_subevent_base
{
  TACQUILA_DATA_S438B data_sam5_gtb0;
  TACQUILA_DATA_S438B data_sam6_gtb1;
  TACQUILA_DATA_S438B data_sam6_gtb0;
  TACQUILA_DATA_S438B data_sam5_gtb1;
  TACQUILA_DATA_S438B data_sam7_gtb0;
  TACQUILA_DATA_S438B data_sam7_gtb1;
} ;
class neuland_tamex_subev : public unpack_subevent_base
{
  union 
  {
    struct 
    {
      uint32 ns_after_trigger : 11;
      uint32 dummy_11_15 : 5;
      uint32 ns_before_trigger : 11;
      uint32 dummy_27_31 : 5;
    } ;
    uint32 u32;
  } trigger_window;
  TAMEX_CHANNEL tamex[13];
} ;
class psp_febex_subev : public unpack_subevent_base
{
  FEBEX_NOTRACE febex1;
  FEBEX_NOTRACE febex3;
  FEBEX_NOTRACE febex2;
  FEBEX_NOTRACE febex4;
  FEBEX_NOTRACE febex5;
  FEBEX_NOTRACE febex6;
  FEBEX_NOTRACE febex7;
  FEBEX_NOTRACE febex8;
  FEBEX_NOTRACE febex9;
  FEBEX_NOTRACE febex10;
  FEBEX_EVENTHEADER eh;
} ;
class psp_subev : public unpack_subevent_base
{
  SIS3316_ACTAR_S438 sis3316_3;
  SIS3316_ACTAR_S438 sis3316_5;
  SIS3316_ACTAR_S438 sis3316_4;
  SIS3316_ACTAR_S438 sis3316_6;
  SIS3316_ACTAR_S438 sis3316_7;
  SIS3316_ACTAR_S438 sis3316_8;
  LAND_STD_VME land_vme;
  TRIDI tridi_ts;
} ;
class sit_subev : public unpack_subevent_base
{
  DUMMY_WORD dummy;
  TIMESTAMP_WHITERABBIT ts;
} ;
class tof13_subev : public unpack_subevent_base
{
  VME_GSI_VFTX2 vftx2_1;
  VME_GSI_VFTX2 vftx2_2;
  VME_GSI_VFTX2 vftx2_3;
  VME_GSI_VFTX2 vftx2_4;
  VME_CAEN_V1290_S438 v1290_1;
  LAND_STD_VME land_vme;
} ;
class tof13_tamex_subev : public unpack_subevent_base
{
  union 
  {
    struct 
    {
      uint32 ns_after_trigger : 11;
      uint32 dummy_11_15 : 5;
      uint32 ns_before_trigger : 11;
      uint32 dummy_27_31 : 5;
    } ;
    uint32 u32;
  } trigger_window;
  TAMEX_CHANNEL tamex[2];
} ;
class wr_100 : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts100;
} ;
class wr_300 : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts300;
} ;
class wr_500 : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts500;
} ;
class unpack_event : public unpack_event_base
{
  LAND_CAMAC_SCALER scalers;
  wr_100 master_ts;
  daq_status_subev daq_status;
  mark_event_time event_time;
  LAND_CAMAC_CONVERTER tpat_and_co;
  neuland_subevent neuland_tacq;
  los_psp_subev los_psp;
  los_scaler_subev los_scaler;
  tof13_subev tof13;
  wr_500 psp_ts;
  sit_subev sit;
  wr_300 tbm_ts;
  fiber_subev fiber;
  psp_febex_subev psp_febex;
  neuland_tamex_subev neuland_tamex;
  tof13_tamex_subev tof13_tamex;
  mfi_subev mfi;
  califa_subev califa;
  psp_subev psp_struck;
  empty_subev empty_1;
  empty_subev empty_2;
} ;
class unpack_sticky_event : public unpack_sticky_event_base
{
  ;
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_CAMAC_LECROY_4434
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CAMAC_LECROY_4434)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(CAMAC_LECROY_4434);
};
#endif//USER_DEF_CAMAC_LECROY_4434

#ifndef USER_DEF_CAMAC_PHILLIPS_7164
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CAMAC_PHILLIPS_7164)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),16> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(CAMAC_PHILLIPS_7164);
};
#endif//USER_DEF_CAMAC_PHILLIPS_7164

#ifndef USER_DEF_CAMAC_SILENA_4418
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CAMAC_SILENA_4418)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),8> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(CAMAC_SILENA_4418);
};
#endif//USER_DEF_CAMAC_SILENA_4418

#ifndef USER_DEF_DAQ_STATUS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(DAQ_STATUS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(spill_nr);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spill_nr);
  STRUCT_MIRROR_ITEM_CTRL(trigger);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger);
  STRUCT_MIRROR_ITEM_CTRL(time);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time);
  STRUCT_MIRROR_ITEM_CTRL(scaler);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),48> STRUCT_MIRROR_NAME(scaler);
  STRUCT_MIRROR_ITEM_CTRL(trig_count);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(trig_count);
  STRUCT_MIRROR_ITEM_CTRL(events);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(events);
  STRUCT_MIRROR_ITEM_CTRL(errors);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(errors);
  STRUCT_MIRROR_ITEM_CTRL(errors_data_corrupt);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(errors_data_corrupt);
  STRUCT_MIRROR_ITEM_CTRL(errors_data_missing);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(errors_data_missing);
  STRUCT_MIRROR_ITEM_CTRL(errors_data_too_much);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(errors_data_too_much);
  STRUCT_MIRROR_ITEM_CTRL(errors_event_counter_mismatch);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(errors_event_counter_mismatch);
  STRUCT_MIRROR_ITEM_CTRL(errors_event_counter_incr_mismatch);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(errors_event_counter_incr_mismatch);
  STRUCT_MIRROR_ITEM_CTRL(errors_trigger_mismatch);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(errors_trigger_mismatch);
  STRUCT_MIRROR_ITEM_CTRL(ticks_count);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ticks_count);
  STRUCT_MIRROR_ITEM_CTRL(ticks_deadtime);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ticks_deadtime);
  STRUCT_MIRROR_ITEM_CTRL(ticks_dt_trig);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(ticks_dt_trig);
  STRUCT_MIRROR_FCNS_DECL(DAQ_STATUS);
};
#endif//USER_DEF_DAQ_STATUS

#ifndef USER_DEF_DUMMY_WORD
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(DUMMY_WORD)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(dummy_word);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_word);
  STRUCT_MIRROR_FCNS_DECL(DUMMY_WORD);
};
#endif//USER_DEF_DUMMY_WORD

#ifndef USER_DEF_FASTBUS_LECROY_1875
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1875)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),64> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(FASTBUS_LECROY_1875);
};
#endif//USER_DEF_FASTBUS_LECROY_1875

#ifndef USER_DEF_FASTBUS_LECROY_1885
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1885)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),96> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(FASTBUS_LECROY_1885);
};
#endif//USER_DEF_FASTBUS_LECROY_1885

#ifndef USER_DEF_FEBEX_EVENTHEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_EVENTHEADER)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(N_febex1);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(N_febex1);
      STRUCT_MIRROR_ITEM_CTRL(N_febex2);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(N_febex2);
      STRUCT_MIRROR_ITEM_CTRL(N_febex3);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(N_febex3);
      STRUCT_MIRROR_ITEM_CTRL(N_febex4);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(N_febex4);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(febexcards);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_EVENTHEADER);
};
#endif//USER_DEF_FEBEX_EVENTHEADER

#ifndef USER_DEF_FEBEX_NOTRACE
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_NOTRACE)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(Nhit);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(Nhit);
  STRUCT_MIRROR_ITEM_CTRL(t);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),16,10> STRUCT_MIRROR_NAME(t);
  STRUCT_MIRROR_ITEM_CTRL(E);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16,10> STRUCT_MIRROR_NAME(E);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_NOTRACE);
};
#endif//USER_DEF_FEBEX_NOTRACE

#ifndef USER_DEF_FEBEX_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(FEBEX_PADDING);
};
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_LAND_STD_VME
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_STD_VME)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(fail_general);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_general);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_corrupt);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_corrupt);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_missing);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_missing);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_too_much);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_too_much);
      STRUCT_MIRROR_ITEM_CTRL(fail_event_counter_mismatch);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_event_counter_mismatch);
      STRUCT_MIRROR_ITEM_CTRL(fail_readout_error_driver);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_readout_error_driver);
      STRUCT_MIRROR_ITEM_CTRL(fail_unexpected_trigger);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_unexpected_trigger);
      STRUCT_MIRROR_ITEM_CTRL(fail_firmware_mismatch);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_firmware_mismatch);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_21);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_21);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_trlo_ii_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_trlo_ii_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_clock_counter_stamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_clock_counter_stamp);
      STRUCT_MIRROR_ITEM_CTRL(has_continous_event_counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_continous_event_counter);
      STRUCT_MIRROR_ITEM_CTRL(has_update_qdc_iped_value);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_update_qdc_iped_value);
      STRUCT_MIRROR_ITEM_CTRL(spurious_start_before_tcal);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spurious_start_before_tcal);
      STRUCT_MIRROR_ITEM_CTRL(has_no_zero_suppression);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_no_zero_suppression);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_adctdc_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_adctdc_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_scaler_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_scaler_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_event);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_event);
      STRUCT_MIRROR_ITEM_CTRL(has_time_stamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_time_stamp);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(failure);
  STRUCT_MIRROR_ITEM_CTRL(continous_event_counter);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(continous_event_counter);
  STRUCT_MIRROR_ITEM_CTRL(time_stamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_stamp);
  STRUCT_MIRROR_ITEM_CTRL(clock_counter_stamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(clock_counter_stamp);
  STRUCT_MIRROR_ITEM_CTRL(iped);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(iped);
  STRUCT_MIRROR_ITEM_CTRL(multi_events);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_events);
  STRUCT_MIRROR_ITEM_CTRL(multi_trlo_ii_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_trlo_ii_counter0);
  STRUCT_MIRROR_ITEM_CTRL(multi_scaler_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_scaler_counter0);
  STRUCT_MIRROR_ITEM_CTRL(multi_adctdc_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_adctdc_counter0);
  STRUCT_MIRROR_FCNS_DECL(LAND_STD_VME);
};
#endif//USER_DEF_LAND_STD_VME

#ifndef USER_DEF_NTP64_TIME
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(NTP64_TIME)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(sec);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sec);
  STRUCT_MIRROR_ITEM_CTRL(frac);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frac);
  STRUCT_MIRROR_FCNS_DECL(NTP64_TIME);
};
#endif//USER_DEF_NTP64_TIME

#ifndef USER_DEF_NTP_MESSAGE
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(NTP_MESSAGE)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(quick_burst);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(quick_burst);
      STRUCT_MIRROR_ITEM_CTRL(dummy_17_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_17_23);
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(server_id);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(server_id);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(precision);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(precision);
      STRUCT_MIRROR_ITEM_CTRL(poll);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(poll);
      STRUCT_MIRROR_ITEM_CTRL(stratum);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(stratum);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(mode);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mode);
      STRUCT_MIRROR_ITEM_CTRL(version);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(version);
      STRUCT_MIRROR_ITEM_CTRL(leap);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(leap);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(sspp);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(frac);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frac);
      STRUCT_MIRROR_ITEM_CTRL(sec);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sec);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(root_dly);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(frac);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frac);
      STRUCT_MIRROR_ITEM_CTRL(sec);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sec);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(root_disp);
  STRUCT_MIRROR_ITEM_CTRL(refid);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(refid);
  STRUCT_MIRROR_ITEM_CTRL(orig2time);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(orig2time);
  STRUCT_MIRROR_ITEM_CTRL(tmit2time);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tmit2time);
  STRUCT_MIRROR_ITEM_CTRL(rec2time);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(rec2time);
  STRUCT_MIRROR_ITEM_CTRL(rx2time);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(rx2time);
  STRUCT_MIRROR_ITEM_CTRL(reftime);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(reftime);
  STRUCT_MIRROR_ITEM_CTRL(origtime);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(origtime);
  STRUCT_MIRROR_ITEM_CTRL(rectime);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(rectime);
  STRUCT_MIRROR_ITEM_CTRL(tmittime);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tmittime);
  STRUCT_MIRROR_ITEM_CTRL(rxtime);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(rxtime);
  STRUCT_MIRROR_FCNS_DECL(NTP_MESSAGE);
};
#endif//USER_DEF_NTP_MESSAGE

#ifndef USER_DEF_NXYTER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(NXYTER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(gemex);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(gemex);
  STRUCT_MIRROR_ITEM_CTRL(nxyter);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(nxyter);
  STRUCT_MIRROR_ITEM_CTRL(err);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(err);
  STRUCT_MIRROR_ITEM_CTRL(trigger_counter_head);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_counter_head);
  STRUCT_MIRROR_ITEM_CTRL(trigger_counter_foot);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_counter_foot);
  STRUCT_MIRROR_ITEM_CTRL(ts_epoch_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts_epoch_trigger);
  STRUCT_MIRROR_ITEM_CTRL(channel);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),10000> STRUCT_MIRROR_NAME(channel);
  STRUCT_MIRROR_ITEM_CTRL(adc);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),10000> STRUCT_MIRROR_NAME(adc);
  STRUCT_MIRROR_ITEM_CTRL(ts_epoch_hit);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),10000> STRUCT_MIRROR_NAME(ts_epoch_hit);
  STRUCT_MIRROR_ITEM_CTRL(ts_nxy);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),10000> STRUCT_MIRROR_NAME(ts_nxy);
  STRUCT_MIRROR_FCNS_DECL(NXYTER);
};
#endif//USER_DEF_NXYTER

#ifndef USER_DEF_NXYTER_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(NXYTER_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(NXYTER_PADDING);
};
#endif//USER_DEF_NXYTER_PADDING

#ifndef USER_DEF_RANDOM_TCAL_TSTAMP_CLOCK
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(RANDOM_TCAL_TSTAMP_CLOCK)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(soft_latches);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(soft_latches);
  STRUCT_MIRROR_ITEM_CTRL(hard_latches);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(hard_latches);
  STRUCT_MIRROR_ITEM_CTRL(clock_ticks);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(clock_ticks);
  STRUCT_MIRROR_ITEM_CTRL(before);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(before);
  STRUCT_MIRROR_ITEM_CTRL(after);
  STRUCT_MIRROR_TYPE(NTP64_TIME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(after);
  STRUCT_MIRROR_FCNS_DECL(RANDOM_TCAL_TSTAMP_CLOCK);
};
#endif//USER_DEF_RANDOM_TCAL_TSTAMP_CLOCK

#ifndef USER_DEF_RANDOM_TCAL
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(RANDOM_TCAL)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(pulses);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pulses);
      STRUCT_MIRROR_ITEM_CTRL(clock_bits);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(clock_bits);
      STRUCT_MIRROR_ITEM_CTRL(has_tstamp1);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_tstamp1);
      STRUCT_MIRROR_ITEM_CTRL(has_tstamp2);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_tstamp2);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tstamp1);
  STRUCT_MIRROR_TYPE(RANDOM_TCAL_TSTAMP_CLOCK) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tstamp1);
  STRUCT_MIRROR_ITEM_CTRL(tstamp2);
  STRUCT_MIRROR_TYPE(RANDOM_TCAL_TSTAMP_CLOCK) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tstamp2);
  STRUCT_MIRROR_FCNS_DECL(RANDOM_TCAL);
};
#endif//USER_DEF_RANDOM_TCAL

#ifndef USER_DEF_SIS3316_ACTAR_S438
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SIS3316_ACTAR_S438)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(channel_header);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),128> STRUCT_MIRROR_NAME(channel_header);
  STRUCT_MIRROR_ITEM_CTRL(trace);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),40000> STRUCT_MIRROR_NAME(trace);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(channel_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_num);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_16_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_16_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(sampleLength);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sampleLength);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_26_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_26_26);
      STRUCT_MIRROR_ITEM_CTRL(mawFlag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mawFlag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_28_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_28_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header3);
  STRUCT_MIRROR_FCNS_DECL(SIS3316_ACTAR_S438);
};
#endif//USER_DEF_SIS3316_ACTAR_S438

#ifndef USER_DEF_SIS3316_PSP_S438
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SIS3316_PSP_S438)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(channel_header);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),128> STRUCT_MIRROR_NAME(channel_header);
  STRUCT_MIRROR_ITEM_CTRL(trace);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),16000> STRUCT_MIRROR_NAME(trace);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(channel_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_num);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_16_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_16_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(sampleLength);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sampleLength);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_26_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_26_26);
      STRUCT_MIRROR_ITEM_CTRL(mawFlag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mawFlag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_28_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_28_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header3);
  STRUCT_MIRROR_FCNS_DECL(SIS3316_PSP_S438);
};
#endif//USER_DEF_SIS3316_PSP_S438

#ifndef USER_DEF_SIS3316_S2_S438
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SIS3316_S2_S438)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(channel_header);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),128> STRUCT_MIRROR_NAME(channel_header);
  STRUCT_MIRROR_ITEM_CTRL(trace);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),800> STRUCT_MIRROR_NAME(trace);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(channel_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_num);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_16_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_16_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(sampleLength);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sampleLength);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_26_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_26_26);
      STRUCT_MIRROR_ITEM_CTRL(mawFlag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mawFlag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_28_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_28_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header3);
  STRUCT_MIRROR_FCNS_DECL(SIS3316_S2_S438);
};
#endif//USER_DEF_SIS3316_S2_S438

#ifndef USER_DEF_SIS3316_S2_SCALERS_S438
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SIS3316_S2_SCALERS_S438)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(scalers);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),192> STRUCT_MIRROR_NAME(scalers);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
  STRUCT_MIRROR_FCNS_DECL(SIS3316_S2_SCALERS_S438);
};
#endif//USER_DEF_SIS3316_S2_SCALERS_S438

#ifndef USER_DEF_SIS3316_SCALERS_S438
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SIS3316_SCALERS_S438)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(scalers);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),480> STRUCT_MIRROR_NAME(scalers);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
  STRUCT_MIRROR_FCNS_DECL(SIS3316_SCALERS_S438);
};
#endif//USER_DEF_SIS3316_SCALERS_S438

#ifndef USER_DEF_SOFT_SCALER32
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SOFT_SCALER32)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(SOFT_SCALER32);
};
#endif//USER_DEF_SOFT_SCALER32

#ifndef USER_DEF_TACQUILA_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TACQUILA_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(tac);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tac__i0,,30);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),17> STRUCT_MIRROR_NAME(tac[30]);
  STRUCT_MIRROR_ITEM_CTRL(adc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(adc__i0,,30);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),17> STRUCT_MIRROR_NAME(adc[30]);
  STRUCT_MIRROR_ITEM_CTRL(clk);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(clk__i0,,30);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),17> STRUCT_MIRROR_NAME(clk[30]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy1);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy1);
      STRUCT_MIRROR_ITEM_CTRL(trigger_tac);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_tac);
      STRUCT_MIRROR_ITEM_CTRL(trigger_sam);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_sam);
      STRUCT_MIRROR_ITEM_CTRL(lec);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(lec);
      STRUCT_MIRROR_ITEM_CTRL(gtb);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(gtb);
      STRUCT_MIRROR_ITEM_CTRL(sam);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sam);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TACQUILA_DATA);
};
#endif//USER_DEF_TACQUILA_DATA

#ifndef USER_DEF_TACQUILA_DATA_S438B
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TACQUILA_DATA_S438B)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(tac);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tac__i0,,30);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),32> STRUCT_MIRROR_NAME(tac[30]);
  STRUCT_MIRROR_ITEM_CTRL(adc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(adc__i0,,30);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),17> STRUCT_MIRROR_NAME(adc[30]);
  STRUCT_MIRROR_ITEM_CTRL(clk);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(clk__i0,,30);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),17> STRUCT_MIRROR_NAME(clk[30]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy1);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy1);
      STRUCT_MIRROR_ITEM_CTRL(trigger_tac);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_tac);
      STRUCT_MIRROR_ITEM_CTRL(trigger_sam);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_sam);
      STRUCT_MIRROR_ITEM_CTRL(lec);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(lec);
      STRUCT_MIRROR_ITEM_CTRL(gtb);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(gtb);
      STRUCT_MIRROR_ITEM_CTRL(sam);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sam);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TACQUILA_DATA_S438B);
};
#endif//USER_DEF_TACQUILA_DATA_S438B

#ifndef USER_DEF_TAMEX_CHANNEL
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX_CHANNEL)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(type);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),128> STRUCT_MIRROR_NAME(type);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),128> STRUCT_MIRROR_NAME(tdc);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_7);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_7);
      STRUCT_MIRROR_ITEM_CTRL(trigger_type);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_type);
      STRUCT_MIRROR_ITEM_CTRL(sfp_index);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp_index);
      STRUCT_MIRROR_ITEM_CTRL(card_index);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(card_index);
      STRUCT_MIRROR_ITEM_CTRL(channel_index);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_index);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(data_size);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_size);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(yanana_phone);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(yanana_phone);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(tdc_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(wanana_phone);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(wanana_phone);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(tdc_trailer);
  STRUCT_MIRROR_FCNS_DECL(TAMEX_CHANNEL);
};
#endif//USER_DEF_TAMEX_CHANNEL

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(subsystem_id);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(subsystem_id);
  STRUCT_MIRROR_ITEM_CTRL(t1);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t1);
  STRUCT_MIRROR_ITEM_CTRL(t2);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t2);
  STRUCT_MIRROR_ITEM_CTRL(t3);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t3);
  STRUCT_MIRROR_ITEM_CTRL(t4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t4);
  STRUCT_MIRROR_FCNS_DECL(TIMESTAMP_WHITERABBIT);
};
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TRIDI
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRIDI)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(tpat);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tpat);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_16_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_16_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(ts_msb);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts_msb);
  STRUCT_MIRROR_ITEM_CTRL(ts_lsb);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts_lsb);
  STRUCT_MIRROR_FCNS_DECL(TRIDI);
};
#endif//USER_DEF_TRIDI

#ifndef USER_DEF_TRLO_SAMPLER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLO_SAMPLER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(stamps);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),512> STRUCT_MIRROR_NAME(stamps);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_10_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_10_23);
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TRLO_SAMPLER);
};
#endif//USER_DEF_TRLO_SAMPLER

#ifndef USER_DEF_TRLO_SCALER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLO_SCALER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(stamps);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(stamps);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(crate_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(crate_id);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_8_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_8_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TRLO_SCALER);
};
#endif//USER_DEF_TRLO_SCALER

#ifndef USER_DEF_VME_CAEN_V1190_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SUBTDC)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(bunch_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bunch_id);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1190_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190);
};
#endif//USER_DEF_VME_CAEN_V1190

#ifndef USER_DEF_VME_CAEN_V1190_S438_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438_SUBTDC)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(bunch_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bunch_id);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_S438_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1190_S438_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_S438
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(dummy_5_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_5_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(ucesb_separator);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(dummy_0_4);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_0_4);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_S438_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(dummy_0_4);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_0_4);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_S438);
};
#endif//USER_DEF_VME_CAEN_V1190_S438

#ifndef USER_DEF_VME_CAEN_V1190_S438_SHORT_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438_SHORT_SUBTDC)
{
public:
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_S438_SHORT_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1190_S438_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR);
};
#endif//USER_DEF_VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1190_S438_SHORT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438_SHORT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_S438_SHORT_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(err);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(err__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(err[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_S438_SHORT);
};
#endif//USER_DEF_VME_CAEN_V1190_S438_SHORT

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC)
{
public:
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SHORT_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC_ERROR)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SHORT_SUBTDC_ERROR);
};
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1190_SHORT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_SHORT_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(err);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(err__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_SHORT_SUBTDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(err[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SHORT);
};
#endif//USER_DEF_VME_CAEN_V1190_SHORT

#ifndef USER_DEF_VME_CAEN_V1290_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SUBTDC)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(bunch_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bunch_id);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1290_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290);
};
#endif//USER_DEF_VME_CAEN_V1290

#ifndef USER_DEF_VME_CAEN_V1290_S438_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438_SUBTDC)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(bunch_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bunch_id);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_S438_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1290_S438_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_S438
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(dummy_5_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_5_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(ucesb_separator);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(dummy_0_4);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_0_4);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_S438_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(dummy_0_4);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_0_4);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_S438);
};
#endif//USER_DEF_VME_CAEN_V1290_S438

#ifndef USER_DEF_VME_CAEN_V1290_S438_SHORT_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438_SHORT_SUBTDC)
{
public:
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_S438_SHORT_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1290_S438_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR);
};
#endif//USER_DEF_VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1290_S438_SHORT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438_SHORT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_S438_SHORT_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(err);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(err__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(err[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_S438_SHORT);
};
#endif//USER_DEF_VME_CAEN_V1290_S438_SHORT

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC)
{
public:
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SHORT_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC_ERROR)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SHORT_SUBTDC_ERROR);
};
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1290_SHORT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_SHORT_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(err);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(err__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_SHORT_SUBTDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(err[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SHORT);
};
#endif//USER_DEF_VME_CAEN_V1290_SHORT

#ifndef USER_DEF_VME_CAEN_V775
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V775)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_26);
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(eob);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V775);
};
#endif//USER_DEF_VME_CAEN_V775

#ifndef USER_DEF_VME_CAEN_V830
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V830)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(ts);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_25);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_25);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_26_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_26_26);
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V830);
};
#endif//USER_DEF_VME_CAEN_V830

#ifndef USER_DEF_VME_GSI_VFTX2
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),32,100> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),32,100> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(internal_status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal_status);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_18_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_18_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_7);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_7);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_10);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_10);
      STRUCT_MIRROR_ITEM_CTRL(trigger_timestamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_timestamp);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_28);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_28);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_29_30);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_29_30);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_31_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_31_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(event_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2);
};
#endif//USER_DEF_VME_GSI_VFTX2

#ifndef USER_DEF_VME_GSI_VFTX2_7PS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_7PS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),32,100> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),32,100> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(internal_status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal_status);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_18_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_18_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2_7PS);
};
#endif//USER_DEF_VME_GSI_VFTX2_7PS

#ifndef USER_DEF_VME_GSI_VFTX2_LT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_LT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),64,100> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),64,100> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(internal_status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal_status);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_18_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_18_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_7);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_7);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_10);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_10);
      STRUCT_MIRROR_ITEM_CTRL(trigger_timestamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_timestamp);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_28);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_28);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_29_30);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_29_30);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_31_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_31_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(event_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2_LT);
};
#endif//USER_DEF_VME_GSI_VFTX2_LT

#ifndef USER_DEF_VME_MESYTEC_MADC32
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_MADC32)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA14_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA14_OVERFLOW),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_MADC32);
};
#endif//USER_DEF_VME_MESYTEC_MADC32

#ifndef USER_DEF_VME_MESYTEC_MDPP16
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_MDPP16)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),34,100> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_MDPP16);
};
#endif//USER_DEF_VME_MESYTEC_MDPP16

#ifndef USER_DEF_VME_STRUCK_SIS3316
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_STRUCK_SIS3316)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(data__i0,,2);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),900> STRUCT_MIRROR_NAME(data[2]);
  STRUCT_MIRROR_ITEM_CTRL(maw);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(maw__i0,,2);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),3> STRUCT_MIRROR_NAME(maw[2]);
  STRUCT_MIRROR_ITEM_CTRL(timeStamp);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(timeStamp__i0,,2);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),2> STRUCT_MIRROR_NAME(timeStamp[2]);
  STRUCT_MIRROR_ITEM_CTRL(gate);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(gate__i0,,2);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),2> STRUCT_MIRROR_NAME(gate[2]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(chanNo);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(chanNo);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_16_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_16_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header0);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(format);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(format);
      STRUCT_MIRROR_ITEM_CTRL(channelID);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channelID);
      STRUCT_MIRROR_ITEM_CTRL(timeS);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(timeS);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header1);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(timeS);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(timeS);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header2);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(sum);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sum);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_28_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_28_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(gate7);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(sum);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sum);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_28_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_28_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(gate8);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(max);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(max);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_28_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_28_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(maw1);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(after);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(after);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_28_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_28_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(maw2);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(before);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(before);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_28_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_28_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(maw3);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(sampleLength);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sampleLength);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_26_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_26_26);
      STRUCT_MIRROR_ITEM_CTRL(mawFlag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mawFlag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_28_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_28_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header3);
  STRUCT_MIRROR_FCNS_DECL(VME_STRUCK_SIS3316);
};
#endif//USER_DEF_VME_STRUCK_SIS3316

#ifndef USER_DEF_WR_MULTI
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(WR_MULTI)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_hi);
  STRUCT_MIRROR_ITEM_CTRL(time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_lo);
  STRUCT_MIRROR_FCNS_DECL(WR_MULTI);
};
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_LAND_CAMAC_CONVERTER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_CAMAC_CONVERTER) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(tpat);
  STRUCT_MIRROR_TYPE(uint16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tpat);
  STRUCT_MIRROR_ITEM_CTRL(tprev);
  STRUCT_MIRROR_TYPE(uint16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tprev);
  STRUCT_MIRROR_ITEM_CTRL(tnext);
  STRUCT_MIRROR_TYPE(uint16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tnext);
  STRUCT_MIRROR_ITEM_CTRL(tprev2);
  STRUCT_MIRROR_TYPE(uint16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tprev2);
  STRUCT_MIRROR_FCNS_DECL(LAND_CAMAC_CONVERTER);
};
#endif//USER_DEF_LAND_CAMAC_CONVERTER

#ifndef USER_DEF_LAND_CAMAC_SCALER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_CAMAC_SCALER) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(timestamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(timestamp);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(endianess);
  STRUCT_MIRROR_ITEM_CTRL(scaler0);
  STRUCT_MIRROR_TYPE(CAMAC_LECROY_4434) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler0);
  STRUCT_MIRROR_ITEM_CTRL(scaler2);
  STRUCT_MIRROR_TYPE(CAMAC_LECROY_4434) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler2);
  STRUCT_MIRROR_ITEM_CTRL(scaler1);
  STRUCT_MIRROR_TYPE(CAMAC_LECROY_4434) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler1);
  STRUCT_MIRROR_ITEM_CTRL(scaler3);
  STRUCT_MIRROR_TYPE(SOFT_SCALER32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler3);
  STRUCT_MIRROR_FCNS_DECL(LAND_CAMAC_SCALER);
};
#endif//USER_DEF_LAND_CAMAC_SCALER

#ifndef USER_DEF_LAND_CAMAC_START_STOP_STAMP
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_CAMAC_START_STOP_STAMP) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(timestamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(timestamp);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(endianess);
  STRUCT_MIRROR_FCNS_DECL(LAND_CAMAC_START_STOP_STAMP);
};
#endif//USER_DEF_LAND_CAMAC_START_STOP_STAMP

#ifndef USER_DEF_LAND_CAMAC_TCAL_INFO
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_CAMAC_TCAL_INFO) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(info);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(info);
  STRUCT_MIRROR_ITEM_CTRL(rtcal);
  STRUCT_MIRROR_TYPE(RANDOM_TCAL) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(rtcal);
  STRUCT_MIRROR_ITEM_CTRL(ntp);
  STRUCT_MIRROR_TYPE(NTP_MESSAGE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ntp);
  STRUCT_MIRROR_FCNS_DECL(LAND_CAMAC_TCAL_INFO);
};
#endif//USER_DEF_LAND_CAMAC_TCAL_INFO

#ifndef USER_DEF_TACQUILA_LAND_SUBEVENT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TACQUILA_LAND_SUBEVENT) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data_sam5_gtb0);
  STRUCT_MIRROR_TYPE(TACQUILA_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_sam5_gtb0);
  STRUCT_MIRROR_ITEM_CTRL(data_sam6_gtb1);
  STRUCT_MIRROR_TYPE(TACQUILA_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_sam6_gtb1);
  STRUCT_MIRROR_ITEM_CTRL(data_sam6_gtb0);
  STRUCT_MIRROR_TYPE(TACQUILA_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_sam6_gtb0);
  STRUCT_MIRROR_FCNS_DECL(TACQUILA_LAND_SUBEVENT);
};
#endif//USER_DEF_TACQUILA_LAND_SUBEVENT

#ifndef USER_DEF_califa_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(califa_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(dummy);
  STRUCT_MIRROR_TYPE(DUMMY_WORD) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(califa_subev);
};
#endif//USER_DEF_califa_subev

#ifndef USER_DEF_daq_status_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(daq_status_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(status);
  STRUCT_MIRROR_TYPE(DAQ_STATUS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(status);
  STRUCT_MIRROR_FCNS_DECL(daq_status_subev);
};
#endif//USER_DEF_daq_status_subev

#ifndef USER_DEF_empty_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(empty_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_FCNS_DECL(empty_subev);
};
#endif//USER_DEF_empty_subev

#ifndef USER_DEF_fiber_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(fiber_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(GFI0);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(GFI0);
  STRUCT_MIRROR_ITEM_CTRL(GFI2);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(GFI2);
  STRUCT_MIRROR_ITEM_CTRL(GFI1);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(GFI1);
  STRUCT_MIRROR_ITEM_CTRL(GFI3);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(GFI3);
  STRUCT_MIRROR_ITEM_CTRL(GFI4);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(GFI4);
  STRUCT_MIRROR_ITEM_CTRL(fi4);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(fi4__i0,,4);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fi4[4]);
  STRUCT_MIRROR_ITEM_CTRL(evhe);
  STRUCT_MIRROR_TYPE(FEBEX_EVENTHEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(evhe);
  STRUCT_MIRROR_FCNS_DECL(fiber_subev);
};
#endif//USER_DEF_fiber_subev

#ifndef USER_DEF_los_psp_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_psp_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(vftx2_1);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2_1);
  STRUCT_MIRROR_ITEM_CTRL(madc32);
  STRUCT_MIRROR_TYPE(VME_MESYTEC_MADC32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(madc32);
  STRUCT_MIRROR_ITEM_CTRL(vftx2_2);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2_2);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(los_psp_subev);
};
#endif//USER_DEF_los_psp_subev

#ifndef USER_DEF_los_scaler_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_scaler_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(scaler);
  STRUCT_MIRROR_TYPE(TRLO_SCALER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler);
  STRUCT_MIRROR_FCNS_DECL(los_scaler_subev);
};
#endif//USER_DEF_los_scaler_subev

#ifndef USER_DEF_mark_event_time
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(mark_event_time) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(sampler_los);
  STRUCT_MIRROR_TYPE(TRLO_SAMPLER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sampler_los);
  STRUCT_MIRROR_ITEM_CTRL(sampler_cb_sum);
  STRUCT_MIRROR_TYPE(TRLO_SAMPLER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sampler_cb_sum);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(mark_event_time);
};
#endif//USER_DEF_mark_event_time

#ifndef USER_DEF_mfi_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(mfi_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(pads);
  STRUCT_MIRROR_TYPE(NXYTER_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pads);
  STRUCT_MIRROR_ITEM_CTRL(data01);
  STRUCT_MIRROR_TYPE(NXYTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data01);
  STRUCT_MIRROR_ITEM_CTRL(data00);
  STRUCT_MIRROR_TYPE(NXYTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data00);
  STRUCT_MIRROR_ITEM_CTRL(data10);
  STRUCT_MIRROR_TYPE(NXYTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data10);
  STRUCT_MIRROR_ITEM_CTRL(data11);
  STRUCT_MIRROR_TYPE(NXYTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data11);
  STRUCT_MIRROR_ITEM_CTRL(data20);
  STRUCT_MIRROR_TYPE(NXYTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data20);
  STRUCT_MIRROR_ITEM_CTRL(data21);
  STRUCT_MIRROR_TYPE(NXYTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data21);
  STRUCT_MIRROR_ITEM_CTRL(data30);
  STRUCT_MIRROR_TYPE(NXYTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data30);
  STRUCT_MIRROR_ITEM_CTRL(data31);
  STRUCT_MIRROR_TYPE(NXYTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data31);
  STRUCT_MIRROR_FCNS_DECL(mfi_subev);
};
#endif//USER_DEF_mfi_subev

#ifndef USER_DEF_neuland_subevent
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(neuland_subevent) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data_sam5_gtb0);
  STRUCT_MIRROR_TYPE(TACQUILA_DATA_S438B) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_sam5_gtb0);
  STRUCT_MIRROR_ITEM_CTRL(data_sam6_gtb1);
  STRUCT_MIRROR_TYPE(TACQUILA_DATA_S438B) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_sam6_gtb1);
  STRUCT_MIRROR_ITEM_CTRL(data_sam6_gtb0);
  STRUCT_MIRROR_TYPE(TACQUILA_DATA_S438B) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_sam6_gtb0);
  STRUCT_MIRROR_ITEM_CTRL(data_sam5_gtb1);
  STRUCT_MIRROR_TYPE(TACQUILA_DATA_S438B) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_sam5_gtb1);
  STRUCT_MIRROR_ITEM_CTRL(data_sam7_gtb0);
  STRUCT_MIRROR_TYPE(TACQUILA_DATA_S438B) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_sam7_gtb0);
  STRUCT_MIRROR_ITEM_CTRL(data_sam7_gtb1);
  STRUCT_MIRROR_TYPE(TACQUILA_DATA_S438B) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_sam7_gtb1);
  STRUCT_MIRROR_FCNS_DECL(neuland_subevent);
};
#endif//USER_DEF_neuland_subevent

#ifndef USER_DEF_neuland_tamex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(neuland_tamex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(ns_after_trigger);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ns_after_trigger);
      STRUCT_MIRROR_ITEM_CTRL(dummy_11_15);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_11_15);
      STRUCT_MIRROR_ITEM_CTRL(ns_before_trigger);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ns_before_trigger);
      STRUCT_MIRROR_ITEM_CTRL(dummy_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger_window);
  STRUCT_MIRROR_ITEM_CTRL(tamex);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tamex__i0,,13);
  STRUCT_MIRROR_TYPE(TAMEX_CHANNEL) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex[13]);
  STRUCT_MIRROR_FCNS_DECL(neuland_tamex_subev);
};
#endif//USER_DEF_neuland_tamex_subev

#ifndef USER_DEF_psp_febex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(psp_febex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(febex1);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex1);
  STRUCT_MIRROR_ITEM_CTRL(febex3);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex3);
  STRUCT_MIRROR_ITEM_CTRL(febex2);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex2);
  STRUCT_MIRROR_ITEM_CTRL(febex4);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex4);
  STRUCT_MIRROR_ITEM_CTRL(febex5);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex5);
  STRUCT_MIRROR_ITEM_CTRL(febex6);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex6);
  STRUCT_MIRROR_ITEM_CTRL(febex7);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex7);
  STRUCT_MIRROR_ITEM_CTRL(febex8);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex8);
  STRUCT_MIRROR_ITEM_CTRL(febex9);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex9);
  STRUCT_MIRROR_ITEM_CTRL(febex10);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex10);
  STRUCT_MIRROR_ITEM_CTRL(eh);
  STRUCT_MIRROR_TYPE(FEBEX_EVENTHEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(eh);
  STRUCT_MIRROR_FCNS_DECL(psp_febex_subev);
};
#endif//USER_DEF_psp_febex_subev

#ifndef USER_DEF_psp_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(psp_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(sis3316_3);
  STRUCT_MIRROR_TYPE(SIS3316_ACTAR_S438) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sis3316_3);
  STRUCT_MIRROR_ITEM_CTRL(sis3316_5);
  STRUCT_MIRROR_TYPE(SIS3316_ACTAR_S438) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sis3316_5);
  STRUCT_MIRROR_ITEM_CTRL(sis3316_4);
  STRUCT_MIRROR_TYPE(SIS3316_ACTAR_S438) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sis3316_4);
  STRUCT_MIRROR_ITEM_CTRL(sis3316_6);
  STRUCT_MIRROR_TYPE(SIS3316_ACTAR_S438) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sis3316_6);
  STRUCT_MIRROR_ITEM_CTRL(sis3316_7);
  STRUCT_MIRROR_TYPE(SIS3316_ACTAR_S438) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sis3316_7);
  STRUCT_MIRROR_ITEM_CTRL(sis3316_8);
  STRUCT_MIRROR_TYPE(SIS3316_ACTAR_S438) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sis3316_8);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_ITEM_CTRL(tridi_ts);
  STRUCT_MIRROR_TYPE(TRIDI) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tridi_ts);
  STRUCT_MIRROR_FCNS_DECL(psp_subev);
};
#endif//USER_DEF_psp_subev

#ifndef USER_DEF_sit_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(sit_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(dummy);
  STRUCT_MIRROR_TYPE(DUMMY_WORD) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(sit_subev);
};
#endif//USER_DEF_sit_subev

#ifndef USER_DEF_tof13_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(tof13_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(vftx2_1);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2_1);
  STRUCT_MIRROR_ITEM_CTRL(vftx2_2);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2_2);
  STRUCT_MIRROR_ITEM_CTRL(vftx2_3);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2_3);
  STRUCT_MIRROR_ITEM_CTRL(vftx2_4);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2_4);
  STRUCT_MIRROR_ITEM_CTRL(v1290_1);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_S438) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v1290_1);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(tof13_subev);
};
#endif//USER_DEF_tof13_subev

#ifndef USER_DEF_tof13_tamex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(tof13_tamex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(ns_after_trigger);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ns_after_trigger);
      STRUCT_MIRROR_ITEM_CTRL(dummy_11_15);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_11_15);
      STRUCT_MIRROR_ITEM_CTRL(ns_before_trigger);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ns_before_trigger);
      STRUCT_MIRROR_ITEM_CTRL(dummy_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger_window);
  STRUCT_MIRROR_ITEM_CTRL(tamex);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tamex__i0,,2);
  STRUCT_MIRROR_TYPE(TAMEX_CHANNEL) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex[2]);
  STRUCT_MIRROR_FCNS_DECL(tof13_tamex_subev);
};
#endif//USER_DEF_tof13_tamex_subev

#ifndef USER_DEF_wr_100
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(wr_100) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts100);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts100);
  STRUCT_MIRROR_FCNS_DECL(wr_100);
};
#endif//USER_DEF_wr_100

#ifndef USER_DEF_wr_300
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(wr_300) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts300);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts300);
  STRUCT_MIRROR_FCNS_DECL(wr_300);
};
#endif//USER_DEF_wr_300

#ifndef USER_DEF_wr_500
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(wr_500) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts500);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts500);
  STRUCT_MIRROR_FCNS_DECL(wr_500);
};
#endif//USER_DEF_wr_500

#ifndef USER_DEF_unpack_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_event) : public STRUCT_MIRROR_BASE(unpack_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_event_base);
  STRUCT_MIRROR_ITEM_CTRL(scalers);
  STRUCT_MIRROR_TYPE(LAND_CAMAC_SCALER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scalers);
  STRUCT_MIRROR_ITEM_CTRL(master_ts);
  STRUCT_MIRROR_TYPE(wr_100) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(master_ts);
  STRUCT_MIRROR_ITEM_CTRL(daq_status);
  STRUCT_MIRROR_TYPE(daq_status_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(daq_status);
  STRUCT_MIRROR_ITEM_CTRL(event_time);
  STRUCT_MIRROR_TYPE(mark_event_time) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_time);
  STRUCT_MIRROR_ITEM_CTRL(tpat_and_co);
  STRUCT_MIRROR_TYPE(LAND_CAMAC_CONVERTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tpat_and_co);
  STRUCT_MIRROR_ITEM_CTRL(neuland_tacq);
  STRUCT_MIRROR_TYPE(neuland_subevent) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(neuland_tacq);
  STRUCT_MIRROR_ITEM_CTRL(los_psp);
  STRUCT_MIRROR_TYPE(los_psp_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_psp);
  STRUCT_MIRROR_ITEM_CTRL(los_scaler);
  STRUCT_MIRROR_TYPE(los_scaler_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_scaler);
  STRUCT_MIRROR_ITEM_CTRL(tof13);
  STRUCT_MIRROR_TYPE(tof13_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tof13);
  STRUCT_MIRROR_ITEM_CTRL(psp_ts);
  STRUCT_MIRROR_TYPE(wr_500) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(psp_ts);
  STRUCT_MIRROR_ITEM_CTRL(sit);
  STRUCT_MIRROR_TYPE(sit_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sit);
  STRUCT_MIRROR_ITEM_CTRL(tbm_ts);
  STRUCT_MIRROR_TYPE(wr_300) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tbm_ts);
  STRUCT_MIRROR_ITEM_CTRL(fiber);
  STRUCT_MIRROR_TYPE(fiber_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fiber);
  STRUCT_MIRROR_ITEM_CTRL(psp_febex);
  STRUCT_MIRROR_TYPE(psp_febex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(psp_febex);
  STRUCT_MIRROR_ITEM_CTRL(neuland_tamex);
  STRUCT_MIRROR_TYPE(neuland_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(neuland_tamex);
  STRUCT_MIRROR_ITEM_CTRL(tof13_tamex);
  STRUCT_MIRROR_TYPE(tof13_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tof13_tamex);
  STRUCT_MIRROR_ITEM_CTRL(mfi);
  STRUCT_MIRROR_TYPE(mfi_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mfi);
  STRUCT_MIRROR_ITEM_CTRL(califa);
  STRUCT_MIRROR_TYPE(califa_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(califa);
  STRUCT_MIRROR_ITEM_CTRL(psp_struck);
  STRUCT_MIRROR_TYPE(psp_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(psp_struck);
  STRUCT_MIRROR_ITEM_CTRL(empty_1);
  STRUCT_MIRROR_TYPE(empty_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(empty_1);
  STRUCT_MIRROR_ITEM_CTRL(empty_2);
  STRUCT_MIRROR_TYPE(empty_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(empty_2);
  STRUCT_MIRROR_FCNS_DECL(unpack_event);
};
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_sticky_event) : public STRUCT_MIRROR_BASE(unpack_sticky_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_sticky_event_base);
  STRUCT_MIRROR_FCNS_DECL(unpack_sticky_event);
};
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CAMAC_LECROY_4434);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CAMAC_PHILLIPS_7164);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CAMAC_SILENA_4418);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(DAQ_STATUS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(DUMMY_WORD);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1875);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1885);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_EVENTHEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_NOTRACE);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_STD_VME);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(NTP64_TIME);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(NTP_MESSAGE);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(NXYTER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(NXYTER_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(RANDOM_TCAL_TSTAMP_CLOCK);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(RANDOM_TCAL);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SIS3316_ACTAR_S438);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SIS3316_PSP_S438);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SIS3316_S2_S438);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SIS3316_S2_SCALERS_S438);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SIS3316_SCALERS_S438);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SOFT_SCALER32);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TACQUILA_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TACQUILA_DATA_S438B);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX_CHANNEL);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRIDI);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLO_SAMPLER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLO_SCALER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438_SHORT_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_S438_SHORT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438_SHORT_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_S438_SHORT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V775);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V830);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_7PS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_LT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_MADC32);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_MDPP16);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_STRUCK_SIS3316);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(WR_MULTI);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_CAMAC_CONVERTER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_CAMAC_SCALER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_CAMAC_START_STOP_STAMP);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_CAMAC_TCAL_INFO);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TACQUILA_LAND_SUBEVENT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(califa_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(daq_status_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(empty_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(fiber_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_psp_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_scaler_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(mark_event_time);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(mfi_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(neuland_subevent);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(neuland_tamex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(psp_febex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(psp_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(sit_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(tof13_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(tof13_tamex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(wr_100);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(wr_300);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(wr_500);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_event);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_sticky_event);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_CAMAC_LECROY_4434
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CAMAC_LECROY_4434)::FCNCALL_NAME(CAMAC_LECROY_4434)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA24,DATA24,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CAMAC_LECROY_4434

#ifndef USER_DEF_CAMAC_PHILLIPS_7164
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CAMAC_PHILLIPS_7164)::FCNCALL_NAME(CAMAC_PHILLIPS_7164)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12,DATA12,16> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CAMAC_PHILLIPS_7164

#ifndef USER_DEF_CAMAC_SILENA_4418
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CAMAC_SILENA_4418)::FCNCALL_NAME(CAMAC_SILENA_4418)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,8> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CAMAC_SILENA_4418

#ifndef USER_DEF_DAQ_STATUS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(DAQ_STATUS)::FCNCALL_NAME(DAQ_STATUS)
{
  FCNCALL_INIT;
  // uint32 spill_nr;
  {
  FCNCALL_SUBNAME("spill_nr");
  { FCNCALL_CALL_CTRL_WRAP(spill_nr,FCNCALL_CALL_TYPE(uint32,spill_nr)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger;
  {
  FCNCALL_SUBNAME("trigger");
  { FCNCALL_CALL_CTRL_WRAP(trigger,FCNCALL_CALL_TYPE(uint32,trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time;
  {
  FCNCALL_SUBNAME("time");
  { FCNCALL_CALL_CTRL_WRAP(time,FCNCALL_CALL_TYPE(uint32,time)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,48> scaler;
  {
  FCNCALL_SUBNAME("scaler");
  { FCNCALL_CALL_CTRL_WRAP(scaler,scaler.FCNCALL_CALL(scaler)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> trig_count;
  {
  FCNCALL_SUBNAME("trig_count");
  { FCNCALL_CALL_CTRL_WRAP(trig_count,trig_count.FCNCALL_CALL(trig_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 events;
  {
  FCNCALL_SUBNAME("events");
  { FCNCALL_CALL_CTRL_WRAP(events,FCNCALL_CALL_TYPE(uint32,events)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 errors;
  {
  FCNCALL_SUBNAME("errors");
  { FCNCALL_CALL_CTRL_WRAP(errors,FCNCALL_CALL_TYPE(uint32,errors)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 errors_data_corrupt;
  {
  FCNCALL_SUBNAME("errors_data_corrupt");
  { FCNCALL_CALL_CTRL_WRAP(errors_data_corrupt,FCNCALL_CALL_TYPE(uint32,errors_data_corrupt)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 errors_data_missing;
  {
  FCNCALL_SUBNAME("errors_data_missing");
  { FCNCALL_CALL_CTRL_WRAP(errors_data_missing,FCNCALL_CALL_TYPE(uint32,errors_data_missing)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 errors_data_too_much;
  {
  FCNCALL_SUBNAME("errors_data_too_much");
  { FCNCALL_CALL_CTRL_WRAP(errors_data_too_much,FCNCALL_CALL_TYPE(uint32,errors_data_too_much)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 errors_event_counter_mismatch;
  {
  FCNCALL_SUBNAME("errors_event_counter_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(errors_event_counter_mismatch,FCNCALL_CALL_TYPE(uint32,errors_event_counter_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 errors_event_counter_incr_mismatch;
  {
  FCNCALL_SUBNAME("errors_event_counter_incr_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(errors_event_counter_incr_mismatch,FCNCALL_CALL_TYPE(uint32,errors_event_counter_incr_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 errors_trigger_mismatch;
  {
  FCNCALL_SUBNAME("errors_trigger_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(errors_trigger_mismatch,FCNCALL_CALL_TYPE(uint32,errors_trigger_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ticks_count;
  {
  FCNCALL_SUBNAME("ticks_count");
  { FCNCALL_CALL_CTRL_WRAP(ticks_count,FCNCALL_CALL_TYPE(uint32,ticks_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ticks_deadtime;
  {
  FCNCALL_SUBNAME("ticks_deadtime");
  { FCNCALL_CALL_CTRL_WRAP(ticks_deadtime,FCNCALL_CALL_TYPE(uint32,ticks_deadtime)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> ticks_dt_trig;
  {
  FCNCALL_SUBNAME("ticks_dt_trig");
  { FCNCALL_CALL_CTRL_WRAP(ticks_dt_trig,ticks_dt_trig.FCNCALL_CALL(ticks_dt_trig)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_DAQ_STATUS

#ifndef USER_DEF_DUMMY_WORD
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(DUMMY_WORD)::FCNCALL_NAME(DUMMY_WORD)
{
  FCNCALL_INIT;
  // uint32 dummy_word;
  {
  FCNCALL_SUBNAME("dummy_word");
  { FCNCALL_CALL_CTRL_WRAP(dummy_word,FCNCALL_CALL_TYPE(uint32,dummy_word)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_DUMMY_WORD

#ifndef USER_DEF_FASTBUS_LECROY_1875
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FASTBUS_LECROY_1875)::FCNCALL_NAME(FASTBUS_LECROY_1875)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,64> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FASTBUS_LECROY_1875

#ifndef USER_DEF_FASTBUS_LECROY_1885
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FASTBUS_LECROY_1885)::FCNCALL_NAME(FASTBUS_LECROY_1885)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,96> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FASTBUS_LECROY_1885

#ifndef USER_DEF_FEBEX_EVENTHEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_EVENTHEADER)::FCNCALL_NAME(FEBEX_EVENTHEADER)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 N_febex1 : 8;
      // uint32 N_febex2 : 8;
      // uint32 N_febex3 : 8;
      // uint32 N_febex4 : 8;
    // } ;
    // uint32 u32;
  // } febexcards;
  {
  FCNCALL_SUBNAME("febexcards");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 N_febex1 : 8;
    // uint32 N_febex2 : 8;
    // uint32 N_febex3 : 8;
    // uint32 N_febex4 : 8;
  // } ;
  // uint32 N_febex1 : 8;
  {
  FCNCALL_SUBNAME("N_febex1");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.N_febex1,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.N_febex1)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 N_febex2 : 8;
  {
  FCNCALL_SUBNAME("N_febex2");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.N_febex2,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.N_febex2)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 N_febex3 : 8;
  {
  FCNCALL_SUBNAME("N_febex3");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.N_febex3,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.N_febex3)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 N_febex4 : 8;
  {
  FCNCALL_SUBNAME("N_febex4");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.N_febex4,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.N_febex4)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.u32,FCNCALL_CALL_TYPE(uint32,febexcards.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_EVENTHEADER

#ifndef USER_DEF_FEBEX_NOTRACE
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_NOTRACE)::FCNCALL_NAME(FEBEX_NOTRACE)
{
  FCNCALL_INIT;
  // raw_array<DATA8,DATA8,16> Nhit;
  {
  FCNCALL_SUBNAME("Nhit");
  { FCNCALL_CALL_CTRL_WRAP(Nhit,Nhit.FCNCALL_CALL(Nhit)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,16,10> t;
  {
  FCNCALL_SUBNAME("t");
  { FCNCALL_CALL_CTRL_WRAP(t,t.FCNCALL_CALL(t)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA32,DATA32,16,10> E;
  {
  FCNCALL_SUBNAME("E");
  { FCNCALL_CALL_CTRL_WRAP(E,E.FCNCALL_CALL(E)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_NOTRACE

#ifndef USER_DEF_FEBEX_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_PADDING)::FCNCALL_NAME(FEBEX_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_LAND_STD_VME
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_STD_VME)::FCNCALL_NAME(LAND_STD_VME)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 fail_general : 1;
      // uint32 fail_data_corrupt : 1;
      // uint32 fail_data_missing : 1;
      // uint32 fail_data_too_much : 1;
      // uint32 fail_event_counter_mismatch : 1;
      // uint32 fail_readout_error_driver : 1;
      // uint32 fail_unexpected_trigger : 1;
      // uint32 fail_firmware_mismatch : 1;
      // uint32 dummy_8_21 : 14;
      // uint32 has_multi_trlo_ii_counter0 : 1;
      // uint32 has_clock_counter_stamp : 1;
      // uint32 has_continous_event_counter : 1;
      // uint32 has_update_qdc_iped_value : 1;
      // uint32 spurious_start_before_tcal : 1;
      // uint32 has_no_zero_suppression : 1;
      // uint32 has_multi_adctdc_counter0 : 1;
      // uint32 has_multi_scaler_counter0 : 1;
      // uint32 has_multi_event : 1;
      // uint32 has_time_stamp : 1;
    // } ;
    // uint32 u32;
  // } failure;
  {
  FCNCALL_SUBNAME("failure");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 fail_general : 1;
    // uint32 fail_data_corrupt : 1;
    // uint32 fail_data_missing : 1;
    // uint32 fail_data_too_much : 1;
    // uint32 fail_event_counter_mismatch : 1;
    // uint32 fail_readout_error_driver : 1;
    // uint32 fail_unexpected_trigger : 1;
    // uint32 fail_firmware_mismatch : 1;
    // uint32 dummy_8_21 : 14;
    // uint32 has_multi_trlo_ii_counter0 : 1;
    // uint32 has_clock_counter_stamp : 1;
    // uint32 has_continous_event_counter : 1;
    // uint32 has_update_qdc_iped_value : 1;
    // uint32 spurious_start_before_tcal : 1;
    // uint32 has_no_zero_suppression : 1;
    // uint32 has_multi_adctdc_counter0 : 1;
    // uint32 has_multi_scaler_counter0 : 1;
    // uint32 has_multi_event : 1;
    // uint32 has_time_stamp : 1;
  // } ;
  // uint32 fail_general : 1;
  {
  FCNCALL_SUBNAME("fail_general");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_general,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_general)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_corrupt : 1;
  {
  FCNCALL_SUBNAME("fail_data_corrupt");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_corrupt,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_corrupt)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_missing : 1;
  {
  FCNCALL_SUBNAME("fail_data_missing");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_missing,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_missing)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_too_much : 1;
  {
  FCNCALL_SUBNAME("fail_data_too_much");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_too_much,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_too_much)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_event_counter_mismatch : 1;
  {
  FCNCALL_SUBNAME("fail_event_counter_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_event_counter_mismatch,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_event_counter_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_readout_error_driver : 1;
  {
  FCNCALL_SUBNAME("fail_readout_error_driver");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_readout_error_driver,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_readout_error_driver)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_unexpected_trigger : 1;
  {
  FCNCALL_SUBNAME("fail_unexpected_trigger");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_unexpected_trigger,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_unexpected_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_firmware_mismatch : 1;
  {
  FCNCALL_SUBNAME("fail_firmware_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_firmware_mismatch,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_firmware_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_21 : 14;
  {
  FCNCALL_SUBNAME("dummy_8_21");
  { FCNCALL_CALL_CTRL_WRAP(failure.dummy_8_21,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.dummy_8_21)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_trlo_ii_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_trlo_ii_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_trlo_ii_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_trlo_ii_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_clock_counter_stamp : 1;
  {
  FCNCALL_SUBNAME("has_clock_counter_stamp");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_clock_counter_stamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_clock_counter_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_continous_event_counter : 1;
  {
  FCNCALL_SUBNAME("has_continous_event_counter");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_continous_event_counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_continous_event_counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_update_qdc_iped_value : 1;
  {
  FCNCALL_SUBNAME("has_update_qdc_iped_value");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_update_qdc_iped_value,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_update_qdc_iped_value)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 spurious_start_before_tcal : 1;
  {
  FCNCALL_SUBNAME("spurious_start_before_tcal");
  { FCNCALL_CALL_CTRL_WRAP(failure.spurious_start_before_tcal,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.spurious_start_before_tcal)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_no_zero_suppression : 1;
  {
  FCNCALL_SUBNAME("has_no_zero_suppression");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_no_zero_suppression,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_no_zero_suppression)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_adctdc_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_adctdc_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_adctdc_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_adctdc_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_scaler_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_scaler_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_scaler_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_scaler_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_event : 1;
  {
  FCNCALL_SUBNAME("has_multi_event");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_event,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_event)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_time_stamp : 1;
  {
  FCNCALL_SUBNAME("has_time_stamp");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_time_stamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_time_stamp)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(failure.u32,FCNCALL_CALL_TYPE(uint32,failure.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 continous_event_counter;
  {
  FCNCALL_SUBNAME("continous_event_counter");
  { FCNCALL_CALL_CTRL_WRAP(continous_event_counter,FCNCALL_CALL_TYPE(uint32,continous_event_counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_stamp;
  {
  FCNCALL_SUBNAME("time_stamp");
  { FCNCALL_CALL_CTRL_WRAP(time_stamp,FCNCALL_CALL_TYPE(uint32,time_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 clock_counter_stamp;
  {
  FCNCALL_SUBNAME("clock_counter_stamp");
  { FCNCALL_CALL_CTRL_WRAP(clock_counter_stamp,FCNCALL_CALL_TYPE(uint32,clock_counter_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 iped;
  {
  FCNCALL_SUBNAME("iped");
  { FCNCALL_CALL_CTRL_WRAP(iped,FCNCALL_CALL_TYPE(uint32,iped)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_events;
  {
  FCNCALL_SUBNAME("multi_events");
  { FCNCALL_CALL_CTRL_WRAP(multi_events,FCNCALL_CALL_TYPE(uint32,multi_events)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_trlo_ii_counter0;
  {
  FCNCALL_SUBNAME("multi_trlo_ii_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_trlo_ii_counter0,FCNCALL_CALL_TYPE(uint32,multi_trlo_ii_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_scaler_counter0;
  {
  FCNCALL_SUBNAME("multi_scaler_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_scaler_counter0,FCNCALL_CALL_TYPE(uint32,multi_scaler_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_adctdc_counter0;
  {
  FCNCALL_SUBNAME("multi_adctdc_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_adctdc_counter0,FCNCALL_CALL_TYPE(uint32,multi_adctdc_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_STD_VME

#ifndef USER_DEF_NTP64_TIME
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(NTP64_TIME)::FCNCALL_NAME(NTP64_TIME)
{
  FCNCALL_INIT;
  // uint32 sec;
  {
  FCNCALL_SUBNAME("sec");
  { FCNCALL_CALL_CTRL_WRAP(sec,FCNCALL_CALL_TYPE(uint32,sec)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 frac;
  {
  FCNCALL_SUBNAME("frac");
  { FCNCALL_CALL_CTRL_WRAP(frac,FCNCALL_CALL_TYPE(uint32,frac)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_NTP64_TIME

#ifndef USER_DEF_NTP_MESSAGE
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(NTP_MESSAGE)::FCNCALL_NAME(NTP_MESSAGE)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 16;
      // uint32 quick_burst : 1;
      // uint32 dummy_17_23 : 7;
      // uint32 id : 8;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 16;
    // uint32 quick_burst : 1;
    // uint32 dummy_17_23 : 7;
    // uint32 id : 8;
  // } ;
  // uint32 word_count : 16;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(header.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 quick_burst : 1;
  {
  FCNCALL_SUBNAME("quick_burst");
  { FCNCALL_CALL_CTRL_WRAP(header.quick_burst,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.quick_burst)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_17_23 : 7;
  {
  FCNCALL_SUBNAME("dummy_17_23");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_17_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_17_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 id : 8;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.id)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 server_id;
  {
  FCNCALL_SUBNAME("server_id");
  { FCNCALL_CALL_CTRL_WRAP(server_id,FCNCALL_CALL_TYPE(uint32,server_id)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 precision : 8;
      // uint32 poll : 8;
      // uint32 stratum : 4;
      // uint32 dummy_20_23 : 4;
      // uint32 mode : 3;
      // uint32 version : 3;
      // uint32 leap : 2;
    // } ;
    // uint32 u32;
  // } sspp;
  {
  FCNCALL_SUBNAME("sspp");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 precision : 8;
    // uint32 poll : 8;
    // uint32 stratum : 4;
    // uint32 dummy_20_23 : 4;
    // uint32 mode : 3;
    // uint32 version : 3;
    // uint32 leap : 2;
  // } ;
  // uint32 precision : 8;
  {
  FCNCALL_SUBNAME("precision");
  { FCNCALL_CALL_CTRL_WRAP(sspp.precision,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,sspp.precision)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 poll : 8;
  {
  FCNCALL_SUBNAME("poll");
  { FCNCALL_CALL_CTRL_WRAP(sspp.poll,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,sspp.poll)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 stratum : 4;
  {
  FCNCALL_SUBNAME("stratum");
  { FCNCALL_CALL_CTRL_WRAP(sspp.stratum,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,sspp.stratum)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(sspp.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,sspp.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 mode : 3;
  {
  FCNCALL_SUBNAME("mode");
  { FCNCALL_CALL_CTRL_WRAP(sspp.mode,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,sspp.mode)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 version : 3;
  {
  FCNCALL_SUBNAME("version");
  { FCNCALL_CALL_CTRL_WRAP(sspp.version,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,sspp.version)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 leap : 2;
  {
  FCNCALL_SUBNAME("leap");
  { FCNCALL_CALL_CTRL_WRAP(sspp.leap,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,sspp.leap)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(sspp.u32,FCNCALL_CALL_TYPE(uint32,sspp.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 frac : 16;
      // uint32 sec : 16;
    // } ;
    // uint32 u32;
  // } root_dly;
  {
  FCNCALL_SUBNAME("root_dly");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 frac : 16;
    // uint32 sec : 16;
  // } ;
  // uint32 frac : 16;
  {
  FCNCALL_SUBNAME("frac");
  { FCNCALL_CALL_CTRL_WRAP(root_dly.frac,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,root_dly.frac)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sec : 16;
  {
  FCNCALL_SUBNAME("sec");
  { FCNCALL_CALL_CTRL_WRAP(root_dly.sec,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,root_dly.sec)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(root_dly.u32,FCNCALL_CALL_TYPE(uint32,root_dly.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 frac : 16;
      // uint32 sec : 16;
    // } ;
    // uint32 u32;
  // } root_disp;
  {
  FCNCALL_SUBNAME("root_disp");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 frac : 16;
    // uint32 sec : 16;
  // } ;
  // uint32 frac : 16;
  {
  FCNCALL_SUBNAME("frac");
  { FCNCALL_CALL_CTRL_WRAP(root_disp.frac,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,root_disp.frac)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sec : 16;
  {
  FCNCALL_SUBNAME("sec");
  { FCNCALL_CALL_CTRL_WRAP(root_disp.sec,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,root_disp.sec)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(root_disp.u32,FCNCALL_CALL_TYPE(uint32,root_disp.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 refid;
  {
  FCNCALL_SUBNAME("refid");
  { FCNCALL_CALL_CTRL_WRAP(refid,FCNCALL_CALL_TYPE(uint32,refid)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME orig2time;
  {
  FCNCALL_SUBNAME("orig2time");
  { FCNCALL_CALL_CTRL_WRAP(orig2time,orig2time.FCNCALL_CALL(orig2time)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME tmit2time;
  {
  FCNCALL_SUBNAME("tmit2time");
  { FCNCALL_CALL_CTRL_WRAP(tmit2time,tmit2time.FCNCALL_CALL(tmit2time)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME rec2time;
  {
  FCNCALL_SUBNAME("rec2time");
  { FCNCALL_CALL_CTRL_WRAP(rec2time,rec2time.FCNCALL_CALL(rec2time)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME rx2time;
  {
  FCNCALL_SUBNAME("rx2time");
  { FCNCALL_CALL_CTRL_WRAP(rx2time,rx2time.FCNCALL_CALL(rx2time)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME reftime;
  {
  FCNCALL_SUBNAME("reftime");
  { FCNCALL_CALL_CTRL_WRAP(reftime,reftime.FCNCALL_CALL(reftime)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME origtime;
  {
  FCNCALL_SUBNAME("origtime");
  { FCNCALL_CALL_CTRL_WRAP(origtime,origtime.FCNCALL_CALL(origtime)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME rectime;
  {
  FCNCALL_SUBNAME("rectime");
  { FCNCALL_CALL_CTRL_WRAP(rectime,rectime.FCNCALL_CALL(rectime)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME tmittime;
  {
  FCNCALL_SUBNAME("tmittime");
  { FCNCALL_CALL_CTRL_WRAP(tmittime,tmittime.FCNCALL_CALL(tmittime)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME rxtime;
  {
  FCNCALL_SUBNAME("rxtime");
  { FCNCALL_CALL_CTRL_WRAP(rxtime,rxtime.FCNCALL_CALL(rxtime)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_NTP_MESSAGE

#ifndef USER_DEF_NXYTER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(NXYTER)::FCNCALL_NAME(NXYTER)
{
  FCNCALL_INIT;
  // DATA8 gemex;
  {
  FCNCALL_SUBNAME("gemex");
  { FCNCALL_CALL_CTRL_WRAP(gemex,gemex.FCNCALL_CALL(gemex)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA8 nxyter;
  {
  FCNCALL_SUBNAME("nxyter");
  { FCNCALL_CALL_CTRL_WRAP(nxyter,nxyter.FCNCALL_CALL(nxyter)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA8 err;
  {
  FCNCALL_SUBNAME("err");
  { FCNCALL_CALL_CTRL_WRAP(err,err.FCNCALL_CALL(err)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 trigger_counter_head;
  {
  FCNCALL_SUBNAME("trigger_counter_head");
  { FCNCALL_CALL_CTRL_WRAP(trigger_counter_head,trigger_counter_head.FCNCALL_CALL(trigger_counter_head)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 trigger_counter_foot;
  {
  FCNCALL_SUBNAME("trigger_counter_foot");
  { FCNCALL_CALL_CTRL_WRAP(trigger_counter_foot,trigger_counter_foot.FCNCALL_CALL(trigger_counter_foot)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 ts_epoch_trigger;
  {
  FCNCALL_SUBNAME("ts_epoch_trigger");
  { FCNCALL_CALL_CTRL_WRAP(ts_epoch_trigger,ts_epoch_trigger.FCNCALL_CALL(ts_epoch_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,10000> channel;
  {
  FCNCALL_SUBNAME("channel");
  { FCNCALL_CALL_CTRL_WRAP(channel,channel.FCNCALL_CALL(channel)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,10000> adc;
  {
  FCNCALL_SUBNAME("adc");
  { FCNCALL_CALL_CTRL_WRAP(adc,adc.FCNCALL_CALL(adc)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA16,DATA16,10000> ts_epoch_hit;
  {
  FCNCALL_SUBNAME("ts_epoch_hit");
  { FCNCALL_CALL_CTRL_WRAP(ts_epoch_hit,ts_epoch_hit.FCNCALL_CALL(ts_epoch_hit)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA16,DATA16,10000> ts_nxy;
  {
  FCNCALL_SUBNAME("ts_nxy");
  { FCNCALL_CALL_CTRL_WRAP(ts_nxy,ts_nxy.FCNCALL_CALL(ts_nxy)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_NXYTER

#ifndef USER_DEF_NXYTER_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(NXYTER_PADDING)::FCNCALL_NAME(NXYTER_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_NXYTER_PADDING

#ifndef USER_DEF_RANDOM_TCAL_TSTAMP_CLOCK
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(RANDOM_TCAL_TSTAMP_CLOCK)::FCNCALL_NAME(RANDOM_TCAL_TSTAMP_CLOCK)
{
  FCNCALL_INIT;
  // uint32 soft_latches;
  {
  FCNCALL_SUBNAME("soft_latches");
  { FCNCALL_CALL_CTRL_WRAP(soft_latches,FCNCALL_CALL_TYPE(uint32,soft_latches)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 hard_latches;
  {
  FCNCALL_SUBNAME("hard_latches");
  { FCNCALL_CALL_CTRL_WRAP(hard_latches,FCNCALL_CALL_TYPE(uint32,hard_latches)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 clock_ticks;
  {
  FCNCALL_SUBNAME("clock_ticks");
  { FCNCALL_CALL_CTRL_WRAP(clock_ticks,FCNCALL_CALL_TYPE(uint32,clock_ticks)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME before;
  {
  FCNCALL_SUBNAME("before");
  { FCNCALL_CALL_CTRL_WRAP(before,before.FCNCALL_CALL(before)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP64_TIME after;
  {
  FCNCALL_SUBNAME("after");
  { FCNCALL_CALL_CTRL_WRAP(after,after.FCNCALL_CALL(after)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_RANDOM_TCAL_TSTAMP_CLOCK

#ifndef USER_DEF_RANDOM_TCAL
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(RANDOM_TCAL)::FCNCALL_NAME(RANDOM_TCAL)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 8;
      // uint32 pulses : 4;
      // uint32 clock_bits : 6;
      // uint32 has_tstamp1 : 1;
      // uint32 has_tstamp2 : 1;
      // uint32 dummy_20_23 : 4;
      // uint32 id : 8;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 8;
    // uint32 pulses : 4;
    // uint32 clock_bits : 6;
    // uint32 has_tstamp1 : 1;
    // uint32 has_tstamp2 : 1;
    // uint32 dummy_20_23 : 4;
    // uint32 id : 8;
  // } ;
  // uint32 word_count : 8;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(header.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 pulses : 4;
  {
  FCNCALL_SUBNAME("pulses");
  { FCNCALL_CALL_CTRL_WRAP(header.pulses,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.pulses)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 clock_bits : 6;
  {
  FCNCALL_SUBNAME("clock_bits");
  { FCNCALL_CALL_CTRL_WRAP(header.clock_bits,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.clock_bits)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_tstamp1 : 1;
  {
  FCNCALL_SUBNAME("has_tstamp1");
  { FCNCALL_CALL_CTRL_WRAP(header.has_tstamp1,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.has_tstamp1)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_tstamp2 : 1;
  {
  FCNCALL_SUBNAME("has_tstamp2");
  { FCNCALL_CALL_CTRL_WRAP(header.has_tstamp2,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.has_tstamp2)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 id : 8;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.id)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // RANDOM_TCAL_TSTAMP_CLOCK tstamp1;
  {
  FCNCALL_SUBNAME("tstamp1");
  { FCNCALL_CALL_CTRL_WRAP(tstamp1,tstamp1.FCNCALL_CALL(tstamp1)); }
  FCNCALL_SUBNAME_END;
  }
  // RANDOM_TCAL_TSTAMP_CLOCK tstamp2;
  {
  FCNCALL_SUBNAME("tstamp2");
  { FCNCALL_CALL_CTRL_WRAP(tstamp2,tstamp2.FCNCALL_CALL(tstamp2)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_RANDOM_TCAL

#ifndef USER_DEF_SIS3316_ACTAR_S438
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SIS3316_ACTAR_S438)::FCNCALL_NAME(SIS3316_ACTAR_S438)
{
  FCNCALL_INIT;
  // raw_array<DATA32,DATA32,128> channel_header;
  {
  FCNCALL_SUBNAME("channel_header");
  { FCNCALL_CALL_CTRL_WRAP(channel_header,channel_header.FCNCALL_CALL(channel_header)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,40000> trace;
  {
  FCNCALL_SUBNAME("trace");
  { FCNCALL_CALL_CTRL_WRAP(trace,trace.FCNCALL_CALL(trace)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 8;
      // uint32 channel_num : 8;
      // uint32 unnamed_16_31 : 16;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 8;
    // uint32 channel_num : 8;
    // uint32 unnamed_16_31 : 16;
  // } ;
  // uint32 id : 8;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_num : 8;
  {
  FCNCALL_SUBNAME("channel_num");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.channel_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.channel_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_16_31 : 16;
  {
  FCNCALL_SUBNAME("unnamed_16_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_16_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_16_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 sampleLength : 26;
      // uint32 unnamed_26_26 : 1;
      // uint32 mawFlag : 1;
      // uint32 unnamed_28_31 : 4;
    // } ;
    // uint32 u32;
  // } header3;
  {
  FCNCALL_SUBNAME("header3");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 sampleLength : 26;
    // uint32 unnamed_26_26 : 1;
    // uint32 mawFlag : 1;
    // uint32 unnamed_28_31 : 4;
  // } ;
  // uint32 sampleLength : 26;
  {
  FCNCALL_SUBNAME("sampleLength");
  { FCNCALL_CALL_CTRL_WRAP(header3.sampleLength,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.sampleLength)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_26_26 : 1;
  {
  FCNCALL_SUBNAME("unnamed_26_26");
  { FCNCALL_CALL_CTRL_WRAP(header3.unnamed_26_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.unnamed_26_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 mawFlag : 1;
  {
  FCNCALL_SUBNAME("mawFlag");
  { FCNCALL_CALL_CTRL_WRAP(header3.mawFlag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.mawFlag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_28_31 : 4;
  {
  FCNCALL_SUBNAME("unnamed_28_31");
  { FCNCALL_CALL_CTRL_WRAP(header3.unnamed_28_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.unnamed_28_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header3.u32,FCNCALL_CALL_TYPE(uint32,header3.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SIS3316_ACTAR_S438

#ifndef USER_DEF_SIS3316_PSP_S438
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SIS3316_PSP_S438)::FCNCALL_NAME(SIS3316_PSP_S438)
{
  FCNCALL_INIT;
  // raw_array<DATA32,DATA32,128> channel_header;
  {
  FCNCALL_SUBNAME("channel_header");
  { FCNCALL_CALL_CTRL_WRAP(channel_header,channel_header.FCNCALL_CALL(channel_header)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,16000> trace;
  {
  FCNCALL_SUBNAME("trace");
  { FCNCALL_CALL_CTRL_WRAP(trace,trace.FCNCALL_CALL(trace)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 8;
      // uint32 channel_num : 8;
      // uint32 unnamed_16_31 : 16;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 8;
    // uint32 channel_num : 8;
    // uint32 unnamed_16_31 : 16;
  // } ;
  // uint32 id : 8;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_num : 8;
  {
  FCNCALL_SUBNAME("channel_num");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.channel_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.channel_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_16_31 : 16;
  {
  FCNCALL_SUBNAME("unnamed_16_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_16_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_16_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 sampleLength : 26;
      // uint32 unnamed_26_26 : 1;
      // uint32 mawFlag : 1;
      // uint32 unnamed_28_31 : 4;
    // } ;
    // uint32 u32;
  // } header3;
  {
  FCNCALL_SUBNAME("header3");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 sampleLength : 26;
    // uint32 unnamed_26_26 : 1;
    // uint32 mawFlag : 1;
    // uint32 unnamed_28_31 : 4;
  // } ;
  // uint32 sampleLength : 26;
  {
  FCNCALL_SUBNAME("sampleLength");
  { FCNCALL_CALL_CTRL_WRAP(header3.sampleLength,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.sampleLength)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_26_26 : 1;
  {
  FCNCALL_SUBNAME("unnamed_26_26");
  { FCNCALL_CALL_CTRL_WRAP(header3.unnamed_26_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.unnamed_26_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 mawFlag : 1;
  {
  FCNCALL_SUBNAME("mawFlag");
  { FCNCALL_CALL_CTRL_WRAP(header3.mawFlag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.mawFlag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_28_31 : 4;
  {
  FCNCALL_SUBNAME("unnamed_28_31");
  { FCNCALL_CALL_CTRL_WRAP(header3.unnamed_28_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.unnamed_28_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header3.u32,FCNCALL_CALL_TYPE(uint32,header3.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SIS3316_PSP_S438

#ifndef USER_DEF_SIS3316_S2_S438
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SIS3316_S2_S438)::FCNCALL_NAME(SIS3316_S2_S438)
{
  FCNCALL_INIT;
  // raw_array<DATA32,DATA32,128> channel_header;
  {
  FCNCALL_SUBNAME("channel_header");
  { FCNCALL_CALL_CTRL_WRAP(channel_header,channel_header.FCNCALL_CALL(channel_header)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,800> trace;
  {
  FCNCALL_SUBNAME("trace");
  { FCNCALL_CALL_CTRL_WRAP(trace,trace.FCNCALL_CALL(trace)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 8;
      // uint32 channel_num : 8;
      // uint32 unnamed_16_31 : 16;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 8;
    // uint32 channel_num : 8;
    // uint32 unnamed_16_31 : 16;
  // } ;
  // uint32 id : 8;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_num : 8;
  {
  FCNCALL_SUBNAME("channel_num");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.channel_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.channel_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_16_31 : 16;
  {
  FCNCALL_SUBNAME("unnamed_16_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_16_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_16_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 sampleLength : 26;
      // uint32 unnamed_26_26 : 1;
      // uint32 mawFlag : 1;
      // uint32 unnamed_28_31 : 4;
    // } ;
    // uint32 u32;
  // } header3;
  {
  FCNCALL_SUBNAME("header3");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 sampleLength : 26;
    // uint32 unnamed_26_26 : 1;
    // uint32 mawFlag : 1;
    // uint32 unnamed_28_31 : 4;
  // } ;
  // uint32 sampleLength : 26;
  {
  FCNCALL_SUBNAME("sampleLength");
  { FCNCALL_CALL_CTRL_WRAP(header3.sampleLength,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.sampleLength)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_26_26 : 1;
  {
  FCNCALL_SUBNAME("unnamed_26_26");
  { FCNCALL_CALL_CTRL_WRAP(header3.unnamed_26_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.unnamed_26_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 mawFlag : 1;
  {
  FCNCALL_SUBNAME("mawFlag");
  { FCNCALL_CALL_CTRL_WRAP(header3.mawFlag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.mawFlag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_28_31 : 4;
  {
  FCNCALL_SUBNAME("unnamed_28_31");
  { FCNCALL_CALL_CTRL_WRAP(header3.unnamed_28_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.unnamed_28_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header3.u32,FCNCALL_CALL_TYPE(uint32,header3.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SIS3316_S2_S438

#ifndef USER_DEF_SIS3316_S2_SCALERS_S438
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SIS3316_S2_SCALERS_S438)::FCNCALL_NAME(SIS3316_S2_SCALERS_S438)
{
  FCNCALL_INIT;
  // raw_array<DATA32,DATA32,192> scalers;
  {
  FCNCALL_SUBNAME("scalers");
  { FCNCALL_CALL_CTRL_WRAP(scalers,scalers.FCNCALL_CALL(scalers)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_31 : 32;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_31 : 32;
  // } ;
  // uint32 unnamed_0_31 : 32;
  {
  FCNCALL_SUBNAME("unnamed_0_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_0_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_0_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SIS3316_S2_SCALERS_S438

#ifndef USER_DEF_SIS3316_SCALERS_S438
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SIS3316_SCALERS_S438)::FCNCALL_NAME(SIS3316_SCALERS_S438)
{
  FCNCALL_INIT;
  // raw_array<DATA32,DATA32,480> scalers;
  {
  FCNCALL_SUBNAME("scalers");
  { FCNCALL_CALL_CTRL_WRAP(scalers,scalers.FCNCALL_CALL(scalers)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_31 : 32;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_31 : 32;
  // } ;
  // uint32 unnamed_0_31 : 32;
  {
  FCNCALL_SUBNAME("unnamed_0_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_0_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_0_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SIS3316_SCALERS_S438

#ifndef USER_DEF_SOFT_SCALER32
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SOFT_SCALER32)::FCNCALL_NAME(SOFT_SCALER32)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SOFT_SCALER32

#ifndef USER_DEF_TACQUILA_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TACQUILA_DATA)::FCNCALL_NAME(TACQUILA_DATA)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12,DATA12,17> tac[30];
  {
  FCNCALL_SUBNAME("tac");
  FCNCALL_FOR(__i0,30)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tac__i0,,__i0,tac[__i0].FCNCALL_CALL(tac[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA12,DATA12,17> adc[30];
  {
  FCNCALL_SUBNAME("adc");
  FCNCALL_FOR(__i0,30)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(adc__i0,,__i0,adc[__i0].FCNCALL_CALL(adc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA12,DATA12,17> clk[30];
  {
  FCNCALL_SUBNAME("clk");
  FCNCALL_FOR(__i0,30)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(clk__i0,,__i0,clk[__i0].FCNCALL_CALL(clk[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 count : 9;
      // uint32 dummy1 : 3;
      // uint32 trigger_tac : 4;
      // uint32 trigger_sam : 4;
      // uint32 lec : 4;
      // uint32 gtb : 4;
      // uint32 sam : 4;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 count : 9;
    // uint32 dummy1 : 3;
    // uint32 trigger_tac : 4;
    // uint32 trigger_sam : 4;
    // uint32 lec : 4;
    // uint32 gtb : 4;
    // uint32 sam : 4;
  // } ;
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy1 : 3;
  {
  FCNCALL_SUBNAME("dummy1");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy1,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy1)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_tac : 4;
  {
  FCNCALL_SUBNAME("trigger_tac");
  { FCNCALL_CALL_CTRL_WRAP(header.trigger_tac,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.trigger_tac)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_sam : 4;
  {
  FCNCALL_SUBNAME("trigger_sam");
  { FCNCALL_CALL_CTRL_WRAP(header.trigger_sam,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.trigger_sam)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 lec : 4;
  {
  FCNCALL_SUBNAME("lec");
  { FCNCALL_CALL_CTRL_WRAP(header.lec,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.lec)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 gtb : 4;
  {
  FCNCALL_SUBNAME("gtb");
  { FCNCALL_CALL_CTRL_WRAP(header.gtb,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.gtb)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sam : 4;
  {
  FCNCALL_SUBNAME("sam");
  { FCNCALL_CALL_CTRL_WRAP(header.sam,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.sam)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TACQUILA_DATA

#ifndef USER_DEF_TACQUILA_DATA_S438B
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TACQUILA_DATA_S438B)::FCNCALL_NAME(TACQUILA_DATA_S438B)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12,DATA12,32> tac[30];
  {
  FCNCALL_SUBNAME("tac");
  FCNCALL_FOR(__i0,30)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tac__i0,,__i0,tac[__i0].FCNCALL_CALL(tac[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA12,DATA12,17> adc[30];
  {
  FCNCALL_SUBNAME("adc");
  FCNCALL_FOR(__i0,30)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(adc__i0,,__i0,adc[__i0].FCNCALL_CALL(adc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA12,DATA12,17> clk[30];
  {
  FCNCALL_SUBNAME("clk");
  FCNCALL_FOR(__i0,30)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(clk__i0,,__i0,clk[__i0].FCNCALL_CALL(clk[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 count : 9;
      // uint32 dummy1 : 3;
      // uint32 trigger_tac : 4;
      // uint32 trigger_sam : 4;
      // uint32 lec : 4;
      // uint32 gtb : 4;
      // uint32 sam : 4;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 count : 9;
    // uint32 dummy1 : 3;
    // uint32 trigger_tac : 4;
    // uint32 trigger_sam : 4;
    // uint32 lec : 4;
    // uint32 gtb : 4;
    // uint32 sam : 4;
  // } ;
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy1 : 3;
  {
  FCNCALL_SUBNAME("dummy1");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy1,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy1)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_tac : 4;
  {
  FCNCALL_SUBNAME("trigger_tac");
  { FCNCALL_CALL_CTRL_WRAP(header.trigger_tac,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.trigger_tac)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_sam : 4;
  {
  FCNCALL_SUBNAME("trigger_sam");
  { FCNCALL_CALL_CTRL_WRAP(header.trigger_sam,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.trigger_sam)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 lec : 4;
  {
  FCNCALL_SUBNAME("lec");
  { FCNCALL_CALL_CTRL_WRAP(header.lec,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.lec)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 gtb : 4;
  {
  FCNCALL_SUBNAME("gtb");
  { FCNCALL_CALL_CTRL_WRAP(header.gtb,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.gtb)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sam : 4;
  {
  FCNCALL_SUBNAME("sam");
  { FCNCALL_CALL_CTRL_WRAP(header.sam,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.sam)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TACQUILA_DATA_S438B

#ifndef USER_DEF_TAMEX_CHANNEL
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX_CHANNEL)::FCNCALL_NAME(TAMEX_CHANNEL)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,128> type;
  {
  FCNCALL_SUBNAME("type");
  { FCNCALL_CALL_CTRL_WRAP(type,type.FCNCALL_CALL(type)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,128> tdc;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(tdc,tdc.FCNCALL_CALL(tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_7 : 8;
      // uint32 trigger_type : 4;
      // uint32 sfp_index : 4;
      // uint32 card_index : 8;
      // uint32 channel_index : 8;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_7 : 8;
    // uint32 trigger_type : 4;
    // uint32 sfp_index : 4;
    // uint32 card_index : 8;
    // uint32 channel_index : 8;
  // } ;
  // uint32 unnamed_0_7 : 8;
  {
  FCNCALL_SUBNAME("unnamed_0_7");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_0_7,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_0_7)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_type : 4;
  {
  FCNCALL_SUBNAME("trigger_type");
  { FCNCALL_CALL_CTRL_WRAP(header.trigger_type,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.trigger_type)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sfp_index : 4;
  {
  FCNCALL_SUBNAME("sfp_index");
  { FCNCALL_CALL_CTRL_WRAP(header.sfp_index,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.sfp_index)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 card_index : 8;
  {
  FCNCALL_SUBNAME("card_index");
  { FCNCALL_CALL_CTRL_WRAP(header.card_index,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.card_index)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_index : 8;
  {
  FCNCALL_SUBNAME("channel_index");
  { FCNCALL_CALL_CTRL_WRAP(header.channel_index,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.channel_index)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 data_size;
  {
  FCNCALL_SUBNAME("data_size");
  { FCNCALL_CALL_CTRL_WRAP(data_size,FCNCALL_CALL_TYPE(uint32,data_size)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 yanana_phone : 24;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } tdc_header;
  {
  FCNCALL_SUBNAME("tdc_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 yanana_phone : 24;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 yanana_phone : 24;
  {
  FCNCALL_SUBNAME("yanana_phone");
  { FCNCALL_CALL_CTRL_WRAP(tdc_header.yanana_phone,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,tdc_header.yanana_phone)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(tdc_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,tdc_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(tdc_header.u32,FCNCALL_CALL_TYPE(uint32,tdc_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 wanana_phone : 24;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } tdc_trailer;
  {
  FCNCALL_SUBNAME("tdc_trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 wanana_phone : 24;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 wanana_phone : 24;
  {
  FCNCALL_SUBNAME("wanana_phone");
  { FCNCALL_CALL_CTRL_WRAP(tdc_trailer.wanana_phone,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,tdc_trailer.wanana_phone)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(tdc_trailer.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,tdc_trailer.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(tdc_trailer.u32,FCNCALL_CALL_TYPE(uint32,tdc_trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX_CHANNEL

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TIMESTAMP_WHITERABBIT)::FCNCALL_NAME(TIMESTAMP_WHITERABBIT)
{
  FCNCALL_INIT;
  // DATA12 subsystem_id;
  {
  FCNCALL_SUBNAME("subsystem_id");
  { FCNCALL_CALL_CTRL_WRAP(subsystem_id,subsystem_id.FCNCALL_CALL(subsystem_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t1;
  {
  FCNCALL_SUBNAME("t1");
  { FCNCALL_CALL_CTRL_WRAP(t1,t1.FCNCALL_CALL(t1)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t2;
  {
  FCNCALL_SUBNAME("t2");
  { FCNCALL_CALL_CTRL_WRAP(t2,t2.FCNCALL_CALL(t2)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t3;
  {
  FCNCALL_SUBNAME("t3");
  { FCNCALL_CALL_CTRL_WRAP(t3,t3.FCNCALL_CALL(t3)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t4;
  {
  FCNCALL_SUBNAME("t4");
  { FCNCALL_CALL_CTRL_WRAP(t4,t4.FCNCALL_CALL(t4)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TRIDI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRIDI)::FCNCALL_NAME(TRIDI)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 tpat : 16;
      // uint32 unnamed_16_31 : 16;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 tpat : 16;
    // uint32 unnamed_16_31 : 16;
  // } ;
  // uint32 tpat : 16;
  {
  FCNCALL_SUBNAME("tpat");
  { FCNCALL_CALL_CTRL_WRAP(header.tpat,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_16_31 : 16;
  {
  FCNCALL_SUBNAME("unnamed_16_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_16_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_16_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ts_msb;
  {
  FCNCALL_SUBNAME("ts_msb");
  { FCNCALL_CALL_CTRL_WRAP(ts_msb,FCNCALL_CALL_TYPE(uint32,ts_msb)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ts_lsb;
  {
  FCNCALL_SUBNAME("ts_lsb");
  { FCNCALL_CALL_CTRL_WRAP(ts_lsb,FCNCALL_CALL_TYPE(uint32,ts_lsb)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRIDI

#ifndef USER_DEF_TRLO_SAMPLER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLO_SAMPLER)::FCNCALL_NAME(TRLO_SAMPLER)
{
  FCNCALL_INIT;
  // raw_list_ii_zero_suppress<DATA32,DATA32,512> stamps;
  {
  FCNCALL_SUBNAME("stamps");
  { FCNCALL_CALL_CTRL_WRAP(stamps,stamps.FCNCALL_CALL(stamps)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 count : 10;
      // uint32 dummy_10_23 : 14;
      // uint32 id : 8;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 count : 10;
    // uint32 dummy_10_23 : 14;
    // uint32 id : 8;
  // } ;
  // uint32 count : 10;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_10_23 : 14;
  {
  FCNCALL_SUBNAME("dummy_10_23");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_10_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_10_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 id : 8;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.id)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLO_SAMPLER

#ifndef USER_DEF_TRLO_SCALER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLO_SCALER)::FCNCALL_NAME(TRLO_SCALER)
{
  FCNCALL_INIT;
  // raw_list_ii_zero_suppress<DATA32,DATA32,16> stamps;
  {
  FCNCALL_SUBNAME("stamps");
  { FCNCALL_CALL_CTRL_WRAP(stamps,stamps.FCNCALL_CALL(stamps)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 crate_id : 8;
      // uint32 unnamed_8_31 : 24;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 crate_id : 8;
    // uint32 unnamed_8_31 : 24;
  // } ;
  // uint32 crate_id : 8;
  {
  FCNCALL_SUBNAME("crate_id");
  { FCNCALL_CALL_CTRL_WRAP(header.crate_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.crate_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_8_31 : 24;
  {
  FCNCALL_SUBNAME("unnamed_8_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_8_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_8_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLO_SCALER

#ifndef USER_DEF_VME_CAEN_V1190_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1190_SUBTDC)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 bunch_id : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 bunch_id : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 bunch_id : 12;
  {
  FCNCALL_SUBNAME("bunch_id");
  { FCNCALL_CALL_CTRL_WRAP(header.bunch_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.bunch_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(header.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 word_count : 12;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(trailer.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190)::FCNCALL_NAME(VME_CAEN_V1190)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190

#ifndef USER_DEF_VME_CAEN_V1190_S438_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_S438_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1190_S438_SUBTDC)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 bunch_id : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 bunch_id : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 bunch_id : 12;
  {
  FCNCALL_SUBNAME("bunch_id");
  { FCNCALL_CALL_CTRL_WRAP(header.bunch_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.bunch_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(header.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 word_count : 12;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(trailer.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_S438_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_S438
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_S438)::FCNCALL_NAME(VME_CAEN_V1190_S438)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 dummy_5_23 : 19;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } ucesb_separator;
  {
  FCNCALL_SUBNAME("ucesb_separator");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 dummy_5_23 : 19;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(ucesb_separator.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,ucesb_separator.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_5_23 : 19;
  {
  FCNCALL_SUBNAME("dummy_5_23");
  { FCNCALL_CALL_CTRL_WRAP(ucesb_separator.dummy_5_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,ucesb_separator.dummy_5_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(ucesb_separator.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,ucesb_separator.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(ucesb_separator.u32,FCNCALL_CALL_TYPE(uint32,ucesb_separator.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 dummy_0_4 : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 dummy_0_4 : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 dummy_0_4 : 5;
  {
  FCNCALL_SUBNAME("dummy_0_4");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_0_4,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_0_4)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_S438_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 dummy_0_4 : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 dummy_0_4 : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 dummy_0_4 : 5;
  {
  FCNCALL_SUBNAME("dummy_0_4");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_0_4,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_0_4)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_S438

#ifndef USER_DEF_VME_CAEN_V1190_S438_SHORT_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_S438_SHORT_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1190_S438_SHORT_SUBTDC)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_S438_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR)::FCNCALL_NAME(VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1190_S438_SHORT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_S438_SHORT)::FCNCALL_NAME(VME_CAEN_V1190_S438_SHORT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_S438_SHORT_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR err[4];
  {
  FCNCALL_SUBNAME("err");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(err__i0,,__i0,err[__i0].FCNCALL_CALL(err[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_S438_SHORT

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SHORT_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1190_SHORT_SUBTDC)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SHORT_SUBTDC_ERROR)::FCNCALL_NAME(VME_CAEN_V1190_SHORT_SUBTDC_ERROR)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1190_SHORT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SHORT)::FCNCALL_NAME(VME_CAEN_V1190_SHORT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_SHORT_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[4];
  {
  FCNCALL_SUBNAME("err");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(err__i0,,__i0,err[__i0].FCNCALL_CALL(err[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SHORT

#ifndef USER_DEF_VME_CAEN_V1290_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1290_SUBTDC)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 bunch_id : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 bunch_id : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 bunch_id : 12;
  {
  FCNCALL_SUBNAME("bunch_id");
  { FCNCALL_CALL_CTRL_WRAP(header.bunch_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.bunch_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(header.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 word_count : 12;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(trailer.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290)::FCNCALL_NAME(VME_CAEN_V1290)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290

#ifndef USER_DEF_VME_CAEN_V1290_S438_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_S438_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1290_S438_SUBTDC)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 bunch_id : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 bunch_id : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 bunch_id : 12;
  {
  FCNCALL_SUBNAME("bunch_id");
  { FCNCALL_CALL_CTRL_WRAP(header.bunch_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.bunch_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(header.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 word_count : 12;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(trailer.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_S438_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_S438
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_S438)::FCNCALL_NAME(VME_CAEN_V1290_S438)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 dummy_5_23 : 19;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } ucesb_separator;
  {
  FCNCALL_SUBNAME("ucesb_separator");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 dummy_5_23 : 19;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(ucesb_separator.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,ucesb_separator.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_5_23 : 19;
  {
  FCNCALL_SUBNAME("dummy_5_23");
  { FCNCALL_CALL_CTRL_WRAP(ucesb_separator.dummy_5_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,ucesb_separator.dummy_5_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(ucesb_separator.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,ucesb_separator.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(ucesb_separator.u32,FCNCALL_CALL_TYPE(uint32,ucesb_separator.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 dummy_0_4 : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 dummy_0_4 : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 dummy_0_4 : 5;
  {
  FCNCALL_SUBNAME("dummy_0_4");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_0_4,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_0_4)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_S438_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 dummy_0_4 : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 dummy_0_4 : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 dummy_0_4 : 5;
  {
  FCNCALL_SUBNAME("dummy_0_4");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_0_4,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_0_4)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_S438

#ifndef USER_DEF_VME_CAEN_V1290_S438_SHORT_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_S438_SHORT_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1290_S438_SHORT_SUBTDC)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_S438_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR)::FCNCALL_NAME(VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1290_S438_SHORT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_S438_SHORT)::FCNCALL_NAME(VME_CAEN_V1290_S438_SHORT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_S438_SHORT_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR err[4];
  {
  FCNCALL_SUBNAME("err");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(err__i0,,__i0,err[__i0].FCNCALL_CALL(err[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_S438_SHORT

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SHORT_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1290_SHORT_SUBTDC)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SHORT_SUBTDC_ERROR)::FCNCALL_NAME(VME_CAEN_V1290_SHORT_SUBTDC_ERROR)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1290_SHORT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SHORT)::FCNCALL_NAME(VME_CAEN_V1290_SHORT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_SHORT_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[4];
  {
  FCNCALL_SUBNAME("err");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(err__i0,,__i0,err[__i0].FCNCALL_CALL(err[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SHORT

#ifndef USER_DEF_VME_CAEN_V775
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V775)::FCNCALL_NAME(VME_CAEN_V775)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 event_number : 24;
      // uint32 unnamed_24_26 : 3;
      // uint32 geom : 5;
    // } ;
    // uint32 u32;
  // } eob;
  {
  FCNCALL_SUBNAME("eob");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 event_number : 24;
    // uint32 unnamed_24_26 : 3;
    // uint32 geom : 5;
  // } ;
  // uint32 event_number : 24;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(eob.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,eob.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_26 : 3;
  {
  FCNCALL_SUBNAME("unnamed_24_26");
  { FCNCALL_CALL_CTRL_WRAP(eob.unnamed_24_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,eob.unnamed_24_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(eob.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,eob.geom)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(eob.u32,FCNCALL_CALL_TYPE(uint32,eob.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V775

#ifndef USER_DEF_VME_CAEN_V830
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V830)::FCNCALL_NAME(VME_CAEN_V830)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 event_number : 16;
      // uint32 ts : 2;
      // uint32 count : 6;
      // uint32 dummy_24_25 : 2;
      // uint32 unnamed_26_26 : 1;
      // uint32 geom : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 event_number : 16;
    // uint32 ts : 2;
    // uint32 count : 6;
    // uint32 dummy_24_25 : 2;
    // uint32 unnamed_26_26 : 1;
    // uint32 geom : 5;
  // } ;
  // uint32 event_number : 16;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ts : 2;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(header.ts,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.ts)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 6;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_25 : 2;
  {
  FCNCALL_SUBNAME("dummy_24_25");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_24_25,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_24_25)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_26_26 : 1;
  {
  FCNCALL_SUBNAME("unnamed_26_26");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_26_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_26_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V830

#ifndef USER_DEF_VME_GSI_VFTX2
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2)::FCNCALL_NAME(VME_GSI_VFTX2)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 5;
      // uint32 internal_status : 4;
      // uint32 count : 9;
      // uint32 dummy_18_23 : 6;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 5;
    // uint32 internal_status : 4;
    // uint32 count : 9;
    // uint32 dummy_18_23 : 6;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 id : 5;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 internal_status : 4;
  {
  FCNCALL_SUBNAME("internal_status");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.internal_status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.internal_status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_18_23 : 6;
  {
  FCNCALL_SUBNAME("dummy_18_23");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.dummy_18_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.dummy_18_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_7 : 8;
      // uint32 dummy_8_10 : 3;
      // uint32 trigger_timestamp : 13;
      // uint32 dummy_24_28 : 5;
      // uint32 unnamed_29_30 : 2;
      // uint32 unnamed_31_31 : 1;
    // } ;
    // uint32 u32;
  // } event_header;
  {
  FCNCALL_SUBNAME("event_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_7 : 8;
    // uint32 dummy_8_10 : 3;
    // uint32 trigger_timestamp : 13;
    // uint32 dummy_24_28 : 5;
    // uint32 unnamed_29_30 : 2;
    // uint32 unnamed_31_31 : 1;
  // } ;
  // uint32 unnamed_0_7 : 8;
  {
  FCNCALL_SUBNAME("unnamed_0_7");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_0_7,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_0_7)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_10 : 3;
  {
  FCNCALL_SUBNAME("dummy_8_10");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_8_10,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_8_10)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_timestamp : 13;
  {
  FCNCALL_SUBNAME("trigger_timestamp");
  { FCNCALL_CALL_CTRL_WRAP(event_header.trigger_timestamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.trigger_timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_28 : 5;
  {
  FCNCALL_SUBNAME("dummy_24_28");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_24_28,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_24_28)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_29_30 : 2;
  {
  FCNCALL_SUBNAME("unnamed_29_30");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_29_30,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_29_30)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_31_31 : 1;
  {
  FCNCALL_SUBNAME("unnamed_31_31");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_31_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_31_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(event_header.u32,FCNCALL_CALL_TYPE(uint32,event_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2

#ifndef USER_DEF_VME_GSI_VFTX2_7PS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2_7PS)::FCNCALL_NAME(VME_GSI_VFTX2_7PS)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 5;
      // uint32 internal_status : 4;
      // uint32 count : 9;
      // uint32 dummy_18_23 : 6;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 5;
    // uint32 internal_status : 4;
    // uint32 count : 9;
    // uint32 dummy_18_23 : 6;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 id : 5;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 internal_status : 4;
  {
  FCNCALL_SUBNAME("internal_status");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.internal_status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.internal_status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_18_23 : 6;
  {
  FCNCALL_SUBNAME("dummy_18_23");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.dummy_18_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.dummy_18_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2_7PS

#ifndef USER_DEF_VME_GSI_VFTX2_LT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2_LT)::FCNCALL_NAME(VME_GSI_VFTX2_LT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,64,100> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,64,100> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 5;
      // uint32 internal_status : 4;
      // uint32 count : 9;
      // uint32 dummy_18_23 : 6;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 5;
    // uint32 internal_status : 4;
    // uint32 count : 9;
    // uint32 dummy_18_23 : 6;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 id : 5;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 internal_status : 4;
  {
  FCNCALL_SUBNAME("internal_status");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.internal_status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.internal_status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_18_23 : 6;
  {
  FCNCALL_SUBNAME("dummy_18_23");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.dummy_18_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.dummy_18_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_7 : 8;
      // uint32 dummy_8_10 : 3;
      // uint32 trigger_timestamp : 13;
      // uint32 dummy_24_28 : 5;
      // uint32 unnamed_29_30 : 2;
      // uint32 unnamed_31_31 : 1;
    // } ;
    // uint32 u32;
  // } event_header;
  {
  FCNCALL_SUBNAME("event_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_7 : 8;
    // uint32 dummy_8_10 : 3;
    // uint32 trigger_timestamp : 13;
    // uint32 dummy_24_28 : 5;
    // uint32 unnamed_29_30 : 2;
    // uint32 unnamed_31_31 : 1;
  // } ;
  // uint32 unnamed_0_7 : 8;
  {
  FCNCALL_SUBNAME("unnamed_0_7");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_0_7,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_0_7)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_10 : 3;
  {
  FCNCALL_SUBNAME("dummy_8_10");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_8_10,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_8_10)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_timestamp : 13;
  {
  FCNCALL_SUBNAME("trigger_timestamp");
  { FCNCALL_CALL_CTRL_WRAP(event_header.trigger_timestamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.trigger_timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_28 : 5;
  {
  FCNCALL_SUBNAME("dummy_24_28");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_24_28,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_24_28)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_29_30 : 2;
  {
  FCNCALL_SUBNAME("unnamed_29_30");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_29_30,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_29_30)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_31_31 : 1;
  {
  FCNCALL_SUBNAME("unnamed_31_31");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_31_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_31_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(event_header.u32,FCNCALL_CALL_TYPE(uint32,event_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2_LT

#ifndef USER_DEF_VME_MESYTEC_MADC32
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_MADC32)::FCNCALL_NAME(VME_MESYTEC_MADC32)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA14_OVERFLOW,DATA14_OVERFLOW,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_MADC32

#ifndef USER_DEF_VME_MESYTEC_MDPP16
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_MDPP16)::FCNCALL_NAME(VME_MESYTEC_MDPP16)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,34,100> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_MDPP16

#ifndef USER_DEF_VME_STRUCK_SIS3316
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_STRUCK_SIS3316)::FCNCALL_NAME(VME_STRUCK_SIS3316)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA16,DATA16,900> data[2];
  {
  FCNCALL_SUBNAME("data");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(data__i0,,__i0,data[__i0].FCNCALL_CALL(data[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,3> maw[2];
  {
  FCNCALL_SUBNAME("maw");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(maw__i0,,__i0,maw[__i0].FCNCALL_CALL(maw[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,2> timeStamp[2];
  {
  FCNCALL_SUBNAME("timeStamp");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(timeStamp__i0,,__i0,timeStamp[__i0].FCNCALL_CALL(timeStamp[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,2> gate[2];
  {
  FCNCALL_SUBNAME("gate");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(gate__i0,,__i0,gate[__i0].FCNCALL_CALL(gate[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 chanNo : 16;
      // uint32 unnamed_16_31 : 16;
    // } ;
    // uint32 u32;
  // } header0;
  {
  FCNCALL_SUBNAME("header0");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 chanNo : 16;
    // uint32 unnamed_16_31 : 16;
  // } ;
  // uint32 chanNo : 16;
  {
  FCNCALL_SUBNAME("chanNo");
  { FCNCALL_CALL_CTRL_WRAP(header0.chanNo,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header0.chanNo)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_16_31 : 16;
  {
  FCNCALL_SUBNAME("unnamed_16_31");
  { FCNCALL_CALL_CTRL_WRAP(header0.unnamed_16_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header0.unnamed_16_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header0.u32,FCNCALL_CALL_TYPE(uint32,header0.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 format : 4;
      // uint32 channelID : 12;
      // uint32 timeS : 16;
    // } ;
    // uint32 u32;
  // } header1;
  {
  FCNCALL_SUBNAME("header1");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 format : 4;
    // uint32 channelID : 12;
    // uint32 timeS : 16;
  // } ;
  // uint32 format : 4;
  {
  FCNCALL_SUBNAME("format");
  { FCNCALL_CALL_CTRL_WRAP(header1.format,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header1.format)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channelID : 12;
  {
  FCNCALL_SUBNAME("channelID");
  { FCNCALL_CALL_CTRL_WRAP(header1.channelID,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header1.channelID)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 timeS : 16;
  {
  FCNCALL_SUBNAME("timeS");
  { FCNCALL_CALL_CTRL_WRAP(header1.timeS,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header1.timeS)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header1.u32,FCNCALL_CALL_TYPE(uint32,header1.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 timeS : 32;
    // } ;
    // uint32 u32;
  // } header2;
  {
  FCNCALL_SUBNAME("header2");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 timeS : 32;
  // } ;
  // uint32 timeS : 32;
  {
  FCNCALL_SUBNAME("timeS");
  { FCNCALL_CALL_CTRL_WRAP(header2.timeS,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header2.timeS)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header2.u32,FCNCALL_CALL_TYPE(uint32,header2.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 sum : 28;
      // uint32 unnamed_28_31 : 4;
    // } ;
    // uint32 u32;
  // } gate7;
  {
  FCNCALL_SUBNAME("gate7");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 sum : 28;
    // uint32 unnamed_28_31 : 4;
  // } ;
  // uint32 sum : 28;
  {
  FCNCALL_SUBNAME("sum");
  { FCNCALL_CALL_CTRL_WRAP(gate7.sum,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,gate7.sum)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_28_31 : 4;
  {
  FCNCALL_SUBNAME("unnamed_28_31");
  { FCNCALL_CALL_CTRL_WRAP(gate7.unnamed_28_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,gate7.unnamed_28_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(gate7.u32,FCNCALL_CALL_TYPE(uint32,gate7.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 sum : 28;
      // uint32 unnamed_28_31 : 4;
    // } ;
    // uint32 u32;
  // } gate8;
  {
  FCNCALL_SUBNAME("gate8");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 sum : 28;
    // uint32 unnamed_28_31 : 4;
  // } ;
  // uint32 sum : 28;
  {
  FCNCALL_SUBNAME("sum");
  { FCNCALL_CALL_CTRL_WRAP(gate8.sum,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,gate8.sum)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_28_31 : 4;
  {
  FCNCALL_SUBNAME("unnamed_28_31");
  { FCNCALL_CALL_CTRL_WRAP(gate8.unnamed_28_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,gate8.unnamed_28_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(gate8.u32,FCNCALL_CALL_TYPE(uint32,gate8.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 max : 28;
      // uint32 unnamed_28_31 : 4;
    // } ;
    // uint32 u32;
  // } maw1;
  {
  FCNCALL_SUBNAME("maw1");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 max : 28;
    // uint32 unnamed_28_31 : 4;
  // } ;
  // uint32 max : 28;
  {
  FCNCALL_SUBNAME("max");
  { FCNCALL_CALL_CTRL_WRAP(maw1.max,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,maw1.max)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_28_31 : 4;
  {
  FCNCALL_SUBNAME("unnamed_28_31");
  { FCNCALL_CALL_CTRL_WRAP(maw1.unnamed_28_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,maw1.unnamed_28_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(maw1.u32,FCNCALL_CALL_TYPE(uint32,maw1.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 after : 28;
      // uint32 unnamed_28_31 : 4;
    // } ;
    // uint32 u32;
  // } maw2;
  {
  FCNCALL_SUBNAME("maw2");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 after : 28;
    // uint32 unnamed_28_31 : 4;
  // } ;
  // uint32 after : 28;
  {
  FCNCALL_SUBNAME("after");
  { FCNCALL_CALL_CTRL_WRAP(maw2.after,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,maw2.after)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_28_31 : 4;
  {
  FCNCALL_SUBNAME("unnamed_28_31");
  { FCNCALL_CALL_CTRL_WRAP(maw2.unnamed_28_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,maw2.unnamed_28_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(maw2.u32,FCNCALL_CALL_TYPE(uint32,maw2.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 before : 28;
      // uint32 unnamed_28_31 : 4;
    // } ;
    // uint32 u32;
  // } maw3;
  {
  FCNCALL_SUBNAME("maw3");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 before : 28;
    // uint32 unnamed_28_31 : 4;
  // } ;
  // uint32 before : 28;
  {
  FCNCALL_SUBNAME("before");
  { FCNCALL_CALL_CTRL_WRAP(maw3.before,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,maw3.before)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_28_31 : 4;
  {
  FCNCALL_SUBNAME("unnamed_28_31");
  { FCNCALL_CALL_CTRL_WRAP(maw3.unnamed_28_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,maw3.unnamed_28_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(maw3.u32,FCNCALL_CALL_TYPE(uint32,maw3.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 sampleLength : 26;
      // uint32 unnamed_26_26 : 1;
      // uint32 mawFlag : 1;
      // uint32 unnamed_28_31 : 4;
    // } ;
    // uint32 u32;
  // } header3;
  {
  FCNCALL_SUBNAME("header3");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 sampleLength : 26;
    // uint32 unnamed_26_26 : 1;
    // uint32 mawFlag : 1;
    // uint32 unnamed_28_31 : 4;
  // } ;
  // uint32 sampleLength : 26;
  {
  FCNCALL_SUBNAME("sampleLength");
  { FCNCALL_CALL_CTRL_WRAP(header3.sampleLength,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.sampleLength)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_26_26 : 1;
  {
  FCNCALL_SUBNAME("unnamed_26_26");
  { FCNCALL_CALL_CTRL_WRAP(header3.unnamed_26_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.unnamed_26_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 mawFlag : 1;
  {
  FCNCALL_SUBNAME("mawFlag");
  { FCNCALL_CALL_CTRL_WRAP(header3.mawFlag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.mawFlag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_28_31 : 4;
  {
  FCNCALL_SUBNAME("unnamed_28_31");
  { FCNCALL_CALL_CTRL_WRAP(header3.unnamed_28_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header3.unnamed_28_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header3.u32,FCNCALL_CALL_TYPE(uint32,header3.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_STRUCK_SIS3316

#ifndef USER_DEF_WR_MULTI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(WR_MULTI)::FCNCALL_NAME(WR_MULTI)
{
  FCNCALL_INIT;
  // DATA32 time_hi;
  {
  FCNCALL_SUBNAME("time_hi");
  { FCNCALL_CALL_CTRL_WRAP(time_hi,time_hi.FCNCALL_CALL(time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 time_lo;
  {
  FCNCALL_SUBNAME("time_lo");
  { FCNCALL_CALL_CTRL_WRAP(time_lo,time_lo.FCNCALL_CALL(time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_LAND_CAMAC_CONVERTER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_CAMAC_CONVERTER)::FCNCALL_NAME(LAND_CAMAC_CONVERTER)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // uint16 tpat;
  {
  FCNCALL_SUBNAME("tpat");
  { FCNCALL_CALL_CTRL_WRAP(tpat,FCNCALL_CALL_TYPE(uint16,tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // uint16 tprev;
  {
  FCNCALL_SUBNAME("tprev");
  { FCNCALL_CALL_CTRL_WRAP(tprev,FCNCALL_CALL_TYPE(uint16,tprev)); }
  FCNCALL_SUBNAME_END;
  }
  // uint16 tnext;
  {
  FCNCALL_SUBNAME("tnext");
  { FCNCALL_CALL_CTRL_WRAP(tnext,FCNCALL_CALL_TYPE(uint16,tnext)); }
  FCNCALL_SUBNAME_END;
  }
  // uint16 tprev2;
  {
  FCNCALL_SUBNAME("tprev2");
  { FCNCALL_CALL_CTRL_WRAP(tprev2,FCNCALL_CALL_TYPE(uint16,tprev2)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_CAMAC_CONVERTER

#ifndef USER_DEF_LAND_CAMAC_SCALER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_CAMAC_SCALER)::FCNCALL_NAME(LAND_CAMAC_SCALER)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // uint32 timestamp;
  {
  FCNCALL_SUBNAME("timestamp");
  { FCNCALL_CALL_CTRL_WRAP(timestamp,FCNCALL_CALL_TYPE(uint32,timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_31 : 32;
    // } ;
    // uint32 u32;
  // } endianess;
  {
  FCNCALL_SUBNAME("endianess");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_31 : 32;
  // } ;
  // uint32 unnamed_0_31 : 32;
  {
  FCNCALL_SUBNAME("unnamed_0_31");
  { FCNCALL_CALL_CTRL_WRAP(endianess.unnamed_0_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,endianess.unnamed_0_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(endianess.u32,FCNCALL_CALL_TYPE(uint32,endianess.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_LECROY_4434 scaler0;
  {
  FCNCALL_SUBNAME("scaler0");
  { FCNCALL_CALL_CTRL_WRAP(scaler0,scaler0.FCNCALL_CALL(scaler0)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_LECROY_4434 scaler2;
  {
  FCNCALL_SUBNAME("scaler2");
  { FCNCALL_CALL_CTRL_WRAP(scaler2,scaler2.FCNCALL_CALL(scaler2)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_LECROY_4434 scaler1;
  {
  FCNCALL_SUBNAME("scaler1");
  { FCNCALL_CALL_CTRL_WRAP(scaler1,scaler1.FCNCALL_CALL(scaler1)); }
  FCNCALL_SUBNAME_END;
  }
  // SOFT_SCALER32 scaler3;
  {
  FCNCALL_SUBNAME("scaler3");
  { FCNCALL_CALL_CTRL_WRAP(scaler3,scaler3.FCNCALL_CALL(scaler3)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_CAMAC_SCALER

#ifndef USER_DEF_LAND_CAMAC_START_STOP_STAMP
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_CAMAC_START_STOP_STAMP)::FCNCALL_NAME(LAND_CAMAC_START_STOP_STAMP)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // uint32 timestamp;
  {
  FCNCALL_SUBNAME("timestamp");
  { FCNCALL_CALL_CTRL_WRAP(timestamp,FCNCALL_CALL_TYPE(uint32,timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_31 : 32;
    // } ;
    // uint32 u32;
  // } endianess;
  {
  FCNCALL_SUBNAME("endianess");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_31 : 32;
  // } ;
  // uint32 unnamed_0_31 : 32;
  {
  FCNCALL_SUBNAME("unnamed_0_31");
  { FCNCALL_CALL_CTRL_WRAP(endianess.unnamed_0_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,endianess.unnamed_0_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(endianess.u32,FCNCALL_CALL_TYPE(uint32,endianess.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_CAMAC_START_STOP_STAMP

#ifndef USER_DEF_LAND_CAMAC_TCAL_INFO
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_CAMAC_TCAL_INFO)::FCNCALL_NAME(LAND_CAMAC_TCAL_INFO)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // uint32 info;
  {
  FCNCALL_SUBNAME("info");
  { FCNCALL_CALL_CTRL_WRAP(info,FCNCALL_CALL_TYPE(uint32,info)); }
  FCNCALL_SUBNAME_END;
  }
  // RANDOM_TCAL rtcal;
  {
  FCNCALL_SUBNAME("rtcal");
  { FCNCALL_CALL_CTRL_WRAP(rtcal,rtcal.FCNCALL_CALL(rtcal)); }
  FCNCALL_SUBNAME_END;
  }
  // NTP_MESSAGE ntp;
  {
  FCNCALL_SUBNAME("ntp");
  { FCNCALL_CALL_CTRL_WRAP(ntp,ntp.FCNCALL_CALL(ntp)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_CAMAC_TCAL_INFO

#ifndef USER_DEF_TACQUILA_LAND_SUBEVENT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TACQUILA_LAND_SUBEVENT)::FCNCALL_NAME(TACQUILA_LAND_SUBEVENT)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TACQUILA_DATA data_sam5_gtb0;
  {
  FCNCALL_SUBNAME("data_sam5_gtb0");
  { FCNCALL_CALL_CTRL_WRAP(data_sam5_gtb0,data_sam5_gtb0.FCNCALL_CALL(data_sam5_gtb0)); }
  FCNCALL_SUBNAME_END;
  }
  // TACQUILA_DATA data_sam6_gtb1;
  {
  FCNCALL_SUBNAME("data_sam6_gtb1");
  { FCNCALL_CALL_CTRL_WRAP(data_sam6_gtb1,data_sam6_gtb1.FCNCALL_CALL(data_sam6_gtb1)); }
  FCNCALL_SUBNAME_END;
  }
  // TACQUILA_DATA data_sam6_gtb0;
  {
  FCNCALL_SUBNAME("data_sam6_gtb0");
  { FCNCALL_CALL_CTRL_WRAP(data_sam6_gtb0,data_sam6_gtb0.FCNCALL_CALL(data_sam6_gtb0)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TACQUILA_LAND_SUBEVENT

#ifndef USER_DEF_califa_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(califa_subev)::FCNCALL_NAME(califa_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // DUMMY_WORD dummy;
  {
  FCNCALL_SUBNAME("dummy");
  { FCNCALL_CALL_CTRL_WRAP(dummy,dummy.FCNCALL_CALL(dummy)); }
  FCNCALL_SUBNAME_END;
  }
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_califa_subev

#ifndef USER_DEF_daq_status_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(daq_status_subev)::FCNCALL_NAME(daq_status_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // DAQ_STATUS status;
  {
  FCNCALL_SUBNAME("status");
  { FCNCALL_CALL_CTRL_WRAP(status,status.FCNCALL_CALL(status)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_daq_status_subev

#ifndef USER_DEF_empty_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(empty_subev)::FCNCALL_NAME(empty_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_empty_subev

#ifndef USER_DEF_fiber_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(fiber_subev)::FCNCALL_NAME(fiber_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // FEBEX_NOTRACE GFI0;
  {
  FCNCALL_SUBNAME("GFI0");
  { FCNCALL_CALL_CTRL_WRAP(GFI0,GFI0.FCNCALL_CALL(GFI0)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE GFI2;
  {
  FCNCALL_SUBNAME("GFI2");
  { FCNCALL_CALL_CTRL_WRAP(GFI2,GFI2.FCNCALL_CALL(GFI2)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE GFI1;
  {
  FCNCALL_SUBNAME("GFI1");
  { FCNCALL_CALL_CTRL_WRAP(GFI1,GFI1.FCNCALL_CALL(GFI1)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE GFI3;
  {
  FCNCALL_SUBNAME("GFI3");
  { FCNCALL_CALL_CTRL_WRAP(GFI3,GFI3.FCNCALL_CALL(GFI3)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE GFI4;
  {
  FCNCALL_SUBNAME("GFI4");
  { FCNCALL_CALL_CTRL_WRAP(GFI4,GFI4.FCNCALL_CALL(GFI4)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE fi4[4];
  {
  FCNCALL_SUBNAME("fi4");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(fi4__i0,,__i0,fi4[__i0].FCNCALL_CALL(fi4[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_EVENTHEADER evhe;
  {
  FCNCALL_SUBNAME("evhe");
  { FCNCALL_CALL_CTRL_WRAP(evhe,evhe.FCNCALL_CALL(evhe)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_fiber_subev

#ifndef USER_DEF_los_psp_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_psp_subev)::FCNCALL_NAME(los_psp_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // VME_GSI_VFTX2_7PS vftx2_1;
  {
  FCNCALL_SUBNAME("vftx2_1");
  { FCNCALL_CALL_CTRL_WRAP(vftx2_1,vftx2_1.FCNCALL_CALL(vftx2_1)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_MESYTEC_MADC32 madc32;
  {
  FCNCALL_SUBNAME("madc32");
  { FCNCALL_CALL_CTRL_WRAP(madc32,madc32.FCNCALL_CALL(madc32)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_GSI_VFTX2_7PS vftx2_2;
  {
  FCNCALL_SUBNAME("vftx2_2");
  { FCNCALL_CALL_CTRL_WRAP(vftx2_2,vftx2_2.FCNCALL_CALL(vftx2_2)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_psp_subev

#ifndef USER_DEF_los_scaler_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_scaler_subev)::FCNCALL_NAME(los_scaler_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRLO_SCALER scaler;
  {
  FCNCALL_SUBNAME("scaler");
  { FCNCALL_CALL_CTRL_WRAP(scaler,scaler.FCNCALL_CALL(scaler)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_scaler_subev

#ifndef USER_DEF_mark_event_time
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(mark_event_time)::FCNCALL_NAME(mark_event_time)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRLO_SAMPLER sampler_los;
  {
  FCNCALL_SUBNAME("sampler_los");
  { FCNCALL_CALL_CTRL_WRAP(sampler_los,sampler_los.FCNCALL_CALL(sampler_los)); }
  FCNCALL_SUBNAME_END;
  }
  // TRLO_SAMPLER sampler_cb_sum;
  {
  FCNCALL_SUBNAME("sampler_cb_sum");
  { FCNCALL_CALL_CTRL_WRAP(sampler_cb_sum,sampler_cb_sum.FCNCALL_CALL(sampler_cb_sum)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_mark_event_time

#ifndef USER_DEF_mfi_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(mfi_subev)::FCNCALL_NAME(mfi_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // NXYTER_PADDING pads;
  {
  FCNCALL_SUBNAME("pads");
  { FCNCALL_CALL_CTRL_WRAP(pads,pads.FCNCALL_CALL(pads)); }
  FCNCALL_SUBNAME_END;
  }
  // NXYTER data01;
  {
  FCNCALL_SUBNAME("data01");
  { FCNCALL_CALL_CTRL_WRAP(data01,data01.FCNCALL_CALL(data01)); }
  FCNCALL_SUBNAME_END;
  }
  // NXYTER data00;
  {
  FCNCALL_SUBNAME("data00");
  { FCNCALL_CALL_CTRL_WRAP(data00,data00.FCNCALL_CALL(data00)); }
  FCNCALL_SUBNAME_END;
  }
  // NXYTER data10;
  {
  FCNCALL_SUBNAME("data10");
  { FCNCALL_CALL_CTRL_WRAP(data10,data10.FCNCALL_CALL(data10)); }
  FCNCALL_SUBNAME_END;
  }
  // NXYTER data11;
  {
  FCNCALL_SUBNAME("data11");
  { FCNCALL_CALL_CTRL_WRAP(data11,data11.FCNCALL_CALL(data11)); }
  FCNCALL_SUBNAME_END;
  }
  // NXYTER data20;
  {
  FCNCALL_SUBNAME("data20");
  { FCNCALL_CALL_CTRL_WRAP(data20,data20.FCNCALL_CALL(data20)); }
  FCNCALL_SUBNAME_END;
  }
  // NXYTER data21;
  {
  FCNCALL_SUBNAME("data21");
  { FCNCALL_CALL_CTRL_WRAP(data21,data21.FCNCALL_CALL(data21)); }
  FCNCALL_SUBNAME_END;
  }
  // NXYTER data30;
  {
  FCNCALL_SUBNAME("data30");
  { FCNCALL_CALL_CTRL_WRAP(data30,data30.FCNCALL_CALL(data30)); }
  FCNCALL_SUBNAME_END;
  }
  // NXYTER data31;
  {
  FCNCALL_SUBNAME("data31");
  { FCNCALL_CALL_CTRL_WRAP(data31,data31.FCNCALL_CALL(data31)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_mfi_subev

#ifndef USER_DEF_neuland_subevent
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(neuland_subevent)::FCNCALL_NAME(neuland_subevent)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TACQUILA_DATA_S438B data_sam5_gtb0;
  {
  FCNCALL_SUBNAME("data_sam5_gtb0");
  { FCNCALL_CALL_CTRL_WRAP(data_sam5_gtb0,data_sam5_gtb0.FCNCALL_CALL(data_sam5_gtb0)); }
  FCNCALL_SUBNAME_END;
  }
  // TACQUILA_DATA_S438B data_sam6_gtb1;
  {
  FCNCALL_SUBNAME("data_sam6_gtb1");
  { FCNCALL_CALL_CTRL_WRAP(data_sam6_gtb1,data_sam6_gtb1.FCNCALL_CALL(data_sam6_gtb1)); }
  FCNCALL_SUBNAME_END;
  }
  // TACQUILA_DATA_S438B data_sam6_gtb0;
  {
  FCNCALL_SUBNAME("data_sam6_gtb0");
  { FCNCALL_CALL_CTRL_WRAP(data_sam6_gtb0,data_sam6_gtb0.FCNCALL_CALL(data_sam6_gtb0)); }
  FCNCALL_SUBNAME_END;
  }
  // TACQUILA_DATA_S438B data_sam5_gtb1;
  {
  FCNCALL_SUBNAME("data_sam5_gtb1");
  { FCNCALL_CALL_CTRL_WRAP(data_sam5_gtb1,data_sam5_gtb1.FCNCALL_CALL(data_sam5_gtb1)); }
  FCNCALL_SUBNAME_END;
  }
  // TACQUILA_DATA_S438B data_sam7_gtb0;
  {
  FCNCALL_SUBNAME("data_sam7_gtb0");
  { FCNCALL_CALL_CTRL_WRAP(data_sam7_gtb0,data_sam7_gtb0.FCNCALL_CALL(data_sam7_gtb0)); }
  FCNCALL_SUBNAME_END;
  }
  // TACQUILA_DATA_S438B data_sam7_gtb1;
  {
  FCNCALL_SUBNAME("data_sam7_gtb1");
  { FCNCALL_CALL_CTRL_WRAP(data_sam7_gtb1,data_sam7_gtb1.FCNCALL_CALL(data_sam7_gtb1)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_neuland_subevent

#ifndef USER_DEF_neuland_tamex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(neuland_tamex_subev)::FCNCALL_NAME(neuland_tamex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // union 
  // {
    // struct 
    // {
      // uint32 ns_after_trigger : 11;
      // uint32 dummy_11_15 : 5;
      // uint32 ns_before_trigger : 11;
      // uint32 dummy_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger_window;
  {
  FCNCALL_SUBNAME("trigger_window");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 ns_after_trigger : 11;
    // uint32 dummy_11_15 : 5;
    // uint32 ns_before_trigger : 11;
    // uint32 dummy_27_31 : 5;
  // } ;
  // uint32 ns_after_trigger : 11;
  {
  FCNCALL_SUBNAME("ns_after_trigger");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.ns_after_trigger,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.ns_after_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_11_15 : 5;
  {
  FCNCALL_SUBNAME("dummy_11_15");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.dummy_11_15,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.dummy_11_15)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ns_before_trigger : 11;
  {
  FCNCALL_SUBNAME("ns_before_trigger");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.ns_before_trigger,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.ns_before_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_27_31 : 5;
  {
  FCNCALL_SUBNAME("dummy_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.dummy_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.dummy_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.u32,FCNCALL_CALL_TYPE(uint32,trigger_window.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX_CHANNEL tamex[13];
  {
  FCNCALL_SUBNAME("tamex");
  FCNCALL_FOR(__i0,13)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tamex__i0,,__i0,tamex[__i0].FCNCALL_CALL(tamex[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_neuland_tamex_subev

#ifndef USER_DEF_psp_febex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(psp_febex_subev)::FCNCALL_NAME(psp_febex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // FEBEX_NOTRACE febex1;
  {
  FCNCALL_SUBNAME("febex1");
  { FCNCALL_CALL_CTRL_WRAP(febex1,febex1.FCNCALL_CALL(febex1)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex3;
  {
  FCNCALL_SUBNAME("febex3");
  { FCNCALL_CALL_CTRL_WRAP(febex3,febex3.FCNCALL_CALL(febex3)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex2;
  {
  FCNCALL_SUBNAME("febex2");
  { FCNCALL_CALL_CTRL_WRAP(febex2,febex2.FCNCALL_CALL(febex2)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex4;
  {
  FCNCALL_SUBNAME("febex4");
  { FCNCALL_CALL_CTRL_WRAP(febex4,febex4.FCNCALL_CALL(febex4)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex5;
  {
  FCNCALL_SUBNAME("febex5");
  { FCNCALL_CALL_CTRL_WRAP(febex5,febex5.FCNCALL_CALL(febex5)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex6;
  {
  FCNCALL_SUBNAME("febex6");
  { FCNCALL_CALL_CTRL_WRAP(febex6,febex6.FCNCALL_CALL(febex6)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex7;
  {
  FCNCALL_SUBNAME("febex7");
  { FCNCALL_CALL_CTRL_WRAP(febex7,febex7.FCNCALL_CALL(febex7)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex8;
  {
  FCNCALL_SUBNAME("febex8");
  { FCNCALL_CALL_CTRL_WRAP(febex8,febex8.FCNCALL_CALL(febex8)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex9;
  {
  FCNCALL_SUBNAME("febex9");
  { FCNCALL_CALL_CTRL_WRAP(febex9,febex9.FCNCALL_CALL(febex9)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex10;
  {
  FCNCALL_SUBNAME("febex10");
  { FCNCALL_CALL_CTRL_WRAP(febex10,febex10.FCNCALL_CALL(febex10)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_EVENTHEADER eh;
  {
  FCNCALL_SUBNAME("eh");
  { FCNCALL_CALL_CTRL_WRAP(eh,eh.FCNCALL_CALL(eh)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_psp_febex_subev

#ifndef USER_DEF_psp_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(psp_subev)::FCNCALL_NAME(psp_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // SIS3316_ACTAR_S438 sis3316_3;
  {
  FCNCALL_SUBNAME("sis3316_3");
  { FCNCALL_CALL_CTRL_WRAP(sis3316_3,sis3316_3.FCNCALL_CALL(sis3316_3)); }
  FCNCALL_SUBNAME_END;
  }
  // SIS3316_ACTAR_S438 sis3316_5;
  {
  FCNCALL_SUBNAME("sis3316_5");
  { FCNCALL_CALL_CTRL_WRAP(sis3316_5,sis3316_5.FCNCALL_CALL(sis3316_5)); }
  FCNCALL_SUBNAME_END;
  }
  // SIS3316_ACTAR_S438 sis3316_4;
  {
  FCNCALL_SUBNAME("sis3316_4");
  { FCNCALL_CALL_CTRL_WRAP(sis3316_4,sis3316_4.FCNCALL_CALL(sis3316_4)); }
  FCNCALL_SUBNAME_END;
  }
  // SIS3316_ACTAR_S438 sis3316_6;
  {
  FCNCALL_SUBNAME("sis3316_6");
  { FCNCALL_CALL_CTRL_WRAP(sis3316_6,sis3316_6.FCNCALL_CALL(sis3316_6)); }
  FCNCALL_SUBNAME_END;
  }
  // SIS3316_ACTAR_S438 sis3316_7;
  {
  FCNCALL_SUBNAME("sis3316_7");
  { FCNCALL_CALL_CTRL_WRAP(sis3316_7,sis3316_7.FCNCALL_CALL(sis3316_7)); }
  FCNCALL_SUBNAME_END;
  }
  // SIS3316_ACTAR_S438 sis3316_8;
  {
  FCNCALL_SUBNAME("sis3316_8");
  { FCNCALL_CALL_CTRL_WRAP(sis3316_8,sis3316_8.FCNCALL_CALL(sis3316_8)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  // TRIDI tridi_ts;
  {
  FCNCALL_SUBNAME("tridi_ts");
  { FCNCALL_CALL_CTRL_WRAP(tridi_ts,tridi_ts.FCNCALL_CALL(tridi_ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_psp_subev

#ifndef USER_DEF_sit_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(sit_subev)::FCNCALL_NAME(sit_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // DUMMY_WORD dummy;
  {
  FCNCALL_SUBNAME("dummy");
  { FCNCALL_CALL_CTRL_WRAP(dummy,dummy.FCNCALL_CALL(dummy)); }
  FCNCALL_SUBNAME_END;
  }
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_sit_subev

#ifndef USER_DEF_tof13_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(tof13_subev)::FCNCALL_NAME(tof13_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // VME_GSI_VFTX2 vftx2_1;
  {
  FCNCALL_SUBNAME("vftx2_1");
  { FCNCALL_CALL_CTRL_WRAP(vftx2_1,vftx2_1.FCNCALL_CALL(vftx2_1)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_GSI_VFTX2 vftx2_2;
  {
  FCNCALL_SUBNAME("vftx2_2");
  { FCNCALL_CALL_CTRL_WRAP(vftx2_2,vftx2_2.FCNCALL_CALL(vftx2_2)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_GSI_VFTX2 vftx2_3;
  {
  FCNCALL_SUBNAME("vftx2_3");
  { FCNCALL_CALL_CTRL_WRAP(vftx2_3,vftx2_3.FCNCALL_CALL(vftx2_3)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_GSI_VFTX2 vftx2_4;
  {
  FCNCALL_SUBNAME("vftx2_4");
  { FCNCALL_CALL_CTRL_WRAP(vftx2_4,vftx2_4.FCNCALL_CALL(vftx2_4)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_S438 v1290_1;
  {
  FCNCALL_SUBNAME("v1290_1");
  { FCNCALL_CALL_CTRL_WRAP(v1290_1,v1290_1.FCNCALL_CALL(v1290_1)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_tof13_subev

#ifndef USER_DEF_tof13_tamex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(tof13_tamex_subev)::FCNCALL_NAME(tof13_tamex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // union 
  // {
    // struct 
    // {
      // uint32 ns_after_trigger : 11;
      // uint32 dummy_11_15 : 5;
      // uint32 ns_before_trigger : 11;
      // uint32 dummy_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger_window;
  {
  FCNCALL_SUBNAME("trigger_window");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 ns_after_trigger : 11;
    // uint32 dummy_11_15 : 5;
    // uint32 ns_before_trigger : 11;
    // uint32 dummy_27_31 : 5;
  // } ;
  // uint32 ns_after_trigger : 11;
  {
  FCNCALL_SUBNAME("ns_after_trigger");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.ns_after_trigger,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.ns_after_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_11_15 : 5;
  {
  FCNCALL_SUBNAME("dummy_11_15");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.dummy_11_15,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.dummy_11_15)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ns_before_trigger : 11;
  {
  FCNCALL_SUBNAME("ns_before_trigger");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.ns_before_trigger,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.ns_before_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_27_31 : 5;
  {
  FCNCALL_SUBNAME("dummy_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.dummy_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.dummy_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.u32,FCNCALL_CALL_TYPE(uint32,trigger_window.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX_CHANNEL tamex[2];
  {
  FCNCALL_SUBNAME("tamex");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tamex__i0,,__i0,tamex[__i0].FCNCALL_CALL(tamex[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_tof13_tamex_subev

#ifndef USER_DEF_wr_100
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(wr_100)::FCNCALL_NAME(wr_100)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts100;
  {
  FCNCALL_SUBNAME("ts100");
  { FCNCALL_CALL_CTRL_WRAP(ts100,ts100.FCNCALL_CALL(ts100)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_wr_100

#ifndef USER_DEF_wr_300
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(wr_300)::FCNCALL_NAME(wr_300)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts300;
  {
  FCNCALL_SUBNAME("ts300");
  { FCNCALL_CALL_CTRL_WRAP(ts300,ts300.FCNCALL_CALL(ts300)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_wr_300

#ifndef USER_DEF_wr_500
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(wr_500)::FCNCALL_NAME(wr_500)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts500;
  {
  FCNCALL_SUBNAME("ts500");
  { FCNCALL_CALL_CTRL_WRAP(ts500,ts500.FCNCALL_CALL(ts500)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_wr_500

#ifndef USER_DEF_unpack_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_event)::FCNCALL_NAME(unpack_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_event_base,FCNCALL_CLASS_NAME(unpack_event_base)::FCNCALL_CALL_BASE());
  // LAND_CAMAC_SCALER scalers;
  {
  FCNCALL_SUBNAME("scalers");
  { FCNCALL_CALL_CTRL_WRAP(scalers,scalers.FCNCALL_CALL(scalers)); }
  FCNCALL_SUBNAME_END;
  }
  // wr_100 master_ts;
  {
  FCNCALL_SUBNAME("master_ts");
  { FCNCALL_CALL_CTRL_WRAP(master_ts,master_ts.FCNCALL_CALL(master_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // daq_status_subev daq_status;
  {
  FCNCALL_SUBNAME("daq_status");
  { FCNCALL_CALL_CTRL_WRAP(daq_status,daq_status.FCNCALL_CALL(daq_status)); }
  FCNCALL_SUBNAME_END;
  }
  // mark_event_time event_time;
  {
  FCNCALL_SUBNAME("event_time");
  { FCNCALL_CALL_CTRL_WRAP(event_time,event_time.FCNCALL_CALL(event_time)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_CAMAC_CONVERTER tpat_and_co;
  {
  FCNCALL_SUBNAME("tpat_and_co");
  { FCNCALL_CALL_CTRL_WRAP(tpat_and_co,tpat_and_co.FCNCALL_CALL(tpat_and_co)); }
  FCNCALL_SUBNAME_END;
  }
  // neuland_subevent neuland_tacq;
  {
  FCNCALL_SUBNAME("neuland_tacq");
  { FCNCALL_CALL_CTRL_WRAP(neuland_tacq,neuland_tacq.FCNCALL_CALL(neuland_tacq)); }
  FCNCALL_SUBNAME_END;
  }
  // los_psp_subev los_psp;
  {
  FCNCALL_SUBNAME("los_psp");
  { FCNCALL_CALL_CTRL_WRAP(los_psp,los_psp.FCNCALL_CALL(los_psp)); }
  FCNCALL_SUBNAME_END;
  }
  // los_scaler_subev los_scaler;
  {
  FCNCALL_SUBNAME("los_scaler");
  { FCNCALL_CALL_CTRL_WRAP(los_scaler,los_scaler.FCNCALL_CALL(los_scaler)); }
  FCNCALL_SUBNAME_END;
  }
  // tof13_subev tof13;
  {
  FCNCALL_SUBNAME("tof13");
  { FCNCALL_CALL_CTRL_WRAP(tof13,tof13.FCNCALL_CALL(tof13)); }
  FCNCALL_SUBNAME_END;
  }
  // wr_500 psp_ts;
  {
  FCNCALL_SUBNAME("psp_ts");
  { FCNCALL_CALL_CTRL_WRAP(psp_ts,psp_ts.FCNCALL_CALL(psp_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // sit_subev sit;
  {
  FCNCALL_SUBNAME("sit");
  { FCNCALL_CALL_CTRL_WRAP(sit,sit.FCNCALL_CALL(sit)); }
  FCNCALL_SUBNAME_END;
  }
  // wr_300 tbm_ts;
  {
  FCNCALL_SUBNAME("tbm_ts");
  { FCNCALL_CALL_CTRL_WRAP(tbm_ts,tbm_ts.FCNCALL_CALL(tbm_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // fiber_subev fiber;
  {
  FCNCALL_SUBNAME("fiber");
  { FCNCALL_CALL_CTRL_WRAP(fiber,fiber.FCNCALL_CALL(fiber)); }
  FCNCALL_SUBNAME_END;
  }
  // psp_febex_subev psp_febex;
  {
  FCNCALL_SUBNAME("psp_febex");
  { FCNCALL_CALL_CTRL_WRAP(psp_febex,psp_febex.FCNCALL_CALL(psp_febex)); }
  FCNCALL_SUBNAME_END;
  }
  // neuland_tamex_subev neuland_tamex;
  {
  FCNCALL_SUBNAME("neuland_tamex");
  { FCNCALL_CALL_CTRL_WRAP(neuland_tamex,neuland_tamex.FCNCALL_CALL(neuland_tamex)); }
  FCNCALL_SUBNAME_END;
  }
  // tof13_tamex_subev tof13_tamex;
  {
  FCNCALL_SUBNAME("tof13_tamex");
  { FCNCALL_CALL_CTRL_WRAP(tof13_tamex,tof13_tamex.FCNCALL_CALL(tof13_tamex)); }
  FCNCALL_SUBNAME_END;
  }
  // mfi_subev mfi;
  {
  FCNCALL_SUBNAME("mfi");
  { FCNCALL_CALL_CTRL_WRAP(mfi,mfi.FCNCALL_CALL(mfi)); }
  FCNCALL_SUBNAME_END;
  }
  // califa_subev califa;
  {
  FCNCALL_SUBNAME("califa");
  { FCNCALL_CALL_CTRL_WRAP(califa,califa.FCNCALL_CALL(califa)); }
  FCNCALL_SUBNAME_END;
  }
  // psp_subev psp_struck;
  {
  FCNCALL_SUBNAME("psp_struck");
  { FCNCALL_CALL_CTRL_WRAP(psp_struck,psp_struck.FCNCALL_CALL(psp_struck)); }
  FCNCALL_SUBNAME_END;
  }
  // empty_subev empty_1;
  {
  FCNCALL_SUBNAME("empty_1");
  { FCNCALL_CALL_CTRL_WRAP(empty_1,empty_1.FCNCALL_CALL(empty_1)); }
  FCNCALL_SUBNAME_END;
  }
  // empty_subev empty_2;
  {
  FCNCALL_SUBNAME("empty_2");
  { FCNCALL_CALL_CTRL_WRAP(empty_2,empty_2.FCNCALL_CALL(empty_2)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_sticky_event)::FCNCALL_NAME(unpack_sticky_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_sticky_event_base,FCNCALL_CLASS_NAME(unpack_sticky_event_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: CAMAC_LECROY_4434
// raw_array_zero_suppress  .data(DATA24)[32]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_LECROY_4434
// .CAMAC_LECROY_4434// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_LECROY_4434
// .CAMAC_LECROY_4434// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_LECROY_4434
// .CAMAC_LECROY_4434
// Corr struct for: CAMAC_PHILLIPS_7164
// raw_array_zero_suppress  .data(DATA12)[16]
// DATA12 .data[16]
// 
// size= 1  chunks= 16  mem=  16  line=32  total=512
// size=16  chunks=  1  mem=  16  line=17  total=272
// 
// corr structure: CAMAC_PHILLIPS_7164
  // DATA12 .data[16]
// .CAMAC_PHILLIPS_7164/16/.data/16/[16]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_PHILLIPS_7164
// .CAMAC_PHILLIPS_7164// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_PHILLIPS_7164
// .CAMAC_PHILLIPS_7164
// Corr struct for: CAMAC_SILENA_4418
// raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// DATA12_OVERFLOW .data[8]
// 
// size= 1  chunks=  8  mem=   8  line=16  total=128
// size= 8  chunks=  1  mem=   8  line=9  total=72
// 
// corr structure: CAMAC_SILENA_4418
  // DATA12_OVERFLOW .data[8]
// .CAMAC_SILENA_4418/8/.data/8/[8]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_SILENA_4418
// .CAMAC_SILENA_4418// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_SILENA_4418
// .CAMAC_SILENA_4418
// Corr struct for: DAQ_STATUS
// uint32  .spill_nr
  // ---
// uint32  .trigger
  // ---
// uint32  .time
  // ---
// raw_array_zero_suppress  .scaler(DATA32)[48]
  // ---
// raw_array_zero_suppress  .trig_count(DATA32)[16]
  // ---
// uint32  .events
  // ---
// uint32  .errors
  // ---
// uint32  .errors_data_corrupt
  // ---
// uint32  .errors_data_missing
  // ---
// uint32  .errors_data_too_much
  // ---
// uint32  .errors_event_counter_mismatch
  // ---
// uint32  .errors_event_counter_incr_mismatch
  // ---
// uint32  .errors_trigger_mismatch
  // ---
// uint32  .ticks_count
  // ---
// uint32  .ticks_deadtime
  // ---
// raw_array_zero_suppress  .ticks_dt_trig(DATA32)[16]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DAQ_STATUS
// .DAQ_STATUS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DAQ_STATUS
// .DAQ_STATUS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DAQ_STATUS
// .DAQ_STATUS
// Corr struct for: DUMMY_WORD
// uint32  .dummy_word
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY_WORD
// .DUMMY_WORD// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY_WORD
// .DUMMY_WORD// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY_WORD
// .DUMMY_WORD
// Corr struct for: FASTBUS_LECROY_1875
// raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// DATA12_RANGE .data[64]
// 
// size= 1  chunks= 64  mem=  64  line=128  total=8192
// size=64  chunks=  1  mem=  64  line=65  total=4160
// 
// corr structure: FASTBUS_LECROY_1875
  // DATA12_RANGE .data[64]
// .FASTBUS_LECROY_1875/64/.data/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1875
// .FASTBUS_LECROY_1875// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1875
// .FASTBUS_LECROY_1875
// Corr struct for: FASTBUS_LECROY_1885
// raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// DATA12_RANGE .data[96]
// 
// size= 1  chunks= 96  mem=  96  line=192  total=18432
// size=96  chunks=  1  mem=  96  line=97  total=9312
// 
// corr structure: FASTBUS_LECROY_1885
  // DATA12_RANGE .data[96]
// .FASTBUS_LECROY_1885/96/.data/96/[96]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1885
// .FASTBUS_LECROY_1885// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1885
// .FASTBUS_LECROY_1885
// Corr struct for: FEBEX_EVENTHEADER
// uint32  .N_febex1
  // ---
// uint32  .N_febex2
  // ---
// uint32  .N_febex3
  // ---
// uint32  .N_febex4
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENTHEADER
// .FEBEX_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENTHEADER
// .FEBEX_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENTHEADER
// .FEBEX_EVENTHEADER
// Corr struct for: FEBEX_NOTRACE
// raw_array  .Nhit(DATA8)[16]
  // ---
// raw_array_multi_zero_suppress  .t(DATA12)[16][10]
// raw_array_multi_zero_suppress  .E(DATA32)[16][10]
  // ---
// DATA12 .t[16][10]
// 
// size= 1  chunks=160  mem= 160  line=320  total=51200
// size=10  chunks= 16  mem= 160  line=176  total=28160
// size=160  chunks=  1  mem= 160  line=161  total=25760
// 
// corr structure: FEBEX_NOTRACE
  // DATA12 .t[16][10]
// .FEBEX_NOTRACE/160/.t/160/[16]/10/[10]// 
// size= 1  chunks=160  mem= 160  line=320  total=51200
// size=10  chunks= 16  mem= 160  line=176  total=28160
// size=160  chunks=  1  mem= 160  line=161  total=25760
// 
// corr structure: FEBEX_NOTRACE
  // DATA12 .t[16][10]
// .FEBEX_NOTRACE/160/.t/160/[16]/10/[10]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_NOTRACE
// .FEBEX_NOTRACE
// Corr struct for: FEBEX_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING
// Corr struct for: LAND_STD_VME
// uint32  .fail_general
  // ---
// uint32  .fail_data_corrupt
  // ---
// uint32  .fail_data_missing
  // ---
// uint32  .fail_data_too_much
  // ---
// uint32  .fail_event_counter_mismatch
  // ---
// uint32  .fail_readout_error_driver
  // ---
// uint32  .fail_unexpected_trigger
  // ---
// uint32  .fail_firmware_mismatch
  // ---
// uint32  .dummy_8_21
  // ---
// uint32  .has_multi_trlo_ii_counter0
  // ---
// uint32  .has_clock_counter_stamp
  // ---
// uint32  .has_continous_event_counter
  // ---
// uint32  .has_update_qdc_iped_value
  // ---
// uint32  .spurious_start_before_tcal
  // ---
// uint32  .has_no_zero_suppression
  // ---
// uint32  .has_multi_adctdc_counter0
  // ---
// uint32  .has_multi_scaler_counter0
  // ---
// uint32  .has_multi_event
  // ---
// uint32  .has_time_stamp
  // ---
// uint32  .u32
  // ---
// uint32  .continous_event_counter
  // ---
// uint32  .time_stamp
  // ---
// uint32  .clock_counter_stamp
  // ---
// uint32  .iped
  // ---
// uint32  .multi_events
  // ---
// uint32  .multi_trlo_ii_counter0
  // ---
// uint32  .multi_scaler_counter0
  // ---
// uint32  .multi_adctdc_counter0
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME
// Corr struct for: NTP64_TIME
// uint32  .sec
  // ---
// uint32  .frac
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NTP64_TIME
// .NTP64_TIME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NTP64_TIME
// .NTP64_TIME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NTP64_TIME
// .NTP64_TIME
// Corr struct for: NTP_MESSAGE
// uint32  .word_count
  // ---
// uint32  .quick_burst
  // ---
// uint32  .dummy_17_23
  // ---
// uint32  .id
  // ---
// uint32  .u32
  // ---
// uint32  .server_id
  // ---
// uint32  .precision
  // ---
// uint32  .poll
  // ---
// uint32  .stratum
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .mode
  // ---
// uint32  .version
  // ---
// uint32  .leap
  // ---
// uint32  .u32
  // ---
// uint32  .frac
  // ---
// uint32  .sec
  // ---
// uint32  .u32
  // ---
// uint32  .frac
  // ---
// uint32  .sec
  // ---
// uint32  .u32
  // ---
// uint32  .refid
  // ---
// NTP64_TIME  .orig2time
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// NTP64_TIME  .tmit2time
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// NTP64_TIME  .rec2time
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// NTP64_TIME  .rx2time
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// NTP64_TIME  .reftime
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// NTP64_TIME  .origtime
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// NTP64_TIME  .rectime
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// NTP64_TIME  .tmittime
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// NTP64_TIME  .rxtime
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NTP_MESSAGE
// .NTP_MESSAGE// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NTP_MESSAGE
// .NTP_MESSAGE// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NTP_MESSAGE
// .NTP_MESSAGE
// Corr struct for: NXYTER
// DATA8  .gemex
  // ---
// DATA8  .nxyter
  // ---
// DATA8  .err
  // ---
// DATA16  .trigger_counter_head
// DATA16  .trigger_counter_foot
// DATA16  .ts_epoch_trigger
// raw_list_ii_zero_suppress  .channel(DATA12)[10000]
// raw_list_ii_zero_suppress  .adc(DATA12)[10000]
// raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
// raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// DATA16 .trigger_counter_head
// DATA16 .trigger_counter_foot
// DATA16 .ts_epoch_trigger
// DATA12 .channel[10000]
// DATA12 .adc[10000]
// DATA16 .ts_epoch_hit[10000]
// DATA16 .ts_nxy[10000]
// 
// size= 1  chunks=40003  mem=40003  line=80006  total=-1094487278
// size=10000  chunks=  7  mem=70000  line=70007  total=-1494477275
// size=40003  chunks=  1  mem=40003  line=40004  total=1600280012
// 
// corr structure: NXYTER
  // DATA16 .trigger_counter_head
  // DATA16 .trigger_counter_foot
  // DATA16 .ts_epoch_trigger
  // DATA12 .channel[10000]
  // DATA12 .adc[10000]
  // DATA16 .ts_epoch_hit[10000]
  // DATA16 .ts_nxy[10000]
// .NXYTER/40003/.trigger_counter_head
              // .trigger_counter_foot
              // .ts_epoch_trigger
              // .channel/10000/[10000]
              // .adc/10000/[10000]
              // .ts_epoch_hit/10000/[10000]
              // .ts_nxy/10000/[10000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NXYTER
// .NXYTER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NXYTER
// .NXYTER
// Corr struct for: NXYTER_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NXYTER_PADDING
// .NXYTER_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NXYTER_PADDING
// .NXYTER_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: NXYTER_PADDING
// .NXYTER_PADDING
// Corr struct for: RANDOM_TCAL_TSTAMP_CLOCK
// uint32  .soft_latches
  // ---
// uint32  .hard_latches
  // ---
// uint32  .clock_ticks
  // ---
// NTP64_TIME  .before
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// NTP64_TIME  .after
  // uint32  .sec
    // ---
  // uint32  .frac
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: RANDOM_TCAL_TSTAMP_CLOCK
// .RANDOM_TCAL_TSTAMP_CLOCK// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: RANDOM_TCAL_TSTAMP_CLOCK
// .RANDOM_TCAL_TSTAMP_CLOCK// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: RANDOM_TCAL_TSTAMP_CLOCK
// .RANDOM_TCAL_TSTAMP_CLOCK
// Corr struct for: RANDOM_TCAL
// uint32  .word_count
  // ---
// uint32  .pulses
  // ---
// uint32  .clock_bits
  // ---
// uint32  .has_tstamp1
  // ---
// uint32  .has_tstamp2
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .id
  // ---
// uint32  .u32
  // ---
// RANDOM_TCAL_TSTAMP_CLOCK  .tstamp1
  // uint32  .soft_latches
    // ---
  // uint32  .hard_latches
    // ---
  // uint32  .clock_ticks
    // ---
  // NTP64_TIME  .before
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .after
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
// RANDOM_TCAL_TSTAMP_CLOCK  .tstamp2
  // uint32  .soft_latches
    // ---
  // uint32  .hard_latches
    // ---
  // uint32  .clock_ticks
    // ---
  // NTP64_TIME  .before
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .after
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: RANDOM_TCAL
// .RANDOM_TCAL// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: RANDOM_TCAL
// .RANDOM_TCAL// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: RANDOM_TCAL
// .RANDOM_TCAL
// Corr struct for: SIS3316_ACTAR_S438
// raw_array  .channel_header(DATA32)[128]
  // ---
// raw_array_zero_suppress  .trace(DATA16)[40000]
// uint32  .id
  // ---
// uint32  .channel_num
  // ---
// uint32  .unnamed_16_31
  // ---
// uint32  .u32
  // ---
// uint32  .sampleLength
  // ---
// uint32  .unnamed_26_26
  // ---
// uint32  .mawFlag
  // ---
// uint32  .unnamed_28_31
  // ---
// uint32  .u32
  // ---
// DATA16 .trace[40000]
// 
// size= 1  chunks=40000  mem=40000  line=80000  total=-1094967296
// size=40000  chunks=  1  mem=40000  line=40001  total=1600040000
// 
// corr structure: SIS3316_ACTAR_S438
  // DATA16 .trace[40000]
// .SIS3316_ACTAR_S438/40000/.trace/40000/[40000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_ACTAR_S438
// .SIS3316_ACTAR_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_ACTAR_S438
// .SIS3316_ACTAR_S438
// Corr struct for: SIS3316_PSP_S438
// raw_array  .channel_header(DATA32)[128]
  // ---
// raw_array_zero_suppress  .trace(DATA16)[16000]
// uint32  .id
  // ---
// uint32  .channel_num
  // ---
// uint32  .unnamed_16_31
  // ---
// uint32  .u32
  // ---
// uint32  .sampleLength
  // ---
// uint32  .unnamed_26_26
  // ---
// uint32  .mawFlag
  // ---
// uint32  .unnamed_28_31
  // ---
// uint32  .u32
  // ---
// DATA16 .trace[16000]
// 
// size= 1  chunks=16000  mem=16000  line=32000  total=512000000
// size=16000  chunks=  1  mem=16000  line=16001  total=256016000
// 
// corr structure: SIS3316_PSP_S438
  // DATA16 .trace[16000]
// .SIS3316_PSP_S438/16000/.trace/16000/[16000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_PSP_S438
// .SIS3316_PSP_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_PSP_S438
// .SIS3316_PSP_S438
// Corr struct for: SIS3316_S2_S438
// raw_array  .channel_header(DATA32)[128]
  // ---
// raw_array_zero_suppress  .trace(DATA16)[800]
// uint32  .id
  // ---
// uint32  .channel_num
  // ---
// uint32  .unnamed_16_31
  // ---
// uint32  .u32
  // ---
// uint32  .sampleLength
  // ---
// uint32  .unnamed_26_26
  // ---
// uint32  .mawFlag
  // ---
// uint32  .unnamed_28_31
  // ---
// uint32  .u32
  // ---
// DATA16 .trace[800]
// 
// size= 1  chunks=800  mem= 800  line=1600  total=1280000
// size=800  chunks=  1  mem= 800  line=801  total=640800
// 
// corr structure: SIS3316_S2_S438
  // DATA16 .trace[800]
// .SIS3316_S2_S438/800/.trace/800/[800]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_S2_S438
// .SIS3316_S2_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_S2_S438
// .SIS3316_S2_S438
// Corr struct for: SIS3316_S2_SCALERS_S438
// raw_array  .scalers(DATA32)[192]
  // ---
// uint32  .unnamed_0_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_S2_SCALERS_S438
// .SIS3316_S2_SCALERS_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_S2_SCALERS_S438
// .SIS3316_S2_SCALERS_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_S2_SCALERS_S438
// .SIS3316_S2_SCALERS_S438
// Corr struct for: SIS3316_SCALERS_S438
// raw_array  .scalers(DATA32)[480]
  // ---
// uint32  .unnamed_0_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_SCALERS_S438
// .SIS3316_SCALERS_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_SCALERS_S438
// .SIS3316_SCALERS_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SIS3316_SCALERS_S438
// .SIS3316_SCALERS_S438
// Corr struct for: SOFT_SCALER32
// raw_array_zero_suppress  .data(DATA32)[32]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SOFT_SCALER32
// .SOFT_SCALER32// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SOFT_SCALER32
// .SOFT_SCALER32// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SOFT_SCALER32
// .SOFT_SCALER32
// Corr struct for: TACQUILA_DATA
// raw_array_zero_suppress  .tac[30](DATA12)[17]
// raw_array_zero_suppress  .adc[30](DATA12)[17]
// raw_array_zero_suppress  .clk[30](DATA12)[17]
// uint32  .count
  // ---
// uint32  .dummy1
  // ---
// uint32  .trigger_tac
  // ---
// uint32  .trigger_sam
  // ---
// uint32  .lec
  // ---
// uint32  .gtb
  // ---
// uint32  .sam
  // ---
// uint32  .u32
  // ---
// DATA12 .tac[30][17]
// DATA12 .adc[30][17]
// DATA12 .clk[30][17]
// 
// size= 1  chunks=1530  mem=1530  line=3060  total=4681800
// size=17  chunks= 90  mem=1530  line=1620  total=2478600
// size=510  chunks=  3  mem=1530  line=1533  total=2345490
// size=1530  chunks=  1  mem=1530  line=1531  total=2342430
// 
// corr structure: TACQUILA_DATA
  // DATA12 .tac[30][17]
  // DATA12 .adc[30][17]
  // DATA12 .clk[30][17]
// .TACQUILA_DATA/1530/.tac/510/[30]/17/[17]
                    // .adc/510/[30]/17/[17]
                    // .clk/510/[30]/17/[17]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TACQUILA_DATA
// .TACQUILA_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TACQUILA_DATA
// .TACQUILA_DATA
// Corr struct for: TACQUILA_DATA_S438B
// raw_array_zero_suppress  .tac[30](DATA12)[32]
// raw_array_zero_suppress  .adc[30](DATA12)[17]
// raw_array_zero_suppress  .clk[30](DATA12)[17]
// uint32  .count
  // ---
// uint32  .dummy1
  // ---
// uint32  .trigger_tac
  // ---
// uint32  .trigger_sam
  // ---
// uint32  .lec
  // ---
// uint32  .gtb
  // ---
// uint32  .sam
  // ---
// uint32  .u32
  // ---
// DATA12 .tac[30][32]
// DATA12 .adc[30][17]
// DATA12 .clk[30][17]
// 
// size= 1  chunks=1980  mem=1980  line=3960  total=7840800
// size=17  chunks=1020  mem=17340  line=18360  total=36352800
// size=32  chunks= 90  mem=2880  line=2970  total=5880600
// size=510  chunks= 32  mem=16320  line=16352  total=32376960
// size=960  chunks=  3  mem=2880  line=2883  total=5708340
// size=1980  chunks=  1  mem=1980  line=1981  total=3922380
// 
// corr structure: TACQUILA_DATA_S438B
  // DATA12 .tac[30][32]
  // DATA12 .adc[30][17]
  // DATA12 .clk[30][17]
// .TACQUILA_DATA_S438B/1980/.tac/960/[30]/32/[32]
                          // .adc/510/[30]/17/[17]
                          // .clk/510/[30]/17/[17]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TACQUILA_DATA_S438B
// .TACQUILA_DATA_S438B// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TACQUILA_DATA_S438B
// .TACQUILA_DATA_S438B
// Corr struct for: TAMEX_CHANNEL
// raw_array_zero_suppress  .type(DATA32)[128]
  // ---
// raw_array_zero_suppress  .tdc(DATA32)[128]
  // ---
// uint32  .unnamed_0_7
  // ---
// uint32  .trigger_type
  // ---
// uint32  .sfp_index
  // ---
// uint32  .card_index
  // ---
// uint32  .channel_index
  // ---
// uint32  .u32
  // ---
// uint32  .data_size
  // ---
// uint32  .yanana_phone
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .wanana_phone
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX_CHANNEL
// .TAMEX_CHANNEL// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX_CHANNEL
// .TAMEX_CHANNEL// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX_CHANNEL
// .TAMEX_CHANNEL
// Corr struct for: TIMESTAMP_WHITERABBIT
// DATA12  .subsystem_id
// DATA16  .t1
// DATA16  .t2
// DATA16  .t3
// DATA16  .t4
// DATA12 .subsystem_id
// DATA16 .t1
// DATA16 .t2
// DATA16 .t3
// DATA16 .t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: TIMESTAMP_WHITERABBIT
  // DATA12 .subsystem_id
  // DATA16 .t1
  // DATA16 .t2
  // DATA16 .t3
  // DATA16 .t4
// .TIMESTAMP_WHITERABBIT/5/.subsystem_id
                         // .t1
                         // .t2
                         // .t3
                         // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT
// Corr struct for: TRIDI
// uint32  .tpat
  // ---
// uint32  .unnamed_16_31
  // ---
// uint32  .u32
  // ---
// uint32  .ts_msb
  // ---
// uint32  .ts_lsb
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRIDI
// .TRIDI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRIDI
// .TRIDI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRIDI
// .TRIDI
// Corr struct for: TRLO_SAMPLER
// raw_list_ii_zero_suppress  .stamps(DATA32)[512]
  // ---
// uint32  .count
  // ---
// uint32  .dummy_10_23
  // ---
// uint32  .id
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLO_SAMPLER
// .TRLO_SAMPLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLO_SAMPLER
// .TRLO_SAMPLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLO_SAMPLER
// .TRLO_SAMPLER
// Corr struct for: TRLO_SCALER
// raw_list_ii_zero_suppress  .stamps(DATA32)[16]
  // ---
// uint32  .crate_id
  // ---
// uint32  .unnamed_8_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLO_SCALER
// .TRLO_SCALER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLO_SCALER
// .TRLO_SCALER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLO_SCALER
// .TRLO_SCALER
// Corr struct for: VME_CAEN_V1190_SUBTDC
// uint32  .bunch_id
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .word_count
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SUBTDC
// .VME_CAEN_V1190_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SUBTDC
// .VME_CAEN_V1190_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SUBTDC
// .VME_CAEN_V1190_SUBTDC
// Corr struct for: VME_CAEN_V1190
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1190_SUBTDC  .tdc[4]
  // uint32  .bunch_id
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .word_count
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190
// .VME_CAEN_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190
// .VME_CAEN_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190
// .VME_CAEN_V1190
// Corr struct for: VME_CAEN_V1190_S438_SUBTDC
// uint32  .bunch_id
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .word_count
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SUBTDC
// .VME_CAEN_V1190_S438_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SUBTDC
// .VME_CAEN_V1190_S438_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SUBTDC
// .VME_CAEN_V1190_S438_SUBTDC
// Corr struct for: VME_CAEN_V1190_S438
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .dummy_5_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .dummy_0_4
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1190_S438_SUBTDC  .tdc[4]
  // uint32  .bunch_id
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .word_count
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .dummy_0_4
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438
// .VME_CAEN_V1190_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438
// .VME_CAEN_V1190_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438
// .VME_CAEN_V1190_S438
// Corr struct for: VME_CAEN_V1190_S438_SHORT_SUBTDC
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SHORT_SUBTDC
// .VME_CAEN_V1190_S438_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SHORT_SUBTDC
// .VME_CAEN_V1190_S438_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SHORT_SUBTDC
// .VME_CAEN_V1190_S438_SHORT_SUBTDC
// Corr struct for: VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR
// Corr struct for: VME_CAEN_V1190_S438_SHORT
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1190_S438_SHORT_SUBTDC  .tdc[4]
// VME_CAEN_V1190_S438_SHORT_SUBTDC_ERROR  .err[4]
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SHORT
// .VME_CAEN_V1190_S438_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SHORT
// .VME_CAEN_V1190_S438_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_S438_SHORT
// .VME_CAEN_V1190_S438_SHORT
// Corr struct for: VME_CAEN_V1190_SHORT_SUBTDC
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC
// .VME_CAEN_V1190_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC
// .VME_CAEN_V1190_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC
// .VME_CAEN_V1190_SHORT_SUBTDC
// Corr struct for: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// Corr struct for: VME_CAEN_V1190_SHORT
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1190_SHORT_SUBTDC  .tdc[4]
// VME_CAEN_V1190_SHORT_SUBTDC_ERROR  .err[4]
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT
// .VME_CAEN_V1190_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT
// .VME_CAEN_V1190_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT
// .VME_CAEN_V1190_SHORT
// Corr struct for: VME_CAEN_V1290_SUBTDC
// uint32  .bunch_id
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .word_count
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SUBTDC
// .VME_CAEN_V1290_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SUBTDC
// .VME_CAEN_V1290_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SUBTDC
// .VME_CAEN_V1290_SUBTDC
// Corr struct for: VME_CAEN_V1290
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1290_SUBTDC  .tdc[4]
  // uint32  .bunch_id
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .word_count
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290
// .VME_CAEN_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290
// .VME_CAEN_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290
// .VME_CAEN_V1290
// Corr struct for: VME_CAEN_V1290_S438_SUBTDC
// uint32  .bunch_id
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .word_count
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SUBTDC
// .VME_CAEN_V1290_S438_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SUBTDC
// .VME_CAEN_V1290_S438_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SUBTDC
// .VME_CAEN_V1290_S438_SUBTDC
// Corr struct for: VME_CAEN_V1290_S438
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .dummy_5_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .dummy_0_4
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1290_S438_SUBTDC  .tdc[4]
  // uint32  .bunch_id
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .word_count
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .dummy_0_4
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438
// .VME_CAEN_V1290_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438
// .VME_CAEN_V1290_S438// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438
// .VME_CAEN_V1290_S438
// Corr struct for: VME_CAEN_V1290_S438_SHORT_SUBTDC
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SHORT_SUBTDC
// .VME_CAEN_V1290_S438_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SHORT_SUBTDC
// .VME_CAEN_V1290_S438_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SHORT_SUBTDC
// .VME_CAEN_V1290_S438_SHORT_SUBTDC
// Corr struct for: VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR
// Corr struct for: VME_CAEN_V1290_S438_SHORT
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1290_S438_SHORT_SUBTDC  .tdc[4]
// VME_CAEN_V1290_S438_SHORT_SUBTDC_ERROR  .err[4]
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SHORT
// .VME_CAEN_V1290_S438_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SHORT
// .VME_CAEN_V1290_S438_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_S438_SHORT
// .VME_CAEN_V1290_S438_SHORT
// Corr struct for: VME_CAEN_V1290_SHORT_SUBTDC
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC
// .VME_CAEN_V1290_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC
// .VME_CAEN_V1290_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC
// .VME_CAEN_V1290_SHORT_SUBTDC
// Corr struct for: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// Corr struct for: VME_CAEN_V1290_SHORT
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1290_SHORT_SUBTDC  .tdc[4]
// VME_CAEN_V1290_SHORT_SUBTDC_ERROR  .err[4]
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT
// .VME_CAEN_V1290_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT
// .VME_CAEN_V1290_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT
// .VME_CAEN_V1290_SHORT
// Corr struct for: VME_CAEN_V775
// raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
// uint32  .event_number
  // ---
// uint32  .unnamed_24_26
  // ---
// uint32  .geom
  // ---
// uint32  .u32
  // ---
// DATA12_OVERFLOW .data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: VME_CAEN_V775
  // DATA12_OVERFLOW .data[32]
// .VME_CAEN_V775/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V775
// .VME_CAEN_V775// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V775
// .VME_CAEN_V775
// Corr struct for: VME_CAEN_V830
// raw_array_zero_suppress  .data(DATA32)[32]
  // ---
// uint32  .event_number
  // ---
// uint32  .ts
  // ---
// uint32  .count
  // ---
// uint32  .dummy_24_25
  // ---
// uint32  .unnamed_26_26
  // ---
// uint32  .geom
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830
// Corr struct for: VME_GSI_VFTX2
// raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
// DATA16  .time_trigger
// uint32  .id
  // ---
// uint32  .internal_status
  // ---
// uint32  .count
  // ---
// uint32  .dummy_18_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .unnamed_0_7
  // ---
// uint32  .dummy_8_10
  // ---
// uint32  .trigger_timestamp
  // ---
// uint32  .dummy_24_28
  // ---
// uint32  .unnamed_29_30
  // ---
// uint32  .unnamed_31_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[32][100]
// DATA16 .time_coarse[32][100]
// DATA16 .time_trigger
// 
// size= 1  chunks=6401  mem=6401  line=12802  total=81945602
// size=100  chunks= 65  mem=6500  line=6565  total=42022565
// size=3200  chunks=  3  mem=9600  line=9603  total=61468803
// size=6401  chunks=  1  mem=6401  line=6402  total=40979202
// 
// corr structure: VME_GSI_VFTX2
  // DATA12 .time_fine[32][100]
  // DATA16 .time_coarse[32][100]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2/6401/.time_fine/3200/[32]/100/[100]
                    // .time_coarse/3200/[32]/100/[100]
                    // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2
// .VME_GSI_VFTX2// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2
// .VME_GSI_VFTX2
// Corr struct for: VME_GSI_VFTX2_7PS
// raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
// DATA16  .time_trigger
// uint32  .id
  // ---
// uint32  .internal_status
  // ---
// uint32  .count
  // ---
// uint32  .dummy_18_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[32][100]
// DATA16 .time_coarse[32][100]
// DATA16 .time_trigger
// 
// size= 1  chunks=6401  mem=6401  line=12802  total=81945602
// size=100  chunks= 65  mem=6500  line=6565  total=42022565
// size=3200  chunks=  3  mem=9600  line=9603  total=61468803
// size=6401  chunks=  1  mem=6401  line=6402  total=40979202
// 
// corr structure: VME_GSI_VFTX2_7PS
  // DATA12 .time_fine[32][100]
  // DATA16 .time_coarse[32][100]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2_7PS/6401/.time_fine/3200/[32]/100/[100]
                        // .time_coarse/3200/[32]/100/[100]
                        // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_7PS
// .VME_GSI_VFTX2_7PS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_7PS
// .VME_GSI_VFTX2_7PS
// Corr struct for: VME_GSI_VFTX2_LT
// raw_array_multi_zero_suppress  .time_fine(DATA12)[64][100]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[64][100]
// DATA16  .time_trigger
// uint32  .id
  // ---
// uint32  .internal_status
  // ---
// uint32  .count
  // ---
// uint32  .dummy_18_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .unnamed_0_7
  // ---
// uint32  .dummy_8_10
  // ---
// uint32  .trigger_timestamp
  // ---
// uint32  .dummy_24_28
  // ---
// uint32  .unnamed_29_30
  // ---
// uint32  .unnamed_31_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[64][100]
// DATA16 .time_coarse[64][100]
// DATA16 .time_trigger
// 
// size= 1  chunks=12801  mem=12801  line=25602  total=327731202
// size=100  chunks=129  mem=12900  line=13029  total=166784229
// size=6400  chunks=  3  mem=19200  line=19203  total=245817603
// size=12801  chunks=  1  mem=12801  line=12802  total=163878402
// 
// corr structure: VME_GSI_VFTX2_LT
  // DATA12 .time_fine[64][100]
  // DATA16 .time_coarse[64][100]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2_LT/12801/.time_fine/6400/[64]/100/[100]
                        // .time_coarse/6400/[64]/100/[100]
                        // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_LT
// .VME_GSI_VFTX2_LT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_LT
// .VME_GSI_VFTX2_LT
// Corr struct for: VME_MESYTEC_MADC32
// raw_array_zero_suppress  .data(DATA14_OVERFLOW)[32]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA14_OVERFLOW .data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: VME_MESYTEC_MADC32
  // DATA14_OVERFLOW .data[32]
// .VME_MESYTEC_MADC32/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MADC32
// .VME_MESYTEC_MADC32// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MADC32
// .VME_MESYTEC_MADC32
// Corr struct for: VME_MESYTEC_MDPP16
// raw_array_multi_zero_suppress  .data(DATA16_OVERFLOW)[34][100]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA16_OVERFLOW .data[34][100]
// 
// size= 1  chunks=3400  mem=3400  line=6800  total=23120000
// size=100  chunks= 34  mem=3400  line=3434  total=11675600
// size=3400  chunks=  1  mem=3400  line=3401  total=11563400
// 
// corr structure: VME_MESYTEC_MDPP16
  // DATA16_OVERFLOW .data[34][100]
// .VME_MESYTEC_MDPP16/3400/.data/3400/[34]/100/[100]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MDPP16
// .VME_MESYTEC_MDPP16// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MDPP16
// .VME_MESYTEC_MDPP16
// Corr struct for: VME_STRUCK_SIS3316
// raw_array_zero_suppress  .data[2](DATA16)[900]
// raw_array_zero_suppress  .maw[2](DATA32)[3]
  // ---
// raw_array_zero_suppress  .timeStamp[2](DATA32)[2]
  // ---
// raw_array_zero_suppress  .gate[2](DATA32)[2]
  // ---
// uint32  .chanNo
  // ---
// uint32  .unnamed_16_31
  // ---
// uint32  .u32
  // ---
// uint32  .format
  // ---
// uint32  .channelID
  // ---
// uint32  .timeS
  // ---
// uint32  .u32
  // ---
// uint32  .timeS
  // ---
// uint32  .u32
  // ---
// uint32  .sum
  // ---
// uint32  .unnamed_28_31
  // ---
// uint32  .u32
  // ---
// uint32  .sum
  // ---
// uint32  .unnamed_28_31
  // ---
// uint32  .u32
  // ---
// uint32  .max
  // ---
// uint32  .unnamed_28_31
  // ---
// uint32  .u32
  // ---
// uint32  .after
  // ---
// uint32  .unnamed_28_31
  // ---
// uint32  .u32
  // ---
// uint32  .before
  // ---
// uint32  .unnamed_28_31
  // ---
// uint32  .u32
  // ---
// uint32  .sampleLength
  // ---
// uint32  .unnamed_26_26
  // ---
// uint32  .mawFlag
  // ---
// uint32  .unnamed_28_31
  // ---
// uint32  .u32
  // ---
// DATA16 .data[2][900]
// 
// size= 1  chunks=1800  mem=1800  line=3600  total=6480000
// size=900  chunks=  2  mem=1800  line=1802  total=3243600
// size=1800  chunks=  1  mem=1800  line=1801  total=3241800
// 
// corr structure: VME_STRUCK_SIS3316
  // DATA16 .data[2][900]
// .VME_STRUCK_SIS3316/1800/.data/1800/[2]/900/[900]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_STRUCK_SIS3316
// .VME_STRUCK_SIS3316// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_STRUCK_SIS3316
// .VME_STRUCK_SIS3316
// Corr struct for: WR_MULTI
// DATA32  .time_hi
  // ---
// DATA32  .time_lo
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI
// Corr struct for: LAND_CAMAC_CONVERTER
//  : public unpack_subevent_base
// ---
// uint16  .tpat
  // ---
// uint16  .tprev
  // ---
// uint16  .tnext
  // ---
// uint16  .tprev2
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_CONVERTER
// .LAND_CAMAC_CONVERTER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_CONVERTER
// .LAND_CAMAC_CONVERTER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_CONVERTER
// .LAND_CAMAC_CONVERTER
// Corr struct for: LAND_CAMAC_SCALER
//  : public unpack_subevent_base
// ---
// uint32  .timestamp
  // ---
// uint32  .unnamed_0_31
  // ---
// uint32  .u32
  // ---
// CAMAC_LECROY_4434  .scaler0
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// CAMAC_LECROY_4434  .scaler2
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// CAMAC_LECROY_4434  .scaler1
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// SOFT_SCALER32  .scaler3
  // raw_array_zero_suppress  .data(DATA32)[32]
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_SCALER
// .LAND_CAMAC_SCALER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_SCALER
// .LAND_CAMAC_SCALER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_SCALER
// .LAND_CAMAC_SCALER
// Corr struct for: LAND_CAMAC_START_STOP_STAMP
//  : public unpack_subevent_base
// ---
// uint32  .timestamp
  // ---
// uint32  .unnamed_0_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_START_STOP_STAMP
// .LAND_CAMAC_START_STOP_STAMP// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_START_STOP_STAMP
// .LAND_CAMAC_START_STOP_STAMP// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_START_STOP_STAMP
// .LAND_CAMAC_START_STOP_STAMP
// Corr struct for: LAND_CAMAC_TCAL_INFO
//  : public unpack_subevent_base
// ---
// uint32  .info
  // ---
// RANDOM_TCAL  .rtcal
  // uint32  .word_count
    // ---
  // uint32  .pulses
    // ---
  // uint32  .clock_bits
    // ---
  // uint32  .has_tstamp1
    // ---
  // uint32  .has_tstamp2
    // ---
  // uint32  .dummy_20_23
    // ---
  // uint32  .id
    // ---
  // uint32  .u32
    // ---
  // RANDOM_TCAL_TSTAMP_CLOCK  .tstamp1
    // uint32  .soft_latches
      // ---
    // uint32  .hard_latches
      // ---
    // uint32  .clock_ticks
      // ---
    // NTP64_TIME  .before
      // uint32  .sec
        // ---
      // uint32  .frac
        // ---
    // NTP64_TIME  .after
      // uint32  .sec
        // ---
      // uint32  .frac
        // ---
  // RANDOM_TCAL_TSTAMP_CLOCK  .tstamp2
    // uint32  .soft_latches
      // ---
    // uint32  .hard_latches
      // ---
    // uint32  .clock_ticks
      // ---
    // NTP64_TIME  .before
      // uint32  .sec
        // ---
      // uint32  .frac
        // ---
    // NTP64_TIME  .after
      // uint32  .sec
        // ---
      // uint32  .frac
        // ---
// NTP_MESSAGE  .ntp
  // uint32  .word_count
    // ---
  // uint32  .quick_burst
    // ---
  // uint32  .dummy_17_23
    // ---
  // uint32  .id
    // ---
  // uint32  .u32
    // ---
  // uint32  .server_id
    // ---
  // uint32  .precision
    // ---
  // uint32  .poll
    // ---
  // uint32  .stratum
    // ---
  // uint32  .dummy_20_23
    // ---
  // uint32  .mode
    // ---
  // uint32  .version
    // ---
  // uint32  .leap
    // ---
  // uint32  .u32
    // ---
  // uint32  .frac
    // ---
  // uint32  .sec
    // ---
  // uint32  .u32
    // ---
  // uint32  .frac
    // ---
  // uint32  .sec
    // ---
  // uint32  .u32
    // ---
  // uint32  .refid
    // ---
  // NTP64_TIME  .orig2time
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .tmit2time
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .rec2time
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .rx2time
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .reftime
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .origtime
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .rectime
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .tmittime
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
  // NTP64_TIME  .rxtime
    // uint32  .sec
      // ---
    // uint32  .frac
      // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_TCAL_INFO
// .LAND_CAMAC_TCAL_INFO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_TCAL_INFO
// .LAND_CAMAC_TCAL_INFO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_TCAL_INFO
// .LAND_CAMAC_TCAL_INFO
// Corr struct for: TACQUILA_LAND_SUBEVENT
//  : public unpack_subevent_base
// ---
// TACQUILA_DATA  .data_sam5_gtb0
  // raw_array_zero_suppress  .tac[30](DATA12)[17]
  // raw_array_zero_suppress  .adc[30](DATA12)[17]
  // raw_array_zero_suppress  .clk[30](DATA12)[17]
  // uint32  .count
    // ---
  // uint32  .dummy1
    // ---
  // uint32  .trigger_tac
    // ---
  // uint32  .trigger_sam
    // ---
  // uint32  .lec
    // ---
  // uint32  .gtb
    // ---
  // uint32  .sam
    // ---
  // uint32  .u32
    // ---
// TACQUILA_DATA  .data_sam6_gtb1
  // raw_array_zero_suppress  .tac[30](DATA12)[17]
  // raw_array_zero_suppress  .adc[30](DATA12)[17]
  // raw_array_zero_suppress  .clk[30](DATA12)[17]
  // uint32  .count
    // ---
  // uint32  .dummy1
    // ---
  // uint32  .trigger_tac
    // ---
  // uint32  .trigger_sam
    // ---
  // uint32  .lec
    // ---
  // uint32  .gtb
    // ---
  // uint32  .sam
    // ---
  // uint32  .u32
    // ---
// TACQUILA_DATA  .data_sam6_gtb0
  // raw_array_zero_suppress  .tac[30](DATA12)[17]
  // raw_array_zero_suppress  .adc[30](DATA12)[17]
  // raw_array_zero_suppress  .clk[30](DATA12)[17]
  // uint32  .count
    // ---
  // uint32  .dummy1
    // ---
  // uint32  .trigger_tac
    // ---
  // uint32  .trigger_sam
    // ---
  // uint32  .lec
    // ---
  // uint32  .gtb
    // ---
  // uint32  .sam
    // ---
  // uint32  .u32
    // ---
// DATA12 .data_sam5_gtb0.tac[30][17]
// DATA12 .data_sam5_gtb0.adc[30][17]
// DATA12 .data_sam5_gtb0.clk[30][17]
// DATA12 .data_sam6_gtb1.tac[30][17]
// DATA12 .data_sam6_gtb1.adc[30][17]
// DATA12 .data_sam6_gtb1.clk[30][17]
// DATA12 .data_sam6_gtb0.tac[30][17]
// DATA12 .data_sam6_gtb0.adc[30][17]
// DATA12 .data_sam6_gtb0.clk[30][17]
// 
// size= 1  chunks=4590  mem=4590  line=9180  total=42136200
// size=17  chunks=270  mem=4590  line=4860  total=22307400
// size=510  chunks=  9  mem=4590  line=4599  total=21109410
// size=1530  chunks=  3  mem=4590  line=4593  total=21081870
// size=4590  chunks=  1  mem=4590  line=4591  total=21072690
// 
// corr structure: TACQUILA_LAND_SUBEVENT
  // DATA12 .data_sam5_gtb0.tac[30][17]
  // DATA12 .data_sam5_gtb0.adc[30][17]
  // DATA12 .data_sam5_gtb0.clk[30][17]
  // DATA12 .data_sam6_gtb1.tac[30][17]
  // DATA12 .data_sam6_gtb1.adc[30][17]
  // DATA12 .data_sam6_gtb1.clk[30][17]
  // DATA12 .data_sam6_gtb0.tac[30][17]
  // DATA12 .data_sam6_gtb0.adc[30][17]
  // DATA12 .data_sam6_gtb0.clk[30][17]
// .TACQUILA_LAND_SUBEVENT/4590/.data_sam5_gtb0/1530/.tac/510/[30]/17/[17]
                                                  // .adc/510/[30]/17/[17]
                                                  // .clk/510/[30]/17/[17]
                             // .data_sam6_gtb1/1530/.tac/510/[30]/17/[17]
                                                  // .adc/510/[30]/17/[17]
                                                  // .clk/510/[30]/17/[17]
                             // .data_sam6_gtb0/1530/.tac/510/[30]/17/[17]
                                                  // .adc/510/[30]/17/[17]
                                                  // .clk/510/[30]/17/[17]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TACQUILA_LAND_SUBEVENT
// .TACQUILA_LAND_SUBEVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TACQUILA_LAND_SUBEVENT
// .TACQUILA_LAND_SUBEVENT
// Corr struct for: califa_subev
//  : public unpack_subevent_base
// ---
// DUMMY_WORD  .dummy
  // uint32  .dummy_word
    // ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: califa_subev
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .califa_subev/5/.ts/5/.subsystem_id
                      // .t1
                      // .t2
                      // .t3
                      // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: califa_subev
// .califa_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: califa_subev
// .califa_subev
// Corr struct for: daq_status_subev
//  : public unpack_subevent_base
// ---
// DAQ_STATUS  .status
  // uint32  .spill_nr
    // ---
  // uint32  .trigger
    // ---
  // uint32  .time
    // ---
  // raw_array_zero_suppress  .scaler(DATA32)[48]
    // ---
  // raw_array_zero_suppress  .trig_count(DATA32)[16]
    // ---
  // uint32  .events
    // ---
  // uint32  .errors
    // ---
  // uint32  .errors_data_corrupt
    // ---
  // uint32  .errors_data_missing
    // ---
  // uint32  .errors_data_too_much
    // ---
  // uint32  .errors_event_counter_mismatch
    // ---
  // uint32  .errors_event_counter_incr_mismatch
    // ---
  // uint32  .errors_trigger_mismatch
    // ---
  // uint32  .ticks_count
    // ---
  // uint32  .ticks_deadtime
    // ---
  // raw_array_zero_suppress  .ticks_dt_trig(DATA32)[16]
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: daq_status_subev
// .daq_status_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: daq_status_subev
// .daq_status_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: daq_status_subev
// .daq_status_subev
// Corr struct for: empty_subev
//  : public unpack_subevent_base
// ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: empty_subev
// .empty_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: empty_subev
// .empty_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: empty_subev
// .empty_subev
// Corr struct for: fiber_subev
//  : public unpack_subevent_base
// ---
// FEBEX_NOTRACE  .GFI0
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .GFI2
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .GFI1
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .GFI3
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .GFI4
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .fi4[4]
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_EVENTHEADER  .evhe
  // uint32  .N_febex1
    // ---
  // uint32  .N_febex2
    // ---
  // uint32  .N_febex3
    // ---
  // uint32  .N_febex4
    // ---
  // uint32  .u32
    // ---
// DATA12 .GFI0.t[16][10]
// DATA12 .GFI2.t[16][10]
// DATA12 .GFI1.t[16][10]
// DATA12 .GFI3.t[16][10]
// DATA12 .GFI4.t[16][10]
// DATA12 .fi4[4].t[16][10]
// 
// size= 1  chunks=1440  mem=1440  line=2880  total=4147200
// size=10  chunks=144  mem=1440  line=1584  total=2280960
// size=160  chunks=  9  mem=1440  line=1449  total=2086560
// size=640  chunks=  6  mem=3840  line=3846  total=5538240
// size=1440  chunks=  1  mem=1440  line=1441  total=2075040
// 
// corr structure: fiber_subev
  // DATA12 .GFI0.t[16][10]
  // DATA12 .GFI2.t[16][10]
  // DATA12 .GFI1.t[16][10]
  // DATA12 .GFI3.t[16][10]
  // DATA12 .GFI4.t[16][10]
  // DATA12 .fi4[4].t[16][10]
// .fiber_subev/1440/.GFI0/160/.t/160/[16]/10/[10]
                  // .GFI2/160/.t/160/[16]/10/[10]
                  // .GFI1/160/.t/160/[16]/10/[10]
                  // .GFI3/160/.t/160/[16]/10/[10]
                  // .GFI4/160/.t/160/[16]/10/[10]
                  // .fi4/640/[4]/160/.t/160/[16]/10/[10]// 
// size= 1  chunks=1440  mem=1440  line=2880  total=4147200
// size=10  chunks=144  mem=1440  line=1584  total=2280960
// size=160  chunks=  9  mem=1440  line=1449  total=2086560
// size=640  chunks=  6  mem=3840  line=3846  total=5538240
// size=1440  chunks=  1  mem=1440  line=1441  total=2075040
// 
// corr structure: fiber_subev
  // DATA12 .GFI0.t[16][10]
  // DATA12 .GFI2.t[16][10]
  // DATA12 .GFI1.t[16][10]
  // DATA12 .GFI3.t[16][10]
  // DATA12 .GFI4.t[16][10]
  // DATA12 .fi4[4].t[16][10]
// .fiber_subev/1440/.GFI0/160/.t/160/[16]/10/[10]
                  // .GFI2/160/.t/160/[16]/10/[10]
                  // .GFI1/160/.t/160/[16]/10/[10]
                  // .GFI3/160/.t/160/[16]/10/[10]
                  // .GFI4/160/.t/160/[16]/10/[10]
                  // .fi4/640/[4]/160/.t/160/[16]/10/[10]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fiber_subev
// .fiber_subev
// Corr struct for: los_psp_subev
//  : public unpack_subevent_base
// ---
// VME_GSI_VFTX2_7PS  .vftx2_1
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// VME_MESYTEC_MADC32  .madc32
  // raw_array_zero_suppress  .data(DATA14_OVERFLOW)[32]
  // uint32  .counter
    // ---
  // uint32  .unnamed_30_31
    // ---
  // uint32  .u32
    // ---
// VME_GSI_VFTX2_7PS  .vftx2_2
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .vftx2_1.time_fine[32][100]
// DATA16 .vftx2_1.time_coarse[32][100]
// DATA16 .vftx2_1.time_trigger
// DATA14_OVERFLOW .madc32.data[32]
// DATA12 .vftx2_2.time_fine[32][100]
// DATA16 .vftx2_2.time_coarse[32][100]
// DATA16 .vftx2_2.time_trigger
// 
// size= 1  chunks=12834  mem=12834  line=25668  total=329423112
// size=32  chunks=12803  mem=409696  line=422499  total=1127384870
// size=100  chunks=131  mem=13100  line=13231  total=169806654
// size=3200  chunks=  7  mem=22400  line=22407  total=287571438
// size=6401  chunks=  3  mem=19203  line=19206  total=246489804
// size=12834  chunks=  1  mem=12834  line=12835  total=164724390
// 
// corr structure: los_psp_subev
  // DATA12 .vftx2_1.time_fine[32][100]
  // DATA16 .vftx2_1.time_coarse[32][100]
  // DATA16 .vftx2_1.time_trigger
  // DATA14_OVERFLOW .madc32.data[32]
  // DATA12 .vftx2_2.time_fine[32][100]
  // DATA16 .vftx2_2.time_coarse[32][100]
  // DATA16 .vftx2_2.time_trigger
// .los_psp_subev/12834/.vftx2_1/6401/.time_fine/3200/[32]/100/[100]
                                   // .time_coarse/3200/[32]/100/[100]
                                   // .time_trigger
                     // .madc32/32/.data/32/[32]
                     // .vftx2_2/6401/.time_fine/3200/[32]/100/[100]
                                   // .time_coarse/3200/[32]/100/[100]
                                   // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_psp_subev
// .los_psp_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_psp_subev
// .los_psp_subev
// Corr struct for: los_scaler_subev
//  : public unpack_subevent_base
// ---
// TRLO_SCALER  .scaler
  // raw_list_ii_zero_suppress  .stamps(DATA32)[16]
    // ---
  // uint32  .crate_id
    // ---
  // uint32  .unnamed_8_31
    // ---
  // uint32  .u32
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_scaler_subev
// .los_scaler_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_scaler_subev
// .los_scaler_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_scaler_subev
// .los_scaler_subev
// Corr struct for: mark_event_time
//  : public unpack_subevent_base
// ---
// TRLO_SAMPLER  .sampler_los
  // raw_list_ii_zero_suppress  .stamps(DATA32)[512]
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_10_23
    // ---
  // uint32  .id
    // ---
  // uint32  .u32
    // ---
// TRLO_SAMPLER  .sampler_cb_sum
  // raw_list_ii_zero_suppress  .stamps(DATA32)[512]
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_10_23
    // ---
  // uint32  .id
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: mark_event_time
// .mark_event_time// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: mark_event_time
// .mark_event_time// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: mark_event_time
// .mark_event_time
// Corr struct for: mfi_subev
//  : public unpack_subevent_base
// ---
// NXYTER_PADDING  .pads
// NXYTER  .data01
  // DATA8  .gemex
    // ---
  // DATA8  .nxyter
    // ---
  // DATA8  .err
    // ---
  // DATA16  .trigger_counter_head
  // DATA16  .trigger_counter_foot
  // DATA16  .ts_epoch_trigger
  // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
  // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
  // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
  // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// NXYTER  .data00
  // DATA8  .gemex
    // ---
  // DATA8  .nxyter
    // ---
  // DATA8  .err
    // ---
  // DATA16  .trigger_counter_head
  // DATA16  .trigger_counter_foot
  // DATA16  .ts_epoch_trigger
  // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
  // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
  // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
  // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// NXYTER  .data10
  // DATA8  .gemex
    // ---
  // DATA8  .nxyter
    // ---
  // DATA8  .err
    // ---
  // DATA16  .trigger_counter_head
  // DATA16  .trigger_counter_foot
  // DATA16  .ts_epoch_trigger
  // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
  // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
  // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
  // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// NXYTER  .data11
  // DATA8  .gemex
    // ---
  // DATA8  .nxyter
    // ---
  // DATA8  .err
    // ---
  // DATA16  .trigger_counter_head
  // DATA16  .trigger_counter_foot
  // DATA16  .ts_epoch_trigger
  // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
  // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
  // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
  // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// NXYTER  .data20
  // DATA8  .gemex
    // ---
  // DATA8  .nxyter
    // ---
  // DATA8  .err
    // ---
  // DATA16  .trigger_counter_head
  // DATA16  .trigger_counter_foot
  // DATA16  .ts_epoch_trigger
  // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
  // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
  // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
  // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// NXYTER  .data21
  // DATA8  .gemex
    // ---
  // DATA8  .nxyter
    // ---
  // DATA8  .err
    // ---
  // DATA16  .trigger_counter_head
  // DATA16  .trigger_counter_foot
  // DATA16  .ts_epoch_trigger
  // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
  // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
  // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
  // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// NXYTER  .data30
  // DATA8  .gemex
    // ---
  // DATA8  .nxyter
    // ---
  // DATA8  .err
    // ---
  // DATA16  .trigger_counter_head
  // DATA16  .trigger_counter_foot
  // DATA16  .ts_epoch_trigger
  // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
  // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
  // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
  // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// NXYTER  .data31
  // DATA8  .gemex
    // ---
  // DATA8  .nxyter
    // ---
  // DATA8  .err
    // ---
  // DATA16  .trigger_counter_head
  // DATA16  .trigger_counter_foot
  // DATA16  .ts_epoch_trigger
  // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
  // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
  // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
  // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// DATA16 .data01.trigger_counter_head
// DATA16 .data01.trigger_counter_foot
// DATA16 .data01.ts_epoch_trigger
// DATA12 .data01.channel[10000]
// DATA12 .data01.adc[10000]
// DATA16 .data01.ts_epoch_hit[10000]
// DATA16 .data01.ts_nxy[10000]
// DATA16 .data00.trigger_counter_head
// DATA16 .data00.trigger_counter_foot
// DATA16 .data00.ts_epoch_trigger
// DATA12 .data00.channel[10000]
// DATA12 .data00.adc[10000]
// DATA16 .data00.ts_epoch_hit[10000]
// DATA16 .data00.ts_nxy[10000]
// DATA16 .data10.trigger_counter_head
// DATA16 .data10.trigger_counter_foot
// DATA16 .data10.ts_epoch_trigger
// DATA12 .data10.channel[10000]
// DATA12 .data10.adc[10000]
// DATA16 .data10.ts_epoch_hit[10000]
// DATA16 .data10.ts_nxy[10000]
// DATA16 .data11.trigger_counter_head
// DATA16 .data11.trigger_counter_foot
// DATA16 .data11.ts_epoch_trigger
// DATA12 .data11.channel[10000]
// DATA12 .data11.adc[10000]
// DATA16 .data11.ts_epoch_hit[10000]
// DATA16 .data11.ts_nxy[10000]
// DATA16 .data20.trigger_counter_head
// DATA16 .data20.trigger_counter_foot
// DATA16 .data20.ts_epoch_trigger
// DATA12 .data20.channel[10000]
// DATA12 .data20.adc[10000]
// DATA16 .data20.ts_epoch_hit[10000]
// DATA16 .data20.ts_nxy[10000]
// DATA16 .data21.trigger_counter_head
// DATA16 .data21.trigger_counter_foot
// DATA16 .data21.ts_epoch_trigger
// DATA12 .data21.channel[10000]
// DATA12 .data21.adc[10000]
// DATA16 .data21.ts_epoch_hit[10000]
// DATA16 .data21.ts_nxy[10000]
// DATA16 .data30.trigger_counter_head
// DATA16 .data30.trigger_counter_foot
// DATA16 .data30.ts_epoch_trigger
// DATA12 .data30.channel[10000]
// DATA12 .data30.adc[10000]
// DATA16 .data30.ts_epoch_hit[10000]
// DATA16 .data30.ts_nxy[10000]
// DATA16 .data31.trigger_counter_head
// DATA16 .data31.trigger_counter_foot
// DATA16 .data31.ts_epoch_trigger
// DATA12 .data31.channel[10000]
// DATA12 .data31.adc[10000]
// DATA16 .data31.ts_epoch_hit[10000]
// DATA16 .data31.ts_nxy[10000]
// 
// size= 1  chunks=320024  mem=320024  line=640048  total=-1327709056
// size=10000  chunks= 56  mem=560000  line=560056  total=-1157265088
// size=40003  chunks=  8  mem=320024  line=320032  total=-661294336
// size=320024  chunks=  1  mem=320024  line=320025  total=-663534504
// 
// corr structure: mfi_subev
  // DATA16 .data01.trigger_counter_head
  // DATA16 .data01.trigger_counter_foot
  // DATA16 .data01.ts_epoch_trigger
  // DATA12 .data01.channel[10000]
  // DATA12 .data01.adc[10000]
  // DATA16 .data01.ts_epoch_hit[10000]
  // DATA16 .data01.ts_nxy[10000]
  // DATA16 .data00.trigger_counter_head
  // DATA16 .data00.trigger_counter_foot
  // DATA16 .data00.ts_epoch_trigger
  // DATA12 .data00.channel[10000]
  // DATA12 .data00.adc[10000]
  // DATA16 .data00.ts_epoch_hit[10000]
  // DATA16 .data00.ts_nxy[10000]
  // DATA16 .data10.trigger_counter_head
  // DATA16 .data10.trigger_counter_foot
  // DATA16 .data10.ts_epoch_trigger
  // DATA12 .data10.channel[10000]
  // DATA12 .data10.adc[10000]
  // DATA16 .data10.ts_epoch_hit[10000]
  // DATA16 .data10.ts_nxy[10000]
  // DATA16 .data11.trigger_counter_head
  // DATA16 .data11.trigger_counter_foot
  // DATA16 .data11.ts_epoch_trigger
  // DATA12 .data11.channel[10000]
  // DATA12 .data11.adc[10000]
  // DATA16 .data11.ts_epoch_hit[10000]
  // DATA16 .data11.ts_nxy[10000]
  // DATA16 .data20.trigger_counter_head
  // DATA16 .data20.trigger_counter_foot
  // DATA16 .data20.ts_epoch_trigger
  // DATA12 .data20.channel[10000]
  // DATA12 .data20.adc[10000]
  // DATA16 .data20.ts_epoch_hit[10000]
  // DATA16 .data20.ts_nxy[10000]
  // DATA16 .data21.trigger_counter_head
  // DATA16 .data21.trigger_counter_foot
  // DATA16 .data21.ts_epoch_trigger
  // DATA12 .data21.channel[10000]
  // DATA12 .data21.adc[10000]
  // DATA16 .data21.ts_epoch_hit[10000]
  // DATA16 .data21.ts_nxy[10000]
  // DATA16 .data30.trigger_counter_head
  // DATA16 .data30.trigger_counter_foot
  // DATA16 .data30.ts_epoch_trigger
  // DATA12 .data30.channel[10000]
  // DATA12 .data30.adc[10000]
  // DATA16 .data30.ts_epoch_hit[10000]
  // DATA16 .data30.ts_nxy[10000]
  // DATA16 .data31.trigger_counter_head
  // DATA16 .data31.trigger_counter_foot
  // DATA16 .data31.ts_epoch_trigger
  // DATA12 .data31.channel[10000]
  // DATA12 .data31.adc[10000]
  // DATA16 .data31.ts_epoch_hit[10000]
  // DATA16 .data31.ts_nxy[10000]
// .mfi_subev/320024/.data01/40003/.trigger_counter_head
                                // .trigger_counter_foot
                                // .ts_epoch_trigger
                                // .channel/10000/[10000]
                                // .adc/10000/[10000]
                                // .ts_epoch_hit/10000/[10000]
                                // .ts_nxy/10000/[10000]
                  // .data00/40003/.trigger_counter_head
                                // .trigger_counter_foot
                                // .ts_epoch_trigger
                                // .channel/10000/[10000]
                                // .adc/10000/[10000]
                                // .ts_epoch_hit/10000/[10000]
                                // .ts_nxy/10000/[10000]
                  // .data10/40003/.trigger_counter_head
                                // .trigger_counter_foot
                                // .ts_epoch_trigger
                                // .channel/10000/[10000]
                                // .adc/10000/[10000]
                                // .ts_epoch_hit/10000/[10000]
                                // .ts_nxy/10000/[10000]
                  // .data11/40003/.trigger_counter_head
                                // .trigger_counter_foot
                                // .ts_epoch_trigger
                                // .channel/10000/[10000]
                                // .adc/10000/[10000]
                                // .ts_epoch_hit/10000/[10000]
                                // .ts_nxy/10000/[10000]
                  // .data20/40003/.trigger_counter_head
                                // .trigger_counter_foot
                                // .ts_epoch_trigger
                                // .channel/10000/[10000]
                                // .adc/10000/[10000]
                                // .ts_epoch_hit/10000/[10000]
                                // .ts_nxy/10000/[10000]
                  // .data21/40003/.trigger_counter_head
                                // .trigger_counter_foot
                                // .ts_epoch_trigger
                                // .channel/10000/[10000]
                                // .adc/10000/[10000]
                                // .ts_epoch_hit/10000/[10000]
                                // .ts_nxy/10000/[10000]
                  // .data30/40003/.trigger_counter_head
                                // .trigger_counter_foot
                                // .ts_epoch_trigger
                                // .channel/10000/[10000]
                                // .adc/10000/[10000]
                                // .ts_epoch_hit/10000/[10000]
                                // .ts_nxy/10000/[10000]
                  // .data31/40003/.trigger_counter_head
                                // .trigger_counter_foot
                                // .ts_epoch_trigger
                                // .channel/10000/[10000]
                                // .adc/10000/[10000]
                                // .ts_epoch_hit/10000/[10000]
                                // .ts_nxy/10000/[10000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: mfi_subev
// .mfi_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: mfi_subev
// .mfi_subev
// Corr struct for: neuland_subevent
//  : public unpack_subevent_base
// ---
// TACQUILA_DATA_S438B  .data_sam5_gtb0
  // raw_array_zero_suppress  .tac[30](DATA12)[32]
  // raw_array_zero_suppress  .adc[30](DATA12)[17]
  // raw_array_zero_suppress  .clk[30](DATA12)[17]
  // uint32  .count
    // ---
  // uint32  .dummy1
    // ---
  // uint32  .trigger_tac
    // ---
  // uint32  .trigger_sam
    // ---
  // uint32  .lec
    // ---
  // uint32  .gtb
    // ---
  // uint32  .sam
    // ---
  // uint32  .u32
    // ---
// TACQUILA_DATA_S438B  .data_sam6_gtb1
  // raw_array_zero_suppress  .tac[30](DATA12)[32]
  // raw_array_zero_suppress  .adc[30](DATA12)[17]
  // raw_array_zero_suppress  .clk[30](DATA12)[17]
  // uint32  .count
    // ---
  // uint32  .dummy1
    // ---
  // uint32  .trigger_tac
    // ---
  // uint32  .trigger_sam
    // ---
  // uint32  .lec
    // ---
  // uint32  .gtb
    // ---
  // uint32  .sam
    // ---
  // uint32  .u32
    // ---
// TACQUILA_DATA_S438B  .data_sam6_gtb0
  // raw_array_zero_suppress  .tac[30](DATA12)[32]
  // raw_array_zero_suppress  .adc[30](DATA12)[17]
  // raw_array_zero_suppress  .clk[30](DATA12)[17]
  // uint32  .count
    // ---
  // uint32  .dummy1
    // ---
  // uint32  .trigger_tac
    // ---
  // uint32  .trigger_sam
    // ---
  // uint32  .lec
    // ---
  // uint32  .gtb
    // ---
  // uint32  .sam
    // ---
  // uint32  .u32
    // ---
// TACQUILA_DATA_S438B  .data_sam5_gtb1
  // raw_array_zero_suppress  .tac[30](DATA12)[32]
  // raw_array_zero_suppress  .adc[30](DATA12)[17]
  // raw_array_zero_suppress  .clk[30](DATA12)[17]
  // uint32  .count
    // ---
  // uint32  .dummy1
    // ---
  // uint32  .trigger_tac
    // ---
  // uint32  .trigger_sam
    // ---
  // uint32  .lec
    // ---
  // uint32  .gtb
    // ---
  // uint32  .sam
    // ---
  // uint32  .u32
    // ---
// TACQUILA_DATA_S438B  .data_sam7_gtb0
  // raw_array_zero_suppress  .tac[30](DATA12)[32]
  // raw_array_zero_suppress  .adc[30](DATA12)[17]
  // raw_array_zero_suppress  .clk[30](DATA12)[17]
  // uint32  .count
    // ---
  // uint32  .dummy1
    // ---
  // uint32  .trigger_tac
    // ---
  // uint32  .trigger_sam
    // ---
  // uint32  .lec
    // ---
  // uint32  .gtb
    // ---
  // uint32  .sam
    // ---
  // uint32  .u32
    // ---
// TACQUILA_DATA_S438B  .data_sam7_gtb1
  // raw_array_zero_suppress  .tac[30](DATA12)[32]
  // raw_array_zero_suppress  .adc[30](DATA12)[17]
  // raw_array_zero_suppress  .clk[30](DATA12)[17]
  // uint32  .count
    // ---
  // uint32  .dummy1
    // ---
  // uint32  .trigger_tac
    // ---
  // uint32  .trigger_sam
    // ---
  // uint32  .lec
    // ---
  // uint32  .gtb
    // ---
  // uint32  .sam
    // ---
  // uint32  .u32
    // ---
// DATA12 .data_sam5_gtb0.tac[30][32]
// DATA12 .data_sam5_gtb0.adc[30][17]
// DATA12 .data_sam5_gtb0.clk[30][17]
// DATA12 .data_sam6_gtb1.tac[30][32]
// DATA12 .data_sam6_gtb1.adc[30][17]
// DATA12 .data_sam6_gtb1.clk[30][17]
// DATA12 .data_sam6_gtb0.tac[30][32]
// DATA12 .data_sam6_gtb0.adc[30][17]
// DATA12 .data_sam6_gtb0.clk[30][17]
// DATA12 .data_sam5_gtb1.tac[30][32]
// DATA12 .data_sam5_gtb1.adc[30][17]
// DATA12 .data_sam5_gtb1.clk[30][17]
// DATA12 .data_sam7_gtb0.tac[30][32]
// DATA12 .data_sam7_gtb0.adc[30][17]
// DATA12 .data_sam7_gtb0.clk[30][17]
// DATA12 .data_sam7_gtb1.tac[30][32]
// DATA12 .data_sam7_gtb1.adc[30][17]
// DATA12 .data_sam7_gtb1.clk[30][17]
// 
// size= 1  chunks=11880  mem=11880  line=23760  total=282268800
// size=17  chunks=6120  mem=104040  line=110160  total=1308700800
// size=32  chunks=540  mem=17280  line=17820  total=211701600
// size=510  chunks=192  mem=97920  line=98112  total=1165570560
// size=960  chunks= 18  mem=17280  line=17298  total=205500240
// size=1980  chunks=  6  mem=11880  line=11886  total=141205680
// size=11880  chunks=  1  mem=11880  line=11881  total=141146280
// 
// corr structure: neuland_subevent
  // DATA12 .data_sam5_gtb0.tac[30][32]
  // DATA12 .data_sam5_gtb0.adc[30][17]
  // DATA12 .data_sam5_gtb0.clk[30][17]
  // DATA12 .data_sam6_gtb1.tac[30][32]
  // DATA12 .data_sam6_gtb1.adc[30][17]
  // DATA12 .data_sam6_gtb1.clk[30][17]
  // DATA12 .data_sam6_gtb0.tac[30][32]
  // DATA12 .data_sam6_gtb0.adc[30][17]
  // DATA12 .data_sam6_gtb0.clk[30][17]
  // DATA12 .data_sam5_gtb1.tac[30][32]
  // DATA12 .data_sam5_gtb1.adc[30][17]
  // DATA12 .data_sam5_gtb1.clk[30][17]
  // DATA12 .data_sam7_gtb0.tac[30][32]
  // DATA12 .data_sam7_gtb0.adc[30][17]
  // DATA12 .data_sam7_gtb0.clk[30][17]
  // DATA12 .data_sam7_gtb1.tac[30][32]
  // DATA12 .data_sam7_gtb1.adc[30][17]
  // DATA12 .data_sam7_gtb1.clk[30][17]
// .neuland_subevent/11880/.data_sam5_gtb0/1980/.tac/960/[30]/32/[32]
                                             // .adc/510/[30]/17/[17]
                                             // .clk/510/[30]/17/[17]
                        // .data_sam6_gtb1/1980/.tac/960/[30]/32/[32]
                                             // .adc/510/[30]/17/[17]
                                             // .clk/510/[30]/17/[17]
                        // .data_sam6_gtb0/1980/.tac/960/[30]/32/[32]
                                             // .adc/510/[30]/17/[17]
                                             // .clk/510/[30]/17/[17]
                        // .data_sam5_gtb1/1980/.tac/960/[30]/32/[32]
                                             // .adc/510/[30]/17/[17]
                                             // .clk/510/[30]/17/[17]
                        // .data_sam7_gtb0/1980/.tac/960/[30]/32/[32]
                                             // .adc/510/[30]/17/[17]
                                             // .clk/510/[30]/17/[17]
                        // .data_sam7_gtb1/1980/.tac/960/[30]/32/[32]
                                             // .adc/510/[30]/17/[17]
                                             // .clk/510/[30]/17/[17]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_subevent
// .neuland_subevent// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_subevent
// .neuland_subevent
// Corr struct for: neuland_tamex_subev
//  : public unpack_subevent_base
// ---
// uint32  .ns_after_trigger
  // ---
// uint32  .dummy_11_15
  // ---
// uint32  .ns_before_trigger
  // ---
// uint32  .dummy_27_31
  // ---
// uint32  .u32
  // ---
// TAMEX_CHANNEL  .tamex[13]
  // raw_array_zero_suppress  .type(DATA32)[128]
    // ---
  // raw_array_zero_suppress  .tdc(DATA32)[128]
    // ---
  // uint32  .unnamed_0_7
    // ---
  // uint32  .trigger_type
    // ---
  // uint32  .sfp_index
    // ---
  // uint32  .card_index
    // ---
  // uint32  .channel_index
    // ---
  // uint32  .u32
    // ---
  // uint32  .data_size
    // ---
  // uint32  .yanana_phone
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .wanana_phone
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_tamex_subev
// .neuland_tamex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_tamex_subev
// .neuland_tamex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_tamex_subev
// .neuland_tamex_subev
// Corr struct for: psp_febex_subev
//  : public unpack_subevent_base
// ---
// FEBEX_NOTRACE  .febex1
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .febex3
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .febex2
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .febex4
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .febex5
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .febex6
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .febex7
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .febex8
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .febex9
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_NOTRACE  .febex10
  // raw_array  .Nhit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
  // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
    // ---
// FEBEX_EVENTHEADER  .eh
  // uint32  .N_febex1
    // ---
  // uint32  .N_febex2
    // ---
  // uint32  .N_febex3
    // ---
  // uint32  .N_febex4
    // ---
  // uint32  .u32
    // ---
// DATA12 .febex1.t[16][10]
// DATA12 .febex3.t[16][10]
// DATA12 .febex2.t[16][10]
// DATA12 .febex4.t[16][10]
// DATA12 .febex5.t[16][10]
// DATA12 .febex6.t[16][10]
// DATA12 .febex7.t[16][10]
// DATA12 .febex8.t[16][10]
// DATA12 .febex9.t[16][10]
// DATA12 .febex10.t[16][10]
// 
// size= 1  chunks=1600  mem=1600  line=3200  total=5120000
// size=10  chunks=160  mem=1600  line=1760  total=2816000
// size=160  chunks= 10  mem=1600  line=1610  total=2576000
// size=1600  chunks=  1  mem=1600  line=1601  total=2561600
// 
// corr structure: psp_febex_subev
  // DATA12 .febex1.t[16][10]
  // DATA12 .febex3.t[16][10]
  // DATA12 .febex2.t[16][10]
  // DATA12 .febex4.t[16][10]
  // DATA12 .febex5.t[16][10]
  // DATA12 .febex6.t[16][10]
  // DATA12 .febex7.t[16][10]
  // DATA12 .febex8.t[16][10]
  // DATA12 .febex9.t[16][10]
  // DATA12 .febex10.t[16][10]
// .psp_febex_subev/1600/.febex1/160/.t/160/[16]/10/[10]
                      // .febex3/160/.t/160/[16]/10/[10]
                      // .febex2/160/.t/160/[16]/10/[10]
                      // .febex4/160/.t/160/[16]/10/[10]
                      // .febex5/160/.t/160/[16]/10/[10]
                      // .febex6/160/.t/160/[16]/10/[10]
                      // .febex7/160/.t/160/[16]/10/[10]
                      // .febex8/160/.t/160/[16]/10/[10]
                      // .febex9/160/.t/160/[16]/10/[10]
                      // .febex10/160/.t/160/[16]/10/[10]// 
// size= 1  chunks=1600  mem=1600  line=3200  total=5120000
// size=10  chunks=160  mem=1600  line=1760  total=2816000
// size=160  chunks= 10  mem=1600  line=1610  total=2576000
// size=1600  chunks=  1  mem=1600  line=1601  total=2561600
// 
// corr structure: psp_febex_subev
  // DATA12 .febex1.t[16][10]
  // DATA12 .febex3.t[16][10]
  // DATA12 .febex2.t[16][10]
  // DATA12 .febex4.t[16][10]
  // DATA12 .febex5.t[16][10]
  // DATA12 .febex6.t[16][10]
  // DATA12 .febex7.t[16][10]
  // DATA12 .febex8.t[16][10]
  // DATA12 .febex9.t[16][10]
  // DATA12 .febex10.t[16][10]
// .psp_febex_subev/1600/.febex1/160/.t/160/[16]/10/[10]
                      // .febex3/160/.t/160/[16]/10/[10]
                      // .febex2/160/.t/160/[16]/10/[10]
                      // .febex4/160/.t/160/[16]/10/[10]
                      // .febex5/160/.t/160/[16]/10/[10]
                      // .febex6/160/.t/160/[16]/10/[10]
                      // .febex7/160/.t/160/[16]/10/[10]
                      // .febex8/160/.t/160/[16]/10/[10]
                      // .febex9/160/.t/160/[16]/10/[10]
                      // .febex10/160/.t/160/[16]/10/[10]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: psp_febex_subev
// .psp_febex_subev
// Corr struct for: psp_subev
//  : public unpack_subevent_base
// ---
// SIS3316_ACTAR_S438  .sis3316_3
  // raw_array  .channel_header(DATA32)[128]
    // ---
  // raw_array_zero_suppress  .trace(DATA16)[40000]
  // uint32  .id
    // ---
  // uint32  .channel_num
    // ---
  // uint32  .unnamed_16_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .sampleLength
    // ---
  // uint32  .unnamed_26_26
    // ---
  // uint32  .mawFlag
    // ---
  // uint32  .unnamed_28_31
    // ---
  // uint32  .u32
    // ---
// SIS3316_ACTAR_S438  .sis3316_5
  // raw_array  .channel_header(DATA32)[128]
    // ---
  // raw_array_zero_suppress  .trace(DATA16)[40000]
  // uint32  .id
    // ---
  // uint32  .channel_num
    // ---
  // uint32  .unnamed_16_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .sampleLength
    // ---
  // uint32  .unnamed_26_26
    // ---
  // uint32  .mawFlag
    // ---
  // uint32  .unnamed_28_31
    // ---
  // uint32  .u32
    // ---
// SIS3316_ACTAR_S438  .sis3316_4
  // raw_array  .channel_header(DATA32)[128]
    // ---
  // raw_array_zero_suppress  .trace(DATA16)[40000]
  // uint32  .id
    // ---
  // uint32  .channel_num
    // ---
  // uint32  .unnamed_16_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .sampleLength
    // ---
  // uint32  .unnamed_26_26
    // ---
  // uint32  .mawFlag
    // ---
  // uint32  .unnamed_28_31
    // ---
  // uint32  .u32
    // ---
// SIS3316_ACTAR_S438  .sis3316_6
  // raw_array  .channel_header(DATA32)[128]
    // ---
  // raw_array_zero_suppress  .trace(DATA16)[40000]
  // uint32  .id
    // ---
  // uint32  .channel_num
    // ---
  // uint32  .unnamed_16_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .sampleLength
    // ---
  // uint32  .unnamed_26_26
    // ---
  // uint32  .mawFlag
    // ---
  // uint32  .unnamed_28_31
    // ---
  // uint32  .u32
    // ---
// SIS3316_ACTAR_S438  .sis3316_7
  // raw_array  .channel_header(DATA32)[128]
    // ---
  // raw_array_zero_suppress  .trace(DATA16)[40000]
  // uint32  .id
    // ---
  // uint32  .channel_num
    // ---
  // uint32  .unnamed_16_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .sampleLength
    // ---
  // uint32  .unnamed_26_26
    // ---
  // uint32  .mawFlag
    // ---
  // uint32  .unnamed_28_31
    // ---
  // uint32  .u32
    // ---
// SIS3316_ACTAR_S438  .sis3316_8
  // raw_array  .channel_header(DATA32)[128]
    // ---
  // raw_array_zero_suppress  .trace(DATA16)[40000]
  // uint32  .id
    // ---
  // uint32  .channel_num
    // ---
  // uint32  .unnamed_16_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .sampleLength
    // ---
  // uint32  .unnamed_26_26
    // ---
  // uint32  .mawFlag
    // ---
  // uint32  .unnamed_28_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// TRIDI  .tridi_ts
  // uint32  .tpat
    // ---
  // uint32  .unnamed_16_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .ts_msb
    // ---
  // uint32  .ts_lsb
    // ---
// DATA16 .sis3316_3.trace[40000]
// DATA16 .sis3316_5.trace[40000]
// DATA16 .sis3316_4.trace[40000]
// DATA16 .sis3316_6.trace[40000]
// DATA16 .sis3316_7.trace[40000]
// DATA16 .sis3316_8.trace[40000]
// 
// size= 1  chunks=240000  mem=240000  line=480000  total=-764116992
// size=40000  chunks=  6  mem=240000  line=240006  total=1766865152
// size=240000  chunks=  1  mem=240000  line=240001  total=1765665152
// 
// corr structure: psp_subev
  // DATA16 .sis3316_3.trace[40000]
  // DATA16 .sis3316_5.trace[40000]
  // DATA16 .sis3316_4.trace[40000]
  // DATA16 .sis3316_6.trace[40000]
  // DATA16 .sis3316_7.trace[40000]
  // DATA16 .sis3316_8.trace[40000]
// .psp_subev/240000/.sis3316_3/40000/.trace/40000/[40000]
                  // .sis3316_5/40000/.trace/40000/[40000]
                  // .sis3316_4/40000/.trace/40000/[40000]
                  // .sis3316_6/40000/.trace/40000/[40000]
                  // .sis3316_7/40000/.trace/40000/[40000]
                  // .sis3316_8/40000/.trace/40000/[40000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: psp_subev
// .psp_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: psp_subev
// .psp_subev
// Corr struct for: sit_subev
//  : public unpack_subevent_base
// ---
// DUMMY_WORD  .dummy
  // uint32  .dummy_word
    // ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: sit_subev
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .sit_subev/5/.ts/5/.subsystem_id
                   // .t1
                   // .t2
                   // .t3
                   // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sit_subev
// .sit_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sit_subev
// .sit_subev
// Corr struct for: tof13_subev
//  : public unpack_subevent_base
// ---
// VME_GSI_VFTX2  .vftx2_1
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .unnamed_0_7
    // ---
  // uint32  .dummy_8_10
    // ---
  // uint32  .trigger_timestamp
    // ---
  // uint32  .dummy_24_28
    // ---
  // uint32  .unnamed_29_30
    // ---
  // uint32  .unnamed_31_31
    // ---
  // uint32  .u32
    // ---
// VME_GSI_VFTX2  .vftx2_2
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .unnamed_0_7
    // ---
  // uint32  .dummy_8_10
    // ---
  // uint32  .trigger_timestamp
    // ---
  // uint32  .dummy_24_28
    // ---
  // uint32  .unnamed_29_30
    // ---
  // uint32  .unnamed_31_31
    // ---
  // uint32  .u32
    // ---
// VME_GSI_VFTX2  .vftx2_3
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .unnamed_0_7
    // ---
  // uint32  .dummy_8_10
    // ---
  // uint32  .trigger_timestamp
    // ---
  // uint32  .dummy_24_28
    // ---
  // uint32  .unnamed_29_30
    // ---
  // uint32  .unnamed_31_31
    // ---
  // uint32  .u32
    // ---
// VME_GSI_VFTX2  .vftx2_4
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .unnamed_0_7
    // ---
  // uint32  .dummy_8_10
    // ---
  // uint32  .trigger_timestamp
    // ---
  // uint32  .dummy_24_28
    // ---
  // uint32  .unnamed_29_30
    // ---
  // uint32  .unnamed_31_31
    // ---
  // uint32  .u32
    // ---
// VME_CAEN_V1290_S438  .v1290_1
  // raw_array_multi_zero_suppress  .data(DATA24)[32][128]
    // ---
  // uint32  .geom
    // ---
  // uint32  .dummy_5_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .dummy_0_4
    // ---
  // uint32  .event_number
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // VME_CAEN_V1290_S438_SUBTDC  .tdc[4]
    // uint32  .bunch_id
      // ---
    // uint32  .event_id
      // ---
    // uint32  .tdc
      // ---
    // uint32  .dummy_26
      // ---
    // uint32  .unnamed_27_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .flags
      // ---
    // uint32  .dummy_15_23
      // ---
    // uint32  .tdc
      // ---
    // uint32  .dummy_26
      // ---
    // uint32  .unnamed_27_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .word_count
      // ---
    // uint32  .event_id
      // ---
    // uint32  .tdc
      // ---
    // uint32  .dummy_26
      // ---
    // uint32  .unnamed_27_31
      // ---
    // uint32  .u32
      // ---
  // uint32  .dummy_0_4
    // ---
  // uint32  .word_count
    // ---
  // uint32  .dummy_20_23
    // ---
  // uint32  .tdc_error
    // ---
  // uint32  .buffer_overflow
    // ---
  // uint32  .trigger_lost
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .vftx2_1.time_fine[32][100]
// DATA16 .vftx2_1.time_coarse[32][100]
// DATA16 .vftx2_1.time_trigger
// DATA12 .vftx2_2.time_fine[32][100]
// DATA16 .vftx2_2.time_coarse[32][100]
// DATA16 .vftx2_2.time_trigger
// DATA12 .vftx2_3.time_fine[32][100]
// DATA16 .vftx2_3.time_coarse[32][100]
// DATA16 .vftx2_3.time_trigger
// DATA12 .vftx2_4.time_fine[32][100]
// DATA16 .vftx2_4.time_coarse[32][100]
// DATA16 .vftx2_4.time_trigger
// 
// size= 1  chunks=25604  mem=25604  line=51208  total=1311129632
// size=100  chunks=260  mem=26000  line=26260  total=672361040
// size=3200  chunks= 12  mem=38400  line=38412  total=983500848
// size=6401  chunks=  4  mem=25604  line=25608  total=655667232
// size=25604  chunks=  1  mem=25604  line=25605  total=655590420
// 
// corr structure: tof13_subev
  // DATA12 .vftx2_1.time_fine[32][100]
  // DATA16 .vftx2_1.time_coarse[32][100]
  // DATA16 .vftx2_1.time_trigger
  // DATA12 .vftx2_2.time_fine[32][100]
  // DATA16 .vftx2_2.time_coarse[32][100]
  // DATA16 .vftx2_2.time_trigger
  // DATA12 .vftx2_3.time_fine[32][100]
  // DATA16 .vftx2_3.time_coarse[32][100]
  // DATA16 .vftx2_3.time_trigger
  // DATA12 .vftx2_4.time_fine[32][100]
  // DATA16 .vftx2_4.time_coarse[32][100]
  // DATA16 .vftx2_4.time_trigger
// .tof13_subev/25604/.vftx2_1/6401/.time_fine/3200/[32]/100/[100]
                                 // .time_coarse/3200/[32]/100/[100]
                                 // .time_trigger
                   // .vftx2_2/6401/.time_fine/3200/[32]/100/[100]
                                 // .time_coarse/3200/[32]/100/[100]
                                 // .time_trigger
                   // .vftx2_3/6401/.time_fine/3200/[32]/100/[100]
                                 // .time_coarse/3200/[32]/100/[100]
                                 // .time_trigger
                   // .vftx2_4/6401/.time_fine/3200/[32]/100/[100]
                                 // .time_coarse/3200/[32]/100/[100]
                                 // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tof13_subev
// .tof13_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tof13_subev
// .tof13_subev
// Corr struct for: tof13_tamex_subev
//  : public unpack_subevent_base
// ---
// uint32  .ns_after_trigger
  // ---
// uint32  .dummy_11_15
  // ---
// uint32  .ns_before_trigger
  // ---
// uint32  .dummy_27_31
  // ---
// uint32  .u32
  // ---
// TAMEX_CHANNEL  .tamex[2]
  // raw_array_zero_suppress  .type(DATA32)[128]
    // ---
  // raw_array_zero_suppress  .tdc(DATA32)[128]
    // ---
  // uint32  .unnamed_0_7
    // ---
  // uint32  .trigger_type
    // ---
  // uint32  .sfp_index
    // ---
  // uint32  .card_index
    // ---
  // uint32  .channel_index
    // ---
  // uint32  .u32
    // ---
  // uint32  .data_size
    // ---
  // uint32  .yanana_phone
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .wanana_phone
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tof13_tamex_subev
// .tof13_tamex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tof13_tamex_subev
// .tof13_tamex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tof13_tamex_subev
// .tof13_tamex_subev
// Corr struct for: wr_100
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts100
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts100.subsystem_id
// DATA16 .ts100.t1
// DATA16 .ts100.t2
// DATA16 .ts100.t3
// DATA16 .ts100.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: wr_100
  // DATA12 .ts100.subsystem_id
  // DATA16 .ts100.t1
  // DATA16 .ts100.t2
  // DATA16 .ts100.t3
  // DATA16 .ts100.t4
// .wr_100/5/.ts100/5/.subsystem_id
                   // .t1
                   // .t2
                   // .t3
                   // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_100
// .wr_100// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_100
// .wr_100
// Corr struct for: wr_300
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts300
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts300.subsystem_id
// DATA16 .ts300.t1
// DATA16 .ts300.t2
// DATA16 .ts300.t3
// DATA16 .ts300.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: wr_300
  // DATA12 .ts300.subsystem_id
  // DATA16 .ts300.t1
  // DATA16 .ts300.t2
  // DATA16 .ts300.t3
  // DATA16 .ts300.t4
// .wr_300/5/.ts300/5/.subsystem_id
                   // .t1
                   // .t2
                   // .t3
                   // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_300
// .wr_300// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_300
// .wr_300
// Corr struct for: wr_500
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts500
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts500.subsystem_id
// DATA16 .ts500.t1
// DATA16 .ts500.t2
// DATA16 .ts500.t3
// DATA16 .ts500.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: wr_500
  // DATA12 .ts500.subsystem_id
  // DATA16 .ts500.t1
  // DATA16 .ts500.t2
  // DATA16 .ts500.t3
  // DATA16 .ts500.t4
// .wr_500/5/.ts500/5/.subsystem_id
                   // .t1
                   // .t2
                   // .t3
                   // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_500
// .wr_500// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_500
// .wr_500
// Corr struct for: unpack_event
//  : public unpack_event_base
// ---
// LAND_CAMAC_SCALER  .scalers
  //  : public unpack_subevent_base
  // ---
  // uint32  .timestamp
    // ---
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
  // CAMAC_LECROY_4434  .scaler0
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // CAMAC_LECROY_4434  .scaler2
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // CAMAC_LECROY_4434  .scaler1
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // SOFT_SCALER32  .scaler3
    // raw_array_zero_suppress  .data(DATA32)[32]
      // ---
// wr_100  .master_ts
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts100
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// daq_status_subev  .daq_status
  //  : public unpack_subevent_base
  // ---
  // DAQ_STATUS  .status
    // uint32  .spill_nr
      // ---
    // uint32  .trigger
      // ---
    // uint32  .time
      // ---
    // raw_array_zero_suppress  .scaler(DATA32)[48]
      // ---
    // raw_array_zero_suppress  .trig_count(DATA32)[16]
      // ---
    // uint32  .events
      // ---
    // uint32  .errors
      // ---
    // uint32  .errors_data_corrupt
      // ---
    // uint32  .errors_data_missing
      // ---
    // uint32  .errors_data_too_much
      // ---
    // uint32  .errors_event_counter_mismatch
      // ---
    // uint32  .errors_event_counter_incr_mismatch
      // ---
    // uint32  .errors_trigger_mismatch
      // ---
    // uint32  .ticks_count
      // ---
    // uint32  .ticks_deadtime
      // ---
    // raw_array_zero_suppress  .ticks_dt_trig(DATA32)[16]
      // ---
// mark_event_time  .event_time
  //  : public unpack_subevent_base
  // ---
  // TRLO_SAMPLER  .sampler_los
    // raw_list_ii_zero_suppress  .stamps(DATA32)[512]
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_10_23
      // ---
    // uint32  .id
      // ---
    // uint32  .u32
      // ---
  // TRLO_SAMPLER  .sampler_cb_sum
    // raw_list_ii_zero_suppress  .stamps(DATA32)[512]
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_10_23
      // ---
    // uint32  .id
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// LAND_CAMAC_CONVERTER  .tpat_and_co
  //  : public unpack_subevent_base
  // ---
  // uint16  .tpat
    // ---
  // uint16  .tprev
    // ---
  // uint16  .tnext
    // ---
  // uint16  .tprev2
    // ---
// neuland_subevent  .neuland_tacq
  //  : public unpack_subevent_base
  // ---
  // TACQUILA_DATA_S438B  .data_sam5_gtb0
    // raw_array_zero_suppress  .tac[30](DATA12)[32]
    // raw_array_zero_suppress  .adc[30](DATA12)[17]
    // raw_array_zero_suppress  .clk[30](DATA12)[17]
    // uint32  .count
      // ---
    // uint32  .dummy1
      // ---
    // uint32  .trigger_tac
      // ---
    // uint32  .trigger_sam
      // ---
    // uint32  .lec
      // ---
    // uint32  .gtb
      // ---
    // uint32  .sam
      // ---
    // uint32  .u32
      // ---
  // TACQUILA_DATA_S438B  .data_sam6_gtb1
    // raw_array_zero_suppress  .tac[30](DATA12)[32]
    // raw_array_zero_suppress  .adc[30](DATA12)[17]
    // raw_array_zero_suppress  .clk[30](DATA12)[17]
    // uint32  .count
      // ---
    // uint32  .dummy1
      // ---
    // uint32  .trigger_tac
      // ---
    // uint32  .trigger_sam
      // ---
    // uint32  .lec
      // ---
    // uint32  .gtb
      // ---
    // uint32  .sam
      // ---
    // uint32  .u32
      // ---
  // TACQUILA_DATA_S438B  .data_sam6_gtb0
    // raw_array_zero_suppress  .tac[30](DATA12)[32]
    // raw_array_zero_suppress  .adc[30](DATA12)[17]
    // raw_array_zero_suppress  .clk[30](DATA12)[17]
    // uint32  .count
      // ---
    // uint32  .dummy1
      // ---
    // uint32  .trigger_tac
      // ---
    // uint32  .trigger_sam
      // ---
    // uint32  .lec
      // ---
    // uint32  .gtb
      // ---
    // uint32  .sam
      // ---
    // uint32  .u32
      // ---
  // TACQUILA_DATA_S438B  .data_sam5_gtb1
    // raw_array_zero_suppress  .tac[30](DATA12)[32]
    // raw_array_zero_suppress  .adc[30](DATA12)[17]
    // raw_array_zero_suppress  .clk[30](DATA12)[17]
    // uint32  .count
      // ---
    // uint32  .dummy1
      // ---
    // uint32  .trigger_tac
      // ---
    // uint32  .trigger_sam
      // ---
    // uint32  .lec
      // ---
    // uint32  .gtb
      // ---
    // uint32  .sam
      // ---
    // uint32  .u32
      // ---
  // TACQUILA_DATA_S438B  .data_sam7_gtb0
    // raw_array_zero_suppress  .tac[30](DATA12)[32]
    // raw_array_zero_suppress  .adc[30](DATA12)[17]
    // raw_array_zero_suppress  .clk[30](DATA12)[17]
    // uint32  .count
      // ---
    // uint32  .dummy1
      // ---
    // uint32  .trigger_tac
      // ---
    // uint32  .trigger_sam
      // ---
    // uint32  .lec
      // ---
    // uint32  .gtb
      // ---
    // uint32  .sam
      // ---
    // uint32  .u32
      // ---
  // TACQUILA_DATA_S438B  .data_sam7_gtb1
    // raw_array_zero_suppress  .tac[30](DATA12)[32]
    // raw_array_zero_suppress  .adc[30](DATA12)[17]
    // raw_array_zero_suppress  .clk[30](DATA12)[17]
    // uint32  .count
      // ---
    // uint32  .dummy1
      // ---
    // uint32  .trigger_tac
      // ---
    // uint32  .trigger_sam
      // ---
    // uint32  .lec
      // ---
    // uint32  .gtb
      // ---
    // uint32  .sam
      // ---
    // uint32  .u32
      // ---
// los_psp_subev  .los_psp
  //  : public unpack_subevent_base
  // ---
  // VME_GSI_VFTX2_7PS  .vftx2_1
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // VME_MESYTEC_MADC32  .madc32
    // raw_array_zero_suppress  .data(DATA14_OVERFLOW)[32]
    // uint32  .counter
      // ---
    // uint32  .unnamed_30_31
      // ---
    // uint32  .u32
      // ---
  // VME_GSI_VFTX2_7PS  .vftx2_2
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// los_scaler_subev  .los_scaler
  //  : public unpack_subevent_base
  // ---
  // TRLO_SCALER  .scaler
    // raw_list_ii_zero_suppress  .stamps(DATA32)[16]
      // ---
    // uint32  .crate_id
      // ---
    // uint32  .unnamed_8_31
      // ---
    // uint32  .u32
      // ---
// tof13_subev  .tof13
  //  : public unpack_subevent_base
  // ---
  // VME_GSI_VFTX2  .vftx2_1
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .unnamed_0_7
      // ---
    // uint32  .dummy_8_10
      // ---
    // uint32  .trigger_timestamp
      // ---
    // uint32  .dummy_24_28
      // ---
    // uint32  .unnamed_29_30
      // ---
    // uint32  .unnamed_31_31
      // ---
    // uint32  .u32
      // ---
  // VME_GSI_VFTX2  .vftx2_2
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .unnamed_0_7
      // ---
    // uint32  .dummy_8_10
      // ---
    // uint32  .trigger_timestamp
      // ---
    // uint32  .dummy_24_28
      // ---
    // uint32  .unnamed_29_30
      // ---
    // uint32  .unnamed_31_31
      // ---
    // uint32  .u32
      // ---
  // VME_GSI_VFTX2  .vftx2_3
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .unnamed_0_7
      // ---
    // uint32  .dummy_8_10
      // ---
    // uint32  .trigger_timestamp
      // ---
    // uint32  .dummy_24_28
      // ---
    // uint32  .unnamed_29_30
      // ---
    // uint32  .unnamed_31_31
      // ---
    // uint32  .u32
      // ---
  // VME_GSI_VFTX2  .vftx2_4
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .unnamed_0_7
      // ---
    // uint32  .dummy_8_10
      // ---
    // uint32  .trigger_timestamp
      // ---
    // uint32  .dummy_24_28
      // ---
    // uint32  .unnamed_29_30
      // ---
    // uint32  .unnamed_31_31
      // ---
    // uint32  .u32
      // ---
  // VME_CAEN_V1290_S438  .v1290_1
    // raw_array_multi_zero_suppress  .data(DATA24)[32][128]
      // ---
    // uint32  .geom
      // ---
    // uint32  .dummy_5_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .dummy_0_4
      // ---
    // uint32  .event_number
      // ---
    // uint32  .unnamed_27_31
      // ---
    // uint32  .u32
      // ---
    // VME_CAEN_V1290_S438_SUBTDC  .tdc[4]
      // uint32  .bunch_id
        // ---
      // uint32  .event_id
        // ---
      // uint32  .tdc
        // ---
      // uint32  .dummy_26
        // ---
      // uint32  .unnamed_27_31
        // ---
      // uint32  .u32
        // ---
      // uint32  .flags
        // ---
      // uint32  .dummy_15_23
        // ---
      // uint32  .tdc
        // ---
      // uint32  .dummy_26
        // ---
      // uint32  .unnamed_27_31
        // ---
      // uint32  .u32
        // ---
      // uint32  .word_count
        // ---
      // uint32  .event_id
        // ---
      // uint32  .tdc
        // ---
      // uint32  .dummy_26
        // ---
      // uint32  .unnamed_27_31
        // ---
      // uint32  .u32
        // ---
    // uint32  .dummy_0_4
      // ---
    // uint32  .word_count
      // ---
    // uint32  .dummy_20_23
      // ---
    // uint32  .tdc_error
      // ---
    // uint32  .buffer_overflow
      // ---
    // uint32  .trigger_lost
      // ---
    // uint32  .unnamed_27_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// wr_500  .psp_ts
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts500
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// sit_subev  .sit
  //  : public unpack_subevent_base
  // ---
  // DUMMY_WORD  .dummy
    // uint32  .dummy_word
      // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// wr_300  .tbm_ts
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts300
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// fiber_subev  .fiber
  //  : public unpack_subevent_base
  // ---
  // FEBEX_NOTRACE  .GFI0
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .GFI2
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .GFI1
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .GFI3
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .GFI4
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .fi4[4]
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_EVENTHEADER  .evhe
    // uint32  .N_febex1
      // ---
    // uint32  .N_febex2
      // ---
    // uint32  .N_febex3
      // ---
    // uint32  .N_febex4
      // ---
    // uint32  .u32
      // ---
// psp_febex_subev  .psp_febex
  //  : public unpack_subevent_base
  // ---
  // FEBEX_NOTRACE  .febex1
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .febex3
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .febex2
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .febex4
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .febex5
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .febex6
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .febex7
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .febex8
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .febex9
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_NOTRACE  .febex10
    // raw_array  .Nhit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][10]
    // raw_array_multi_zero_suppress  .E(DATA32)[16][10]
      // ---
  // FEBEX_EVENTHEADER  .eh
    // uint32  .N_febex1
      // ---
    // uint32  .N_febex2
      // ---
    // uint32  .N_febex3
      // ---
    // uint32  .N_febex4
      // ---
    // uint32  .u32
      // ---
// neuland_tamex_subev  .neuland_tamex
  //  : public unpack_subevent_base
  // ---
  // uint32  .ns_after_trigger
    // ---
  // uint32  .dummy_11_15
    // ---
  // uint32  .ns_before_trigger
    // ---
  // uint32  .dummy_27_31
    // ---
  // uint32  .u32
    // ---
  // TAMEX_CHANNEL  .tamex[13]
    // raw_array_zero_suppress  .type(DATA32)[128]
      // ---
    // raw_array_zero_suppress  .tdc(DATA32)[128]
      // ---
    // uint32  .unnamed_0_7
      // ---
    // uint32  .trigger_type
      // ---
    // uint32  .sfp_index
      // ---
    // uint32  .card_index
      // ---
    // uint32  .channel_index
      // ---
    // uint32  .u32
      // ---
    // uint32  .data_size
      // ---
    // uint32  .yanana_phone
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .wanana_phone
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
// tof13_tamex_subev  .tof13_tamex
  //  : public unpack_subevent_base
  // ---
  // uint32  .ns_after_trigger
    // ---
  // uint32  .dummy_11_15
    // ---
  // uint32  .ns_before_trigger
    // ---
  // uint32  .dummy_27_31
    // ---
  // uint32  .u32
    // ---
  // TAMEX_CHANNEL  .tamex[2]
    // raw_array_zero_suppress  .type(DATA32)[128]
      // ---
    // raw_array_zero_suppress  .tdc(DATA32)[128]
      // ---
    // uint32  .unnamed_0_7
      // ---
    // uint32  .trigger_type
      // ---
    // uint32  .sfp_index
      // ---
    // uint32  .card_index
      // ---
    // uint32  .channel_index
      // ---
    // uint32  .u32
      // ---
    // uint32  .data_size
      // ---
    // uint32  .yanana_phone
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .wanana_phone
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
// mfi_subev  .mfi
  //  : public unpack_subevent_base
  // ---
  // NXYTER_PADDING  .pads
  // NXYTER  .data01
    // DATA8  .gemex
      // ---
    // DATA8  .nxyter
      // ---
    // DATA8  .err
      // ---
    // DATA16  .trigger_counter_head
    // DATA16  .trigger_counter_foot
    // DATA16  .ts_epoch_trigger
    // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
    // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
    // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
    // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
  // NXYTER  .data00
    // DATA8  .gemex
      // ---
    // DATA8  .nxyter
      // ---
    // DATA8  .err
      // ---
    // DATA16  .trigger_counter_head
    // DATA16  .trigger_counter_foot
    // DATA16  .ts_epoch_trigger
    // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
    // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
    // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
    // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
  // NXYTER  .data10
    // DATA8  .gemex
      // ---
    // DATA8  .nxyter
      // ---
    // DATA8  .err
      // ---
    // DATA16  .trigger_counter_head
    // DATA16  .trigger_counter_foot
    // DATA16  .ts_epoch_trigger
    // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
    // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
    // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
    // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
  // NXYTER  .data11
    // DATA8  .gemex
      // ---
    // DATA8  .nxyter
      // ---
    // DATA8  .err
      // ---
    // DATA16  .trigger_counter_head
    // DATA16  .trigger_counter_foot
    // DATA16  .ts_epoch_trigger
    // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
    // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
    // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
    // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
  // NXYTER  .data20
    // DATA8  .gemex
      // ---
    // DATA8  .nxyter
      // ---
    // DATA8  .err
      // ---
    // DATA16  .trigger_counter_head
    // DATA16  .trigger_counter_foot
    // DATA16  .ts_epoch_trigger
    // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
    // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
    // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
    // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
  // NXYTER  .data21
    // DATA8  .gemex
      // ---
    // DATA8  .nxyter
      // ---
    // DATA8  .err
      // ---
    // DATA16  .trigger_counter_head
    // DATA16  .trigger_counter_foot
    // DATA16  .ts_epoch_trigger
    // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
    // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
    // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
    // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
  // NXYTER  .data30
    // DATA8  .gemex
      // ---
    // DATA8  .nxyter
      // ---
    // DATA8  .err
      // ---
    // DATA16  .trigger_counter_head
    // DATA16  .trigger_counter_foot
    // DATA16  .ts_epoch_trigger
    // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
    // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
    // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
    // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
  // NXYTER  .data31
    // DATA8  .gemex
      // ---
    // DATA8  .nxyter
      // ---
    // DATA8  .err
      // ---
    // DATA16  .trigger_counter_head
    // DATA16  .trigger_counter_foot
    // DATA16  .ts_epoch_trigger
    // raw_list_ii_zero_suppress  .channel(DATA12)[10000]
    // raw_list_ii_zero_suppress  .adc(DATA12)[10000]
    // raw_list_ii_zero_suppress  .ts_epoch_hit(DATA16)[10000]
    // raw_list_ii_zero_suppress  .ts_nxy(DATA16)[10000]
// califa_subev  .califa
  //  : public unpack_subevent_base
  // ---
  // DUMMY_WORD  .dummy
    // uint32  .dummy_word
      // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// psp_subev  .psp_struck
  //  : public unpack_subevent_base
  // ---
  // SIS3316_ACTAR_S438  .sis3316_3
    // raw_array  .channel_header(DATA32)[128]
      // ---
    // raw_array_zero_suppress  .trace(DATA16)[40000]
    // uint32  .id
      // ---
    // uint32  .channel_num
      // ---
    // uint32  .unnamed_16_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .sampleLength
      // ---
    // uint32  .unnamed_26_26
      // ---
    // uint32  .mawFlag
      // ---
    // uint32  .unnamed_28_31
      // ---
    // uint32  .u32
      // ---
  // SIS3316_ACTAR_S438  .sis3316_5
    // raw_array  .channel_header(DATA32)[128]
      // ---
    // raw_array_zero_suppress  .trace(DATA16)[40000]
    // uint32  .id
      // ---
    // uint32  .channel_num
      // ---
    // uint32  .unnamed_16_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .sampleLength
      // ---
    // uint32  .unnamed_26_26
      // ---
    // uint32  .mawFlag
      // ---
    // uint32  .unnamed_28_31
      // ---
    // uint32  .u32
      // ---
  // SIS3316_ACTAR_S438  .sis3316_4
    // raw_array  .channel_header(DATA32)[128]
      // ---
    // raw_array_zero_suppress  .trace(DATA16)[40000]
    // uint32  .id
      // ---
    // uint32  .channel_num
      // ---
    // uint32  .unnamed_16_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .sampleLength
      // ---
    // uint32  .unnamed_26_26
      // ---
    // uint32  .mawFlag
      // ---
    // uint32  .unnamed_28_31
      // ---
    // uint32  .u32
      // ---
  // SIS3316_ACTAR_S438  .sis3316_6
    // raw_array  .channel_header(DATA32)[128]
      // ---
    // raw_array_zero_suppress  .trace(DATA16)[40000]
    // uint32  .id
      // ---
    // uint32  .channel_num
      // ---
    // uint32  .unnamed_16_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .sampleLength
      // ---
    // uint32  .unnamed_26_26
      // ---
    // uint32  .mawFlag
      // ---
    // uint32  .unnamed_28_31
      // ---
    // uint32  .u32
      // ---
  // SIS3316_ACTAR_S438  .sis3316_7
    // raw_array  .channel_header(DATA32)[128]
      // ---
    // raw_array_zero_suppress  .trace(DATA16)[40000]
    // uint32  .id
      // ---
    // uint32  .channel_num
      // ---
    // uint32  .unnamed_16_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .sampleLength
      // ---
    // uint32  .unnamed_26_26
      // ---
    // uint32  .mawFlag
      // ---
    // uint32  .unnamed_28_31
      // ---
    // uint32  .u32
      // ---
  // SIS3316_ACTAR_S438  .sis3316_8
    // raw_array  .channel_header(DATA32)[128]
      // ---
    // raw_array_zero_suppress  .trace(DATA16)[40000]
    // uint32  .id
      // ---
    // uint32  .channel_num
      // ---
    // uint32  .unnamed_16_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .sampleLength
      // ---
    // uint32  .unnamed_26_26
      // ---
    // uint32  .mawFlag
      // ---
    // uint32  .unnamed_28_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
  // TRIDI  .tridi_ts
    // uint32  .tpat
      // ---
    // uint32  .unnamed_16_31
      // ---
    // uint32  .u32
      // ---
    // uint32  .ts_msb
      // ---
    // uint32  .ts_lsb
      // ---
// empty_subev  .empty_1
  //  : public unpack_subevent_base
  // ---
// empty_subev  .empty_2
  //  : public unpack_subevent_base
  // ---
// DATA12 .master_ts.ts100.subsystem_id
// DATA16 .master_ts.ts100.t1
// DATA16 .master_ts.ts100.t2
// DATA16 .master_ts.ts100.t3
// DATA16 .master_ts.ts100.t4
// DATA12 .neuland_tacq.data_sam5_gtb0.tac[30][32]
// DATA12 .neuland_tacq.data_sam5_gtb0.adc[30][17]
// DATA12 .neuland_tacq.data_sam5_gtb0.clk[30][17]
// DATA12 .neuland_tacq.data_sam6_gtb1.tac[30][32]
// DATA12 .neuland_tacq.data_sam6_gtb1.adc[30][17]
// DATA12 .neuland_tacq.data_sam6_gtb1.clk[30][17]
// DATA12 .neuland_tacq.data_sam6_gtb0.tac[30][32]
// DATA12 .neuland_tacq.data_sam6_gtb0.adc[30][17]
// DATA12 .neuland_tacq.data_sam6_gtb0.clk[30][17]
// DATA12 .neuland_tacq.data_sam5_gtb1.tac[30][32]
// DATA12 .neuland_tacq.data_sam5_gtb1.adc[30][17]
// DATA12 .neuland_tacq.data_sam5_gtb1.clk[30][17]
// DATA12 .neuland_tacq.data_sam7_gtb0.tac[30][32]
// DATA12 .neuland_tacq.data_sam7_gtb0.adc[30][17]
// DATA12 .neuland_tacq.data_sam7_gtb0.clk[30][17]
// DATA12 .neuland_tacq.data_sam7_gtb1.tac[30][32]
// DATA12 .neuland_tacq.data_sam7_gtb1.adc[30][17]
// DATA12 .neuland_tacq.data_sam7_gtb1.clk[30][17]
// DATA12 .los_psp.vftx2_1.time_fine[32][100]
// DATA16 .los_psp.vftx2_1.time_coarse[32][100]
// DATA16 .los_psp.vftx2_1.time_trigger
// DATA14_OVERFLOW .los_psp.madc32.data[32]
// DATA12 .los_psp.vftx2_2.time_fine[32][100]
// DATA16 .los_psp.vftx2_2.time_coarse[32][100]
// DATA16 .los_psp.vftx2_2.time_trigger
// DATA12 .tof13.vftx2_1.time_fine[32][100]
// DATA16 .tof13.vftx2_1.time_coarse[32][100]
// DATA16 .tof13.vftx2_1.time_trigger
// DATA12 .tof13.vftx2_2.time_fine[32][100]
// DATA16 .tof13.vftx2_2.time_coarse[32][100]
// DATA16 .tof13.vftx2_2.time_trigger
// DATA12 .tof13.vftx2_3.time_fine[32][100]
// DATA16 .tof13.vftx2_3.time_coarse[32][100]
// DATA16 .tof13.vftx2_3.time_trigger
// DATA12 .tof13.vftx2_4.time_fine[32][100]
// DATA16 .tof13.vftx2_4.time_coarse[32][100]
// DATA16 .tof13.vftx2_4.time_trigger
// DATA12 .psp_ts.ts500.subsystem_id
// DATA16 .psp_ts.ts500.t1
// DATA16 .psp_ts.ts500.t2
// DATA16 .psp_ts.ts500.t3
// DATA16 .psp_ts.ts500.t4
// DATA12 .sit.ts.subsystem_id
// DATA16 .sit.ts.t1
// DATA16 .sit.ts.t2
// DATA16 .sit.ts.t3
// DATA16 .sit.ts.t4
// DATA12 .tbm_ts.ts300.subsystem_id
// DATA16 .tbm_ts.ts300.t1
// DATA16 .tbm_ts.ts300.t2
// DATA16 .tbm_ts.ts300.t3
// DATA16 .tbm_ts.ts300.t4
// DATA12 .fiber.GFI0.t[16][10]
// DATA12 .fiber.GFI2.t[16][10]
// DATA12 .fiber.GFI1.t[16][10]
// DATA12 .fiber.GFI3.t[16][10]
// DATA12 .fiber.GFI4.t[16][10]
// DATA12 .fiber.fi4[4].t[16][10]
// DATA12 .psp_febex.febex1.t[16][10]
// DATA12 .psp_febex.febex3.t[16][10]
// DATA12 .psp_febex.febex2.t[16][10]
// DATA12 .psp_febex.febex4.t[16][10]
// DATA12 .psp_febex.febex5.t[16][10]
// DATA12 .psp_febex.febex6.t[16][10]
// DATA12 .psp_febex.febex7.t[16][10]
// DATA12 .psp_febex.febex8.t[16][10]
// DATA12 .psp_febex.febex9.t[16][10]
// DATA12 .psp_febex.febex10.t[16][10]
// DATA16 .mfi.data01.trigger_counter_head
// DATA16 .mfi.data01.trigger_counter_foot
// DATA16 .mfi.data01.ts_epoch_trigger
// DATA12 .mfi.data01.channel[10000]
// DATA12 .mfi.data01.adc[10000]
// DATA16 .mfi.data01.ts_epoch_hit[10000]
// DATA16 .mfi.data01.ts_nxy[10000]
// DATA16 .mfi.data00.trigger_counter_head
// DATA16 .mfi.data00.trigger_counter_foot
// DATA16 .mfi.data00.ts_epoch_trigger
// DATA12 .mfi.data00.channel[10000]
// DATA12 .mfi.data00.adc[10000]
// DATA16 .mfi.data00.ts_epoch_hit[10000]
// DATA16 .mfi.data00.ts_nxy[10000]
// DATA16 .mfi.data10.trigger_counter_head
// DATA16 .mfi.data10.trigger_counter_foot
// DATA16 .mfi.data10.ts_epoch_trigger
// DATA12 .mfi.data10.channel[10000]
// DATA12 .mfi.data10.adc[10000]
// DATA16 .mfi.data10.ts_epoch_hit[10000]
// DATA16 .mfi.data10.ts_nxy[10000]
// DATA16 .mfi.data11.trigger_counter_head
// DATA16 .mfi.data11.trigger_counter_foot
// DATA16 .mfi.data11.ts_epoch_trigger
// DATA12 .mfi.data11.channel[10000]
// DATA12 .mfi.data11.adc[10000]
// DATA16 .mfi.data11.ts_epoch_hit[10000]
// DATA16 .mfi.data11.ts_nxy[10000]
// DATA16 .mfi.data20.trigger_counter_head
// DATA16 .mfi.data20.trigger_counter_foot
// DATA16 .mfi.data20.ts_epoch_trigger
// DATA12 .mfi.data20.channel[10000]
// DATA12 .mfi.data20.adc[10000]
// DATA16 .mfi.data20.ts_epoch_hit[10000]
// DATA16 .mfi.data20.ts_nxy[10000]
// DATA16 .mfi.data21.trigger_counter_head
// DATA16 .mfi.data21.trigger_counter_foot
// DATA16 .mfi.data21.ts_epoch_trigger
// DATA12 .mfi.data21.channel[10000]
// DATA12 .mfi.data21.adc[10000]
// DATA16 .mfi.data21.ts_epoch_hit[10000]
// DATA16 .mfi.data21.ts_nxy[10000]
// DATA16 .mfi.data30.trigger_counter_head
// DATA16 .mfi.data30.trigger_counter_foot
// DATA16 .mfi.data30.ts_epoch_trigger
// DATA12 .mfi.data30.channel[10000]
// DATA12 .mfi.data30.adc[10000]
// DATA16 .mfi.data30.ts_epoch_hit[10000]
// DATA16 .mfi.data30.ts_nxy[10000]
// DATA16 .mfi.data31.trigger_counter_head
// DATA16 .mfi.data31.trigger_counter_foot
// DATA16 .mfi.data31.ts_epoch_trigger
// DATA12 .mfi.data31.channel[10000]
// DATA12 .mfi.data31.adc[10000]
// DATA16 .mfi.data31.ts_epoch_hit[10000]
// DATA16 .mfi.data31.ts_nxy[10000]
// DATA12 .califa.ts.subsystem_id
// DATA16 .califa.ts.t1
// DATA16 .califa.ts.t2
// DATA16 .califa.ts.t3
// DATA16 .califa.ts.t4
// DATA16 .psp_struck.sis3316_3.trace[40000]
// DATA16 .psp_struck.sis3316_5.trace[40000]
// DATA16 .psp_struck.sis3316_4.trace[40000]
// DATA16 .psp_struck.sis3316_6.trace[40000]
// DATA16 .psp_struck.sis3316_7.trace[40000]
// DATA16 .psp_struck.sis3316_8.trace[40000]
// 
// size= 1  chunks=613407  mem=613407  line=1226814  total=917018498
// size= 5  chunks=613387  mem=3066935  line=3680322  total=-1617520642
// size=10  chunks=610651  mem=6106510  line=6717161  total=1479940663
// size=17  chunks=604891  mem=10283147  line=10888038  total=124580186
// size=32  chunks=599280  mem=19176960  line=19776240  total=1896405776
// size=100  chunks=561264  mem=56126400  line=56687664  total=554682832
// size=160  chunks=560979  mem=89756640  line=90317619  total=676566829
// size=510  chunks=560631  mem=285921810  line=286482441  total=1747770647
// size=640  chunks=560628  mem=358801920  line=359362548  total=600981132
// size=960  chunks=560454  mem=538035840  line=538596294  total=1262570746
// size=1440  chunks=560449  mem=807046560  line=807607009  total=1674714431
// size=1600  chunks=560440  mem=896704000  line=897264440  total=1114266568
// size=1980  chunks=560428  mem=1109647440  line=1110207868  total=-736767484
// size=3200  chunks=560056  mem=1792179200  line=1792739256  total=-322695352
// size=6401  chunks=560044  mem=-710125652  line=-709565608  total=-525129816
// size=10000  chunks=240076  mem=-1894207296  line=-1893967220  total=-1276819724
// size=11880  chunks=240071  mem=-1442923816  line=-1442683745  total=-66432191
// size=12834  chunks=240069  mem=-1213921750  line=-1213681681  total=202256881
// size=25604  chunks=240066  mem=1851682568  line=1851922634  total=2112067702
// size=40000  chunks= 72  mem=2880000  line=2880072  total=1424766648
// size=40003  chunks= 24  mem=960072  line=960096  total=519087520
// size=240000  chunks= 19  mem=4560000  line=4560019  total=1123865037
// size=320024  chunks= 12  mem=3840288  line=3840300  total=2024823892
// size=613407  chunks=  1  mem=613407  line=613408  total=-1688360992
// 
// corr structure: unpack_event
  // DATA12 .master_ts.ts100.subsystem_id
  // DATA16 .master_ts.ts100.t1
  // DATA16 .master_ts.ts100.t2
  // DATA16 .master_ts.ts100.t3
  // DATA16 .master_ts.ts100.t4
  // DATA12 .neuland_tacq.data_sam5_gtb0.tac[30][32]
  // DATA12 .neuland_tacq.data_sam5_gtb0.adc[30][17]
  // DATA12 .neuland_tacq.data_sam5_gtb0.clk[30][17]
  // DATA12 .neuland_tacq.data_sam6_gtb1.tac[30][32]
  // DATA12 .neuland_tacq.data_sam6_gtb1.adc[30][17]
  // DATA12 .neuland_tacq.data_sam6_gtb1.clk[30][17]
  // DATA12 .neuland_tacq.data_sam6_gtb0.tac[30][32]
  // DATA12 .neuland_tacq.data_sam6_gtb0.adc[30][17]
  // DATA12 .neuland_tacq.data_sam6_gtb0.clk[30][17]
  // DATA12 .neuland_tacq.data_sam5_gtb1.tac[30][32]
  // DATA12 .neuland_tacq.data_sam5_gtb1.adc[30][17]
  // DATA12 .neuland_tacq.data_sam5_gtb1.clk[30][17]
  // DATA12 .neuland_tacq.data_sam7_gtb0.tac[30][32]
  // DATA12 .neuland_tacq.data_sam7_gtb0.adc[30][17]
  // DATA12 .neuland_tacq.data_sam7_gtb0.clk[30][17]
  // DATA12 .neuland_tacq.data_sam7_gtb1.tac[30][32]
  // DATA12 .neuland_tacq.data_sam7_gtb1.adc[30][17]
  // DATA12 .neuland_tacq.data_sam7_gtb1.clk[30][17]
  // DATA12 .los_psp.vftx2_1.time_fine[32][100]
  // DATA16 .los_psp.vftx2_1.time_coarse[32][100]
  // DATA16 .los_psp.vftx2_1.time_trigger
  // DATA14_OVERFLOW .los_psp.madc32.data[32]
  // DATA12 .los_psp.vftx2_2.time_fine[32][100]
  // DATA16 .los_psp.vftx2_2.time_coarse[32][100]
  // DATA16 .los_psp.vftx2_2.time_trigger
  // DATA12 .tof13.vftx2_1.time_fine[32][100]
  // DATA16 .tof13.vftx2_1.time_coarse[32][100]
  // DATA16 .tof13.vftx2_1.time_trigger
  // DATA12 .tof13.vftx2_2.time_fine[32][100]
  // DATA16 .tof13.vftx2_2.time_coarse[32][100]
  // DATA16 .tof13.vftx2_2.time_trigger
  // DATA12 .tof13.vftx2_3.time_fine[32][100]
  // DATA16 .tof13.vftx2_3.time_coarse[32][100]
  // DATA16 .tof13.vftx2_3.time_trigger
  // DATA12 .tof13.vftx2_4.time_fine[32][100]
  // DATA16 .tof13.vftx2_4.time_coarse[32][100]
  // DATA16 .tof13.vftx2_4.time_trigger
  // DATA12 .psp_ts.ts500.subsystem_id
  // DATA16 .psp_ts.ts500.t1
  // DATA16 .psp_ts.ts500.t2
  // DATA16 .psp_ts.ts500.t3
  // DATA16 .psp_ts.ts500.t4
  // DATA12 .sit.ts.subsystem_id
  // DATA16 .sit.ts.t1
  // DATA16 .sit.ts.t2
  // DATA16 .sit.ts.t3
  // DATA16 .sit.ts.t4
  // DATA12 .tbm_ts.ts300.subsystem_id
  // DATA16 .tbm_ts.ts300.t1
  // DATA16 .tbm_ts.ts300.t2
  // DATA16 .tbm_ts.ts300.t3
  // DATA16 .tbm_ts.ts300.t4
  // DATA12 .fiber.GFI0.t[16][10]
  // DATA12 .fiber.GFI2.t[16][10]
  // DATA12 .fiber.GFI1.t[16][10]
  // DATA12 .fiber.GFI3.t[16][10]
  // DATA12 .fiber.GFI4.t[16][10]
  // DATA12 .fiber.fi4[4].t[16][10]
  // DATA12 .psp_febex.febex1.t[16][10]
  // DATA12 .psp_febex.febex3.t[16][10]
  // DATA12 .psp_febex.febex2.t[16][10]
  // DATA12 .psp_febex.febex4.t[16][10]
  // DATA12 .psp_febex.febex5.t[16][10]
  // DATA12 .psp_febex.febex6.t[16][10]
  // DATA12 .psp_febex.febex7.t[16][10]
  // DATA12 .psp_febex.febex8.t[16][10]
  // DATA12 .psp_febex.febex9.t[16][10]
  // DATA12 .psp_febex.febex10.t[16][10]
  // DATA16 .mfi.data01.trigger_counter_head
  // DATA16 .mfi.data01.trigger_counter_foot
  // DATA16 .mfi.data01.ts_epoch_trigger
  // DATA12 .mfi.data01.channel[10000]
  // DATA12 .mfi.data01.adc[10000]
  // DATA16 .mfi.data01.ts_epoch_hit[10000]
  // DATA16 .mfi.data01.ts_nxy[10000]
  // DATA16 .mfi.data00.trigger_counter_head
  // DATA16 .mfi.data00.trigger_counter_foot
  // DATA16 .mfi.data00.ts_epoch_trigger
  // DATA12 .mfi.data00.channel[10000]
  // DATA12 .mfi.data00.adc[10000]
  // DATA16 .mfi.data00.ts_epoch_hit[10000]
  // DATA16 .mfi.data00.ts_nxy[10000]
  // DATA16 .mfi.data10.trigger_counter_head
  // DATA16 .mfi.data10.trigger_counter_foot
  // DATA16 .mfi.data10.ts_epoch_trigger
  // DATA12 .mfi.data10.channel[10000]
  // DATA12 .mfi.data10.adc[10000]
  // DATA16 .mfi.data10.ts_epoch_hit[10000]
  // DATA16 .mfi.data10.ts_nxy[10000]
  // DATA16 .mfi.data11.trigger_counter_head
  // DATA16 .mfi.data11.trigger_counter_foot
  // DATA16 .mfi.data11.ts_epoch_trigger
  // DATA12 .mfi.data11.channel[10000]
  // DATA12 .mfi.data11.adc[10000]
  // DATA16 .mfi.data11.ts_epoch_hit[10000]
  // DATA16 .mfi.data11.ts_nxy[10000]
  // DATA16 .mfi.data20.trigger_counter_head
  // DATA16 .mfi.data20.trigger_counter_foot
  // DATA16 .mfi.data20.ts_epoch_trigger
  // DATA12 .mfi.data20.channel[10000]
  // DATA12 .mfi.data20.adc[10000]
  // DATA16 .mfi.data20.ts_epoch_hit[10000]
  // DATA16 .mfi.data20.ts_nxy[10000]
  // DATA16 .mfi.data21.trigger_counter_head
  // DATA16 .mfi.data21.trigger_counter_foot
  // DATA16 .mfi.data21.ts_epoch_trigger
  // DATA12 .mfi.data21.channel[10000]
  // DATA12 .mfi.data21.adc[10000]
  // DATA16 .mfi.data21.ts_epoch_hit[10000]
  // DATA16 .mfi.data21.ts_nxy[10000]
  // DATA16 .mfi.data30.trigger_counter_head
  // DATA16 .mfi.data30.trigger_counter_foot
  // DATA16 .mfi.data30.ts_epoch_trigger
  // DATA12 .mfi.data30.channel[10000]
  // DATA12 .mfi.data30.adc[10000]
  // DATA16 .mfi.data30.ts_epoch_hit[10000]
  // DATA16 .mfi.data30.ts_nxy[10000]
  // DATA16 .mfi.data31.trigger_counter_head
  // DATA16 .mfi.data31.trigger_counter_foot
  // DATA16 .mfi.data31.ts_epoch_trigger
  // DATA12 .mfi.data31.channel[10000]
  // DATA12 .mfi.data31.adc[10000]
  // DATA16 .mfi.data31.ts_epoch_hit[10000]
  // DATA16 .mfi.data31.ts_nxy[10000]
  // DATA12 .califa.ts.subsystem_id
  // DATA16 .califa.ts.t1
  // DATA16 .califa.ts.t2
  // DATA16 .califa.ts.t3
  // DATA16 .califa.ts.t4
  // DATA16 .psp_struck.sis3316_3.trace[40000]
  // DATA16 .psp_struck.sis3316_5.trace[40000]
  // DATA16 .psp_struck.sis3316_4.trace[40000]
  // DATA16 .psp_struck.sis3316_6.trace[40000]
  // DATA16 .psp_struck.sis3316_7.trace[40000]
  // DATA16 .psp_struck.sis3316_8.trace[40000]
// .unpack_event/613407/.master_ts/5/.ts100/5/.subsystem_id
                                           // .t1
                                           // .t2
                                           // .t3
                                           // .t4
                     // .neuland_tacq/11880/.data_sam5_gtb0/1980/.tac/960/[30]/32/[32]
                                                              // .adc/510/[30]/17/[17]
                                                              // .clk/510/[30]/17/[17]
                                         // .data_sam6_gtb1/1980/.tac/960/[30]/32/[32]
                                                              // .adc/510/[30]/17/[17]
                                                              // .clk/510/[30]/17/[17]
                                         // .data_sam6_gtb0/1980/.tac/960/[30]/32/[32]
                                                              // .adc/510/[30]/17/[17]
                                                              // .clk/510/[30]/17/[17]
                                         // .data_sam5_gtb1/1980/.tac/960/[30]/32/[32]
                                                              // .adc/510/[30]/17/[17]
                                                              // .clk/510/[30]/17/[17]
                                         // .data_sam7_gtb0/1980/.tac/960/[30]/32/[32]
                                                              // .adc/510/[30]/17/[17]
                                                              // .clk/510/[30]/17/[17]
                                         // .data_sam7_gtb1/1980/.tac/960/[30]/32/[32]
                                                              // .adc/510/[30]/17/[17]
                                                              // .clk/510/[30]/17/[17]
                     // .los_psp/12834/.vftx2_1/6401/.time_fine/3200/[32]/100/[100]
                                                  // .time_coarse/3200/[32]/100/[100]
                                                  // .time_trigger
                                    // .madc32/32/.data/32/[32]
                                    // .vftx2_2/6401/.time_fine/3200/[32]/100/[100]
                                                  // .time_coarse/3200/[32]/100/[100]
                                                  // .time_trigger
                     // .tof13/25604/.vftx2_1/6401/.time_fine/3200/[32]/100/[100]
                                                // .time_coarse/3200/[32]/100/[100]
                                                // .time_trigger
                                  // .vftx2_2/6401/.time_fine/3200/[32]/100/[100]
                                                // .time_coarse/3200/[32]/100/[100]
                                                // .time_trigger
                                  // .vftx2_3/6401/.time_fine/3200/[32]/100/[100]
                                                // .time_coarse/3200/[32]/100/[100]
                                                // .time_trigger
                                  // .vftx2_4/6401/.time_fine/3200/[32]/100/[100]
                                                // .time_coarse/3200/[32]/100/[100]
                                                // .time_trigger
                     // .psp_ts/5/.ts500/5/.subsystem_id
                                        // .t1
                                        // .t2
                                        // .t3
                                        // .t4
                     // .sit/5/.ts/5/.subsystem_id
                                  // .t1
                                  // .t2
                                  // .t3
                                  // .t4
                     // .tbm_ts/5/.ts300/5/.subsystem_id
                                        // .t1
                                        // .t2
                                        // .t3
                                        // .t4
                     // .fiber/1440/.GFI0/160/.t/160/[16]/10/[10]
                                 // .GFI2/160/.t/160/[16]/10/[10]
                                 // .GFI1/160/.t/160/[16]/10/[10]
                                 // .GFI3/160/.t/160/[16]/10/[10]
                                 // .GFI4/160/.t/160/[16]/10/[10]
                                 // .fi4/640/[4]/160/.t/160/[16]/10/[10]
                     // .psp_febex/1600/.febex1/160/.t/160/[16]/10/[10]
                                     // .febex3/160/.t/160/[16]/10/[10]
                                     // .febex2/160/.t/160/[16]/10/[10]
                                     // .febex4/160/.t/160/[16]/10/[10]
                                     // .febex5/160/.t/160/[16]/10/[10]
                                     // .febex6/160/.t/160/[16]/10/[10]
                                     // .febex7/160/.t/160/[16]/10/[10]
                                     // .febex8/160/.t/160/[16]/10/[10]
                                     // .febex9/160/.t/160/[16]/10/[10]
                                     // .febex10/160/.t/160/[16]/10/[10]
                     // .mfi/320024/.data01/40003/.trigger_counter_head
                                               // .trigger_counter_foot
                                               // .ts_epoch_trigger
                                               // .channel/10000/[10000]
                                               // .adc/10000/[10000]
                                               // .ts_epoch_hit/10000/[10000]
                                               // .ts_nxy/10000/[10000]
                                 // .data00/40003/.trigger_counter_head
                                               // .trigger_counter_foot
                                               // .ts_epoch_trigger
                                               // .channel/10000/[10000]
                                               // .adc/10000/[10000]
                                               // .ts_epoch_hit/10000/[10000]
                                               // .ts_nxy/10000/[10000]
                                 // .data10/40003/.trigger_counter_head
                                               // .trigger_counter_foot
                                               // .ts_epoch_trigger
                                               // .channel/10000/[10000]
                                               // .adc/10000/[10000]
                                               // .ts_epoch_hit/10000/[10000]
                                               // .ts_nxy/10000/[10000]
                                 // .data11/40003/.trigger_counter_head
                                               // .trigger_counter_foot
                                               // .ts_epoch_trigger
                                               // .channel/10000/[10000]
                                               // .adc/10000/[10000]
                                               // .ts_epoch_hit/10000/[10000]
                                               // .ts_nxy/10000/[10000]
                                 // .data20/40003/.trigger_counter_head
                                               // .trigger_counter_foot
                                               // .ts_epoch_trigger
                                               // .channel/10000/[10000]
                                               // .adc/10000/[10000]
                                               // .ts_epoch_hit/10000/[10000]
                                               // .ts_nxy/10000/[10000]
                                 // .data21/40003/.trigger_counter_head
                                               // .trigger_counter_foot
                                               // .ts_epoch_trigger
                                               // .channel/10000/[10000]
                                               // .adc/10000/[10000]
                                               // .ts_epoch_hit/10000/[10000]
                                               // .ts_nxy/10000/[10000]
                                 // .data30/40003/.trigger_counter_head
                                               // .trigger_counter_foot
                                               // .ts_epoch_trigger
                                               // .channel/10000/[10000]
                                               // .adc/10000/[10000]
                                               // .ts_epoch_hit/10000/[10000]
                                               // .ts_nxy/10000/[10000]
                                 // .data31/40003/.trigger_counter_head
                                               // .trigger_counter_foot
                                               // .ts_epoch_trigger
                                               // .channel/10000/[10000]
                                               // .adc/10000/[10000]
                                               // .ts_epoch_hit/10000/[10000]
                                               // .ts_nxy/10000/[10000]
                     // .califa/5/.ts/5/.subsystem_id
                                     // .t1
                                     // .t2
                                     // .t3
                                     // .t4
                     // .psp_struck/240000/.sis3316_3/40000/.trace/40000/[40000]
                                        // .sis3316_5/40000/.trace/40000/[40000]
                                        // .sis3316_4/40000/.trace/40000/[40000]
                                        // .sis3316_6/40000/.trace/40000/[40000]
                                        // .sis3316_7/40000/.trace/40000/[40000]
                                        // .sis3316_8/40000/.trace/40000/[40000]// 
// size= 1  chunks=3040  mem=3040  line=6080  total=18483200
// size=10  chunks=304  mem=3040  line=3344  total=10165760
// size=160  chunks= 19  mem=3040  line=3059  total=9299360
// size=640  chunks= 16  mem=10240  line=10256  total=31178240
// size=1440  chunks= 11  mem=15840  line=15851  total=48187040
// size=1600  chunks=  2  mem=3200  line=3202  total=9734080
// size=3040  chunks=  1  mem=3040  line=3041  total=9244640
// 
// corr structure: unpack_event
  // DATA12 .fiber.GFI0.t[16][10]
  // DATA12 .fiber.GFI2.t[16][10]
  // DATA12 .fiber.GFI1.t[16][10]
  // DATA12 .fiber.GFI3.t[16][10]
  // DATA12 .fiber.GFI4.t[16][10]
  // DATA12 .fiber.fi4[4].t[16][10]
  // DATA12 .psp_febex.febex1.t[16][10]
  // DATA12 .psp_febex.febex3.t[16][10]
  // DATA12 .psp_febex.febex2.t[16][10]
  // DATA12 .psp_febex.febex4.t[16][10]
  // DATA12 .psp_febex.febex5.t[16][10]
  // DATA12 .psp_febex.febex6.t[16][10]
  // DATA12 .psp_febex.febex7.t[16][10]
  // DATA12 .psp_febex.febex8.t[16][10]
  // DATA12 .psp_febex.febex9.t[16][10]
  // DATA12 .psp_febex.febex10.t[16][10]
// .unpack_event/3040/.fiber/1440/.GFI0/160/.t/160/[16]/10/[10]
                               // .GFI2/160/.t/160/[16]/10/[10]
                               // .GFI1/160/.t/160/[16]/10/[10]
                               // .GFI3/160/.t/160/[16]/10/[10]
                               // .GFI4/160/.t/160/[16]/10/[10]
                               // .fi4/640/[4]/160/.t/160/[16]/10/[10]
                   // .psp_febex/1600/.febex1/160/.t/160/[16]/10/[10]
                                   // .febex3/160/.t/160/[16]/10/[10]
                                   // .febex2/160/.t/160/[16]/10/[10]
                                   // .febex4/160/.t/160/[16]/10/[10]
                                   // .febex5/160/.t/160/[16]/10/[10]
                                   // .febex6/160/.t/160/[16]/10/[10]
                                   // .febex7/160/.t/160/[16]/10/[10]
                                   // .febex8/160/.t/160/[16]/10/[10]
                                   // .febex9/160/.t/160/[16]/10/[10]
                                   // .febex10/160/.t/160/[16]/10/[10]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event
// Corr struct for: unpack_sticky_event
//  : public unpack_sticky_event_base
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event

/** END_CORR_STRUCT ***************************************************/

