
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

CAMAC_LECROY_4434(channels)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS);
  list(0<=index<channels)
  {
    UINT32 ch_data NOENCODE
    {
       0_23: value;
      24_31: 0;
      ENCODE(data[index],(value=value));
    }
  }
}

CAMAC_PHILLIPS_7164(channels,mark_channel_no)
{
  MEMBER(DATA12 data[16] ZERO_SUPPRESS);
  list(0<=index<channels)
  {
    if(mark_channel_no)
    {
      UINT16 ch_data NOENCODE
      {
         0_11: value;
        12_15: channel = CHECK(index);
        ENCODE(data[index],(value=value));
      }
    }
    else
    {
      UINT16 ch_data NOENCODE
      {
         0_11: value;
        ENCODE(data[index],(value=value));
      }
    }
  }
}

CAMAC_SILENA_4418(channels,mark_channel_no)
{
  MEMBER(DATA12_OVERFLOW data[8] ZERO_SUPPRESS);
  list(0<=index<channels)
  {
    if(mark_channel_no)
    {
      UINT16 ch_data NOENCODE
      {
         0_11: value;
        12_14: channel = CHECK(index);
           15: overflow;
        ENCODE(data[index],(value=value,overflow=overflow));
      }
    }
    else
    {
      UINT16 ch_data NOENCODE
      {
         0_11: value;
           15: overflow;
        ENCODE(data[index],(value=value,overflow=overflow));
      }
    }
  }
}

DUMMY_WORD()
{
  UINT32 dummy_word;
}

FASTBUS_LECROY_1875(geom,channels)
{
  MEMBER(DATA12_RANGE data[64] ZERO_SUPPRESS);
  UINT32 ch_data NOENCODE
  {
     0_11: value;
    16_21: channel = RANGE(0,(channels - 1));
       23: range;
    24_26: n = CHECK(0);
    27_31: geom = MATCH(geom);
    ENCODE(data[channel],(value=value,range=range));
  }
}

FASTBUS_LECROY_1885(geom,channels)
{
  MEMBER(DATA12_RANGE data[96] ZERO_SUPPRESS);
  UINT32 ch_data NOENCODE
  {
     0_11: value;
    16_22: channel = RANGE(0,(channels - 1));
       23: range;
    24_26: n = CHECK(0);
    27_31: geom = MATCH(geom);
    ENCODE(data[channel],(value=value,range=range));
  }
}

NTP64_TIME()
{
  UINT32 sec;
  UINT32 frac;
}

NTP_MESSAGE(id)
{
  UINT32 header
  {
     0_15: word_count;
       16: quick_burst;
    24_31: id = MATCH(id);
  }
  MARK_COUNT(start);
  UINT32 server_id;
  UINT32 sspp
  {
     0_07: precision;
     8_15: poll;
    16_19: stratum;
    24_26: mode;
    27_29: version = CHECK(3);
    30_31: leap;
  }
  UINT32 root_dly
  {
     0_15: frac;
    16_31: sec;
  }
  UINT32 root_disp
  {
     0_15: frac;
    16_31: sec;
  }
  UINT32 refid;
  reftime = NTP64_TIME();
  origtime = NTP64_TIME();
  rectime = NTP64_TIME();
  tmittime = NTP64_TIME();
  rxtime = NTP64_TIME();
  if(header.quick_burst)
  {
    orig2time = NTP64_TIME();
    rec2time = NTP64_TIME();
    tmit2time = NTP64_TIME();
    rx2time = NTP64_TIME();
  }
  MARK_COUNT(end);
  CHECK_COUNT(header.word_count,start,end,0,4)
}

RANDOM_TCAL(id)
{
  UINT32 header
  {
     0_07: word_count;
     8_11: pulses;
    12_17: clock_bits;
       18: has_tstamp1;
       19: has_tstamp2;
    24_31: id = MATCH(id);
  }
  MARK_COUNT(start);
  if(header.has_tstamp1)
  {
    tstamp1 = RANDOM_TCAL_TSTAMP_CLOCK();
  }
  if(header.has_tstamp2)
  {
    tstamp2 = RANDOM_TCAL_TSTAMP_CLOCK();
  }
  MARK_COUNT(end);
  CHECK_COUNT(header.word_count,start,end,0,4)
}

RANDOM_TCAL_TSTAMP_CLOCK()
{
  UINT32 soft_latches;
  UINT32 hard_latches;
  UINT32 clock_ticks;
  before = NTP64_TIME();
  after = NTP64_TIME();
}

SOFT_SCALER32(channels)
{
  MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  list(0<=index<channels)
  {
    UINT32 ch_data NOENCODE
    {
       0_31: value;
      ENCODE(data[index],(value=value));
    }
  }
}

VME_CAEN_V1190(geom)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  MARK_COUNT(v1190_start);
  UINT32 header
  {
     0_04: geom = MATCH(geom);
     5_26: event_number;
    27_31: 8;
  }
  select several
  {
    tdc[0] = VME_CAEN_V1190_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                   data=data);
    tdc[1] = VME_CAEN_V1190_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                   data=data);
    tdc[2] = VME_CAEN_V1190_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                   data=data);
    tdc[3] = VME_CAEN_V1190_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                   data=data);
  }
  UINT32 trigger
  {
     0_26: time_tag;
    27_31: 17;
  }
  MARK_COUNT(v1190_end);
  UINT32 trailer
  {
     0_04: geom = CHECK(geom);
     5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
       24: tdc_error;
       25: buffer_overflow;
       26: trigger_lost;
    27_31: 16;
  }
}

VME_CAEN_V1190_SHORT(geom)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  MARK_COUNT(v1190_start);
  UINT32 header
  {
     0_04: geom = MATCH(geom);
     5_26: event_number;
    27_31: 8;
  }
  select several
  {
    tdc[0] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                         data=data);
    tdc[1] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                         data=data);
    tdc[2] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                         data=data);
    tdc[3] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                         data=data);
    norevisit err[0] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=0);
    norevisit err[1] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=1);
    norevisit err[2] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=2);
    norevisit err[3] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=3);
  }
  UINT32 trigger
  {
     0_26: time_tag;
    27_31: 17;
  }
  MARK_COUNT(v1190_end);
  UINT32 trailer
  {
     0_04: geom = CHECK(geom);
     5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
       24: tdc_error;
       25: buffer_overflow;
       26: trigger_lost;
    27_31: 16;
  }
}

VME_CAEN_V1190_SHORT_SUBTDC(tdc,event_id,data)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  UINT32 ch_data NOENCODE
  {
     0_18: value;
    19_23: channel_low;
    24_25: tdc = CHECK(tdc);
       26: trailing;
    27_31: 0;
    ENCODE(data[((tdc << 5) | channel_low)],(value=value));
  }
}

VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc)
{
  UINT32 error_flags
  {
     0_14: flags;
    24_25: tdc = CHECK(tdc);
    27_31: 4;
  }
}

VME_CAEN_V1190_SUBTDC(tdc,event_id,data)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  MARK_COUNT(tdc_start);
  UINT32 header
  {
     0_11: bunch_id;
    12_23: event_id = CHECK(event_id);
    24_25: tdc = MATCH(tdc);
    27_31: 1;
  }
  several UINT32 ch_data NOENCODE
  {
     0_18: value;
    19_23: channel_low;
    24_25: tdc = CHECK(tdc);
       26: trailing;
    27_31: 0;
    ENCODE(data[((tdc << 5) | channel_low)],(value=value));
  }
  optional UINT32 error_flags
  {
     0_14: flags;
    24_25: tdc = CHECK(tdc);
    27_31: 4;
  }
  MARK_COUNT(tdc_end);
  UINT32 trailer
  {
     0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
    12_23: event_id = CHECK(header.event_id);
    24_25: tdc = CHECK(tdc);
    27_31: 3;
  }
}

VME_CAEN_V1290(geom)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  MARK_COUNT(v1190_start);
  UINT32 header
  {
     0_04: geom = MATCH(geom);
     5_26: event_number;
    27_31: 8;
  }
  select several
  {
    tdc[0] = VME_CAEN_V1290_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                   data=data);
    tdc[1] = VME_CAEN_V1290_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                   data=data);
    tdc[2] = VME_CAEN_V1290_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                   data=data);
    tdc[3] = VME_CAEN_V1290_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                   data=data);
  }
  UINT32 trigger
  {
     0_26: time_tag;
    27_31: 17;
  }
  MARK_COUNT(v1190_end);
  UINT32 trailer
  {
     0_04: geom = CHECK(geom);
     5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
       24: tdc_error;
       25: buffer_overflow;
       26: trigger_lost;
    27_31: 16;
  }
}

VME_CAEN_V1290_SHORT(geom)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  MARK_COUNT(v1190_start);
  UINT32 header
  {
     0_04: geom = MATCH(geom);
     5_26: event_number;
    27_31: 8;
  }
  select several
  {
    tdc[0] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                         data=data);
    tdc[1] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                         data=data);
    tdc[2] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                         data=data);
    tdc[3] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                         data=data);
    norevisit err[0] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=0);
    norevisit err[1] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=1);
    norevisit err[2] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=2);
    norevisit err[3] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=3);
  }
  UINT32 trigger
  {
     0_26: time_tag;
    27_31: 17;
  }
  MARK_COUNT(v1190_end);
  UINT32 trailer
  {
     0_04: geom = CHECK(geom);
     5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
       24: tdc_error;
       25: buffer_overflow;
       26: trigger_lost;
    27_31: 16;
  }
}

VME_CAEN_V1290_SHORT_SUBTDC(tdc,event_id,data)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  UINT32 ch_data NOENCODE
  {
     0_20: value;
    21_23: channel_low;
    24_25: tdc = CHECK(tdc);
       26: trailing;
    27_31: 0;
    ENCODE(data[((tdc << 3) | channel_low)],(value=value));
  }
}

VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc)
{
  UINT32 error_flags
  {
     0_14: flags;
    24_25: tdc = CHECK(tdc);
    27_31: 4;
  }
}

VME_CAEN_V1290_SUBTDC(tdc,event_id,data)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  MARK_COUNT(tdc_start);
  UINT32 header
  {
     0_11: bunch_id;
    12_23: event_id = CHECK(event_id);
    24_25: tdc = MATCH(tdc);
    27_31: 1;
  }
  several UINT32 ch_data NOENCODE
  {
     0_20: value;
    21_23: channel_low;
    24_25: tdc = CHECK(tdc);
       26: trailing;
    27_31: 0;
    ENCODE(data[((tdc << 3) | channel_low)],(value=value));
  }
  optional UINT32 error_flags
  {
     0_14: flags;
    24_25: tdc = CHECK(tdc);
    27_31: 4;
  }
  MARK_COUNT(tdc_end);
  UINT32 trailer
  {
     0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
    12_23: event_id = CHECK(header.event_id);
    24_25: tdc = CHECK(tdc);
    27_31: 3;
  }
}

VME_CAEN_V775(geom,crate)
{
  MEMBER(DATA12_OVERFLOW data[32] ZERO_SUPPRESS);
  UINT32 header NOENCODE
  {
     8_13: count;
    16_23: crate = MATCH(crate);
    24_26: 2;
    27_31: geom = MATCH(geom);
  }
  list(0<=index<header.count)
  {
    UINT32 ch_data NOENCODE
    {
       0_11: value;
         12: overflow;
         13: underflow;
         14: valid;
      16_20: channel;
      24_26: 0;
      27_31: geom = CHECK(geom);
      ENCODE(data[channel],(value=value,overflow=overflow));
    }
  }
  UINT32 eob
  {
     0_23: event_number;
    24_26: 4;
    27_31: geom = CHECK(geom);
  }
}

VME_CAEN_V830(geom)
{
  MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  UINT32 header
  {
     0_15: event_number;
    16_17: ts;
    18_23: count;
       26: 1;
    27_31: geom = MATCH(geom);
  }
  list(0<=index<header.count)
  {
    UINT32 ch_data NOENCODE
    {
       0_25: value;
         26: 0;
      27_31: channel;
      ENCODE(data[channel],(value=value));
    }
  }
}

VME_MESYTEC_MADC32(geom)
{
  MEMBER(DATA14_OVERFLOW data[32] ZERO_SUPPRESS);
  MARK_COUNT(start);
  UINT32 header NOENCODE
  {
     0_11: word_number;
    12_14: adc_resol;
       15: out_form;
    16_23: geom = MATCH(geom);
    24_29: 0;
    30_31: 1;
  }
  several UINT32 ch_data NOENCODE
  {
     0_12: value;
       14: outofrange;
    16_20: channel;
    21_29: 32;
    30_31: 0;
    ENCODE(data[channel],(value=value,overflow=outofrange));
  }
  optional UINT32 filler NOENCODE
  {
     0_31: 0;
  }
  UINT32 end_of_event
  {
     0_29: counter;
    30_31: 3;
  }
  MARK_COUNT(end);
  CHECK_COUNT(header.word_number,start,end,( - 4),4)
}

VME_MESYTEC_MDPP16(geom)
{
  MEMBER(DATA16_OVERFLOW data[34] ZERO_SUPPRESS_MULTI(100));
  MARK_COUNT(start);
  UINT32 header NOENCODE
  {
     0_09: word_number;
    10_12: adc_res;
    13_15: tdc_res;
    16_23: geom = MATCH(geom);
    24_29: 0;
    30_31: 1;
  }
  several UINT32 ch_data NOENCODE
  {
     0_15: value;
    16_21: channel;
       22: overflow;
       23: pileup;
    24_27: 0;
    28_31: 1;
    ENCODE(data[channel],(value=value,overflow=overflow,pileup=pileup));
  }
  several UINT32 fill_word NOENCODE
  {
     0_31: 0;
  }
  UINT32 end_of_event
  {
     0_29: counter;
    30_31: 3;
  }
  MARK_COUNT(end);
  CHECK_COUNT(header.word_number,start,end,( - 4),4)
}

SUBEVENT(DUMMY_TDC)
{
  select several
  {
    dum = DUMMY_WORD();
  }
}

SUBEVENT(LAND_CAMAC_CONVERTER)
{
  UINT16 tpat;
  UINT16 tprev;
  UINT16 tnext;
  UINT16 tprev2;
  if(EXTERNAL has_data)
  {
    tPHI10481 = CAMAC_PHILLIPS_7164(channels=8,mark_channel_no=1);
    aPHI12160 = CAMAC_PHILLIPS_7164(channels=16,mark_channel_no=1);
    qSIA0429 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    tSIA8035 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    tSIA0469 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    qSIA0480 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    tC_FRS120 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    tSIA0426 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    qSIA0495 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
  }
}

SUBEVENT(LAND_CAMAC_SCALER)
{
  scaler0 = CAMAC_LECROY_4434(channels=32);
  scaler1 = CAMAC_LECROY_4434(channels=32);
  scaler2 = CAMAC_LECROY_4434(channels=32);
  if(EXTERNAL has_timestamp)
  {
    UINT32 timestamp;
    UINT32 endianess
    {
       0_31: 0x87654321;
    }
  }
}

SUBEVENT(LAND_CAMAC_START_STOP_STAMP)
{
  UINT32 timestamp;
  UINT32 endianess
  {
     0_31: 0x87654321;
  }
}

SUBEVENT(LAND_CAMAC_TCAL_INFO)
{
  UINT32 info;
  select several
  {
    rtcal = RANDOM_TCAL(id=231);
    ntp = NTP_MESSAGE(id=239);
  }
}

SUBEVENT(LAND_FASTBUS1)
{
  select several
  {
    Q47342 = FASTBUS_LECROY_1885(geom=7,channels=96);
    Q11111 = FASTBUS_LECROY_1885(geom=8,channels=96);
    Q46848 = FASTBUS_LECROY_1885(geom=10,channels=96);
    Q47315 = FASTBUS_LECROY_1885(geom=11,channels=96);
    Q17320 = FASTBUS_LECROY_1885(geom=13,channels=96);
    Q15372 = FASTBUS_LECROY_1885(geom=15,channels=96);
    Q46962 = FASTBUS_LECROY_1885(geom=16,channels=96);
    Q46993 = FASTBUS_LECROY_1885(geom=18,channels=96);
    Q15358 = FASTBUS_LECROY_1885(geom=20,channels=96);
    Q47264 = FASTBUS_LECROY_1885(geom=23,channels=96);
    T81855 = FASTBUS_LECROY_1875(geom=3,channels=64);
    T87044 = FASTBUS_LECROY_1875(geom=4,channels=64);
    T87024 = FASTBUS_LECROY_1875(geom=5,channels=64);
    T81800 = FASTBUS_LECROY_1875(geom=6,channels=64);
  }
}

SUBEVENT(LAND_FASTBUS2)
{
  select several
  {
    T87047 = FASTBUS_LECROY_1875(geom=1,channels=64);
    T48854 = FASTBUS_LECROY_1875(geom=2,channels=64);
    T81808 = FASTBUS_LECROY_1875(geom=3,channels=64);
    T81859 = FASTBUS_LECROY_1875(geom=4,channels=64);
    T81795 = FASTBUS_LECROY_1875(geom=5,channels=64);
    T81806 = FASTBUS_LECROY_1875(geom=6,channels=64);
    T48834 = FASTBUS_LECROY_1875(geom=7,channels=64);
  }
}

SUBEVENT(LAND_FASTBUS_ERROR)
{
  UINT32 error_code
  {
        0: timeout_waiting_smi;
        1: illegal_block_transfer;
        2: fifa_address_overflow;
        3: fifa_register_error;
       16: init_error;
  }
  UINT32 error_num;
}

SUBEVENT(LAND_FASTBUS_ERROR_NGF)
{
  UINT32 magic
  {
     0_31: 0x10000000;
  }
  UINT32 error_code
  {
        0: error;
        1: uninitialized;
        2: ss1;
        3: wc;
        4: mid;
        5: fifo_empty;
        6: fifo_not_empty;
        7: not_finished;
        8: bad_end_addr;
        9: word_lost;
  }
}

/**********************************************************
 * The event definition:
 */

EVENT
{
  camac = LAND_CAMAC_CONVERTER(type=34,subtype=0xc80);
  camac = LAND_CAMAC_CONVERTER(type=0x26ce,subtype=0xc80);
  camac_tcal_info = LAND_CAMAC_TCAL_INFO(type=0x26ce,subtype=0xc7f);
  camac_start_stop_stamp = LAND_CAMAC_START_STOP_STAMP(type=35,subtype=0xc1c);
  camac_scalers = LAND_CAMAC_SCALER(type=34,subtype=0xc1c);
  camac_scalers = LAND_CAMAC_SCALER(type=0x26ce,subtype=0xc1c);
  fastbus_error = LAND_FASTBUS_ERROR(type=31,subtype=0xc1c);
  fastbus1 = LAND_FASTBUS1(type=32,subtype=0xc3a,subcrate=1);
  fastbus2 = LAND_FASTBUS2(type=32,subtype=0xc3a,subcrate=2);
  d1 = DUMMY_TDC(type=34,subtype=0xdac,control=9);
  d2 = DUMMY_TDC(type=0x26ce,subtype=0xdac,control=9);
}

/**********************************************************
 * The sticky_event definition:
 */

/**********************************************************
 * Signal name mappings:
 */

SIGNAL(CS1_001_E,fastbus1.Q47342.data[48],DATA12);
SIGNAL(CS1_001_T,fastbus1.T87024.data[16],DATA12);
SIGNAL(CS1_002_E,fastbus1.Q47342.data[50],DATA12);
SIGNAL(CS1_002_T,fastbus1.T87024.data[18],DATA12);
SIGNAL(CS1_003_E,fastbus1.Q47342.data[52],DATA12);
SIGNAL(CS1_003_T,fastbus1.T87024.data[20],DATA12);
SIGNAL(CS1_004_E,fastbus1.Q11111.data[65],DATA12);
SIGNAL(CS1_004_T,fastbus1.T81800.data[41],DATA12);
SIGNAL(CS1_005_E,fastbus1.Q11111.data[67],DATA12);
SIGNAL(CS1_005_T,fastbus1.T81800.data[43],DATA12);
SIGNAL(CS1_006_E,fastbus1.Q11111.data[69],DATA12);
SIGNAL(CS1_006_T,fastbus1.T81800.data[45],DATA12);
SIGNAL(CS1_007_E,fastbus1.Q11111.data[71],DATA12);
SIGNAL(CS1_007_T,fastbus1.T81800.data[47],DATA12);
SIGNAL(CS1_008_E,fastbus1.Q11111.data[73],DATA12);
SIGNAL(CS1_008_T,fastbus1.T87024.data[41],DATA12);
SIGNAL(CS1_009_E,fastbus1.Q11111.data[75],DATA12);
SIGNAL(CS1_009_T,fastbus1.T87024.data[43],DATA12);
SIGNAL(CS1_010_E,fastbus1.Q47342.data[54],DATA12);
SIGNAL(CS1_010_T,fastbus1.T87024.data[22],DATA12);
SIGNAL(CS1_011_E,fastbus1.Q47342.data[56],DATA12);
SIGNAL(CS1_011_T,fastbus1.T81800.data[16],DATA12);
SIGNAL(CS1_012_E,fastbus1.Q47342.data[58],DATA12);
SIGNAL(CS1_012_T,fastbus1.T81800.data[18],DATA12);
SIGNAL(CS1_013_E,fastbus1.Q47342.data[60],DATA12);
SIGNAL(CS1_013_T,fastbus1.T81800.data[20],DATA12);
SIGNAL(CS1_014_E,fastbus1.Q47342.data[62],DATA12);
SIGNAL(CS1_014_T,fastbus1.T81800.data[22],DATA12);
SIGNAL(CS1_015_E,fastbus1.Q47342.data[49],DATA12);
SIGNAL(CS1_015_T,fastbus1.T87024.data[17],DATA12);
SIGNAL(CS1_016_E,fastbus1.Q11111.data[77],DATA12);
SIGNAL(CS1_016_T,fastbus1.T87024.data[45],DATA12);
SIGNAL(CS1_017_E,fastbus1.Q11111.data[79],DATA12);
SIGNAL(CS1_017_T,fastbus1.T87024.data[47],DATA12);
SIGNAL(CS1_018_E,fastbus1.Q11111.data[48],DATA12);
SIGNAL(CS1_018_T,fastbus1.T87024.data[24],DATA12);
SIGNAL(CS1_019_E,fastbus1.Q11111.data[50],DATA12);
SIGNAL(CS1_019_T,fastbus1.T87024.data[26],DATA12);
SIGNAL(CS1_020_E,fastbus1.Q11111.data[52],DATA12);
SIGNAL(CS1_020_T,fastbus1.T87024.data[28],DATA12);
SIGNAL(CS1_021_E,fastbus1.Q11111.data[54],DATA12);
SIGNAL(CS1_021_T,fastbus1.T87024.data[30],DATA12);
SIGNAL(CS1_022_E,fastbus1.Q47342.data[51],DATA12);
SIGNAL(CS1_022_T,fastbus1.T87024.data[19],DATA12);
SIGNAL(CS1_023_E,fastbus1.Q47342.data[53],DATA12);
SIGNAL(CS1_023_T,fastbus1.T87024.data[21],DATA12);
SIGNAL(CS1_024_E,fastbus1.Q47342.data[55],DATA12);
SIGNAL(CS1_024_T,fastbus1.T87024.data[23],DATA12);
SIGNAL(CS1_025_E,fastbus1.Q47342.data[57],DATA12);
SIGNAL(CS1_025_T,fastbus1.T81800.data[17],DATA12);
SIGNAL(CS1_026_E,fastbus1.Q47342.data[59],DATA12);
SIGNAL(CS1_026_T,fastbus1.T81800.data[19],DATA12);
SIGNAL(CS1_027_E,fastbus1.Q47342.data[61],DATA12);
SIGNAL(CS1_027_T,fastbus1.T81800.data[21],DATA12);
SIGNAL(CS1_028_E,fastbus1.Q11111.data[56],DATA12);
SIGNAL(CS1_028_T,fastbus1.T87024.data[32],DATA12);
SIGNAL(CS1_029_E,fastbus1.Q11111.data[58],DATA12);
SIGNAL(CS1_029_T,fastbus1.T87024.data[34],DATA12);
SIGNAL(CS1_030_E,fastbus1.Q11111.data[60],DATA12);
SIGNAL(CS1_030_T,fastbus1.T87024.data[36],DATA12);
SIGNAL(CS1_031_E,fastbus1.Q11111.data[62],DATA12);
SIGNAL(CS1_031_T,fastbus1.T87024.data[38],DATA12);
SIGNAL(CS1_032_E,fastbus1.Q11111.data[49],DATA12);
SIGNAL(CS1_032_T,fastbus1.T87024.data[25],DATA12);
SIGNAL(CS1_033_E,fastbus1.Q11111.data[51],DATA12);
SIGNAL(CS1_033_T,fastbus1.T87024.data[27],DATA12);
SIGNAL(CS1_034_E,fastbus1.Q47342.data[63],DATA12);
SIGNAL(CS1_034_T,fastbus1.T81800.data[23],DATA12);
SIGNAL(CS1_035_E,fastbus1.Q47342.data[32],DATA12);
SIGNAL(CS1_035_T,fastbus1.T87044.data[16],DATA12);
SIGNAL(CS1_036_E,fastbus1.Q47342.data[34],DATA12);
SIGNAL(CS1_036_T,fastbus1.T87044.data[18],DATA12);
SIGNAL(CS1_037_E,fastbus1.Q47342.data[36],DATA12);
SIGNAL(CS1_037_T,fastbus1.T87044.data[20],DATA12);
SIGNAL(CS1_038_E,fastbus1.Q47342.data[38],DATA12);
SIGNAL(CS1_038_T,fastbus1.T87044.data[22],DATA12);
SIGNAL(CS1_039_E,fastbus1.Q47342.data[40],DATA12);
SIGNAL(CS1_039_T,fastbus1.T81800.data[0],DATA12);
SIGNAL(CS1_040_E,fastbus1.Q11111.data[53],DATA12);
SIGNAL(CS1_040_T,fastbus1.T87024.data[29],DATA12);
SIGNAL(CS1_041_E,fastbus1.Q11111.data[55],DATA12);
SIGNAL(CS1_041_T,fastbus1.T87024.data[31],DATA12);
SIGNAL(CS1_042_E,fastbus1.Q11111.data[57],DATA12);
SIGNAL(CS1_042_T,fastbus1.T87024.data[33],DATA12);
SIGNAL(CS1_043_E,fastbus1.Q11111.data[59],DATA12);
SIGNAL(CS1_043_T,fastbus1.T87024.data[35],DATA12);
SIGNAL(CS1_044_E,fastbus1.Q11111.data[61],DATA12);
SIGNAL(CS1_044_T,fastbus1.T87024.data[37],DATA12);
SIGNAL(CS1_045_E,fastbus1.Q11111.data[63],DATA12);
SIGNAL(CS1_045_T,fastbus1.T87024.data[39],DATA12);
SIGNAL(CS1_046_E,fastbus1.Q47342.data[42],DATA12);
SIGNAL(CS1_046_T,fastbus1.T81800.data[2],DATA12);
SIGNAL(CS1_047_E,fastbus1.Q47342.data[44],DATA12);
SIGNAL(CS1_047_T,fastbus1.T81800.data[4],DATA12);
SIGNAL(CS1_048_E,fastbus1.Q47342.data[46],DATA12);
SIGNAL(CS1_048_T,fastbus1.T81800.data[6],DATA12);
SIGNAL(CS1_049_E,fastbus1.Q47342.data[33],DATA12);
SIGNAL(CS1_049_T,fastbus1.T87044.data[17],DATA12);
SIGNAL(CS1_050_E,fastbus1.Q47342.data[35],DATA12);
SIGNAL(CS1_050_T,fastbus1.T87044.data[19],DATA12);
SIGNAL(CS1_051_E,fastbus1.Q47342.data[37],DATA12);
SIGNAL(CS1_051_T,fastbus1.T87044.data[21],DATA12);
SIGNAL(CS1_052_E,fastbus1.Q11111.data[32],DATA12);
SIGNAL(CS1_052_T,fastbus1.T87044.data[0],DATA12);
SIGNAL(CS1_053_E,fastbus1.Q11111.data[34],DATA12);
SIGNAL(CS1_053_T,fastbus1.T87044.data[2],DATA12);
SIGNAL(CS1_054_E,fastbus1.Q11111.data[36],DATA12);
SIGNAL(CS1_054_T,fastbus1.T87044.data[4],DATA12);
SIGNAL(CS1_055_E,fastbus1.Q11111.data[38],DATA12);
SIGNAL(CS1_055_T,fastbus1.T87044.data[6],DATA12);
SIGNAL(CS1_056_E,fastbus1.Q11111.data[40],DATA12);
SIGNAL(CS1_056_T,fastbus1.T87044.data[8],DATA12);
SIGNAL(CS1_057_E,fastbus1.Q11111.data[42],DATA12);
SIGNAL(CS1_057_T,fastbus1.T87044.data[10],DATA12);
SIGNAL(CS1_058_E,fastbus1.Q47342.data[39],DATA12);
SIGNAL(CS1_058_T,fastbus1.T87044.data[23],DATA12);
SIGNAL(CS1_059_E,fastbus1.Q47342.data[41],DATA12);
SIGNAL(CS1_059_T,fastbus1.T81800.data[1],DATA12);
SIGNAL(CS1_060_E,fastbus1.Q47342.data[43],DATA12);
SIGNAL(CS1_060_T,fastbus1.T81800.data[3],DATA12);
SIGNAL(CS1_061_E,fastbus1.Q47342.data[45],DATA12);
SIGNAL(CS1_061_T,fastbus1.T81800.data[5],DATA12);
SIGNAL(CS1_062_E,fastbus1.Q47342.data[47],DATA12);
SIGNAL(CS1_062_T,fastbus1.T81800.data[7],DATA12);
SIGNAL(CS1_063_E,fastbus1.Q47342.data[16],DATA12);
SIGNAL(CS1_063_T,fastbus1.T87044.data[24],DATA12);
SIGNAL(CS1_064_E,fastbus1.Q11111.data[44],DATA12);
SIGNAL(CS1_064_T,fastbus1.T87044.data[12],DATA12);
SIGNAL(CS1_065_E,fastbus1.Q11111.data[46],DATA12);
SIGNAL(CS1_065_T,fastbus1.T87044.data[14],DATA12);
SIGNAL(CS1_066_E,fastbus1.Q11111.data[33],DATA12);
SIGNAL(CS1_066_T,fastbus1.T87044.data[1],DATA12);
SIGNAL(CS1_067_E,fastbus1.Q11111.data[35],DATA12);
SIGNAL(CS1_067_T,fastbus1.T87044.data[3],DATA12);
SIGNAL(CS1_068_E,fastbus1.Q11111.data[37],DATA12);
SIGNAL(CS1_068_T,fastbus1.T87044.data[5],DATA12);
SIGNAL(CS1_069_E,fastbus1.Q11111.data[39],DATA12);
SIGNAL(CS1_069_T,fastbus1.T87044.data[7],DATA12);
SIGNAL(CS1_070_E,fastbus1.Q47342.data[18],DATA12);
SIGNAL(CS1_070_T,fastbus1.T87044.data[26],DATA12);
SIGNAL(CS1_071_E,fastbus1.Q47342.data[20],DATA12);
SIGNAL(CS1_071_T,fastbus1.T87044.data[28],DATA12);
SIGNAL(CS1_072_E,fastbus1.Q47342.data[22],DATA12);
SIGNAL(CS1_072_T,fastbus1.T87044.data[30],DATA12);
SIGNAL(CS1_073_E,fastbus1.Q47342.data[24],DATA12);
SIGNAL(CS1_073_T,fastbus1.T87044.data[40],DATA12);
SIGNAL(CS1_074_E,fastbus1.Q47342.data[26],DATA12);
SIGNAL(CS1_074_T,fastbus1.T87044.data[42],DATA12);
SIGNAL(CS1_075_E,fastbus1.Q47342.data[28],DATA12);
SIGNAL(CS1_075_T,fastbus1.T87044.data[44],DATA12);
SIGNAL(CS1_076_E,fastbus1.Q11111.data[41],DATA12);
SIGNAL(CS1_076_T,fastbus1.T87044.data[9],DATA12);
SIGNAL(CS1_077_E,fastbus1.Q11111.data[43],DATA12);
SIGNAL(CS1_077_T,fastbus1.T87044.data[11],DATA12);
SIGNAL(CS1_078_E,fastbus1.Q11111.data[45],DATA12);
SIGNAL(CS1_078_T,fastbus1.T87044.data[13],DATA12);
SIGNAL(CS1_079_E,fastbus1.Q11111.data[47],DATA12);
SIGNAL(CS1_079_T,fastbus1.T87044.data[15],DATA12);
SIGNAL(CS1_080_E,fastbus1.Q11111.data[16],DATA12);
SIGNAL(CS1_080_T,fastbus1.T87044.data[32],DATA12);
SIGNAL(CS1_081_E,fastbus1.Q11111.data[18],DATA12);
SIGNAL(CS1_081_T,fastbus1.T87044.data[34],DATA12);
SIGNAL(CS1_082_E,fastbus1.Q47342.data[30],DATA12);
SIGNAL(CS1_082_T,fastbus1.T87044.data[46],DATA12);
SIGNAL(CS1_083_E,fastbus1.Q47342.data[17],DATA12);
SIGNAL(CS1_083_T,fastbus1.T87044.data[25],DATA12);
SIGNAL(CS1_084_E,fastbus1.Q47342.data[19],DATA12);
SIGNAL(CS1_084_T,fastbus1.T87044.data[27],DATA12);
SIGNAL(CS1_085_E,fastbus1.Q47342.data[21],DATA12);
SIGNAL(CS1_085_T,fastbus1.T87044.data[29],DATA12);
SIGNAL(CS1_086_E,fastbus1.Q47342.data[23],DATA12);
SIGNAL(CS1_086_T,fastbus1.T87044.data[31],DATA12);
SIGNAL(CS1_087_E,fastbus1.Q47342.data[25],DATA12);
SIGNAL(CS1_087_T,fastbus1.T87044.data[41],DATA12);
SIGNAL(CS1_088_E,fastbus1.Q11111.data[20],DATA12);
SIGNAL(CS1_088_T,fastbus1.T87044.data[36],DATA12);
SIGNAL(CS1_089_E,fastbus1.Q11111.data[22],DATA12);
SIGNAL(CS1_089_T,fastbus1.T87044.data[38],DATA12);
SIGNAL(CS1_090_E,fastbus1.Q11111.data[24],DATA12);
SIGNAL(CS1_090_T,fastbus1.T81800.data[8],DATA12);
SIGNAL(CS1_091_E,fastbus1.Q11111.data[26],DATA12);
SIGNAL(CS1_091_T,fastbus1.T81800.data[10],DATA12);
SIGNAL(CS1_092_E,fastbus1.Q11111.data[28],DATA12);
SIGNAL(CS1_092_T,fastbus1.T81800.data[12],DATA12);
SIGNAL(CS1_093_E,fastbus1.Q11111.data[30],DATA12);
SIGNAL(CS1_093_T,fastbus1.T81800.data[14],DATA12);
SIGNAL(CS1_094_E,fastbus1.Q47342.data[27],DATA12);
SIGNAL(CS1_094_T,fastbus1.T87044.data[43],DATA12);
SIGNAL(CS1_095_E,fastbus1.Q47342.data[29],DATA12);
SIGNAL(CS1_095_T,fastbus1.T87044.data[45],DATA12);
SIGNAL(CS1_096_E,fastbus1.Q47342.data[31],DATA12);
SIGNAL(CS1_096_T,fastbus1.T87044.data[47],DATA12);
SIGNAL(CS1_097_E,fastbus1.Q47342.data[64],DATA12);
SIGNAL(CS1_097_T,fastbus1.T87024.data[0],DATA12);
SIGNAL(CS1_098_E,fastbus1.Q47342.data[66],DATA12);
SIGNAL(CS1_098_T,fastbus1.T87024.data[2],DATA12);
SIGNAL(CS1_099_E,fastbus1.Q47342.data[68],DATA12);
SIGNAL(CS1_099_T,fastbus1.T87024.data[4],DATA12);
SIGNAL(CS1_100_E,fastbus1.Q11111.data[17],DATA12);
SIGNAL(CS1_100_T,fastbus1.T87044.data[33],DATA12);
SIGNAL(CS1_101_E,fastbus1.Q11111.data[19],DATA12);
SIGNAL(CS1_101_T,fastbus1.T87044.data[35],DATA12);
SIGNAL(CS1_102_E,fastbus1.Q11111.data[21],DATA12);
SIGNAL(CS1_102_T,fastbus1.T87044.data[37],DATA12);
SIGNAL(CS1_103_E,fastbus1.Q11111.data[23],DATA12);
SIGNAL(CS1_103_T,fastbus1.T87044.data[39],DATA12);
SIGNAL(CS1_104_E,fastbus1.Q11111.data[25],DATA12);
SIGNAL(CS1_104_T,fastbus1.T81800.data[9],DATA12);
SIGNAL(CS1_105_E,fastbus1.Q11111.data[27],DATA12);
SIGNAL(CS1_105_T,fastbus1.T81800.data[11],DATA12);
SIGNAL(CS1_106_E,fastbus1.Q47342.data[70],DATA12);
SIGNAL(CS1_106_T,fastbus1.T87024.data[6],DATA12);
SIGNAL(CS1_107_E,fastbus1.Q47342.data[72],DATA12);
SIGNAL(CS1_107_T,fastbus1.T87024.data[8],DATA12);
SIGNAL(CS1_108_E,fastbus1.Q47342.data[74],DATA12);
SIGNAL(CS1_108_T,fastbus1.T87024.data[10],DATA12);
SIGNAL(CS1_109_E,fastbus1.Q47342.data[76],DATA12);
SIGNAL(CS1_109_T,fastbus1.T87024.data[12],DATA12);
SIGNAL(CS1_110_E,fastbus1.Q47342.data[78],DATA12);
SIGNAL(CS1_110_T,fastbus1.T87024.data[14],DATA12);
SIGNAL(CS1_111_E,fastbus1.Q47342.data[65],DATA12);
SIGNAL(CS1_111_T,fastbus1.T87024.data[1],DATA12);
SIGNAL(CS1_112_E,fastbus1.Q11111.data[29],DATA12);
SIGNAL(CS1_112_T,fastbus1.T81800.data[13],DATA12);
SIGNAL(CS1_113_E,fastbus1.Q11111.data[31],DATA12);
SIGNAL(CS1_113_T,fastbus1.T81800.data[15],DATA12);
SIGNAL(CS1_114_E,fastbus1.Q11111.data[0],DATA12);
SIGNAL(CS1_114_T,fastbus1.T81800.data[24],DATA12);
SIGNAL(CS1_115_E,fastbus1.Q11111.data[2],DATA12);
SIGNAL(CS1_115_T,fastbus1.T81800.data[26],DATA12);
SIGNAL(CS1_116_E,fastbus1.Q11111.data[4],DATA12);
SIGNAL(CS1_116_T,fastbus1.T81800.data[28],DATA12);
SIGNAL(CS1_117_E,fastbus1.Q11111.data[6],DATA12);
SIGNAL(CS1_117_T,fastbus1.T81800.data[30],DATA12);
SIGNAL(CS1_118_E,fastbus1.Q47342.data[67],DATA12);
SIGNAL(CS1_118_T,fastbus1.T87024.data[3],DATA12);
SIGNAL(CS1_119_E,fastbus1.Q47342.data[69],DATA12);
SIGNAL(CS1_119_T,fastbus1.T87024.data[5],DATA12);
SIGNAL(CS1_120_E,fastbus1.Q47342.data[71],DATA12);
SIGNAL(CS1_120_T,fastbus1.T87024.data[7],DATA12);
SIGNAL(CS1_121_E,fastbus1.Q47342.data[73],DATA12);
SIGNAL(CS1_121_T,fastbus1.T87024.data[9],DATA12);
SIGNAL(CS1_122_E,fastbus1.Q47342.data[75],DATA12);
SIGNAL(CS1_122_T,fastbus1.T87024.data[11],DATA12);
SIGNAL(CS1_123_E,fastbus1.Q47342.data[77],DATA12);
SIGNAL(CS1_123_T,fastbus1.T87024.data[13],DATA12);
SIGNAL(CS1_124_E,fastbus1.Q11111.data[8],DATA12);
SIGNAL(CS1_124_T,fastbus1.T81800.data[32],DATA12);
SIGNAL(CS1_125_E,fastbus1.Q11111.data[10],DATA12);
SIGNAL(CS1_125_T,fastbus1.T81800.data[34],DATA12);
SIGNAL(CS1_126_E,fastbus1.Q11111.data[12],DATA12);
SIGNAL(CS1_126_T,fastbus1.T81800.data[36],DATA12);
SIGNAL(CS1_127_E,fastbus1.Q11111.data[14],DATA12);
SIGNAL(CS1_127_T,fastbus1.T81800.data[38],DATA12);
SIGNAL(CS1_128_E,fastbus1.Q11111.data[1],DATA12);
SIGNAL(CS1_128_T,fastbus1.T81800.data[25],DATA12);
SIGNAL(CS1_129_E,fastbus1.Q11111.data[3],DATA12);
SIGNAL(CS1_129_T,fastbus1.T81800.data[27],DATA12);
SIGNAL(CS1_130_E,fastbus1.Q47342.data[79],DATA12);
SIGNAL(CS1_130_T,fastbus1.T87024.data[15],DATA12);
SIGNAL(CS1_131_E,fastbus1.Q11111.data[64],DATA12);
SIGNAL(CS1_131_T,fastbus1.T81800.data[40],DATA12);
SIGNAL(CS1_132_E,fastbus1.Q11111.data[66],DATA12);
SIGNAL(CS1_132_T,fastbus1.T81800.data[42],DATA12);
SIGNAL(CS1_133_E,fastbus1.Q11111.data[68],DATA12);
SIGNAL(CS1_133_T,fastbus1.T81800.data[44],DATA12);
SIGNAL(CS1_134_E,fastbus1.Q11111.data[70],DATA12);
SIGNAL(CS1_134_T,fastbus1.T81800.data[46],DATA12);
SIGNAL(CS1_135_E,fastbus1.Q11111.data[72],DATA12);
SIGNAL(CS1_135_T,fastbus1.T87024.data[40],DATA12);
SIGNAL(CS1_136_E,fastbus1.Q11111.data[5],DATA12);
SIGNAL(CS1_136_T,fastbus1.T81800.data[29],DATA12);
SIGNAL(CS1_137_E,fastbus1.Q11111.data[7],DATA12);
SIGNAL(CS1_137_T,fastbus1.T81800.data[31],DATA12);
SIGNAL(CS1_138_E,fastbus1.Q11111.data[9],DATA12);
SIGNAL(CS1_138_T,fastbus1.T81800.data[33],DATA12);
SIGNAL(CS1_139_E,fastbus1.Q11111.data[11],DATA12);
SIGNAL(CS1_139_T,fastbus1.T81800.data[35],DATA12);
SIGNAL(CS1_140_E,fastbus1.Q11111.data[13],DATA12);
SIGNAL(CS1_140_T,fastbus1.T81800.data[37],DATA12);
SIGNAL(CS1_141_E,fastbus1.Q11111.data[15],DATA12);
SIGNAL(CS1_141_T,fastbus1.T81800.data[39],DATA12);
SIGNAL(CS1_142_E,fastbus1.Q11111.data[74],DATA12);
SIGNAL(CS1_142_T,fastbus1.T87024.data[42],DATA12);
SIGNAL(CS1_143_E,fastbus1.Q11111.data[76],DATA12);
SIGNAL(CS1_143_T,fastbus1.T87024.data[44],DATA12);
SIGNAL(CS1_144_E,fastbus1.Q11111.data[78],DATA12);
SIGNAL(CS1_144_T,fastbus1.T87024.data[46],DATA12);
SIGNAL(CV1_001_E,fastbus1.Q46848.data[48],DATA12);
SIGNAL(CV1_001_T,fastbus1.T81800.data[48],DATA12);
SIGNAL(CV1_002_E,fastbus1.Q46848.data[50],DATA12);
SIGNAL(CV1_002_T,fastbus1.T81800.data[50],DATA12);
SIGNAL(CV1_003_E,fastbus1.Q46848.data[52],DATA12);
SIGNAL(CV1_003_T,fastbus1.T81800.data[52],DATA12);
SIGNAL(CV1_004_E,fastbus1.Q46848.data[54],DATA12);
SIGNAL(CV1_004_T,fastbus1.T81800.data[54],DATA12);
SIGNAL(CV1_005_E,fastbus1.Q46848.data[56],DATA12);
SIGNAL(CV1_005_T,fastbus1.T81800.data[56],DATA12);
SIGNAL(CV1_006_E,fastbus1.Q46848.data[58],DATA12);
SIGNAL(CV1_006_T,fastbus1.T81800.data[58],DATA12);
SIGNAL(CV1_007_E,fastbus1.Q46848.data[60],DATA12);
SIGNAL(CV1_007_T,fastbus1.T81800.data[60],DATA12);
SIGNAL(CV1_008_E,fastbus1.Q46848.data[62],DATA12);
SIGNAL(CV1_008_T,fastbus1.T81800.data[62],DATA12);
SIGNAL(CV1_009_E,fastbus1.Q46848.data[51],DATA12);
SIGNAL(CV1_009_T,fastbus1.T81800.data[49],DATA12);
SIGNAL(CV1_010_E,fastbus1.Q46848.data[53],DATA12);
SIGNAL(CV1_010_T,fastbus1.T81800.data[53],DATA12);
SIGNAL(CV1_011_E,fastbus1.Q46848.data[55],DATA12);
SIGNAL(CV1_011_T,fastbus1.T81800.data[55],DATA12);
SIGNAL(CV1_012_E,fastbus1.Q46848.data[57],DATA12);
SIGNAL(CV1_012_T,fastbus1.T81800.data[57],DATA12);
SIGNAL(GFI01_01_E,fastbus1.Q46848.data[0],DATA12);
SIGNAL(GFI01_02_E,fastbus1.Q46848.data[1],DATA12);
SIGNAL(GFI01_03_E,fastbus1.Q46848.data[2],DATA12);
SIGNAL(GFI01_04_E,fastbus1.Q46848.data[3],DATA12);
SIGNAL(GFI01_05_E,fastbus1.Q46848.data[4],DATA12);
SIGNAL(GFI01_06_E,fastbus1.Q46848.data[5],DATA12);
SIGNAL(GFI01_07_E,fastbus1.Q46848.data[6],DATA12);
SIGNAL(GFI01_08_E,fastbus1.Q46848.data[7],DATA12);
SIGNAL(GFI01_09_E,fastbus1.Q46848.data[8],DATA12);
SIGNAL(GFI01_10_E,fastbus1.Q46848.data[9],DATA12);
SIGNAL(GFI01_11_E,fastbus1.Q46848.data[10],DATA12);
SIGNAL(GFI01_12_E,fastbus1.Q46848.data[11],DATA12);
SIGNAL(GFI01_13_E,fastbus1.Q46848.data[12],DATA12);
SIGNAL(GFI01_14_E,fastbus1.Q46848.data[13],DATA12);
SIGNAL(GFI01_15_E,fastbus1.Q46848.data[14],DATA12);
SIGNAL(GFI01_16_E,fastbus1.Q46848.data[15],DATA12);
SIGNAL(GFI01_17_E,fastbus1.Q46848.data[16],DATA12);
SIGNAL(GFI01_18_E,fastbus1.Q46848.data[17],DATA12);
SIGNAL(GFI01_19_E,fastbus1.Q46848.data[18],DATA12);
SIGNAL(GFI01_20_E,fastbus1.Q46848.data[19],DATA12);
SIGNAL(GFI01_21_E,fastbus1.Q46848.data[20],DATA12);
SIGNAL(GFI01_22_E,fastbus1.Q46848.data[21],DATA12);
SIGNAL(GFI01_23_E,fastbus1.Q46848.data[22],DATA12);
SIGNAL(GFI01_24_E,fastbus1.Q46848.data[23],DATA12);
SIGNAL(GFI01_25_E,fastbus1.Q46848.data[24],DATA12);
SIGNAL(GFI01_26_E,fastbus1.Q46848.data[25],DATA12);
SIGNAL(GFI01_27_E,fastbus1.Q46848.data[26],DATA12);
SIGNAL(GFI01_28_E,fastbus1.Q46848.data[27],DATA12);
SIGNAL(GFI01_29_E,fastbus1.Q46848.data[28],DATA12);
SIGNAL(GFI01_30_E,fastbus1.Q46848.data[29],DATA12);
SIGNAL(GFI01_31_E,fastbus1.Q46848.data[30],DATA12);
SIGNAL(GFI01_32_E,fastbus1.Q46848.data[31],DATA12);
SIGNAL(GFI01_33_E,fastbus1.Q46848.data[32],DATA12);
SIGNAL(GFI01_34_E,fastbus1.Q46848.data[33],DATA12);
SIGNAL(GFI02_01_E,fastbus1.Q47264.data[0],DATA12);
SIGNAL(GFI02_02_E,fastbus1.Q47264.data[1],DATA12);
SIGNAL(GFI02_03_E,fastbus1.Q47264.data[2],DATA12);
SIGNAL(GFI02_04_E,fastbus1.Q47264.data[3],DATA12);
SIGNAL(GFI02_05_E,fastbus1.Q47264.data[4],DATA12);
SIGNAL(GFI02_06_E,fastbus1.Q47264.data[5],DATA12);
SIGNAL(GFI02_07_E,fastbus1.Q47264.data[6],DATA12);
SIGNAL(GFI02_08_E,fastbus1.Q47264.data[7],DATA12);
SIGNAL(GFI02_09_E,fastbus1.Q47264.data[8],DATA12);
SIGNAL(GFI02_10_E,fastbus1.Q47264.data[9],DATA12);
SIGNAL(GFI02_11_E,fastbus1.Q47264.data[10],DATA12);
SIGNAL(GFI02_12_E,fastbus1.Q47264.data[11],DATA12);
SIGNAL(GFI02_13_E,fastbus1.Q47264.data[12],DATA12);
SIGNAL(GFI02_14_E,fastbus1.Q47264.data[13],DATA12);
SIGNAL(GFI02_15_E,fastbus1.Q47264.data[14],DATA12);
SIGNAL(GFI02_16_E,fastbus1.Q47264.data[15],DATA12);
SIGNAL(GFI02_17_E,fastbus1.Q47264.data[16],DATA12);
SIGNAL(GFI02_18_E,fastbus1.Q47264.data[17],DATA12);
SIGNAL(GFI02_19_E,fastbus1.Q47264.data[18],DATA12);
SIGNAL(GFI02_20_E,fastbus1.Q47264.data[19],DATA12);
SIGNAL(GFI02_21_E,fastbus1.Q47264.data[20],DATA12);
SIGNAL(GFI02_22_E,fastbus1.Q47264.data[21],DATA12);
SIGNAL(GFI02_23_E,fastbus1.Q47264.data[22],DATA12);
SIGNAL(GFI02_24_E,fastbus1.Q47264.data[23],DATA12);
SIGNAL(GFI02_25_E,fastbus1.Q47264.data[24],DATA12);
SIGNAL(GFI02_26_E,fastbus1.Q47264.data[25],DATA12);
SIGNAL(GFI02_27_E,fastbus1.Q47264.data[26],DATA12);
SIGNAL(GFI02_28_E,fastbus1.Q47264.data[27],DATA12);
SIGNAL(GFI02_29_E,fastbus1.Q47264.data[28],DATA12);
SIGNAL(GFI02_30_E,fastbus1.Q47264.data[29],DATA12);
SIGNAL(GFI02_31_E,fastbus1.Q47264.data[30],DATA12);
SIGNAL(GFI02_32_E,fastbus1.Q47264.data[31],DATA12);
SIGNAL(GFI02_33_E,fastbus1.Q47264.data[64],DATA12);
SIGNAL(GFI02_34_E,fastbus1.Q47264.data[65],DATA12);
SIGNAL(GFI03_01_E,fastbus1.Q47264.data[32],DATA12);
SIGNAL(GFI03_02_E,fastbus1.Q47264.data[33],DATA12);
SIGNAL(GFI03_03_E,fastbus1.Q47264.data[34],DATA12);
SIGNAL(GFI03_04_E,fastbus1.Q47264.data[35],DATA12);
SIGNAL(GFI03_05_E,fastbus1.Q47264.data[36],DATA12);
SIGNAL(GFI03_06_E,fastbus1.Q47264.data[37],DATA12);
SIGNAL(GFI03_07_E,fastbus1.Q47264.data[38],DATA12);
SIGNAL(GFI03_08_E,fastbus1.Q47264.data[39],DATA12);
SIGNAL(GFI03_09_E,fastbus1.Q47264.data[40],DATA12);
SIGNAL(GFI03_10_E,fastbus1.Q47264.data[41],DATA12);
SIGNAL(GFI03_11_E,fastbus1.Q47264.data[42],DATA12);
SIGNAL(GFI03_12_E,fastbus1.Q47264.data[43],DATA12);
SIGNAL(GFI03_13_E,fastbus1.Q47264.data[44],DATA12);
SIGNAL(GFI03_14_E,fastbus1.Q47264.data[45],DATA12);
SIGNAL(GFI03_15_E,fastbus1.Q47264.data[46],DATA12);
SIGNAL(GFI03_16_E,fastbus1.Q47264.data[47],DATA12);
SIGNAL(GFI03_17_E,fastbus1.Q47264.data[48],DATA12);
SIGNAL(GFI03_18_E,fastbus1.Q47264.data[49],DATA12);
SIGNAL(GFI03_19_E,fastbus1.Q47264.data[50],DATA12);
SIGNAL(GFI03_20_E,fastbus1.Q47264.data[51],DATA12);
SIGNAL(GFI03_21_E,fastbus1.Q47264.data[52],DATA12);
SIGNAL(GFI03_22_E,fastbus1.Q47264.data[53],DATA12);
SIGNAL(GFI03_23_E,fastbus1.Q47264.data[54],DATA12);
SIGNAL(GFI03_24_E,fastbus1.Q47264.data[55],DATA12);
SIGNAL(GFI03_25_E,fastbus1.Q47264.data[56],DATA12);
SIGNAL(GFI03_26_E,fastbus1.Q47264.data[57],DATA12);
SIGNAL(GFI03_27_E,fastbus1.Q47264.data[58],DATA12);
SIGNAL(GFI03_28_E,fastbus1.Q47264.data[59],DATA12);
SIGNAL(GFI03_29_E,fastbus1.Q47264.data[60],DATA12);
SIGNAL(GFI03_30_E,fastbus1.Q47264.data[61],DATA12);
SIGNAL(GFI03_31_E,fastbus1.Q47264.data[62],DATA12);
SIGNAL(GFI03_32_E,fastbus1.Q47264.data[63],DATA12);
SIGNAL(GFI03_33_E,fastbus1.Q47264.data[66],DATA12);
SIGNAL(GFI03_34_E,fastbus1.Q47264.data[67],DATA12);
SIGNAL(N01_01_1_E,fastbus1.Q46993.data[0],DATA12);
SIGNAL(N01_01_1_T,fastbus2.T48834.data[0],DATA12);
SIGNAL(N01_01_2_E,fastbus1.Q46993.data[44],DATA12);
SIGNAL(N01_01_2_T,fastbus2.T81795.data[12],DATA12);
SIGNAL(N01_02_1_E,fastbus1.Q46993.data[4],DATA12);
SIGNAL(N01_02_1_T,fastbus2.T48834.data[4],DATA12);
SIGNAL(N01_02_2_E,fastbus1.Q46993.data[40],DATA12);
SIGNAL(N01_02_2_T,fastbus2.T81795.data[8],DATA12);
SIGNAL(N01_03_1_E,fastbus1.Q46993.data[8],DATA12);
SIGNAL(N01_03_1_T,fastbus2.T48834.data[8],DATA12);
SIGNAL(N01_03_2_E,fastbus1.Q46993.data[16],DATA12);
SIGNAL(N01_03_2_T,fastbus2.T81806.data[0],DATA12);
SIGNAL(N01_04_1_E,fastbus1.Q46993.data[12],DATA12);
SIGNAL(N01_04_1_T,fastbus2.T48834.data[12],DATA12);
SIGNAL(N01_04_2_E,fastbus1.Q46993.data[20],DATA12);
SIGNAL(N01_04_2_T,fastbus2.T81806.data[4],DATA12);
SIGNAL(N01_05_1_E,fastbus1.Q46993.data[1],DATA12);
SIGNAL(N01_05_1_T,fastbus2.T48834.data[1],DATA12);
SIGNAL(N01_05_2_E,fastbus1.Q46993.data[41],DATA12);
SIGNAL(N01_05_2_T,fastbus2.T81795.data[9],DATA12);
SIGNAL(N01_06_1_E,fastbus1.Q46993.data[5],DATA12);
SIGNAL(N01_06_1_T,fastbus2.T48834.data[5],DATA12);
SIGNAL(N01_06_2_E,fastbus1.Q46993.data[45],DATA12);
SIGNAL(N01_06_2_T,fastbus2.T81795.data[13],DATA12);
SIGNAL(N01_07_1_E,fastbus1.Q46993.data[9],DATA12);
SIGNAL(N01_07_1_T,fastbus2.T48834.data[9],DATA12);
SIGNAL(N01_07_2_E,fastbus1.Q46993.data[24],DATA12);
SIGNAL(N01_07_2_T,fastbus2.T81806.data[8],DATA12);
SIGNAL(N01_08_1_E,fastbus1.Q46993.data[13],DATA12);
SIGNAL(N01_08_1_T,fastbus2.T48834.data[13],DATA12);
SIGNAL(N01_08_2_E,fastbus1.Q46993.data[28],DATA12);
SIGNAL(N01_08_2_T,fastbus2.T81806.data[12],DATA12);
SIGNAL(N01_09_1_E,fastbus1.Q46993.data[2],DATA12);
SIGNAL(N01_09_1_T,fastbus2.T48834.data[2],DATA12);
SIGNAL(N01_09_2_E,fastbus1.Q46993.data[17],DATA12);
SIGNAL(N01_09_2_T,fastbus2.T81806.data[1],DATA12);
SIGNAL(N01_10_1_E,fastbus1.Q46993.data[6],DATA12);
SIGNAL(N01_10_1_T,fastbus2.T48834.data[6],DATA12);
SIGNAL(N01_10_2_E,fastbus1.Q46993.data[21],DATA12);
SIGNAL(N01_10_2_T,fastbus2.T81806.data[5],DATA12);
SIGNAL(N01_11_1_E,fastbus1.Q46993.data[10],DATA12);
SIGNAL(N01_11_1_T,fastbus2.T48834.data[10],DATA12);
SIGNAL(N01_11_2_E,fastbus1.Q46993.data[25],DATA12);
SIGNAL(N01_11_2_T,fastbus2.T81806.data[9],DATA12);
SIGNAL(N01_12_1_E,fastbus1.Q46993.data[14],DATA12);
SIGNAL(N01_12_1_T,fastbus2.T48834.data[14],DATA12);
SIGNAL(N01_12_2_E,fastbus1.Q46993.data[29],DATA12);
SIGNAL(N01_12_2_T,fastbus2.T81806.data[13],DATA12);
SIGNAL(N01_13_1_E,fastbus1.Q46993.data[3],DATA12);
SIGNAL(N01_13_1_T,fastbus2.T48834.data[3],DATA12);
SIGNAL(N01_13_2_E,fastbus1.Q46993.data[18],DATA12);
SIGNAL(N01_13_2_T,fastbus2.T81806.data[2],DATA12);
SIGNAL(N01_14_1_E,fastbus1.Q46993.data[7],DATA12);
SIGNAL(N01_14_1_T,fastbus2.T48834.data[7],DATA12);
SIGNAL(N01_14_2_E,fastbus1.Q46993.data[22],DATA12);
SIGNAL(N01_14_2_T,fastbus2.T81806.data[6],DATA12);
SIGNAL(N01_15_1_E,fastbus1.Q46993.data[46],DATA12);
SIGNAL(N01_15_1_T,fastbus2.T81795.data[14],DATA12);
SIGNAL(N01_15_2_E,fastbus1.Q46993.data[26],DATA12);
SIGNAL(N01_15_2_T,fastbus2.T81806.data[10],DATA12);
SIGNAL(N01_16_1_E,fastbus1.Q46993.data[42],DATA12);
SIGNAL(N01_16_1_T,fastbus2.T81795.data[10],DATA12);
SIGNAL(N01_16_2_E,fastbus1.Q46993.data[30],DATA12);
SIGNAL(N01_16_2_T,fastbus2.T81806.data[14],DATA12);
SIGNAL(N01_17_1_E,fastbus1.Q46993.data[11],DATA12);
SIGNAL(N01_17_1_T,fastbus2.T48834.data[11],DATA12);
SIGNAL(N01_17_2_E,fastbus1.Q46993.data[19],DATA12);
SIGNAL(N01_17_2_T,fastbus2.T81806.data[3],DATA12);
SIGNAL(N01_18_1_E,fastbus1.Q46993.data[15],DATA12);
SIGNAL(N01_18_1_T,fastbus2.T48834.data[15],DATA12);
SIGNAL(N01_18_2_E,fastbus1.Q46993.data[23],DATA12);
SIGNAL(N01_18_2_T,fastbus2.T81806.data[7],DATA12);
SIGNAL(N01_19_1_E,fastbus1.Q46993.data[47],DATA12);
SIGNAL(N01_19_1_T,fastbus2.T81795.data[15],DATA12);
SIGNAL(N01_19_2_E,fastbus1.Q46993.data[27],DATA12);
SIGNAL(N01_19_2_T,fastbus2.T81806.data[11],DATA12);
SIGNAL(N01_20_1_E,fastbus1.Q46993.data[43],DATA12);
SIGNAL(N01_20_1_T,fastbus2.T81795.data[11],DATA12);
SIGNAL(N01_20_2_E,fastbus1.Q46993.data[31],DATA12);
SIGNAL(N01_20_2_T,fastbus2.T81806.data[15],DATA12);
SIGNAL(N02_01_1_E,fastbus1.Q15358.data[0],DATA12);
SIGNAL(N02_01_1_T,fastbus2.T81859.data[0],DATA12);
SIGNAL(N02_01_2_E,fastbus1.Q46993.data[36],DATA12);
SIGNAL(N02_01_2_T,fastbus2.T81795.data[4],DATA12);
SIGNAL(N02_02_1_E,fastbus1.Q15358.data[4],DATA12);
SIGNAL(N02_02_1_T,fastbus2.T81859.data[4],DATA12);
SIGNAL(N02_02_2_E,fastbus1.Q46993.data[32],DATA12);
SIGNAL(N02_02_2_T,fastbus2.T81795.data[0],DATA12);
SIGNAL(N02_03_1_E,fastbus1.Q15358.data[8],DATA12);
SIGNAL(N02_03_1_T,fastbus2.T81859.data[8],DATA12);
SIGNAL(N02_03_2_E,fastbus1.Q15358.data[16],DATA12);
SIGNAL(N02_03_2_T,fastbus2.T81808.data[0],DATA12);
SIGNAL(N02_04_1_E,fastbus1.Q15358.data[12],DATA12);
SIGNAL(N02_04_1_T,fastbus2.T81859.data[12],DATA12);
SIGNAL(N02_04_2_E,fastbus1.Q15358.data[20],DATA12);
SIGNAL(N02_04_2_T,fastbus2.T81808.data[4],DATA12);
SIGNAL(N02_05_1_E,fastbus1.Q15358.data[1],DATA12);
SIGNAL(N02_05_1_T,fastbus2.T81859.data[1],DATA12);
SIGNAL(N02_05_2_E,fastbus1.Q46993.data[37],DATA12);
SIGNAL(N02_05_2_T,fastbus2.T81795.data[5],DATA12);
SIGNAL(N02_06_1_E,fastbus1.Q15358.data[5],DATA12);
SIGNAL(N02_06_1_T,fastbus2.T81859.data[5],DATA12);
SIGNAL(N02_06_2_E,fastbus1.Q46993.data[33],DATA12);
SIGNAL(N02_06_2_T,fastbus2.T81795.data[1],DATA12);
SIGNAL(N02_07_1_E,fastbus1.Q15358.data[9],DATA12);
SIGNAL(N02_07_1_T,fastbus2.T81859.data[9],DATA12);
SIGNAL(N02_07_2_E,fastbus1.Q15358.data[24],DATA12);
SIGNAL(N02_07_2_T,fastbus2.T81808.data[8],DATA12);
SIGNAL(N02_08_1_E,fastbus1.Q15358.data[13],DATA12);
SIGNAL(N02_08_1_T,fastbus2.T81859.data[13],DATA12);
SIGNAL(N02_08_2_E,fastbus1.Q15358.data[28],DATA12);
SIGNAL(N02_08_2_T,fastbus2.T81808.data[12],DATA12);
SIGNAL(N02_09_1_E,fastbus1.Q15358.data[2],DATA12);
SIGNAL(N02_09_1_T,fastbus2.T81859.data[2],DATA12);
SIGNAL(N02_09_2_E,fastbus1.Q15358.data[17],DATA12);
SIGNAL(N02_09_2_T,fastbus2.T81808.data[1],DATA12);
SIGNAL(N02_10_1_E,fastbus1.Q15358.data[6],DATA12);
SIGNAL(N02_10_1_T,fastbus2.T81859.data[6],DATA12);
SIGNAL(N02_10_2_E,fastbus1.Q15358.data[21],DATA12);
SIGNAL(N02_10_2_T,fastbus2.T81808.data[5],DATA12);
SIGNAL(N02_11_1_E,fastbus1.Q15358.data[10],DATA12);
SIGNAL(N02_11_1_T,fastbus2.T81859.data[10],DATA12);
SIGNAL(N02_11_2_E,fastbus1.Q15358.data[25],DATA12);
SIGNAL(N02_11_2_T,fastbus2.T81808.data[9],DATA12);
SIGNAL(N02_12_1_E,fastbus1.Q15358.data[14],DATA12);
SIGNAL(N02_12_1_T,fastbus2.T81859.data[14],DATA12);
SIGNAL(N02_12_2_E,fastbus1.Q15358.data[29],DATA12);
SIGNAL(N02_12_2_T,fastbus2.T81808.data[13],DATA12);
SIGNAL(N02_13_1_E,fastbus1.Q15358.data[3],DATA12);
SIGNAL(N02_13_1_T,fastbus2.T81859.data[3],DATA12);
SIGNAL(N02_13_2_E,fastbus1.Q15358.data[18],DATA12);
SIGNAL(N02_13_2_T,fastbus2.T81808.data[2],DATA12);
SIGNAL(N02_14_1_E,fastbus1.Q15358.data[7],DATA12);
SIGNAL(N02_14_1_T,fastbus2.T81859.data[7],DATA12);
SIGNAL(N02_14_2_E,fastbus1.Q15358.data[22],DATA12);
SIGNAL(N02_14_2_T,fastbus2.T81808.data[6],DATA12);
SIGNAL(N02_15_1_E,fastbus1.Q46993.data[38],DATA12);
SIGNAL(N02_15_1_T,fastbus2.T81795.data[6],DATA12);
SIGNAL(N02_15_2_E,fastbus1.Q15358.data[26],DATA12);
SIGNAL(N02_15_2_T,fastbus2.T81808.data[10],DATA12);
SIGNAL(N02_16_1_E,fastbus1.Q46993.data[34],DATA12);
SIGNAL(N02_16_1_T,fastbus2.T81795.data[2],DATA12);
SIGNAL(N02_16_2_E,fastbus1.Q15358.data[30],DATA12);
SIGNAL(N02_16_2_T,fastbus2.T81808.data[14],DATA12);
SIGNAL(N02_17_1_E,fastbus1.Q15358.data[11],DATA12);
SIGNAL(N02_17_1_T,fastbus2.T81859.data[11],DATA12);
SIGNAL(N02_17_2_E,fastbus1.Q15358.data[19],DATA12);
SIGNAL(N02_17_2_T,fastbus2.T81808.data[3],DATA12);
SIGNAL(N02_18_1_E,fastbus1.Q15358.data[15],DATA12);
SIGNAL(N02_18_1_T,fastbus2.T81859.data[15],DATA12);
SIGNAL(N02_18_2_E,fastbus1.Q15358.data[23],DATA12);
SIGNAL(N02_18_2_T,fastbus2.T81808.data[7],DATA12);
SIGNAL(N02_19_1_E,fastbus1.Q46993.data[39],DATA12);
SIGNAL(N02_19_1_T,fastbus2.T81795.data[7],DATA12);
SIGNAL(N02_19_2_E,fastbus1.Q15358.data[27],DATA12);
SIGNAL(N02_19_2_T,fastbus2.T81808.data[11],DATA12);
SIGNAL(N02_20_1_E,fastbus1.Q46993.data[35],DATA12);
SIGNAL(N02_20_1_T,fastbus2.T81795.data[3],DATA12);
SIGNAL(N02_20_2_E,fastbus1.Q15358.data[31],DATA12);
SIGNAL(N02_20_2_T,fastbus2.T81808.data[15],DATA12);
SIGNAL(N03_01_1_E,fastbus1.Q15358.data[32],DATA12);
SIGNAL(N03_01_1_T,fastbus2.T48854.data[0],DATA12);
SIGNAL(N03_01_2_E,fastbus1.Q46962.data[28],DATA12);
SIGNAL(N03_01_2_T,fastbus2.T48834.data[28],DATA12);
SIGNAL(N03_02_1_E,fastbus1.Q15358.data[36],DATA12);
SIGNAL(N03_02_1_T,fastbus2.T48854.data[4],DATA12);
SIGNAL(N03_02_2_E,fastbus1.Q46962.data[24],DATA12);
SIGNAL(N03_02_2_T,fastbus2.T48834.data[24],DATA12);
SIGNAL(N03_03_1_E,fastbus1.Q15358.data[40],DATA12);
SIGNAL(N03_03_1_T,fastbus2.T48854.data[8],DATA12);
SIGNAL(N03_03_2_E,fastbus1.Q46962.data[0],DATA12);
SIGNAL(N03_03_2_T,fastbus2.T87047.data[0],DATA12);
SIGNAL(N03_04_1_E,fastbus1.Q15358.data[44],DATA12);
SIGNAL(N03_04_1_T,fastbus2.T48854.data[12],DATA12);
SIGNAL(N03_04_2_E,fastbus1.Q46962.data[4],DATA12);
SIGNAL(N03_04_2_T,fastbus2.T87047.data[4],DATA12);
SIGNAL(N03_05_1_E,fastbus1.Q15358.data[33],DATA12);
SIGNAL(N03_05_1_T,fastbus2.T48854.data[1],DATA12);
SIGNAL(N03_05_2_E,fastbus1.Q46962.data[25],DATA12);
SIGNAL(N03_05_2_T,fastbus2.T48834.data[25],DATA12);
SIGNAL(N03_06_1_E,fastbus1.Q15358.data[37],DATA12);
SIGNAL(N03_06_1_T,fastbus2.T48854.data[5],DATA12);
SIGNAL(N03_06_2_E,fastbus1.Q46962.data[29],DATA12);
SIGNAL(N03_06_2_T,fastbus2.T48834.data[29],DATA12);
SIGNAL(N03_07_1_E,fastbus1.Q15358.data[41],DATA12);
SIGNAL(N03_07_1_T,fastbus2.T48854.data[9],DATA12);
SIGNAL(N03_07_2_E,fastbus1.Q46962.data[8],DATA12);
SIGNAL(N03_07_2_T,fastbus2.T87047.data[8],DATA12);
SIGNAL(N03_08_1_E,fastbus1.Q15358.data[45],DATA12);
SIGNAL(N03_08_1_T,fastbus2.T48854.data[13],DATA12);
SIGNAL(N03_08_2_E,fastbus1.Q46962.data[12],DATA12);
SIGNAL(N03_08_2_T,fastbus2.T87047.data[12],DATA12);
SIGNAL(N03_09_1_E,fastbus1.Q15358.data[34],DATA12);
SIGNAL(N03_09_1_T,fastbus2.T48854.data[2],DATA12);
SIGNAL(N03_09_2_E,fastbus1.Q46962.data[1],DATA12);
SIGNAL(N03_09_2_T,fastbus2.T87047.data[1],DATA12);
SIGNAL(N03_10_1_E,fastbus1.Q15358.data[38],DATA12);
SIGNAL(N03_10_1_T,fastbus2.T48854.data[6],DATA12);
SIGNAL(N03_10_2_E,fastbus1.Q46962.data[5],DATA12);
SIGNAL(N03_10_2_T,fastbus2.T87047.data[5],DATA12);
SIGNAL(N03_11_1_E,fastbus1.Q15358.data[42],DATA12);
SIGNAL(N03_11_1_T,fastbus2.T48854.data[10],DATA12);
SIGNAL(N03_11_2_E,fastbus1.Q46962.data[9],DATA12);
SIGNAL(N03_11_2_T,fastbus2.T87047.data[9],DATA12);
SIGNAL(N03_12_1_E,fastbus1.Q15358.data[46],DATA12);
SIGNAL(N03_12_1_T,fastbus2.T48854.data[14],DATA12);
SIGNAL(N03_12_2_E,fastbus1.Q46962.data[13],DATA12);
SIGNAL(N03_12_2_T,fastbus2.T87047.data[13],DATA12);
SIGNAL(N03_13_1_E,fastbus1.Q15358.data[35],DATA12);
SIGNAL(N03_13_1_T,fastbus2.T48854.data[3],DATA12);
SIGNAL(N03_13_2_E,fastbus1.Q46962.data[2],DATA12);
SIGNAL(N03_13_2_T,fastbus2.T87047.data[2],DATA12);
SIGNAL(N03_14_1_E,fastbus1.Q15358.data[39],DATA12);
SIGNAL(N03_14_1_T,fastbus2.T48854.data[7],DATA12);
SIGNAL(N03_14_2_E,fastbus1.Q46962.data[6],DATA12);
SIGNAL(N03_14_2_T,fastbus2.T87047.data[6],DATA12);
SIGNAL(N03_15_1_E,fastbus1.Q46962.data[30],DATA12);
SIGNAL(N03_15_1_T,fastbus2.T48834.data[30],DATA12);
SIGNAL(N03_15_2_E,fastbus1.Q46962.data[10],DATA12);
SIGNAL(N03_15_2_T,fastbus2.T87047.data[10],DATA12);
SIGNAL(N03_16_1_E,fastbus1.Q46962.data[26],DATA12);
SIGNAL(N03_16_1_T,fastbus2.T48834.data[26],DATA12);
SIGNAL(N03_16_2_E,fastbus1.Q46962.data[14],DATA12);
SIGNAL(N03_16_2_T,fastbus2.T87047.data[14],DATA12);
SIGNAL(N03_17_1_E,fastbus1.Q15358.data[43],DATA12);
SIGNAL(N03_17_1_T,fastbus2.T48854.data[11],DATA12);
SIGNAL(N03_17_2_E,fastbus1.Q46962.data[3],DATA12);
SIGNAL(N03_17_2_T,fastbus2.T87047.data[3],DATA12);
SIGNAL(N03_18_1_E,fastbus1.Q15358.data[47],DATA12);
SIGNAL(N03_18_1_T,fastbus2.T48854.data[15],DATA12);
SIGNAL(N03_18_2_E,fastbus1.Q46962.data[7],DATA12);
SIGNAL(N03_18_2_T,fastbus2.T87047.data[7],DATA12);
SIGNAL(N03_19_1_E,fastbus1.Q46962.data[31],DATA12);
SIGNAL(N03_19_1_T,fastbus2.T48834.data[31],DATA12);
SIGNAL(N03_19_2_E,fastbus1.Q46962.data[11],DATA12);
SIGNAL(N03_19_2_T,fastbus2.T87047.data[11],DATA12);
SIGNAL(N03_20_1_E,fastbus1.Q46962.data[27],DATA12);
SIGNAL(N03_20_1_T,fastbus2.T48834.data[27],DATA12);
SIGNAL(N03_20_2_E,fastbus1.Q46962.data[15],DATA12);
SIGNAL(N03_20_2_T,fastbus2.T87047.data[15],DATA12);
SIGNAL(N04_01_1_E,fastbus1.Q46962.data[32],DATA12);
SIGNAL(N04_01_1_T,fastbus2.T81806.data[16],DATA12);
SIGNAL(N04_01_2_E,fastbus1.Q46962.data[20],DATA12);
SIGNAL(N04_01_2_T,fastbus2.T48834.data[20],DATA12);
SIGNAL(N04_02_1_E,fastbus1.Q46962.data[36],DATA12);
SIGNAL(N04_02_1_T,fastbus2.T81806.data[20],DATA12);
SIGNAL(N04_02_2_E,fastbus1.Q46962.data[16],DATA12);
SIGNAL(N04_02_2_T,fastbus2.T48834.data[16],DATA12);
SIGNAL(N04_03_1_E,fastbus1.Q46962.data[40],DATA12);
SIGNAL(N04_03_1_T,fastbus2.T81806.data[24],DATA12);
SIGNAL(N04_03_2_E,fastbus1.Q15372.data[0],DATA12);
SIGNAL(N04_03_2_T,fastbus2.T81795.data[16],DATA12);
SIGNAL(N04_04_1_E,fastbus1.Q46962.data[44],DATA12);
SIGNAL(N04_04_1_T,fastbus2.T81806.data[28],DATA12);
SIGNAL(N04_04_2_E,fastbus1.Q15372.data[4],DATA12);
SIGNAL(N04_04_2_T,fastbus2.T81795.data[20],DATA12);
SIGNAL(N04_05_1_E,fastbus1.Q46962.data[33],DATA12);
SIGNAL(N04_05_1_T,fastbus2.T81806.data[17],DATA12);
SIGNAL(N04_05_2_E,fastbus1.Q46962.data[21],DATA12);
SIGNAL(N04_05_2_T,fastbus2.T48834.data[21],DATA12);
SIGNAL(N04_06_1_E,fastbus1.Q46962.data[37],DATA12);
SIGNAL(N04_06_1_T,fastbus2.T81806.data[21],DATA12);
SIGNAL(N04_06_2_E,fastbus1.Q46962.data[17],DATA12);
SIGNAL(N04_06_2_T,fastbus2.T48834.data[17],DATA12);
SIGNAL(N04_07_1_E,fastbus1.Q46962.data[41],DATA12);
SIGNAL(N04_07_1_T,fastbus2.T81806.data[25],DATA12);
SIGNAL(N04_07_2_E,fastbus1.Q15372.data[8],DATA12);
SIGNAL(N04_07_2_T,fastbus2.T81795.data[24],DATA12);
SIGNAL(N04_08_1_E,fastbus1.Q46962.data[45],DATA12);
SIGNAL(N04_08_1_T,fastbus2.T81806.data[29],DATA12);
SIGNAL(N04_08_2_E,fastbus1.Q15372.data[12],DATA12);
SIGNAL(N04_08_2_T,fastbus2.T81795.data[28],DATA12);
SIGNAL(N04_09_1_E,fastbus1.Q46962.data[34],DATA12);
SIGNAL(N04_09_1_T,fastbus2.T81806.data[18],DATA12);
SIGNAL(N04_09_2_E,fastbus1.Q15372.data[1],DATA12);
SIGNAL(N04_09_2_T,fastbus2.T81795.data[17],DATA12);
SIGNAL(N04_10_1_E,fastbus1.Q46962.data[38],DATA12);
SIGNAL(N04_10_1_T,fastbus2.T81806.data[22],DATA12);
SIGNAL(N04_10_2_E,fastbus1.Q15372.data[5],DATA12);
SIGNAL(N04_10_2_T,fastbus2.T81795.data[21],DATA12);
SIGNAL(N04_11_1_E,fastbus1.Q46962.data[42],DATA12);
SIGNAL(N04_11_1_T,fastbus2.T81806.data[26],DATA12);
SIGNAL(N04_11_2_E,fastbus1.Q15372.data[9],DATA12);
SIGNAL(N04_11_2_T,fastbus2.T81795.data[25],DATA12);
SIGNAL(N04_12_1_E,fastbus1.Q46962.data[46],DATA12);
SIGNAL(N04_12_1_T,fastbus2.T81806.data[30],DATA12);
SIGNAL(N04_12_2_E,fastbus1.Q15372.data[13],DATA12);
SIGNAL(N04_12_2_T,fastbus2.T81795.data[29],DATA12);
SIGNAL(N04_13_1_E,fastbus1.Q46962.data[35],DATA12);
SIGNAL(N04_13_1_T,fastbus2.T81806.data[19],DATA12);
SIGNAL(N04_13_2_E,fastbus1.Q15372.data[2],DATA12);
SIGNAL(N04_13_2_T,fastbus2.T81795.data[18],DATA12);
SIGNAL(N04_14_1_E,fastbus1.Q46962.data[39],DATA12);
SIGNAL(N04_14_1_T,fastbus2.T81806.data[23],DATA12);
SIGNAL(N04_14_2_E,fastbus1.Q15372.data[6],DATA12);
SIGNAL(N04_14_2_T,fastbus2.T81795.data[22],DATA12);
SIGNAL(N04_15_1_E,fastbus1.Q46962.data[22],DATA12);
SIGNAL(N04_15_1_T,fastbus2.T48834.data[22],DATA12);
SIGNAL(N04_15_2_E,fastbus1.Q15372.data[10],DATA12);
SIGNAL(N04_15_2_T,fastbus2.T81795.data[26],DATA12);
SIGNAL(N04_16_1_E,fastbus1.Q46962.data[18],DATA12);
SIGNAL(N04_16_1_T,fastbus2.T48834.data[18],DATA12);
SIGNAL(N04_16_2_E,fastbus1.Q15372.data[14],DATA12);
SIGNAL(N04_16_2_T,fastbus2.T81795.data[30],DATA12);
SIGNAL(N04_17_1_E,fastbus1.Q46962.data[43],DATA12);
SIGNAL(N04_17_1_T,fastbus2.T81806.data[27],DATA12);
SIGNAL(N04_17_2_E,fastbus1.Q15372.data[3],DATA12);
SIGNAL(N04_17_2_T,fastbus2.T81795.data[19],DATA12);
SIGNAL(N04_18_1_E,fastbus1.Q46962.data[47],DATA12);
SIGNAL(N04_18_1_T,fastbus2.T81806.data[31],DATA12);
SIGNAL(N04_18_2_E,fastbus1.Q15372.data[7],DATA12);
SIGNAL(N04_18_2_T,fastbus2.T81795.data[23],DATA12);
SIGNAL(N04_19_1_E,fastbus1.Q46962.data[23],DATA12);
SIGNAL(N04_19_1_T,fastbus2.T48834.data[23],DATA12);
SIGNAL(N04_19_2_E,fastbus1.Q15372.data[11],DATA12);
SIGNAL(N04_19_2_T,fastbus2.T81795.data[27],DATA12);
SIGNAL(N04_20_1_E,fastbus1.Q46962.data[19],DATA12);
SIGNAL(N04_20_1_T,fastbus2.T48834.data[19],DATA12);
SIGNAL(N04_20_2_E,fastbus1.Q15372.data[15],DATA12);
SIGNAL(N04_20_2_T,fastbus2.T81795.data[31],DATA12);
SIGNAL(N05_01_1_E,fastbus1.Q15372.data[16],DATA12);
SIGNAL(N05_01_1_T,fastbus2.T81859.data[16],DATA12);
SIGNAL(N05_01_2_E,fastbus1.Q47315.data[12],DATA12);
SIGNAL(N05_01_2_T,fastbus2.T48854.data[28],DATA12);
SIGNAL(N05_02_1_E,fastbus1.Q15372.data[20],DATA12);
SIGNAL(N05_02_1_T,fastbus2.T81859.data[20],DATA12);
SIGNAL(N05_02_2_E,fastbus1.Q47315.data[8],DATA12);
SIGNAL(N05_02_2_T,fastbus2.T48854.data[24],DATA12);
SIGNAL(N05_03_1_E,fastbus1.Q15372.data[24],DATA12);
SIGNAL(N05_03_1_T,fastbus2.T81859.data[24],DATA12);
SIGNAL(N05_03_2_E,fastbus1.Q15372.data[32],DATA12);
SIGNAL(N05_03_2_T,fastbus2.T81808.data[16],DATA12);
SIGNAL(N05_04_1_E,fastbus1.Q15372.data[28],DATA12);
SIGNAL(N05_04_1_T,fastbus2.T81859.data[28],DATA12);
SIGNAL(N05_04_2_E,fastbus1.Q15372.data[36],DATA12);
SIGNAL(N05_04_2_T,fastbus2.T81808.data[20],DATA12);
SIGNAL(N05_05_1_E,fastbus1.Q15372.data[17],DATA12);
SIGNAL(N05_05_1_T,fastbus2.T81859.data[17],DATA12);
SIGNAL(N05_05_2_E,fastbus1.Q47315.data[9],DATA12);
SIGNAL(N05_05_2_T,fastbus2.T48854.data[25],DATA12);
SIGNAL(N05_06_1_E,fastbus1.Q15372.data[21],DATA12);
SIGNAL(N05_06_1_T,fastbus2.T81859.data[21],DATA12);
SIGNAL(N05_06_2_E,fastbus1.Q47315.data[13],DATA12);
SIGNAL(N05_06_2_T,fastbus2.T48854.data[29],DATA12);
SIGNAL(N05_07_1_E,fastbus1.Q15372.data[25],DATA12);
SIGNAL(N05_07_1_T,fastbus2.T81859.data[25],DATA12);
SIGNAL(N05_07_2_E,fastbus1.Q15372.data[40],DATA12);
SIGNAL(N05_07_2_T,fastbus2.T81808.data[24],DATA12);
SIGNAL(N05_08_1_E,fastbus1.Q15372.data[29],DATA12);
SIGNAL(N05_08_1_T,fastbus2.T81859.data[29],DATA12);
SIGNAL(N05_08_2_E,fastbus1.Q15372.data[44],DATA12);
SIGNAL(N05_08_2_T,fastbus2.T81808.data[28],DATA12);
SIGNAL(N05_09_1_E,fastbus1.Q15372.data[18],DATA12);
SIGNAL(N05_09_1_T,fastbus2.T81859.data[18],DATA12);
SIGNAL(N05_09_2_E,fastbus1.Q15372.data[33],DATA12);
SIGNAL(N05_09_2_T,fastbus2.T81808.data[17],DATA12);
SIGNAL(N05_10_1_E,fastbus1.Q15372.data[22],DATA12);
SIGNAL(N05_10_1_T,fastbus2.T81859.data[22],DATA12);
SIGNAL(N05_10_2_E,fastbus1.Q15372.data[37],DATA12);
SIGNAL(N05_10_2_T,fastbus2.T81808.data[21],DATA12);
SIGNAL(N05_11_1_E,fastbus1.Q15372.data[26],DATA12);
SIGNAL(N05_11_1_T,fastbus2.T81859.data[26],DATA12);
SIGNAL(N05_11_2_E,fastbus1.Q15372.data[41],DATA12);
SIGNAL(N05_11_2_T,fastbus2.T81808.data[25],DATA12);
SIGNAL(N05_12_1_E,fastbus1.Q15372.data[30],DATA12);
SIGNAL(N05_12_1_T,fastbus2.T81859.data[30],DATA12);
SIGNAL(N05_12_2_E,fastbus1.Q15372.data[45],DATA12);
SIGNAL(N05_12_2_T,fastbus2.T81808.data[29],DATA12);
SIGNAL(N05_13_1_E,fastbus1.Q15372.data[19],DATA12);
SIGNAL(N05_13_1_T,fastbus2.T81859.data[19],DATA12);
SIGNAL(N05_13_2_E,fastbus1.Q15372.data[34],DATA12);
SIGNAL(N05_13_2_T,fastbus2.T81808.data[18],DATA12);
SIGNAL(N05_14_1_E,fastbus1.Q15372.data[23],DATA12);
SIGNAL(N05_14_1_T,fastbus2.T81859.data[23],DATA12);
SIGNAL(N05_14_2_E,fastbus1.Q15372.data[38],DATA12);
SIGNAL(N05_14_2_T,fastbus2.T81808.data[22],DATA12);
SIGNAL(N05_15_1_E,fastbus1.Q47315.data[14],DATA12);
SIGNAL(N05_15_1_T,fastbus2.T48854.data[30],DATA12);
SIGNAL(N05_15_2_E,fastbus1.Q15372.data[42],DATA12);
SIGNAL(N05_15_2_T,fastbus2.T81808.data[26],DATA12);
SIGNAL(N05_16_1_E,fastbus1.Q47315.data[10],DATA12);
SIGNAL(N05_16_1_T,fastbus2.T48854.data[26],DATA12);
SIGNAL(N05_16_2_E,fastbus1.Q15372.data[46],DATA12);
SIGNAL(N05_16_2_T,fastbus2.T81808.data[30],DATA12);
SIGNAL(N05_17_1_E,fastbus1.Q15372.data[27],DATA12);
SIGNAL(N05_17_1_T,fastbus2.T81859.data[27],DATA12);
SIGNAL(N05_17_2_E,fastbus1.Q15372.data[35],DATA12);
SIGNAL(N05_17_2_T,fastbus2.T81808.data[19],DATA12);
SIGNAL(N05_18_1_E,fastbus1.Q15372.data[31],DATA12);
SIGNAL(N05_18_1_T,fastbus2.T81859.data[31],DATA12);
SIGNAL(N05_18_2_E,fastbus1.Q15372.data[39],DATA12);
SIGNAL(N05_18_2_T,fastbus2.T81808.data[23],DATA12);
SIGNAL(N05_19_1_E,fastbus1.Q47315.data[15],DATA12);
SIGNAL(N05_19_1_T,fastbus2.T48854.data[31],DATA12);
SIGNAL(N05_19_2_E,fastbus1.Q15372.data[43],DATA12);
SIGNAL(N05_19_2_T,fastbus2.T81808.data[27],DATA12);
SIGNAL(N05_20_1_E,fastbus1.Q47315.data[11],DATA12);
SIGNAL(N05_20_1_T,fastbus2.T48854.data[27],DATA12);
SIGNAL(N05_20_2_E,fastbus1.Q15372.data[47],DATA12);
SIGNAL(N05_20_2_T,fastbus2.T81808.data[31],DATA12);
SIGNAL(N06_01_1_E,fastbus1.Q47315.data[16],DATA12);
SIGNAL(N06_01_1_T,fastbus2.T87047.data[16],DATA12);
SIGNAL(N06_01_2_E,fastbus1.Q47315.data[4],DATA12);
SIGNAL(N06_01_2_T,fastbus2.T48854.data[20],DATA12);
SIGNAL(N06_02_1_E,fastbus1.Q47315.data[20],DATA12);
SIGNAL(N06_02_1_T,fastbus2.T87047.data[20],DATA12);
SIGNAL(N06_02_2_E,fastbus1.Q47315.data[0],DATA12);
SIGNAL(N06_02_2_T,fastbus2.T48854.data[16],DATA12);
SIGNAL(N06_03_1_E,fastbus1.Q47315.data[24],DATA12);
SIGNAL(N06_03_1_T,fastbus2.T87047.data[24],DATA12);
SIGNAL(N06_03_2_E,fastbus1.Q46993.data[48],DATA12);
SIGNAL(N06_03_2_T,fastbus2.T48834.data[32],DATA12);
SIGNAL(N06_04_1_E,fastbus1.Q47315.data[28],DATA12);
SIGNAL(N06_04_1_T,fastbus2.T87047.data[28],DATA12);
SIGNAL(N06_04_2_E,fastbus1.Q46993.data[52],DATA12);
SIGNAL(N06_04_2_T,fastbus2.T48834.data[36],DATA12);
SIGNAL(N06_05_1_E,fastbus1.Q47315.data[17],DATA12);
SIGNAL(N06_05_1_T,fastbus2.T87047.data[17],DATA12);
SIGNAL(N06_05_2_E,fastbus1.Q47315.data[5],DATA12);
SIGNAL(N06_05_2_T,fastbus2.T48854.data[21],DATA12);
SIGNAL(N06_06_1_E,fastbus1.Q47315.data[21],DATA12);
SIGNAL(N06_06_1_T,fastbus2.T87047.data[21],DATA12);
SIGNAL(N06_06_2_E,fastbus1.Q47315.data[1],DATA12);
SIGNAL(N06_06_2_T,fastbus2.T48854.data[17],DATA12);
SIGNAL(N06_07_1_E,fastbus1.Q47315.data[25],DATA12);
SIGNAL(N06_07_1_T,fastbus2.T87047.data[25],DATA12);
SIGNAL(N06_07_2_E,fastbus1.Q46993.data[56],DATA12);
SIGNAL(N06_07_2_T,fastbus2.T48834.data[40],DATA12);
SIGNAL(N06_08_1_E,fastbus1.Q47315.data[29],DATA12);
SIGNAL(N06_08_1_T,fastbus2.T87047.data[29],DATA12);
SIGNAL(N06_08_2_E,fastbus1.Q46993.data[60],DATA12);
SIGNAL(N06_08_2_T,fastbus2.T48834.data[44],DATA12);
SIGNAL(N06_09_1_E,fastbus1.Q47315.data[18],DATA12);
SIGNAL(N06_09_1_T,fastbus2.T87047.data[18],DATA12);
SIGNAL(N06_09_2_E,fastbus1.Q46993.data[49],DATA12);
SIGNAL(N06_09_2_T,fastbus2.T48834.data[33],DATA12);
SIGNAL(N06_10_1_E,fastbus1.Q47315.data[22],DATA12);
SIGNAL(N06_10_1_T,fastbus2.T87047.data[22],DATA12);
SIGNAL(N06_10_2_E,fastbus1.Q46993.data[53],DATA12);
SIGNAL(N06_10_2_T,fastbus2.T48834.data[37],DATA12);
SIGNAL(N06_11_1_E,fastbus1.Q47315.data[26],DATA12);
SIGNAL(N06_11_1_T,fastbus2.T87047.data[26],DATA12);
SIGNAL(N06_11_2_E,fastbus1.Q46993.data[57],DATA12);
SIGNAL(N06_11_2_T,fastbus2.T48834.data[41],DATA12);
SIGNAL(N06_12_1_E,fastbus1.Q47315.data[30],DATA12);
SIGNAL(N06_12_1_T,fastbus2.T87047.data[30],DATA12);
SIGNAL(N06_12_2_E,fastbus1.Q46993.data[61],DATA12);
SIGNAL(N06_12_2_T,fastbus2.T48834.data[45],DATA12);
SIGNAL(N06_13_1_E,fastbus1.Q47315.data[19],DATA12);
SIGNAL(N06_13_1_T,fastbus2.T87047.data[19],DATA12);
SIGNAL(N06_13_2_E,fastbus1.Q46993.data[50],DATA12);
SIGNAL(N06_13_2_T,fastbus2.T48834.data[34],DATA12);
SIGNAL(N06_14_1_E,fastbus1.Q47315.data[23],DATA12);
SIGNAL(N06_14_1_T,fastbus2.T87047.data[23],DATA12);
SIGNAL(N06_14_2_E,fastbus1.Q46993.data[54],DATA12);
SIGNAL(N06_14_2_T,fastbus2.T48834.data[38],DATA12);
SIGNAL(N06_15_1_E,fastbus1.Q47315.data[6],DATA12);
SIGNAL(N06_15_1_T,fastbus2.T48854.data[22],DATA12);
SIGNAL(N06_15_2_E,fastbus1.Q46993.data[58],DATA12);
SIGNAL(N06_15_2_T,fastbus2.T48834.data[42],DATA12);
SIGNAL(N06_16_1_E,fastbus1.Q47315.data[2],DATA12);
SIGNAL(N06_16_1_T,fastbus2.T48854.data[18],DATA12);
SIGNAL(N06_16_2_E,fastbus1.Q46993.data[62],DATA12);
SIGNAL(N06_16_2_T,fastbus2.T48834.data[46],DATA12);
SIGNAL(N06_17_1_E,fastbus1.Q47315.data[27],DATA12);
SIGNAL(N06_17_1_T,fastbus2.T87047.data[27],DATA12);
SIGNAL(N06_17_2_E,fastbus1.Q46993.data[51],DATA12);
SIGNAL(N06_17_2_T,fastbus2.T48834.data[35],DATA12);
SIGNAL(N06_18_1_E,fastbus1.Q47315.data[31],DATA12);
SIGNAL(N06_18_1_T,fastbus2.T87047.data[31],DATA12);
SIGNAL(N06_18_2_E,fastbus1.Q46993.data[55],DATA12);
SIGNAL(N06_18_2_T,fastbus2.T48834.data[39],DATA12);
SIGNAL(N06_19_1_E,fastbus1.Q47315.data[7],DATA12);
SIGNAL(N06_19_1_T,fastbus2.T48854.data[23],DATA12);
SIGNAL(N06_19_2_E,fastbus1.Q46993.data[59],DATA12);
SIGNAL(N06_19_2_T,fastbus2.T48834.data[43],DATA12);
SIGNAL(N06_20_1_E,fastbus1.Q47315.data[3],DATA12);
SIGNAL(N06_20_1_T,fastbus2.T48854.data[19],DATA12);
SIGNAL(N06_20_2_E,fastbus1.Q46993.data[63],DATA12);
SIGNAL(N06_20_2_T,fastbus2.T48834.data[47],DATA12);
SIGNAL(N07_01_1_E,fastbus1.Q46993.data[64],DATA12);
SIGNAL(N07_01_1_T,fastbus2.T81806.data[32],DATA12);
SIGNAL(N07_01_2_E,fastbus1.Q15358.data[60],DATA12);
SIGNAL(N07_01_2_T,fastbus2.T81859.data[44],DATA12);
SIGNAL(N07_02_1_E,fastbus1.Q46993.data[68],DATA12);
SIGNAL(N07_02_1_T,fastbus2.T81806.data[36],DATA12);
SIGNAL(N07_02_2_E,fastbus1.Q15358.data[56],DATA12);
SIGNAL(N07_02_2_T,fastbus2.T81859.data[40],DATA12);
SIGNAL(N07_03_1_E,fastbus1.Q46993.data[72],DATA12);
SIGNAL(N07_03_1_T,fastbus2.T81806.data[40],DATA12);
SIGNAL(N07_03_2_E,fastbus1.Q46993.data[80],DATA12);
SIGNAL(N07_03_2_T,fastbus2.T81795.data[32],DATA12);
SIGNAL(N07_04_1_E,fastbus1.Q46993.data[76],DATA12);
SIGNAL(N07_04_1_T,fastbus2.T81806.data[44],DATA12);
SIGNAL(N07_04_2_E,fastbus1.Q46993.data[84],DATA12);
SIGNAL(N07_04_2_T,fastbus2.T81795.data[36],DATA12);
SIGNAL(N07_05_1_E,fastbus1.Q46993.data[65],DATA12);
SIGNAL(N07_05_1_T,fastbus2.T81806.data[33],DATA12);
SIGNAL(N07_05_2_E,fastbus1.Q15358.data[57],DATA12);
SIGNAL(N07_05_2_T,fastbus2.T81859.data[41],DATA12);
SIGNAL(N07_06_1_E,fastbus1.Q46993.data[69],DATA12);
SIGNAL(N07_06_1_T,fastbus2.T81806.data[37],DATA12);
SIGNAL(N07_06_2_E,fastbus1.Q15358.data[61],DATA12);
SIGNAL(N07_06_2_T,fastbus2.T81859.data[45],DATA12);
SIGNAL(N07_07_1_E,fastbus1.Q46993.data[73],DATA12);
SIGNAL(N07_07_1_T,fastbus2.T81806.data[41],DATA12);
SIGNAL(N07_07_2_E,fastbus1.Q46993.data[88],DATA12);
SIGNAL(N07_07_2_T,fastbus2.T81795.data[40],DATA12);
SIGNAL(N07_08_1_E,fastbus1.Q46993.data[77],DATA12);
SIGNAL(N07_08_1_T,fastbus2.T81806.data[45],DATA12);
SIGNAL(N07_08_2_E,fastbus1.Q46993.data[92],DATA12);
SIGNAL(N07_08_2_T,fastbus2.T81795.data[44],DATA12);
SIGNAL(N07_09_1_E,fastbus1.Q46993.data[66],DATA12);
SIGNAL(N07_09_1_T,fastbus2.T81806.data[34],DATA12);
SIGNAL(N07_09_2_E,fastbus1.Q46993.data[81],DATA12);
SIGNAL(N07_09_2_T,fastbus2.T81795.data[33],DATA12);
SIGNAL(N07_10_1_E,fastbus1.Q46993.data[70],DATA12);
SIGNAL(N07_10_1_T,fastbus2.T81806.data[38],DATA12);
SIGNAL(N07_10_2_E,fastbus1.Q46993.data[85],DATA12);
SIGNAL(N07_10_2_T,fastbus2.T81795.data[37],DATA12);
SIGNAL(N07_11_1_E,fastbus1.Q46993.data[74],DATA12);
SIGNAL(N07_11_1_T,fastbus2.T81806.data[42],DATA12);
SIGNAL(N07_11_2_E,fastbus1.Q46993.data[89],DATA12);
SIGNAL(N07_11_2_T,fastbus2.T81795.data[41],DATA12);
SIGNAL(N07_12_1_E,fastbus1.Q46993.data[78],DATA12);
SIGNAL(N07_12_1_T,fastbus2.T81806.data[46],DATA12);
SIGNAL(N07_12_2_E,fastbus1.Q46993.data[93],DATA12);
SIGNAL(N07_12_2_T,fastbus2.T81795.data[45],DATA12);
SIGNAL(N07_13_1_E,fastbus1.Q46993.data[67],DATA12);
SIGNAL(N07_13_1_T,fastbus2.T81806.data[35],DATA12);
SIGNAL(N07_13_2_E,fastbus1.Q46993.data[82],DATA12);
SIGNAL(N07_13_2_T,fastbus2.T81795.data[34],DATA12);
SIGNAL(N07_14_1_E,fastbus1.Q46993.data[71],DATA12);
SIGNAL(N07_14_1_T,fastbus2.T81806.data[39],DATA12);
SIGNAL(N07_14_2_E,fastbus1.Q46993.data[86],DATA12);
SIGNAL(N07_14_2_T,fastbus2.T81795.data[38],DATA12);
SIGNAL(N07_15_1_E,fastbus1.Q15358.data[62],DATA12);
SIGNAL(N07_15_1_T,fastbus2.T81859.data[46],DATA12);
SIGNAL(N07_15_2_E,fastbus1.Q46993.data[90],DATA12);
SIGNAL(N07_15_2_T,fastbus2.T81795.data[42],DATA12);
SIGNAL(N07_16_1_E,fastbus1.Q15358.data[58],DATA12);
SIGNAL(N07_16_1_T,fastbus2.T81859.data[42],DATA12);
SIGNAL(N07_16_2_E,fastbus1.Q46993.data[94],DATA12);
SIGNAL(N07_16_2_T,fastbus2.T81795.data[46],DATA12);
SIGNAL(N07_17_1_E,fastbus1.Q46993.data[75],DATA12);
SIGNAL(N07_17_1_T,fastbus2.T81806.data[43],DATA12);
SIGNAL(N07_17_2_E,fastbus1.Q46993.data[83],DATA12);
SIGNAL(N07_17_2_T,fastbus2.T81795.data[35],DATA12);
SIGNAL(N07_18_1_E,fastbus1.Q46993.data[79],DATA12);
SIGNAL(N07_18_1_T,fastbus2.T81806.data[47],DATA12);
SIGNAL(N07_18_2_E,fastbus1.Q46993.data[87],DATA12);
SIGNAL(N07_18_2_T,fastbus2.T81795.data[39],DATA12);
SIGNAL(N07_19_1_E,fastbus1.Q15358.data[63],DATA12);
SIGNAL(N07_19_1_T,fastbus2.T81859.data[47],DATA12);
SIGNAL(N07_19_2_E,fastbus1.Q46993.data[91],DATA12);
SIGNAL(N07_19_2_T,fastbus2.T81795.data[43],DATA12);
SIGNAL(N07_20_1_E,fastbus1.Q15358.data[59],DATA12);
SIGNAL(N07_20_1_T,fastbus2.T81859.data[43],DATA12);
SIGNAL(N07_20_2_E,fastbus1.Q46993.data[95],DATA12);
SIGNAL(N07_20_2_T,fastbus2.T81795.data[47],DATA12);
SIGNAL(N08_01_1_E,fastbus1.Q15358.data[64],DATA12);
SIGNAL(N08_01_1_T,fastbus2.T81808.data[32],DATA12);
SIGNAL(N08_01_2_E,fastbus1.Q15358.data[52],DATA12);
SIGNAL(N08_01_2_T,fastbus2.T81859.data[36],DATA12);
SIGNAL(N08_02_1_E,fastbus1.Q15358.data[68],DATA12);
SIGNAL(N08_02_1_T,fastbus2.T81808.data[36],DATA12);
SIGNAL(N08_02_2_E,fastbus1.Q15358.data[48],DATA12);
SIGNAL(N08_02_2_T,fastbus2.T81859.data[32],DATA12);
SIGNAL(N08_03_1_E,fastbus1.Q15358.data[72],DATA12);
SIGNAL(N08_03_1_T,fastbus2.T81808.data[40],DATA12);
SIGNAL(N08_03_2_E,fastbus1.Q15358.data[80],DATA12);
SIGNAL(N08_03_2_T,fastbus2.T48854.data[32],DATA12);
SIGNAL(N08_04_1_E,fastbus1.Q15358.data[76],DATA12);
SIGNAL(N08_04_1_T,fastbus2.T81808.data[44],DATA12);
SIGNAL(N08_04_2_E,fastbus1.Q15358.data[84],DATA12);
SIGNAL(N08_04_2_T,fastbus2.T48854.data[36],DATA12);
SIGNAL(N08_05_1_E,fastbus1.Q15358.data[65],DATA12);
SIGNAL(N08_05_1_T,fastbus2.T81808.data[33],DATA12);
SIGNAL(N08_05_2_E,fastbus1.Q15358.data[53],DATA12);
SIGNAL(N08_05_2_T,fastbus2.T81859.data[37],DATA12);
SIGNAL(N08_06_1_E,fastbus1.Q15358.data[69],DATA12);
SIGNAL(N08_06_1_T,fastbus2.T81808.data[37],DATA12);
SIGNAL(N08_06_2_E,fastbus1.Q15358.data[49],DATA12);
SIGNAL(N08_06_2_T,fastbus2.T81859.data[33],DATA12);
SIGNAL(N08_07_1_E,fastbus1.Q15358.data[73],DATA12);
SIGNAL(N08_07_1_T,fastbus2.T81808.data[41],DATA12);
SIGNAL(N08_07_2_E,fastbus1.Q15358.data[88],DATA12);
SIGNAL(N08_07_2_T,fastbus2.T48854.data[40],DATA12);
SIGNAL(N08_08_1_E,fastbus1.Q15358.data[77],DATA12);
SIGNAL(N08_08_1_T,fastbus2.T81808.data[45],DATA12);
SIGNAL(N08_08_2_E,fastbus1.Q15358.data[92],DATA12);
SIGNAL(N08_08_2_T,fastbus2.T48854.data[44],DATA12);
SIGNAL(N08_09_1_E,fastbus1.Q15358.data[66],DATA12);
SIGNAL(N08_09_1_T,fastbus2.T81808.data[34],DATA12);
SIGNAL(N08_09_2_E,fastbus1.Q15358.data[81],DATA12);
SIGNAL(N08_09_2_T,fastbus2.T48854.data[33],DATA12);
SIGNAL(N08_10_1_E,fastbus1.Q15358.data[70],DATA12);
SIGNAL(N08_10_1_T,fastbus2.T81808.data[38],DATA12);
SIGNAL(N08_10_2_E,fastbus1.Q15358.data[85],DATA12);
SIGNAL(N08_10_2_T,fastbus2.T48854.data[37],DATA12);
SIGNAL(N08_11_1_E,fastbus1.Q15358.data[74],DATA12);
SIGNAL(N08_11_1_T,fastbus2.T81808.data[42],DATA12);
SIGNAL(N08_11_2_E,fastbus1.Q15358.data[89],DATA12);
SIGNAL(N08_11_2_T,fastbus2.T48854.data[41],DATA12);
SIGNAL(N08_12_1_E,fastbus1.Q15358.data[78],DATA12);
SIGNAL(N08_12_1_T,fastbus2.T81808.data[46],DATA12);
SIGNAL(N08_12_2_E,fastbus1.Q15358.data[93],DATA12);
SIGNAL(N08_12_2_T,fastbus2.T48854.data[45],DATA12);
SIGNAL(N08_13_1_E,fastbus1.Q15358.data[67],DATA12);
SIGNAL(N08_13_1_T,fastbus2.T81808.data[35],DATA12);
SIGNAL(N08_13_2_E,fastbus1.Q15358.data[82],DATA12);
SIGNAL(N08_13_2_T,fastbus2.T48854.data[34],DATA12);
SIGNAL(N08_14_1_E,fastbus1.Q15358.data[71],DATA12);
SIGNAL(N08_14_1_T,fastbus2.T81808.data[39],DATA12);
SIGNAL(N08_14_2_E,fastbus1.Q15358.data[86],DATA12);
SIGNAL(N08_14_2_T,fastbus2.T48854.data[38],DATA12);
SIGNAL(N08_15_1_E,fastbus1.Q15358.data[54],DATA12);
SIGNAL(N08_15_1_T,fastbus2.T81859.data[38],DATA12);
SIGNAL(N08_15_2_E,fastbus1.Q15358.data[90],DATA12);
SIGNAL(N08_15_2_T,fastbus2.T48854.data[42],DATA12);
SIGNAL(N08_16_1_E,fastbus1.Q15358.data[50],DATA12);
SIGNAL(N08_16_1_T,fastbus2.T81859.data[34],DATA12);
SIGNAL(N08_16_2_E,fastbus1.Q15358.data[94],DATA12);
SIGNAL(N08_16_2_T,fastbus2.T48854.data[46],DATA12);
SIGNAL(N08_17_1_E,fastbus1.Q15358.data[75],DATA12);
SIGNAL(N08_17_1_T,fastbus2.T81808.data[43],DATA12);
SIGNAL(N08_17_2_E,fastbus1.Q15358.data[83],DATA12);
SIGNAL(N08_17_2_T,fastbus2.T48854.data[35],DATA12);
SIGNAL(N08_18_1_E,fastbus1.Q15358.data[79],DATA12);
SIGNAL(N08_18_1_T,fastbus2.T81808.data[47],DATA12);
SIGNAL(N08_18_2_E,fastbus1.Q15358.data[87],DATA12);
SIGNAL(N08_18_2_T,fastbus2.T48854.data[39],DATA12);
SIGNAL(N08_19_1_E,fastbus1.Q15358.data[55],DATA12);
SIGNAL(N08_19_1_T,fastbus2.T81859.data[39],DATA12);
SIGNAL(N08_19_2_E,fastbus1.Q15358.data[91],DATA12);
SIGNAL(N08_19_2_T,fastbus2.T48854.data[43],DATA12);
SIGNAL(N08_20_1_E,fastbus1.Q15358.data[51],DATA12);
SIGNAL(N08_20_1_T,fastbus2.T81859.data[35],DATA12);
SIGNAL(N08_20_2_E,fastbus1.Q15358.data[95],DATA12);
SIGNAL(N08_20_2_T,fastbus2.T48854.data[47],DATA12);
SIGNAL(N09_01_1_E,fastbus1.Q46962.data[48],DATA12);
SIGNAL(N09_01_1_T,fastbus2.T87047.data[32],DATA12);
SIGNAL(N09_01_2_E,fastbus1.Q46962.data[92],DATA12);
SIGNAL(N09_01_2_T,fastbus2.T81808.data[60],DATA12);
SIGNAL(N09_02_1_E,fastbus1.Q46962.data[52],DATA12);
SIGNAL(N09_02_1_T,fastbus2.T87047.data[36],DATA12);
SIGNAL(N09_02_2_E,fastbus1.Q46962.data[88],DATA12);
SIGNAL(N09_02_2_T,fastbus2.T81808.data[56],DATA12);
SIGNAL(N09_03_1_E,fastbus1.Q46962.data[56],DATA12);
SIGNAL(N09_03_1_T,fastbus2.T87047.data[40],DATA12);
SIGNAL(N09_03_2_E,fastbus1.Q46962.data[64],DATA12);
SIGNAL(N09_03_2_T,fastbus2.T81859.data[48],DATA12);
SIGNAL(N09_04_1_E,fastbus1.Q46962.data[60],DATA12);
SIGNAL(N09_04_1_T,fastbus2.T87047.data[44],DATA12);
SIGNAL(N09_04_2_E,fastbus1.Q46962.data[68],DATA12);
SIGNAL(N09_04_2_T,fastbus2.T81859.data[52],DATA12);
SIGNAL(N09_05_1_E,fastbus1.Q46962.data[49],DATA12);
SIGNAL(N09_05_1_T,fastbus2.T87047.data[33],DATA12);
SIGNAL(N09_05_2_E,fastbus1.Q46962.data[89],DATA12);
SIGNAL(N09_05_2_T,fastbus2.T81808.data[57],DATA12);
SIGNAL(N09_06_1_E,fastbus1.Q46962.data[53],DATA12);
SIGNAL(N09_06_1_T,fastbus2.T87047.data[37],DATA12);
SIGNAL(N09_06_2_E,fastbus1.Q46962.data[93],DATA12);
SIGNAL(N09_06_2_T,fastbus2.T81808.data[61],DATA12);
SIGNAL(N09_07_1_E,fastbus1.Q46962.data[57],DATA12);
SIGNAL(N09_07_1_T,fastbus2.T87047.data[41],DATA12);
SIGNAL(N09_07_2_E,fastbus1.Q46962.data[72],DATA12);
SIGNAL(N09_07_2_T,fastbus2.T81859.data[56],DATA12);
SIGNAL(N09_08_1_E,fastbus1.Q46962.data[61],DATA12);
SIGNAL(N09_08_1_T,fastbus2.T87047.data[45],DATA12);
SIGNAL(N09_08_2_E,fastbus1.Q46962.data[76],DATA12);
SIGNAL(N09_08_2_T,fastbus2.T81859.data[60],DATA12);
SIGNAL(N09_09_1_E,fastbus1.Q46962.data[50],DATA12);
SIGNAL(N09_09_1_T,fastbus2.T87047.data[34],DATA12);
SIGNAL(N09_09_2_E,fastbus1.Q46962.data[65],DATA12);
SIGNAL(N09_09_2_T,fastbus2.T81859.data[49],DATA12);
SIGNAL(N09_10_1_E,fastbus1.Q46962.data[54],DATA12);
SIGNAL(N09_10_1_T,fastbus2.T87047.data[38],DATA12);
SIGNAL(N09_10_2_E,fastbus1.Q46962.data[69],DATA12);
SIGNAL(N09_10_2_T,fastbus2.T81859.data[53],DATA12);
SIGNAL(N09_11_1_E,fastbus1.Q46962.data[58],DATA12);
SIGNAL(N09_11_1_T,fastbus2.T87047.data[42],DATA12);
SIGNAL(N09_11_2_E,fastbus1.Q46962.data[73],DATA12);
SIGNAL(N09_11_2_T,fastbus2.T81859.data[57],DATA12);
SIGNAL(N09_12_1_E,fastbus1.Q46962.data[62],DATA12);
SIGNAL(N09_12_1_T,fastbus2.T87047.data[46],DATA12);
SIGNAL(N09_12_2_E,fastbus1.Q46962.data[77],DATA12);
SIGNAL(N09_12_2_T,fastbus2.T81859.data[61],DATA12);
SIGNAL(N09_13_1_E,fastbus1.Q46962.data[51],DATA12);
SIGNAL(N09_13_1_T,fastbus2.T87047.data[35],DATA12);
SIGNAL(N09_13_2_E,fastbus1.Q46962.data[66],DATA12);
SIGNAL(N09_13_2_T,fastbus2.T81859.data[50],DATA12);
SIGNAL(N09_14_1_E,fastbus1.Q46962.data[55],DATA12);
SIGNAL(N09_14_1_T,fastbus2.T87047.data[39],DATA12);
SIGNAL(N09_14_2_E,fastbus1.Q46962.data[70],DATA12);
SIGNAL(N09_14_2_T,fastbus2.T81859.data[54],DATA12);
SIGNAL(N09_15_1_E,fastbus1.Q46962.data[94],DATA12);
SIGNAL(N09_15_1_T,fastbus2.T81808.data[62],DATA12);
SIGNAL(N09_15_2_E,fastbus1.Q46962.data[74],DATA12);
SIGNAL(N09_15_2_T,fastbus2.T81859.data[58],DATA12);
SIGNAL(N09_16_1_E,fastbus1.Q46962.data[90],DATA12);
SIGNAL(N09_16_1_T,fastbus2.T81808.data[58],DATA12);
SIGNAL(N09_16_2_E,fastbus1.Q46962.data[78],DATA12);
SIGNAL(N09_16_2_T,fastbus2.T81859.data[62],DATA12);
SIGNAL(N09_17_1_E,fastbus1.Q46962.data[59],DATA12);
SIGNAL(N09_17_1_T,fastbus2.T87047.data[43],DATA12);
SIGNAL(N09_17_2_E,fastbus1.Q46962.data[67],DATA12);
SIGNAL(N09_17_2_T,fastbus2.T81859.data[51],DATA12);
SIGNAL(N09_18_1_E,fastbus1.Q46962.data[63],DATA12);
SIGNAL(N09_18_1_T,fastbus2.T87047.data[47],DATA12);
SIGNAL(N09_18_2_E,fastbus1.Q46962.data[71],DATA12);
SIGNAL(N09_18_2_T,fastbus2.T81859.data[55],DATA12);
SIGNAL(N09_19_1_E,fastbus1.Q46962.data[95],DATA12);
SIGNAL(N09_19_1_T,fastbus2.T81808.data[63],DATA12);
SIGNAL(N09_19_2_E,fastbus1.Q46962.data[75],DATA12);
SIGNAL(N09_19_2_T,fastbus2.T81859.data[59],DATA12);
SIGNAL(N09_20_1_E,fastbus1.Q46962.data[91],DATA12);
SIGNAL(N09_20_1_T,fastbus2.T81808.data[59],DATA12);
SIGNAL(N09_20_2_E,fastbus1.Q46962.data[79],DATA12);
SIGNAL(N09_20_2_T,fastbus2.T81859.data[63],DATA12);
SIGNAL(N10_01_1_E,fastbus1.Q15372.data[64],DATA12);
SIGNAL(N10_01_1_T,fastbus2.T48854.data[48],DATA12);
SIGNAL(N10_01_2_E,fastbus1.Q46962.data[84],DATA12);
SIGNAL(N10_01_2_T,fastbus2.T81808.data[52],DATA12);
SIGNAL(N10_02_1_E,fastbus1.Q15372.data[68],DATA12);
SIGNAL(N10_02_1_T,fastbus2.T48854.data[52],DATA12);
SIGNAL(N10_02_2_E,fastbus1.Q46962.data[80],DATA12);
SIGNAL(N10_02_2_T,fastbus2.T81808.data[48],DATA12);
SIGNAL(N10_03_1_E,fastbus1.Q15372.data[72],DATA12);
SIGNAL(N10_03_1_T,fastbus2.T48854.data[56],DATA12);
SIGNAL(N10_03_2_E,fastbus1.Q15372.data[80],DATA12);
SIGNAL(N10_03_2_T,fastbus2.T87047.data[48],DATA12);
SIGNAL(N10_04_1_E,fastbus1.Q15372.data[76],DATA12);
SIGNAL(N10_04_1_T,fastbus2.T48854.data[60],DATA12);
SIGNAL(N10_04_2_E,fastbus1.Q15372.data[84],DATA12);
SIGNAL(N10_04_2_T,fastbus2.T87047.data[52],DATA12);
SIGNAL(N10_05_1_E,fastbus1.Q15372.data[65],DATA12);
SIGNAL(N10_05_1_T,fastbus2.T48854.data[49],DATA12);
SIGNAL(N10_05_2_E,fastbus1.Q46962.data[85],DATA12);
SIGNAL(N10_05_2_T,fastbus2.T81808.data[53],DATA12);
SIGNAL(N10_06_1_E,fastbus1.Q15372.data[69],DATA12);
SIGNAL(N10_06_1_T,fastbus2.T48854.data[53],DATA12);
SIGNAL(N10_06_2_E,fastbus1.Q46962.data[81],DATA12);
SIGNAL(N10_06_2_T,fastbus2.T81808.data[49],DATA12);
SIGNAL(N10_07_1_E,fastbus1.Q15372.data[73],DATA12);
SIGNAL(N10_07_1_T,fastbus2.T48854.data[57],DATA12);
SIGNAL(N10_07_2_E,fastbus1.Q15372.data[88],DATA12);
SIGNAL(N10_07_2_T,fastbus2.T87047.data[56],DATA12);
SIGNAL(N10_08_1_E,fastbus1.Q15372.data[77],DATA12);
SIGNAL(N10_08_1_T,fastbus2.T48854.data[61],DATA12);
SIGNAL(N10_08_2_E,fastbus1.Q15372.data[92],DATA12);
SIGNAL(N10_08_2_T,fastbus2.T87047.data[60],DATA12);
SIGNAL(N10_09_1_E,fastbus1.Q15372.data[66],DATA12);
SIGNAL(N10_09_1_T,fastbus2.T48854.data[50],DATA12);
SIGNAL(N10_09_2_E,fastbus1.Q15372.data[81],DATA12);
SIGNAL(N10_09_2_T,fastbus2.T87047.data[49],DATA12);
SIGNAL(N10_10_1_E,fastbus1.Q15372.data[70],DATA12);
SIGNAL(N10_10_1_T,fastbus2.T48854.data[54],DATA12);
SIGNAL(N10_10_2_E,fastbus1.Q15372.data[85],DATA12);
SIGNAL(N10_10_2_T,fastbus2.T87047.data[53],DATA12);
SIGNAL(N10_11_1_E,fastbus1.Q15372.data[74],DATA12);
SIGNAL(N10_11_1_T,fastbus2.T48854.data[58],DATA12);
SIGNAL(N10_11_2_E,fastbus1.Q15372.data[89],DATA12);
SIGNAL(N10_11_2_T,fastbus2.T87047.data[57],DATA12);
SIGNAL(N10_12_1_E,fastbus1.Q15372.data[79],DATA12);
SIGNAL(N10_12_1_T,fastbus2.T48854.data[63],DATA12);
SIGNAL(N10_12_2_E,fastbus1.Q15372.data[93],DATA12);
SIGNAL(N10_12_2_T,fastbus2.T87047.data[61],DATA12);
SIGNAL(N10_13_1_E,fastbus1.Q15372.data[67],DATA12);
SIGNAL(N10_13_1_T,fastbus2.T48854.data[51],DATA12);
SIGNAL(N10_13_2_E,fastbus1.Q15372.data[82],DATA12);
SIGNAL(N10_13_2_T,fastbus2.T87047.data[50],DATA12);
SIGNAL(N10_14_1_E,fastbus1.Q15372.data[71],DATA12);
SIGNAL(N10_14_1_T,fastbus2.T48854.data[55],DATA12);
SIGNAL(N10_14_2_E,fastbus1.Q15372.data[86],DATA12);
SIGNAL(N10_14_2_T,fastbus2.T87047.data[54],DATA12);
SIGNAL(N10_15_1_E,fastbus1.Q46962.data[86],DATA12);
SIGNAL(N10_15_1_T,fastbus2.T81808.data[54],DATA12);
SIGNAL(N10_15_2_E,fastbus1.Q15372.data[90],DATA12);
SIGNAL(N10_15_2_T,fastbus2.T87047.data[58],DATA12);
SIGNAL(N10_16_1_E,fastbus1.Q46962.data[82],DATA12);
SIGNAL(N10_16_1_T,fastbus2.T81808.data[50],DATA12);
SIGNAL(N10_16_2_E,fastbus1.Q15372.data[94],DATA12);
SIGNAL(N10_16_2_T,fastbus2.T87047.data[62],DATA12);
SIGNAL(N10_17_1_E,fastbus1.Q15372.data[75],DATA12);
SIGNAL(N10_17_1_T,fastbus2.T48854.data[59],DATA12);
SIGNAL(N10_17_2_E,fastbus1.Q15372.data[83],DATA12);
SIGNAL(N10_17_2_T,fastbus2.T87047.data[51],DATA12);
SIGNAL(N10_18_1_E,fastbus1.Q15372.data[78],DATA12);
SIGNAL(N10_18_1_T,fastbus2.T48854.data[62],DATA12);
SIGNAL(N10_18_2_E,fastbus1.Q15372.data[87],DATA12);
SIGNAL(N10_18_2_T,fastbus2.T87047.data[55],DATA12);
SIGNAL(N10_19_1_E,fastbus1.Q46962.data[87],DATA12);
SIGNAL(N10_19_1_T,fastbus2.T81808.data[55],DATA12);
SIGNAL(N10_19_2_E,fastbus1.Q15372.data[91],DATA12);
SIGNAL(N10_19_2_T,fastbus2.T87047.data[59],DATA12);
SIGNAL(N10_20_1_E,fastbus1.Q46962.data[83],DATA12);
SIGNAL(N10_20_1_T,fastbus2.T81808.data[51],DATA12);
SIGNAL(N10_20_2_E,fastbus1.Q15372.data[95],DATA12);
SIGNAL(N10_20_2_T,fastbus2.T87047.data[63],DATA12);
SIGNAL(NTF01_1_E,fastbus1.Q17320.data[32],DATA12);
SIGNAL(NTF01_1_T,fastbus1.T81855.data[48],DATA12);
SIGNAL(NTF01_2_E,fastbus1.Q17320.data[40],DATA12);
SIGNAL(NTF01_2_T,fastbus1.T81855.data[56],DATA12);
SIGNAL(NTF02_1_E,fastbus1.Q17320.data[37],DATA12);
SIGNAL(NTF02_1_T,fastbus1.T81855.data[53],DATA12);
SIGNAL(NTF02_2_E,fastbus1.Q17320.data[45],DATA12);
SIGNAL(NTF02_2_T,fastbus1.T81855.data[61],DATA12);
SIGNAL(NTF03_1_E,fastbus1.Q17320.data[34],DATA12);
SIGNAL(NTF03_1_T,fastbus1.T81855.data[50],DATA12);
SIGNAL(NTF03_2_E,fastbus1.Q17320.data[42],DATA12);
SIGNAL(NTF03_2_T,fastbus1.T81855.data[58],DATA12);
SIGNAL(NTF04_1_E,fastbus1.Q17320.data[39],DATA12);
SIGNAL(NTF04_1_T,fastbus1.T81855.data[55],DATA12);
SIGNAL(NTF04_2_E,fastbus1.Q17320.data[47],DATA12);
SIGNAL(NTF04_2_T,fastbus1.T81855.data[63],DATA12);
SIGNAL(NTF05_1_E,fastbus1.Q17320.data[36],DATA12);
SIGNAL(NTF05_1_T,fastbus1.T81855.data[52],DATA12);
SIGNAL(NTF05_2_E,fastbus1.Q17320.data[44],DATA12);
SIGNAL(NTF05_2_T,fastbus1.T81855.data[60],DATA12);
SIGNAL(NTF06_1_E,fastbus1.Q17320.data[33],DATA12);
SIGNAL(NTF06_1_T,fastbus1.T81855.data[49],DATA12);
SIGNAL(NTF06_2_E,fastbus1.Q17320.data[41],DATA12);
SIGNAL(NTF06_2_T,fastbus1.T81855.data[57],DATA12);
SIGNAL(NTF07_1_E,fastbus1.Q17320.data[38],DATA12);
SIGNAL(NTF07_1_T,fastbus1.T81855.data[54],DATA12);
SIGNAL(NTF07_2_E,fastbus1.Q17320.data[46],DATA12);
SIGNAL(NTF07_2_T,fastbus1.T81855.data[62],DATA12);
SIGNAL(NTF08_1_E,fastbus1.Q17320.data[35],DATA12);
SIGNAL(NTF08_1_T,fastbus1.T81855.data[51],DATA12);
SIGNAL(NTF08_2_E,fastbus1.Q17320.data[43],DATA12);
SIGNAL(NTF08_2_T,fastbus1.T81855.data[59],DATA12);
SIGNAL(PIX1_01_E,camac.qSIA0495.data[0],DATA12);
SIGNAL(PIX1_01_T,camac.tC_FRS120.data[0],DATA12);
SIGNAL(PIX2_01_E,camac.qSIA0495.data[1],DATA12);
SIGNAL(PIX2_01_T,camac.tC_FRS120.data[1],DATA12);
SIGNAL(PIX3_01_E,camac.qSIA0495.data[2],DATA12);
SIGNAL(PIX3_01_T,camac.tC_FRS120.data[2],DATA12);
SIGNAL(POS01_01_E,camac.qSIA0429.data[0],DATA12);
SIGNAL(POS01_01_T,camac.tSIA0426.data[0],DATA12);
SIGNAL(POS01_02_E,camac.qSIA0429.data[1],DATA12);
SIGNAL(POS01_02_T,camac.tSIA0426.data[1],DATA12);
SIGNAL(POS01_03_E,camac.qSIA0429.data[2],DATA12);
SIGNAL(POS01_03_T,camac.tSIA0426.data[2],DATA12);
SIGNAL(POS01_04_E,camac.qSIA0429.data[3],DATA12);
SIGNAL(POS01_04_T,camac.tSIA0426.data[3],DATA12);
SIGNAL(PSP01_01_E,camac.aPHI12160.data[0],DATA12);
SIGNAL(PSP01_02_E,camac.aPHI12160.data[1],DATA12);
SIGNAL(PSP01_03_E,camac.aPHI12160.data[2],DATA12);
SIGNAL(PSP01_04_E,camac.aPHI12160.data[3],DATA12);
SIGNAL(PSP01_05_E,camac.aPHI12160.data[12],DATA12);
SIGNAL(PSP02_01_E,camac.aPHI12160.data[4],DATA12);
SIGNAL(PSP02_02_E,camac.aPHI12160.data[5],DATA12);
SIGNAL(PSP02_03_E,camac.aPHI12160.data[6],DATA12);
SIGNAL(PSP02_04_E,camac.aPHI12160.data[7],DATA12);
SIGNAL(PSP02_05_E,camac.aPHI12160.data[13],DATA12);
SIGNAL(PSP03_01_E,camac.aPHI12160.data[8],DATA12);
SIGNAL(PSP03_02_E,camac.aPHI12160.data[9],DATA12);
SIGNAL(PSP03_03_E,camac.aPHI12160.data[10],DATA12);
SIGNAL(PSP03_04_E,camac.aPHI12160.data[11],DATA12);
SIGNAL(PSP03_05_E,camac.aPHI12160.data[14],DATA12);
SIGNAL(ROL01_01_E,camac.qSIA0429.data[4],DATA12);
SIGNAL(ROL01_02_E,camac.qSIA0429.data[5],DATA12);
SIGNAL(ROL01_03_E,camac.qSIA0429.data[6],DATA12);
SIGNAL(ROL01_04_E,camac.qSIA0429.data[7],DATA12);
SIGNAL(TFW09_1_E,fastbus1.Q17320.data[16],DATA12);
SIGNAL(TFW09_1_T,fastbus1.T81855.data[32],DATA12);
SIGNAL(TFW09_2_E,fastbus1.Q17320.data[18],DATA12);
SIGNAL(TFW09_2_T,fastbus1.T81855.data[34],DATA12);
SIGNAL(TFW10_1_E,fastbus1.Q17320.data[20],DATA12);
SIGNAL(TFW10_1_T,fastbus1.T81855.data[36],DATA12);
SIGNAL(TFW10_2_E,fastbus1.Q17320.data[22],DATA12);
SIGNAL(TFW10_2_T,fastbus1.T81855.data[38],DATA12);
SIGNAL(TFW11_1_E,fastbus1.Q17320.data[24],DATA12);
SIGNAL(TFW11_1_T,fastbus1.T81855.data[40],DATA12);
SIGNAL(TFW11_2_E,fastbus1.Q17320.data[26],DATA12);
SIGNAL(TFW11_2_T,fastbus1.T81855.data[42],DATA12);
SIGNAL(TFW12_1_E,fastbus1.Q17320.data[28],DATA12);
SIGNAL(TFW12_1_T,fastbus1.T81855.data[44],DATA12);
SIGNAL(TFW12_2_E,fastbus1.Q17320.data[30],DATA12);
SIGNAL(TFW12_2_T,fastbus1.T81855.data[46],DATA12);
SIGNAL(TFW13_1_E,fastbus1.Q17320.data[17],DATA12);
SIGNAL(TFW13_1_T,fastbus1.T81855.data[33],DATA12);
SIGNAL(TFW13_2_E,fastbus1.Q17320.data[19],DATA12);
SIGNAL(TFW13_2_T,fastbus1.T81855.data[35],DATA12);
SIGNAL(TFW14_1_E,fastbus1.Q17320.data[21],DATA12);
SIGNAL(TFW14_1_T,fastbus1.T81855.data[37],DATA12);
SIGNAL(TFW14_2_E,fastbus1.Q17320.data[23],DATA12);
SIGNAL(TFW14_2_T,fastbus1.T81855.data[39],DATA12);
SIGNAL(TFW15_1_E,fastbus1.Q17320.data[25],DATA12);
SIGNAL(TFW15_1_T,fastbus1.T81855.data[41],DATA12);
SIGNAL(TFW15_2_E,fastbus1.Q17320.data[27],DATA12);
SIGNAL(TFW15_2_T,fastbus1.T81855.data[43],DATA12);
SIGNAL(TFW16_1_E,fastbus1.Q17320.data[29],DATA12);
SIGNAL(TFW16_1_T,fastbus1.T81855.data[45],DATA12);
SIGNAL(TFW16_2_E,fastbus1.Q17320.data[31],DATA12);
SIGNAL(TFW16_2_T,fastbus1.T81855.data[47],DATA12);
SIGNAL(TFW17_1_E,fastbus1.Q17320.data[64],DATA12);
SIGNAL(TFW17_1_T,fastbus1.T81855.data[16],DATA12);
SIGNAL(TFW17_2_E,fastbus1.Q17320.data[66],DATA12);
SIGNAL(TFW17_2_T,fastbus1.T81855.data[18],DATA12);
SIGNAL(TFW18_1_E,fastbus1.Q17320.data[68],DATA12);
SIGNAL(TFW18_1_T,fastbus1.T81855.data[20],DATA12);
SIGNAL(TFW18_2_E,fastbus1.Q17320.data[70],DATA12);
SIGNAL(TFW18_2_T,fastbus1.T81855.data[22],DATA12);
SIGNAL(TFW19_1_E,fastbus1.Q17320.data[72],DATA12);
SIGNAL(TFW19_1_T,fastbus1.T81855.data[24],DATA12);
SIGNAL(TFW19_2_E,fastbus1.Q17320.data[74],DATA12);
SIGNAL(TFW19_2_T,fastbus1.T81855.data[26],DATA12);
SIGNAL(TFW20_1_E,fastbus1.Q17320.data[76],DATA12);
SIGNAL(TFW20_1_T,fastbus1.T81855.data[28],DATA12);
SIGNAL(TFW20_2_E,fastbus1.Q17320.data[78],DATA12);
SIGNAL(TFW20_2_T,fastbus1.T81855.data[30],DATA12);
SIGNAL(TFW21_1_E,fastbus1.Q17320.data[65],DATA12);
SIGNAL(TFW21_1_T,fastbus1.T81855.data[17],DATA12);
SIGNAL(TFW21_2_E,fastbus1.Q17320.data[67],DATA12);
SIGNAL(TFW21_2_T,fastbus1.T81855.data[19],DATA12);
SIGNAL(TFW22_1_E,fastbus1.Q17320.data[69],DATA12);
SIGNAL(TFW22_1_T,fastbus1.T81855.data[21],DATA12);
SIGNAL(TFW22_2_E,fastbus1.Q17320.data[71],DATA12);
SIGNAL(TFW22_2_T,fastbus1.T81855.data[23],DATA12);
SIGNAL(TFW23_1_E,fastbus1.Q17320.data[73],DATA12);
SIGNAL(TFW23_1_T,fastbus1.T81855.data[25],DATA12);
SIGNAL(TFW23_2_E,fastbus1.Q17320.data[75],DATA12);
SIGNAL(TFW23_2_T,fastbus1.T81855.data[27],DATA12);
SIGNAL(TFW24_1_E,fastbus1.Q17320.data[77],DATA12);
SIGNAL(TFW24_1_T,fastbus1.T81855.data[29],DATA12);
SIGNAL(TFW24_2_E,fastbus1.Q17320.data[79],DATA12);
SIGNAL(TFW24_2_T,fastbus1.T81855.data[31],DATA12);
SIGNAL(TFW25_1_E,fastbus1.Q17320.data[48],DATA12);
SIGNAL(TFW25_1_T,fastbus1.T81855.data[0],DATA12);
SIGNAL(TFW25_2_E,fastbus1.Q17320.data[50],DATA12);
SIGNAL(TFW25_2_T,fastbus1.T81855.data[2],DATA12);
SIGNAL(TFW26_1_E,fastbus1.Q17320.data[52],DATA12);
SIGNAL(TFW26_1_T,fastbus1.T81855.data[4],DATA12);
SIGNAL(TFW26_2_E,fastbus1.Q17320.data[54],DATA12);
SIGNAL(TFW26_2_T,fastbus1.T81855.data[6],DATA12);
SIGNAL(TFW27_1_E,fastbus1.Q17320.data[56],DATA12);
SIGNAL(TFW27_1_T,fastbus1.T81855.data[8],DATA12);
SIGNAL(TFW27_2_E,fastbus1.Q17320.data[58],DATA12);
SIGNAL(TFW27_2_T,fastbus1.T81855.data[10],DATA12);
SIGNAL(TFW28_1_E,fastbus1.Q17320.data[60],DATA12);
SIGNAL(TFW28_1_T,fastbus1.T81855.data[12],DATA12);
SIGNAL(TFW28_2_E,fastbus1.Q17320.data[62],DATA12);
SIGNAL(TFW28_2_T,fastbus1.T81855.data[14],DATA12);
SIGNAL(TFW29_1_E,fastbus1.Q17320.data[49],DATA12);
SIGNAL(TFW29_1_T,fastbus1.T81855.data[1],DATA12);
SIGNAL(TFW29_2_E,fastbus1.Q17320.data[51],DATA12);
SIGNAL(TFW29_2_T,fastbus1.T81855.data[3],DATA12);
SIGNAL(TFW30_1_E,fastbus1.Q17320.data[53],DATA12);
SIGNAL(TFW30_1_T,fastbus1.T81855.data[5],DATA12);
SIGNAL(TFW30_2_E,fastbus1.Q17320.data[55],DATA12);
SIGNAL(TFW30_2_T,fastbus1.T81855.data[7],DATA12);
SIGNAL(TFW31_1_E,fastbus1.Q17320.data[57],DATA12);
SIGNAL(TFW31_1_T,fastbus1.T81855.data[9],DATA12);
SIGNAL(TFW31_2_E,fastbus1.Q17320.data[59],DATA12);
SIGNAL(TFW31_2_T,fastbus1.T81855.data[11],DATA12);
SIGNAL(TFW32_1_E,fastbus1.Q17320.data[61],DATA12);
SIGNAL(TFW32_1_T,fastbus1.T81855.data[13],DATA12);
SIGNAL(TFW32_2_E,fastbus1.Q17320.data[63],DATA12);
SIGNAL(TFW32_2_T,fastbus1.T81855.data[15],DATA12);
SIGNAL(V1_01_1_E,fastbus1.Q15372.data[48],DATA12);
SIGNAL(V1_01_1_T,fastbus2.T81795.data[48],DATA12);
SIGNAL(V1_01_2_E,fastbus1.Q17320.data[1],DATA12);
SIGNAL(V1_01_2_T,fastbus1.T87024.data[49],DATA12);
SIGNAL(V1_02_1_E,fastbus1.Q15372.data[52],DATA12);
SIGNAL(V1_02_1_T,fastbus2.T81795.data[52],DATA12);
SIGNAL(V1_02_2_E,fastbus1.Q17320.data[3],DATA12);
SIGNAL(V1_02_2_T,fastbus1.T87024.data[51],DATA12);
SIGNAL(V1_03_1_E,fastbus1.Q15372.data[56],DATA12);
SIGNAL(V1_03_1_T,fastbus2.T81795.data[56],DATA12);
SIGNAL(V1_03_2_E,fastbus1.Q47315.data[32],DATA12);
SIGNAL(V1_03_2_T,fastbus1.T87044.data[48],DATA12);
SIGNAL(V1_04_1_E,fastbus1.Q15372.data[60],DATA12);
SIGNAL(V1_04_1_T,fastbus2.T81795.data[60],DATA12);
SIGNAL(V1_04_2_E,fastbus1.Q47315.data[36],DATA12);
SIGNAL(V1_04_2_T,fastbus1.T87044.data[52],DATA12);
SIGNAL(V1_05_1_E,fastbus1.Q15372.data[49],DATA12);
SIGNAL(V1_05_1_T,fastbus2.T81795.data[49],DATA12);
SIGNAL(V1_05_2_E,fastbus1.Q17320.data[5],DATA12);
SIGNAL(V1_05_2_T,fastbus1.T87024.data[53],DATA12);
SIGNAL(V1_06_1_E,fastbus1.Q15372.data[53],DATA12);
SIGNAL(V1_06_1_T,fastbus2.T81795.data[53],DATA12);
SIGNAL(V1_06_2_E,fastbus1.Q17320.data[7],DATA12);
SIGNAL(V1_06_2_T,fastbus1.T87024.data[55],DATA12);
SIGNAL(V1_07_1_E,fastbus1.Q15372.data[57],DATA12);
SIGNAL(V1_07_1_T,fastbus2.T81795.data[57],DATA12);
SIGNAL(V1_07_2_E,fastbus1.Q47315.data[40],DATA12);
SIGNAL(V1_07_2_T,fastbus1.T87044.data[56],DATA12);
SIGNAL(V1_08_1_E,fastbus1.Q15372.data[61],DATA12);
SIGNAL(V1_08_1_T,fastbus2.T81795.data[61],DATA12);
SIGNAL(V1_08_2_E,fastbus1.Q47315.data[44],DATA12);
SIGNAL(V1_08_2_T,fastbus1.T87044.data[60],DATA12);
SIGNAL(V1_09_1_E,fastbus1.Q15372.data[50],DATA12);
SIGNAL(V1_09_1_T,fastbus2.T81795.data[50],DATA12);
SIGNAL(V1_09_2_E,fastbus1.Q47315.data[33],DATA12);
SIGNAL(V1_09_2_T,fastbus1.T87044.data[49],DATA12);
SIGNAL(V1_10_1_E,fastbus1.Q15372.data[54],DATA12);
SIGNAL(V1_10_1_T,fastbus2.T81795.data[54],DATA12);
SIGNAL(V1_10_2_E,fastbus1.Q47315.data[37],DATA12);
SIGNAL(V1_10_2_T,fastbus1.T87044.data[53],DATA12);
SIGNAL(V1_11_1_E,fastbus1.Q15372.data[58],DATA12);
SIGNAL(V1_11_1_T,fastbus2.T81795.data[58],DATA12);
SIGNAL(V1_11_2_E,fastbus1.Q47315.data[41],DATA12);
SIGNAL(V1_11_2_T,fastbus1.T87044.data[57],DATA12);
SIGNAL(V1_12_1_E,fastbus1.Q15372.data[62],DATA12);
SIGNAL(V1_12_1_T,fastbus2.T81795.data[62],DATA12);
SIGNAL(V1_12_2_E,fastbus1.Q47315.data[45],DATA12);
SIGNAL(V1_12_2_T,fastbus1.T87044.data[61],DATA12);
SIGNAL(V1_13_1_E,fastbus1.Q15372.data[51],DATA12);
SIGNAL(V1_13_1_T,fastbus2.T81795.data[51],DATA12);
SIGNAL(V1_13_2_E,fastbus1.Q47315.data[34],DATA12);
SIGNAL(V1_13_2_T,fastbus1.T87044.data[50],DATA12);
SIGNAL(V1_14_1_E,fastbus1.Q15372.data[55],DATA12);
SIGNAL(V1_14_1_T,fastbus2.T81795.data[55],DATA12);
SIGNAL(V1_14_2_E,fastbus1.Q47315.data[38],DATA12);
SIGNAL(V1_14_2_T,fastbus1.T87044.data[54],DATA12);
SIGNAL(V1_15_1_E,fastbus1.Q17320.data[0],DATA12);
SIGNAL(V1_15_1_T,fastbus1.T87024.data[48],DATA12);
SIGNAL(V1_15_2_E,fastbus1.Q47315.data[42],DATA12);
SIGNAL(V1_15_2_T,fastbus1.T87044.data[58],DATA12);
SIGNAL(V1_16_1_E,fastbus1.Q17320.data[2],DATA12);
SIGNAL(V1_16_1_T,fastbus1.T87024.data[50],DATA12);
SIGNAL(V1_16_2_E,fastbus1.Q47315.data[46],DATA12);
SIGNAL(V1_16_2_T,fastbus1.T87044.data[62],DATA12);
SIGNAL(V1_17_1_E,fastbus1.Q15372.data[59],DATA12);
SIGNAL(V1_17_1_T,fastbus2.T81795.data[59],DATA12);
SIGNAL(V1_17_2_E,fastbus1.Q47315.data[35],DATA12);
SIGNAL(V1_17_2_T,fastbus1.T87044.data[51],DATA12);
SIGNAL(V1_18_1_E,fastbus1.Q15372.data[63],DATA12);
SIGNAL(V1_18_1_T,fastbus2.T81795.data[63],DATA12);
SIGNAL(V1_18_2_E,fastbus1.Q47315.data[39],DATA12);
SIGNAL(V1_18_2_T,fastbus1.T87044.data[55],DATA12);
SIGNAL(V1_19_1_E,fastbus1.Q17320.data[4],DATA12);
SIGNAL(V1_19_1_T,fastbus1.T87024.data[52],DATA12);
SIGNAL(V1_19_2_E,fastbus1.Q47315.data[43],DATA12);
SIGNAL(V1_19_2_T,fastbus1.T87044.data[59],DATA12);
SIGNAL(V1_20_1_E,fastbus1.Q17320.data[6],DATA12);
SIGNAL(V1_20_1_T,fastbus1.T87024.data[54],DATA12);
SIGNAL(V1_20_2_E,fastbus1.Q47315.data[47],DATA12);
SIGNAL(V1_20_2_T,fastbus1.T87044.data[63],DATA12);
SIGNAL(ZST3_1_T,camac.tPHI10481.data[0],DATA12);
SIGNAL(ZST3_2_T,camac.tPHI10481.data[1],DATA12);
SIGNAL(ZST3_3_T,camac.tPHI10481.data[2],DATA12);
SIGNAL(ZST3_4_T,camac.tPHI10481.data[3],DATA12);
SIGNAL(ZST3_5_T,camac.tSIA0469.data[0],DATA12);
SIGNAL(ZST4_1_T,camac.tPHI10481.data[4],DATA12);
SIGNAL(ZST4_2_T,camac.tPHI10481.data[5],DATA12);
SIGNAL(ZST4_3_T,camac.tPHI10481.data[6],DATA12);
SIGNAL(ZST4_4_T,camac.tPHI10481.data[7],DATA12);
SIGNAL(ZST4_5_T,camac.tSIA0469.data[1],DATA12);
SIGNAL( ZERO_SUPPRESS:CS1_1);
SIGNAL( ZERO_SUPPRESS:CV1_1);
SIGNAL( ZERO_SUPPRESS:FGR1_1);
SIGNAL( ZERO_SUPPRESS:GFI1_1);
SIGNAL( ZERO_SUPPRESS:N1_1);
SIGNAL( ZERO_SUPPRESS:NTF1);
SIGNAL( ZERO_SUPPRESS:TFW1);
SIGNAL( ZERO_SUPPRESS:V1_1);
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/

/**********************************************************
 * Generating unpacking code...
 */

//
// Generating code for: CAMAC_LECROY_4434
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for CAMAC_LECROY_4434.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_LECROY_4434(channels)
#if !PACKER_CODE
# define DECLARED_UNPACK_CAMAC_LECROY_4434
class CAMAC_LECROY_4434
#else//PACKER_CODE
# define DECLARED_PACKER_CAMAC_LECROY_4434
class PACKER_CAMAC_LECROY_4434
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS);
  raw_array_zero_suppress<DATA24,DATA24,32> data;
  // list(0<=index<channels)

    // UINT32 ch_data NOENCODE
    // {
      //  0_23: value;
      // 24_31: 0;
      // ENCODE(data[index],(value=value));
    // }

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 channels);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 channels);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 channels);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(CAMAC_LECROY_4434);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for CAMAC_LECROY_4434.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_LECROY_4434(channels)
template<typename __data_src_t>
void CAMAC_LECROY_4434::__unpack(__data_src_t &__buffer,uint32 channels)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS);
  // list(0<=index<channels)

  for (uint32 index = 0; index < (uint32) (channels); ++index)
  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_23: value;
      // 24_31: 0;
      // ENCODE(data[index],(value=value));
    // }
    union
    {
      struct
      {
#if __BYTE_ORDER == __LITTLE_ENDIAN
        uint32 value : 24; // 0..23
        uint32 unnamed_24_31 : 8; // 24..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
        uint32 unnamed_24_31 : 8; // 24..31
        uint32 value : 24; // 0..23
#endif
      };
      uint32  u32;
    } ch_data;
    READ_FROM_BUFFER_FULL(25,uint32 ,ch_data,ch_data.u32);
    CHECK_BITS_EQUAL(22,ch_data.unnamed_24_31,0);
    {
      typedef __typeof__(*(&(data))) __array_t;
      typedef typename __array_t::item_t __item_t;
      __item_t &__item = data.insert_index(24,index);
      __item.value = ch_data.value;
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,CAMAC_LECROY_4434::__unpack,uint32 channels);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for CAMAC_LECROY_4434.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_LECROY_4434(channels)
template<typename __data_src_t>
bool CAMAC_LECROY_4434::__match(__data_src_t &__buffer,uint32 channels)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS);
  // list(0<=index<channels)

  for (uint32 index = 0; index < (uint32) (channels); ++index)
  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_23: value;
      // 24_31: 0;
      // ENCODE(data[index],(value=value));
    // }
    union
    {
      struct
      {
#if __BYTE_ORDER == __LITTLE_ENDIAN
        uint32 value : 24; // 0..23
        uint32 unnamed_24_31 : 8; // 24..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
        uint32 unnamed_24_31 : 8; // 24..31
        uint32 value : 24; // 0..23
#endif
      };
      uint32  u32;
    } ch_data;
    READ_FROM_BUFFER_FULL(25,uint32 ,ch_data,ch_data.u32);
    MATCH_BITS_EQUAL(22,ch_data.unnamed_24_31,0);
    return true;
    return false;
  }
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,CAMAC_LECROY_4434::__match,uint32 channels);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for CAMAC_LECROY_4434.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_LECROY_4434(channels)
template<typename __data_dest_t>
void PACKER_CAMAC_LECROY_4434::__packer(__data_dest_t &__buffer,uint32 channels)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS);
  // list(0<=index<channels)

  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_23: value;
      // 24_31: 0;
      // ENCODE(data[index],(value=value));
    // }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,CAMAC_LECROY_4434::__packer,uint32 channels);

/** END_PACKER ********************************************************/

//
// Generating code for: CAMAC_PHILLIPS_7164
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for CAMAC_PHILLIPS_7164.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_PHILLIPS_7164(channels,mark_channel_no)
#if !PACKER_CODE
# define DECLARED_UNPACK_CAMAC_PHILLIPS_7164
class CAMAC_PHILLIPS_7164
#else//PACKER_CODE
# define DECLARED_PACKER_CAMAC_PHILLIPS_7164
class PACKER_CAMAC_PHILLIPS_7164
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA12 data[16] ZERO_SUPPRESS);
  raw_array_zero_suppress<DATA12,DATA12,16> data;
  // list(0<=index<channels)

    // if(mark_channel_no)

    // else

      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // 12_15: channel = CHECK(index);
        // ENCODE(data[index],(value=value));
      // }
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // ENCODE(data[index],(value=value));
      // }

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 channels,uint32 mark_channel_no);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 channels,uint32 mark_channel_no);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 channels,uint32 mark_channel_no);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(CAMAC_PHILLIPS_7164);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for CAMAC_PHILLIPS_7164.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_PHILLIPS_7164(channels,mark_channel_no)
template<typename __data_src_t>
void CAMAC_PHILLIPS_7164::__unpack(__data_src_t &__buffer,uint32 channels
                                                         ,uint32 mark_channel_no)
{
  // MEMBER(DATA12 data[16] ZERO_SUPPRESS);
  // list(0<=index<channels)

  for (uint32 index = 0; index < (uint32) (channels); ++index)
  {
    // if(mark_channel_no)

    // else

    if (mark_channel_no)
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // 12_15: channel = CHECK(index);
        // ENCODE(data[index],(value=value));
      // }
      union
      {
        struct
        {
#if __BYTE_ORDER == __LITTLE_ENDIAN
          uint16 value : 12; // 0..11
          uint16 channel : 4; // 12..15
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
          uint16 channel : 4; // 12..15
          uint16 value : 12; // 0..11
#endif
        };
        uint16  u16;
      } ch_data;
      READ_FROM_BUFFER_FULL(73,uint16 ,ch_data,ch_data.u16);
      CHECK_BITS_EQUAL(70,ch_data.channel,index);
      {
        typedef __typeof__(*(&(data))) __array_t;
        typedef typename __array_t::item_t __item_t;
        __item_t &__item = data.insert_index(72,index);
        __item.value = ch_data.value;
      }
    }

    else
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // ENCODE(data[index],(value=value));
      // }
      union
      {
        struct
        {
#if __BYTE_ORDER == __LITTLE_ENDIAN
          uint16 value : 12; // 0..11
          uint16 dummy_12_15 : 4;
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
          uint16 dummy_12_15 : 4;
          uint16 value : 12; // 0..11
#endif
        };
        uint16  u16;
      } ch_data;
      READ_FROM_BUFFER_FULL(80,uint16 ,ch_data,ch_data.u16);
      CHECK_UNNAMED_BITS_ZERO(80,ch_data.u16,0xf000);
      {
        typedef __typeof__(*(&(data))) __array_t;
        typedef typename __array_t::item_t __item_t;
        __item_t &__item = data.insert_index(79,index);
        __item.value = ch_data.value;
      }
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,CAMAC_PHILLIPS_7164::__unpack,uint32 channels
                                                              ,uint32 mark_channel_no);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for CAMAC_PHILLIPS_7164.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_PHILLIPS_7164(channels,mark_channel_no)
template<typename __data_src_t>
bool CAMAC_PHILLIPS_7164::__match(__data_src_t &__buffer,uint32 channels
                                                        ,uint32 mark_channel_no)
{
  // MEMBER(DATA12 data[16] ZERO_SUPPRESS);
  // list(0<=index<channels)

  for (uint32 index = 0; index < (uint32) (channels); ++index)
  {
    // if(mark_channel_no)

    // else

    if (mark_channel_no)
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // 12_15: channel = CHECK(index);
        // ENCODE(data[index],(value=value));
      // }
      union
      {
        struct
        {
#if __BYTE_ORDER == __LITTLE_ENDIAN
          uint16 value : 12; // 0..11
          uint16 channel : 4; // 12..15
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
          uint16 channel : 4; // 12..15
          uint16 value : 12; // 0..11
#endif
        };
        uint16  u16;
      } ch_data;
      READ_FROM_BUFFER_FULL(73,uint16 ,ch_data,ch_data.u16);
      MATCH_BITS_EQUAL(70,ch_data.channel,index);
      return true;
      return false;
    }

    else
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // ENCODE(data[index],(value=value));
      // }
      union
      {
        struct
        {
#if __BYTE_ORDER == __LITTLE_ENDIAN
          uint16 value : 12; // 0..11
          uint16 dummy_12_15 : 4;
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
          uint16 dummy_12_15 : 4;
          uint16 value : 12; // 0..11
#endif
        };
        uint16  u16;
      } ch_data;
      READ_FROM_BUFFER_FULL(80,uint16 ,ch_data,ch_data.u16);
      MATCH_UNNAMED_BITS_ZERO(80,ch_data.u16,0xf000);
      return true;
      return false;
    }
    return false;
  }
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,CAMAC_PHILLIPS_7164::__match,uint32 channels
                                                             ,uint32 mark_channel_no);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for CAMAC_PHILLIPS_7164.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_PHILLIPS_7164(channels,mark_channel_no)
template<typename __data_dest_t>
void PACKER_CAMAC_PHILLIPS_7164::__packer(__data_dest_t &__buffer,uint32 channels
                                                                 ,uint32 mark_channel_no)
{
  // MEMBER(DATA12 data[16] ZERO_SUPPRESS);
  // list(0<=index<channels)

  {
    // if(mark_channel_no)

    // else

    if (mark_channel_no)
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // 12_15: channel = CHECK(index);
        // ENCODE(data[index],(value=value));
      // }
    }

    else
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // ENCODE(data[index],(value=value));
      // }
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,CAMAC_PHILLIPS_7164::__packer,uint32 channels
                                                              ,uint32 mark_channel_no);

/** END_PACKER ********************************************************/

//
// Generating code for: CAMAC_SILENA_4418
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for CAMAC_SILENA_4418.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_SILENA_4418(channels,mark_channel_no)
#if !PACKER_CODE
# define DECLARED_UNPACK_CAMAC_SILENA_4418
class CAMAC_SILENA_4418
#else//PACKER_CODE
# define DECLARED_PACKER_CAMAC_SILENA_4418
class PACKER_CAMAC_SILENA_4418
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA12_OVERFLOW data[8] ZERO_SUPPRESS);
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,8> data;
  // list(0<=index<channels)

    // if(mark_channel_no)

    // else

      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // 12_14: channel = CHECK(index);
        //    15: overflow;
        // ENCODE(data[index],(value=value,overflow=overflow));
      // }
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        //    15: overflow;
        // ENCODE(data[index],(value=value,overflow=overflow));
      // }

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 channels,uint32 mark_channel_no);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 channels,uint32 mark_channel_no);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 channels,uint32 mark_channel_no);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(CAMAC_SILENA_4418);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for CAMAC_SILENA_4418.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_SILENA_4418(channels,mark_channel_no)
template<typename __data_src_t>
void CAMAC_SILENA_4418::__unpack(__data_src_t &__buffer,uint32 channels,uint32 mark_channel_no)
{
  // MEMBER(DATA12_OVERFLOW data[8] ZERO_SUPPRESS);
  // list(0<=index<channels)

  for (uint32 index = 0; index < (uint32) (channels); ++index)
  {
    // if(mark_channel_no)

    // else

    if (mark_channel_no)
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // 12_14: channel = CHECK(index);
        //    15: overflow;
        // ENCODE(data[index],(value=value,overflow=overflow));
      // }
      union
      {
        struct
        {
#if __BYTE_ORDER == __LITTLE_ENDIAN
          uint16 value : 12; // 0..11
          uint16 channel : 3; // 12..14
          uint16 overflow : 1; // 15
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
          uint16 overflow : 1; // 15
          uint16 channel : 3; // 12..14
          uint16 value : 12; // 0..11
#endif
        };
        uint16  u16;
      } ch_data;
      READ_FROM_BUFFER_FULL(45,uint16 ,ch_data,ch_data.u16);
      CHECK_BITS_EQUAL(41,ch_data.channel,index);
      {
        typedef __typeof__(*(&(data))) __array_t;
        typedef typename __array_t::item_t __item_t;
        __item_t &__item = data.insert_index(44,index);
        __item.value = ch_data.value;
        __item.overflow = ch_data.overflow;
      }
    }

    else
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        //    15: overflow;
        // ENCODE(data[index],(value=value,overflow=overflow));
      // }
      union
      {
        struct
        {
#if __BYTE_ORDER == __LITTLE_ENDIAN
          uint16 value : 12; // 0..11
          uint16 dummy_12_14 : 3;
          uint16 overflow : 1; // 15
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
          uint16 overflow : 1; // 15
          uint16 dummy_12_14 : 3;
          uint16 value : 12; // 0..11
#endif
        };
        uint16  u16;
      } ch_data;
      READ_FROM_BUFFER_FULL(53,uint16 ,ch_data,ch_data.u16);
      CHECK_UNNAMED_BITS_ZERO(53,ch_data.u16,0x7000);
      {
        typedef __typeof__(*(&(data))) __array_t;
        typedef typename __array_t::item_t __item_t;
        __item_t &__item = data.insert_index(52,index);
        __item.value = ch_data.value;
        __item.overflow = ch_data.overflow;
      }
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,CAMAC_SILENA_4418::__unpack,uint32 channels
                                                            ,uint32 mark_channel_no);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for CAMAC_SILENA_4418.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_SILENA_4418(channels,mark_channel_no)
template<typename __data_src_t>
bool CAMAC_SILENA_4418::__match(__data_src_t &__buffer,uint32 channels,uint32 mark_channel_no)
{
  // MEMBER(DATA12_OVERFLOW data[8] ZERO_SUPPRESS);
  // list(0<=index<channels)

  for (uint32 index = 0; index < (uint32) (channels); ++index)
  {
    // if(mark_channel_no)

    // else

    if (mark_channel_no)
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // 12_14: channel = CHECK(index);
        //    15: overflow;
        // ENCODE(data[index],(value=value,overflow=overflow));
      // }
      union
      {
        struct
        {
#if __BYTE_ORDER == __LITTLE_ENDIAN
          uint16 value : 12; // 0..11
          uint16 channel : 3; // 12..14
          uint16 overflow : 1; // 15
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
          uint16 overflow : 1; // 15
          uint16 channel : 3; // 12..14
          uint16 value : 12; // 0..11
#endif
        };
        uint16  u16;
      } ch_data;
      READ_FROM_BUFFER_FULL(45,uint16 ,ch_data,ch_data.u16);
      MATCH_BITS_EQUAL(41,ch_data.channel,index);
      return true;
      return false;
    }

    else
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        //    15: overflow;
        // ENCODE(data[index],(value=value,overflow=overflow));
      // }
      union
      {
        struct
        {
#if __BYTE_ORDER == __LITTLE_ENDIAN
          uint16 value : 12; // 0..11
          uint16 dummy_12_14 : 3;
          uint16 overflow : 1; // 15
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
          uint16 overflow : 1; // 15
          uint16 dummy_12_14 : 3;
          uint16 value : 12; // 0..11
#endif
        };
        uint16  u16;
      } ch_data;
      READ_FROM_BUFFER_FULL(53,uint16 ,ch_data,ch_data.u16);
      MATCH_UNNAMED_BITS_ZERO(53,ch_data.u16,0x7000);
      return true;
      return false;
    }
    return false;
  }
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,CAMAC_SILENA_4418::__match,uint32 channels
                                                           ,uint32 mark_channel_no);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for CAMAC_SILENA_4418.
 *
 * Do not edit - automatically generated.
 */

// CAMAC_SILENA_4418(channels,mark_channel_no)
template<typename __data_dest_t>
void PACKER_CAMAC_SILENA_4418::__packer(__data_dest_t &__buffer,uint32 channels
                                                               ,uint32 mark_channel_no)
{
  // MEMBER(DATA12_OVERFLOW data[8] ZERO_SUPPRESS);
  // list(0<=index<channels)

  {
    // if(mark_channel_no)

    // else

    if (mark_channel_no)
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        // 12_14: channel = CHECK(index);
        //    15: overflow;
        // ENCODE(data[index],(value=value,overflow=overflow));
      // }
    }

    else
    {
      // UINT16 ch_data NOENCODE
      // {
        //  0_11: value;
        //    15: overflow;
        // ENCODE(data[index],(value=value,overflow=overflow));
      // }
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,CAMAC_SILENA_4418::__packer,uint32 channels
                                                            ,uint32 mark_channel_no);

/** END_PACKER ********************************************************/

//
// Generating code for: DUMMY_WORD
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for DUMMY_WORD.
 *
 * Do not edit - automatically generated.
 */

// DUMMY_WORD()
#if !PACKER_CODE
# define DECLARED_UNPACK_DUMMY_WORD
class DUMMY_WORD
#else//PACKER_CODE
# define DECLARED_PACKER_DUMMY_WORD
class PACKER_DUMMY_WORD
#endif//PACKER_CODE

{
public:
  // UINT32 dummy_word;
  uint32  dummy_word;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(DUMMY_WORD);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for DUMMY_WORD.
 *
 * Do not edit - automatically generated.
 */

// DUMMY_WORD()
template<typename __data_src_t>
void DUMMY_WORD::__unpack(__data_src_t &__buffer)
{
  // UINT32 dummy_word;
  READ_FROM_BUFFER(984,uint32 ,dummy_word);
}
FORCE_IMPL_DATA_SRC_FCN(void,DUMMY_WORD::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for DUMMY_WORD.
 *
 * Do not edit - automatically generated.
 */

// DUMMY_WORD()
template<typename __data_src_t>
bool DUMMY_WORD::__match(__data_src_t &__buffer)
{
  // UINT32 dummy_word;
  uint32  __dummy_word;
  READ_FROM_BUFFER(984,uint32 ,__dummy_word);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN(bool,DUMMY_WORD::__match);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for DUMMY_WORD.
 *
 * Do not edit - automatically generated.
 */

// DUMMY_WORD()
template<typename __data_dest_t>
void PACKER_DUMMY_WORD::__packer(__data_dest_t &__buffer)
{
  // UINT32 dummy_word;
}
FORCE_IMPL_DATA_SRC_FCN(void,DUMMY_WORD::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: FASTBUS_LECROY_1875
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for FASTBUS_LECROY_1875.
 *
 * Do not edit - automatically generated.
 */

// FASTBUS_LECROY_1875(geom,channels)
#if !PACKER_CODE
# define DECLARED_UNPACK_FASTBUS_LECROY_1875
class FASTBUS_LECROY_1875
#else//PACKER_CODE
# define DECLARED_PACKER_FASTBUS_LECROY_1875
class PACKER_FASTBUS_LECROY_1875
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA12_RANGE data[64] ZERO_SUPPRESS);
  raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,64> data;
  // UINT32 ch_data NOENCODE
  // {
    //  0_11: value;
    // 16_21: channel = RANGE(0,(channels - 1));
    //    23: range;
    // 24_26: n = CHECK(0);
    // 27_31: geom = MATCH(geom);
    // ENCODE(data[channel],(value=value,range=range));
  // }

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom,uint32 channels);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom,uint32 channels);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom,uint32 channels);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(FASTBUS_LECROY_1875);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for FASTBUS_LECROY_1875.
 *
 * Do not edit - automatically generated.
 */

// FASTBUS_LECROY_1875(geom,channels)
template<typename __data_src_t>
void FASTBUS_LECROY_1875::__unpack(__data_src_t &__buffer,uint32 geom,uint32 channels)
{
  // MEMBER(DATA12_RANGE data[64] ZERO_SUPPRESS);
  // UINT32 ch_data NOENCODE
  // {
    //  0_11: value;
    // 16_21: channel = RANGE(0,(channels - 1));
    //    23: range;
    // 24_26: n = CHECK(0);
    // 27_31: geom = MATCH(geom);
    // ENCODE(data[channel],(value=value,range=range));
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 12; // 0..11
      uint32 dummy_12_15 : 4;
      uint32 channel : 6; // 16..21
      uint32 dummy_22 : 1;
      uint32 range : 1; // 23
      uint32 n : 3; // 24..26
      uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 geom : 5; // 27..31
      uint32 n : 3; // 24..26
      uint32 range : 1; // 23
      uint32 dummy_22 : 1;
      uint32 channel : 6; // 16..21
      uint32 dummy_12_15 : 4;
      uint32 value : 12; // 0..11
#endif
    };
    uint32  u32;
  } ch_data;
  READ_FROM_BUFFER_FULL(103,uint32 ,ch_data,ch_data.u32);
  CHECK_BITS_RANGE_MAX(96,ch_data.channel,(channels - 1));
  CHECK_BITS_EQUAL(99,ch_data.n,0);
  CHECK_BITS_EQUAL(100,ch_data.geom,geom);
  CHECK_UNNAMED_BITS_ZERO(103,ch_data.u32,0x0040f000);
  {
    typedef __typeof__(*(&(data))) __array_t;
    typedef typename __array_t::item_t __item_t;
    __item_t &__item = data.insert_index(102,ch_data.channel);
    __item.value = ch_data.value;
    __item.range = ch_data.range;
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,FASTBUS_LECROY_1875::__unpack,uint32 geom
                                                              ,uint32 channels);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for FASTBUS_LECROY_1875.
 *
 * Do not edit - automatically generated.
 */

// FASTBUS_LECROY_1875(geom,channels)
template<typename __data_src_t>
bool FASTBUS_LECROY_1875::__match(__data_src_t &__buffer,uint32 geom,uint32 channels)
{
  // MEMBER(DATA12_RANGE data[64] ZERO_SUPPRESS);
  // UINT32 ch_data NOENCODE
  // {
    //  0_11: value;
    // 16_21: channel = RANGE(0,(channels - 1));
    //    23: range;
    // 24_26: n = CHECK(0);
    // 27_31: geom = MATCH(geom);
    // ENCODE(data[channel],(value=value,range=range));
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 12; // 0..11
      uint32 dummy_12_15 : 4;
      uint32 channel : 6; // 16..21
      uint32 dummy_22 : 1;
      uint32 range : 1; // 23
      uint32 n : 3; // 24..26
      uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 geom : 5; // 27..31
      uint32 n : 3; // 24..26
      uint32 range : 1; // 23
      uint32 dummy_22 : 1;
      uint32 channel : 6; // 16..21
      uint32 dummy_12_15 : 4;
      uint32 value : 12; // 0..11
#endif
    };
    uint32  u32;
  } ch_data;
  READ_FROM_BUFFER_FULL(103,uint32 ,ch_data,ch_data.u32);
  MATCH_BITS_RANGE_MAX(96,ch_data.channel,(channels - 1));
  MATCH_BITS_EQUAL(99,ch_data.n,0);
  MATCH_BITS_EQUAL(100,ch_data.geom,geom);
  MATCH_UNNAMED_BITS_ZERO(103,ch_data.u32,0x0040f000);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,FASTBUS_LECROY_1875::__match,uint32 geom
                                                             ,uint32 channels);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for FASTBUS_LECROY_1875.
 *
 * Do not edit - automatically generated.
 */

// FASTBUS_LECROY_1875(geom,channels)
template<typename __data_dest_t>
void PACKER_FASTBUS_LECROY_1875::__packer(__data_dest_t &__buffer,uint32 geom
                                                                 ,uint32 channels)
{
  // MEMBER(DATA12_RANGE data[64] ZERO_SUPPRESS);
  // UINT32 ch_data NOENCODE
  // {
    //  0_11: value;
    // 16_21: channel = RANGE(0,(channels - 1));
    //    23: range;
    // 24_26: n = CHECK(0);
    // 27_31: geom = MATCH(geom);
    // ENCODE(data[channel],(value=value,range=range));
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,FASTBUS_LECROY_1875::__packer,uint32 geom
                                                              ,uint32 channels);

/** END_PACKER ********************************************************/

//
// Generating code for: FASTBUS_LECROY_1885
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for FASTBUS_LECROY_1885.
 *
 * Do not edit - automatically generated.
 */

// FASTBUS_LECROY_1885(geom,channels)
#if !PACKER_CODE
# define DECLARED_UNPACK_FASTBUS_LECROY_1885
class FASTBUS_LECROY_1885
#else//PACKER_CODE
# define DECLARED_PACKER_FASTBUS_LECROY_1885
class PACKER_FASTBUS_LECROY_1885
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA12_RANGE data[96] ZERO_SUPPRESS);
  raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,96> data;
  // UINT32 ch_data NOENCODE
  // {
    //  0_11: value;
    // 16_22: channel = RANGE(0,(channels - 1));
    //    23: range;
    // 24_26: n = CHECK(0);
    // 27_31: geom = MATCH(geom);
    // ENCODE(data[channel],(value=value,range=range));
  // }

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom,uint32 channels);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom,uint32 channels);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom,uint32 channels);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(FASTBUS_LECROY_1885);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for FASTBUS_LECROY_1885.
 *
 * Do not edit - automatically generated.
 */

// FASTBUS_LECROY_1885(geom,channels)
template<typename __data_src_t>
void FASTBUS_LECROY_1885::__unpack(__data_src_t &__buffer,uint32 geom,uint32 channels)
{
  // MEMBER(DATA12_RANGE data[96] ZERO_SUPPRESS);
  // UINT32 ch_data NOENCODE
  // {
    //  0_11: value;
    // 16_22: channel = RANGE(0,(channels - 1));
    //    23: range;
    // 24_26: n = CHECK(0);
    // 27_31: geom = MATCH(geom);
    // ENCODE(data[channel],(value=value,range=range));
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 12; // 0..11
      uint32 dummy_12_15 : 4;
      uint32 channel : 7; // 16..22
      uint32 range : 1; // 23
      uint32 n : 3; // 24..26
      uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 geom : 5; // 27..31
      uint32 n : 3; // 24..26
      uint32 range : 1; // 23
      uint32 channel : 7; // 16..22
      uint32 dummy_12_15 : 4;
      uint32 value : 12; // 0..11
#endif
    };
    uint32  u32;
  } ch_data;
  READ_FROM_BUFFER_FULL(120,uint32 ,ch_data,ch_data.u32);
  CHECK_BITS_RANGE_MAX(114,ch_data.channel,(channels - 1));
  CHECK_BITS_EQUAL(116,ch_data.n,0);
  CHECK_BITS_EQUAL(117,ch_data.geom,geom);
  CHECK_UNNAMED_BITS_ZERO(120,ch_data.u32,0x0000f000);
  {
    typedef __typeof__(*(&(data))) __array_t;
    typedef typename __array_t::item_t __item_t;
    __item_t &__item = data.insert_index(119,ch_data.channel);
    __item.value = ch_data.value;
    __item.range = ch_data.range;
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,FASTBUS_LECROY_1885::__unpack,uint32 geom
                                                              ,uint32 channels);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for FASTBUS_LECROY_1885.
 *
 * Do not edit - automatically generated.
 */

// FASTBUS_LECROY_1885(geom,channels)
template<typename __data_src_t>
bool FASTBUS_LECROY_1885::__match(__data_src_t &__buffer,uint32 geom,uint32 channels)
{
  // MEMBER(DATA12_RANGE data[96] ZERO_SUPPRESS);
  // UINT32 ch_data NOENCODE
  // {
    //  0_11: value;
    // 16_22: channel = RANGE(0,(channels - 1));
    //    23: range;
    // 24_26: n = CHECK(0);
    // 27_31: geom = MATCH(geom);
    // ENCODE(data[channel],(value=value,range=range));
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 12; // 0..11
      uint32 dummy_12_15 : 4;
      uint32 channel : 7; // 16..22
      uint32 range : 1; // 23
      uint32 n : 3; // 24..26
      uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 geom : 5; // 27..31
      uint32 n : 3; // 24..26
      uint32 range : 1; // 23
      uint32 channel : 7; // 16..22
      uint32 dummy_12_15 : 4;
      uint32 value : 12; // 0..11
#endif
    };
    uint32  u32;
  } ch_data;
  READ_FROM_BUFFER_FULL(120,uint32 ,ch_data,ch_data.u32);
  MATCH_BITS_RANGE_MAX(114,ch_data.channel,(channels - 1));
  MATCH_BITS_EQUAL(116,ch_data.n,0);
  MATCH_BITS_EQUAL(117,ch_data.geom,geom);
  MATCH_UNNAMED_BITS_ZERO(120,ch_data.u32,0x0000f000);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,FASTBUS_LECROY_1885::__match,uint32 geom
                                                             ,uint32 channels);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for FASTBUS_LECROY_1885.
 *
 * Do not edit - automatically generated.
 */

// FASTBUS_LECROY_1885(geom,channels)
template<typename __data_dest_t>
void PACKER_FASTBUS_LECROY_1885::__packer(__data_dest_t &__buffer,uint32 geom
                                                                 ,uint32 channels)
{
  // MEMBER(DATA12_RANGE data[96] ZERO_SUPPRESS);
  // UINT32 ch_data NOENCODE
  // {
    //  0_11: value;
    // 16_22: channel = RANGE(0,(channels - 1));
    //    23: range;
    // 24_26: n = CHECK(0);
    // 27_31: geom = MATCH(geom);
    // ENCODE(data[channel],(value=value,range=range));
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,FASTBUS_LECROY_1885::__packer,uint32 geom
                                                              ,uint32 channels);

/** END_PACKER ********************************************************/

//
// Generating code for: NTP64_TIME
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for NTP64_TIME.
 *
 * Do not edit - automatically generated.
 */

// NTP64_TIME()
#if !PACKER_CODE
# define DECLARED_UNPACK_NTP64_TIME
class NTP64_TIME
#else//PACKER_CODE
# define DECLARED_PACKER_NTP64_TIME
class PACKER_NTP64_TIME
#endif//PACKER_CODE

{
public:
  // UINT32 sec;
  uint32  sec;
  // UINT32 frac;
  uint32  frac;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(NTP64_TIME);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for NTP64_TIME.
 *
 * Do not edit - automatically generated.
 */

// NTP64_TIME()
template<typename __data_src_t>
void NTP64_TIME::__unpack(__data_src_t &__buffer)
{
  // UINT32 sec;
  READ_FROM_BUFFER(733,uint32 ,sec);
  // UINT32 frac;
  READ_FROM_BUFFER(734,uint32 ,frac);
}
FORCE_IMPL_DATA_SRC_FCN(void,NTP64_TIME::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for NTP64_TIME.
 *
 * Do not edit - automatically generated.
 */

// NTP64_TIME()
template<typename __data_src_t>
bool NTP64_TIME::__match(__data_src_t &__buffer)
{
  // UINT32 sec;
  uint32  __sec;
  READ_FROM_BUFFER(733,uint32 ,__sec);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN(bool,NTP64_TIME::__match);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for NTP64_TIME.
 *
 * Do not edit - automatically generated.
 */

// NTP64_TIME()
template<typename __data_dest_t>
void PACKER_NTP64_TIME::__packer(__data_dest_t &__buffer)
{
  // UINT32 sec;
  // UINT32 frac;
}
FORCE_IMPL_DATA_SRC_FCN(void,NTP64_TIME::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: NTP_MESSAGE
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for NTP_MESSAGE.
 *
 * Do not edit - automatically generated.
 */

// NTP_MESSAGE(id)
#if !PACKER_CODE
# define DECLARED_UNPACK_NTP_MESSAGE
class NTP_MESSAGE
#else//PACKER_CODE
# define DECLARED_PACKER_NTP_MESSAGE
class PACKER_NTP_MESSAGE
#endif//PACKER_CODE

{
public:
  // UINT32 header
  // {
    //  0_15: word_count;
    //    16: quick_burst;
    // 24_31: id = MATCH(id);
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_count : 16; // 0..15
      uint32 quick_burst : 1; // 16
      uint32 dummy_17_23 : 7;
      uint32 id : 8; // 24..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 id : 8; // 24..31
      uint32 dummy_17_23 : 7;
      uint32 quick_burst : 1; // 16
      uint32 word_count : 16; // 0..15
#endif
    };
    uint32  u32;
  } header;
  // MARK_COUNT(start);
  // UINT32 server_id;
  uint32  server_id;
  // UINT32 sspp
  // {
    //  0_07: precision;
    //  8_15: poll;
    // 16_19: stratum;
    // 24_26: mode;
    // 27_29: version = CHECK(3);
    // 30_31: leap;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 precision : 8; // 0..7
      uint32 poll : 8; // 8..15
      uint32 stratum : 4; // 16..19
      uint32 dummy_20_23 : 4;
      uint32 mode : 3; // 24..26
      uint32 version : 3; // 27..29
      uint32 leap : 2; // 30..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 leap : 2; // 30..31
      uint32 version : 3; // 27..29
      uint32 mode : 3; // 24..26
      uint32 dummy_20_23 : 4;
      uint32 stratum : 4; // 16..19
      uint32 poll : 8; // 8..15
      uint32 precision : 8; // 0..7
#endif
    };
    uint32  u32;
  } sspp;
  // UINT32 root_dly
  // {
    //  0_15: frac;
    // 16_31: sec;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 frac : 16; // 0..15
      uint32 sec : 16; // 16..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 sec : 16; // 16..31
      uint32 frac : 16; // 0..15
#endif
    };
    uint32  u32;
  } root_dly;
  // UINT32 root_disp
  // {
    //  0_15: frac;
    // 16_31: sec;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 frac : 16; // 0..15
      uint32 sec : 16; // 16..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 sec : 16; // 16..31
      uint32 frac : 16; // 0..15
#endif
    };
    uint32  u32;
  } root_disp;
  // UINT32 refid;
  uint32  refid;
  // reftime = NTP64_TIME();
  // origtime = NTP64_TIME();
  // rectime = NTP64_TIME();
  // tmittime = NTP64_TIME();
  // rxtime = NTP64_TIME();
  // if(header.quick_burst)

    // orig2time = NTP64_TIME();
    // rec2time = NTP64_TIME();
    // tmit2time = NTP64_TIME();
    // rx2time = NTP64_TIME();
    SINGLE(NTP64_TIME,orig2time);
    SINGLE(NTP64_TIME,tmit2time);
    SINGLE(NTP64_TIME,rec2time);
    SINGLE(NTP64_TIME,rx2time);
  // MARK_COUNT(end);
  // CHECK_COUNT(header.word_count,start,end,0,4)
  SINGLE(NTP64_TIME,reftime);
  SINGLE(NTP64_TIME,origtime);
  SINGLE(NTP64_TIME,rectime);
  SINGLE(NTP64_TIME,tmittime);
  SINGLE(NTP64_TIME,rxtime);

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 id);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 id);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 id);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(NTP_MESSAGE);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for NTP_MESSAGE.
 *
 * Do not edit - automatically generated.
 */

// NTP_MESSAGE(id)
template<typename __data_src_t>
void NTP_MESSAGE::__unpack(__data_src_t &__buffer,uint32 id)
{
  // UINT32 header
  // {
    //  0_15: word_count;
    //    16: quick_burst;
    // 24_31: id = MATCH(id);
  // }
  READ_FROM_BUFFER_FULL(745,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(744,header.id,id);
  CHECK_UNNAMED_BITS_ZERO(745,header.u32,0x00fe0000);
  // MARK_COUNT(start);
  void *__mark_start = __buffer._data;
  // UINT32 server_id;
  READ_FROM_BUFFER(749,uint32 ,server_id);
  // UINT32 sspp
  // {
    //  0_07: precision;
    //  8_15: poll;
    // 16_19: stratum;
    // 24_26: mode;
    // 27_29: version = CHECK(3);
    // 30_31: leap;
  // }
  READ_FROM_BUFFER_FULL(761,uint32 ,sspp,sspp.u32);
  CHECK_BITS_EQUAL(759,sspp.version,3);
  CHECK_UNNAMED_BITS_ZERO(761,sspp.u32,0x00f00000);
  // UINT32 root_dly
  // {
    //  0_15: frac;
    // 16_31: sec;
  // }
  READ_FROM_BUFFER_FULL(767,uint32 ,root_dly,root_dly.u32);
  // UINT32 root_disp
  // {
    //  0_15: frac;
    // 16_31: sec;
  // }
  READ_FROM_BUFFER_FULL(772,uint32 ,root_disp,root_disp.u32);
  // UINT32 refid;
  READ_FROM_BUFFER(773,uint32 ,refid);
  // reftime = NTP64_TIME();
  UNPACK_DECL(775,NTP64_TIME,reftime);
  // origtime = NTP64_TIME();
  UNPACK_DECL(776,NTP64_TIME,origtime);
  // rectime = NTP64_TIME();
  UNPACK_DECL(777,NTP64_TIME,rectime);
  // tmittime = NTP64_TIME();
  UNPACK_DECL(778,NTP64_TIME,tmittime);
  // rxtime = NTP64_TIME();
  UNPACK_DECL(781,NTP64_TIME,rxtime);
  // if(header.quick_burst)

  if (header.quick_burst)
  {
    // orig2time = NTP64_TIME();
    UNPACK_DECL(785,NTP64_TIME,orig2time);
    // rec2time = NTP64_TIME();
    UNPACK_DECL(786,NTP64_TIME,rec2time);
    // tmit2time = NTP64_TIME();
    UNPACK_DECL(787,NTP64_TIME,tmit2time);
    // rx2time = NTP64_TIME();
    UNPACK_DECL(788,NTP64_TIME,rx2time);
  }
  // MARK_COUNT(end);
  void *__mark_end = __buffer._data;
  // CHECK_COUNT(header.word_count,start,end,0,4)
  CHECK_WORD_COUNT(793,header.word_count,start,end,0,4);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,NTP_MESSAGE::__unpack,uint32 id);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for NTP_MESSAGE.
 *
 * Do not edit - automatically generated.
 */

// NTP_MESSAGE(id)
template<typename __data_src_t>
bool NTP_MESSAGE::__match(__data_src_t &__buffer,uint32 id)
{
  // UINT32 header
  // {
    //  0_15: word_count;
    //    16: quick_burst;
    // 24_31: id = MATCH(id);
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_count : 16; // 0..15
      uint32 quick_burst : 1; // 16
      uint32 dummy_17_23 : 7;
      uint32 id : 8; // 24..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 id : 8; // 24..31
      uint32 dummy_17_23 : 7;
      uint32 quick_burst : 1; // 16
      uint32 word_count : 16; // 0..15
#endif
    };
    uint32  u32;
  } __header;
  READ_FROM_BUFFER_FULL(745,uint32 ,header,__header.u32);
  MATCH_BITS_EQUAL(744,__header.id,id);
  MATCH_UNNAMED_BITS_ZERO(745,__header.u32,0x00fe0000);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,NTP_MESSAGE::__match,uint32 id);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for NTP_MESSAGE.
 *
 * Do not edit - automatically generated.
 */

// NTP_MESSAGE(id)
template<typename __data_dest_t>
void PACKER_NTP_MESSAGE::__packer(__data_dest_t &__buffer,uint32 id)
{
  // UINT32 header
  // {
    //  0_15: word_count;
    //    16: quick_burst;
    // 24_31: id = MATCH(id);
  // }
  // MARK_COUNT(start);
  void *__mark_start = __buffer._offset;
  // UINT32 server_id;
  // UINT32 sspp
  // {
    //  0_07: precision;
    //  8_15: poll;
    // 16_19: stratum;
    // 24_26: mode;
    // 27_29: version = CHECK(3);
    // 30_31: leap;
  // }
  // UINT32 root_dly
  // {
    //  0_15: frac;
    // 16_31: sec;
  // }
  // UINT32 root_disp
  // {
    //  0_15: frac;
    // 16_31: sec;
  // }
  // UINT32 refid;
  // reftime = NTP64_TIME();
  PACK_DECL(775,NTP64_TIME,reftime);
  // origtime = NTP64_TIME();
  PACK_DECL(776,NTP64_TIME,origtime);
  // rectime = NTP64_TIME();
  PACK_DECL(777,NTP64_TIME,rectime);
  // tmittime = NTP64_TIME();
  PACK_DECL(778,NTP64_TIME,tmittime);
  // rxtime = NTP64_TIME();
  PACK_DECL(781,NTP64_TIME,rxtime);
  // if(header.quick_burst)

  if (header.quick_burst)
  {
    // orig2time = NTP64_TIME();
    PACK_DECL(785,NTP64_TIME,orig2time);
    // rec2time = NTP64_TIME();
    PACK_DECL(786,NTP64_TIME,rec2time);
    // tmit2time = NTP64_TIME();
    PACK_DECL(787,NTP64_TIME,tmit2time);
    // rx2time = NTP64_TIME();
    PACK_DECL(788,NTP64_TIME,rx2time);
  }
  // MARK_COUNT(end);
  void *__mark_end = __buffer._offset;
  // CHECK_COUNT(header.word_count,start,end,0,4)
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,NTP_MESSAGE::__packer,uint32 id);

/** END_PACKER ********************************************************/

//
// Generating code for: RANDOM_TCAL
//
//
// Generating code for: RANDOM_TCAL_TSTAMP_CLOCK
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for RANDOM_TCAL_TSTAMP_CLOCK.
 *
 * Do not edit - automatically generated.
 */

// RANDOM_TCAL_TSTAMP_CLOCK()
#if !PACKER_CODE
# define DECLARED_UNPACK_RANDOM_TCAL_TSTAMP_CLOCK
class RANDOM_TCAL_TSTAMP_CLOCK
#else//PACKER_CODE
# define DECLARED_PACKER_RANDOM_TCAL_TSTAMP_CLOCK
class PACKER_RANDOM_TCAL_TSTAMP_CLOCK
#endif//PACKER_CODE

{
public:
  // UINT32 soft_latches;
  uint32  soft_latches;
  // UINT32 hard_latches;
  uint32  hard_latches;
  // UINT32 clock_ticks;
  uint32  clock_ticks;
  // before = NTP64_TIME();
  // after = NTP64_TIME();
  SINGLE(NTP64_TIME,before);
  SINGLE(NTP64_TIME,after);

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(RANDOM_TCAL_TSTAMP_CLOCK);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for RANDOM_TCAL_TSTAMP_CLOCK.
 *
 * Do not edit - automatically generated.
 */

// RANDOM_TCAL_TSTAMP_CLOCK()
template<typename __data_src_t>
void RANDOM_TCAL_TSTAMP_CLOCK::__unpack(__data_src_t &__buffer)
{
  // UINT32 soft_latches;
  READ_FROM_BUFFER(801,uint32 ,soft_latches);
  // UINT32 hard_latches;
  READ_FROM_BUFFER(802,uint32 ,hard_latches);
  // UINT32 clock_ticks;
  READ_FROM_BUFFER(803,uint32 ,clock_ticks);
  // before = NTP64_TIME();
  UNPACK_DECL(804,NTP64_TIME,before);
  // after = NTP64_TIME();
  UNPACK_DECL(805,NTP64_TIME,after);
}
FORCE_IMPL_DATA_SRC_FCN(void,RANDOM_TCAL_TSTAMP_CLOCK::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for RANDOM_TCAL_TSTAMP_CLOCK.
 *
 * Do not edit - automatically generated.
 */

// RANDOM_TCAL_TSTAMP_CLOCK()
template<typename __data_src_t>
bool RANDOM_TCAL_TSTAMP_CLOCK::__match(__data_src_t &__buffer)
{
  // UINT32 soft_latches;
  uint32  __soft_latches;
  READ_FROM_BUFFER(801,uint32 ,__soft_latches);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN(bool,RANDOM_TCAL_TSTAMP_CLOCK::__match);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for RANDOM_TCAL_TSTAMP_CLOCK.
 *
 * Do not edit - automatically generated.
 */

// RANDOM_TCAL_TSTAMP_CLOCK()
template<typename __data_dest_t>
void PACKER_RANDOM_TCAL_TSTAMP_CLOCK::__packer(__data_dest_t &__buffer)
{
  // UINT32 soft_latches;
  // UINT32 hard_latches;
  // UINT32 clock_ticks;
  // before = NTP64_TIME();
  PACK_DECL(804,NTP64_TIME,before);
  // after = NTP64_TIME();
  PACK_DECL(805,NTP64_TIME,after);
}
FORCE_IMPL_DATA_SRC_FCN(void,RANDOM_TCAL_TSTAMP_CLOCK::__packer);

/** END_PACKER ********************************************************/


/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for RANDOM_TCAL.
 *
 * Do not edit - automatically generated.
 */

// RANDOM_TCAL(id)
#if !PACKER_CODE
# define DECLARED_UNPACK_RANDOM_TCAL
class RANDOM_TCAL
#else//PACKER_CODE
# define DECLARED_PACKER_RANDOM_TCAL
class PACKER_RANDOM_TCAL
#endif//PACKER_CODE

{
public:
  // UINT32 header
  // {
    //  0_07: word_count;
    //  8_11: pulses;
    // 12_17: clock_bits;
    //    18: has_tstamp1;
    //    19: has_tstamp2;
    // 24_31: id = MATCH(id);
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_count : 8; // 0..7
      uint32 pulses : 4; // 8..11
      uint32 clock_bits : 6; // 12..17
      uint32 has_tstamp1 : 1; // 18
      uint32 has_tstamp2 : 1; // 19
      uint32 dummy_20_23 : 4;
      uint32 id : 8; // 24..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 id : 8; // 24..31
      uint32 dummy_20_23 : 4;
      uint32 has_tstamp2 : 1; // 19
      uint32 has_tstamp1 : 1; // 18
      uint32 clock_bits : 6; // 12..17
      uint32 pulses : 4; // 8..11
      uint32 word_count : 8; // 0..7
#endif
    };
    uint32  u32;
  } header;
  // MARK_COUNT(start);
  // if(header.has_tstamp1)

    // tstamp1 = RANDOM_TCAL_TSTAMP_CLOCK();
    SINGLE(RANDOM_TCAL_TSTAMP_CLOCK,tstamp1);
  // if(header.has_tstamp2)

    // tstamp2 = RANDOM_TCAL_TSTAMP_CLOCK();
    SINGLE(RANDOM_TCAL_TSTAMP_CLOCK,tstamp2);
  // MARK_COUNT(end);
  // CHECK_COUNT(header.word_count,start,end,0,4)

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 id);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 id);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 id);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(RANDOM_TCAL);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for RANDOM_TCAL.
 *
 * Do not edit - automatically generated.
 */

// RANDOM_TCAL(id)
template<typename __data_src_t>
void RANDOM_TCAL::__unpack(__data_src_t &__buffer,uint32 id)
{
  // UINT32 header
  // {
    //  0_07: word_count;
    //  8_11: pulses;
    // 12_17: clock_bits;
    //    18: has_tstamp1;
    //    19: has_tstamp2;
    // 24_31: id = MATCH(id);
  // }
  READ_FROM_BUFFER_FULL(822,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(821,header.id,id);
  CHECK_UNNAMED_BITS_ZERO(822,header.u32,0x00f00000);
  // MARK_COUNT(start);
  void *__mark_start = __buffer._data;
  // if(header.has_tstamp1)

  if (header.has_tstamp1)
  {
    // tstamp1 = RANDOM_TCAL_TSTAMP_CLOCK();
    UNPACK_DECL(828,RANDOM_TCAL_TSTAMP_CLOCK,tstamp1);
  }
  // if(header.has_tstamp2)

  if (header.has_tstamp2)
  {
    // tstamp2 = RANDOM_TCAL_TSTAMP_CLOCK();
    UNPACK_DECL(832,RANDOM_TCAL_TSTAMP_CLOCK,tstamp2);
  }
  // MARK_COUNT(end);
  void *__mark_end = __buffer._data;
  // CHECK_COUNT(header.word_count,start,end,0,4)
  CHECK_WORD_COUNT(837,header.word_count,start,end,0,4);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,RANDOM_TCAL::__unpack,uint32 id);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for RANDOM_TCAL.
 *
 * Do not edit - automatically generated.
 */

// RANDOM_TCAL(id)
template<typename __data_src_t>
bool RANDOM_TCAL::__match(__data_src_t &__buffer,uint32 id)
{
  // UINT32 header
  // {
    //  0_07: word_count;
    //  8_11: pulses;
    // 12_17: clock_bits;
    //    18: has_tstamp1;
    //    19: has_tstamp2;
    // 24_31: id = MATCH(id);
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_count : 8; // 0..7
      uint32 pulses : 4; // 8..11
      uint32 clock_bits : 6; // 12..17
      uint32 has_tstamp1 : 1; // 18
      uint32 has_tstamp2 : 1; // 19
      uint32 dummy_20_23 : 4;
      uint32 id : 8; // 24..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 id : 8; // 24..31
      uint32 dummy_20_23 : 4;
      uint32 has_tstamp2 : 1; // 19
      uint32 has_tstamp1 : 1; // 18
      uint32 clock_bits : 6; // 12..17
      uint32 pulses : 4; // 8..11
      uint32 word_count : 8; // 0..7
#endif
    };
    uint32  u32;
  } __header;
  READ_FROM_BUFFER_FULL(822,uint32 ,header,__header.u32);
  MATCH_BITS_EQUAL(821,__header.id,id);
  MATCH_UNNAMED_BITS_ZERO(822,__header.u32,0x00f00000);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,RANDOM_TCAL::__match,uint32 id);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for RANDOM_TCAL.
 *
 * Do not edit - automatically generated.
 */

// RANDOM_TCAL(id)
template<typename __data_dest_t>
void PACKER_RANDOM_TCAL::__packer(__data_dest_t &__buffer,uint32 id)
{
  // UINT32 header
  // {
    //  0_07: word_count;
    //  8_11: pulses;
    // 12_17: clock_bits;
    //    18: has_tstamp1;
    //    19: has_tstamp2;
    // 24_31: id = MATCH(id);
  // }
  // MARK_COUNT(start);
  void *__mark_start = __buffer._offset;
  // if(header.has_tstamp1)

  if (header.has_tstamp1)
  {
    // tstamp1 = RANDOM_TCAL_TSTAMP_CLOCK();
    PACK_DECL(828,RANDOM_TCAL_TSTAMP_CLOCK,tstamp1);
  }
  // if(header.has_tstamp2)

  if (header.has_tstamp2)
  {
    // tstamp2 = RANDOM_TCAL_TSTAMP_CLOCK();
    PACK_DECL(832,RANDOM_TCAL_TSTAMP_CLOCK,tstamp2);
  }
  // MARK_COUNT(end);
  void *__mark_end = __buffer._offset;
  // CHECK_COUNT(header.word_count,start,end,0,4)
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,RANDOM_TCAL::__packer,uint32 id);

/** END_PACKER ********************************************************/

//
// Generating code for: SOFT_SCALER32
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for SOFT_SCALER32.
 *
 * Do not edit - automatically generated.
 */

// SOFT_SCALER32(channels)
#if !PACKER_CODE
# define DECLARED_UNPACK_SOFT_SCALER32
class SOFT_SCALER32
#else//PACKER_CODE
# define DECLARED_PACKER_SOFT_SCALER32
class PACKER_SOFT_SCALER32
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  raw_array_zero_suppress<DATA32,DATA32,32> data;
  // list(0<=index<channels)

    // UINT32 ch_data NOENCODE
    // {
      //  0_31: value;
      // ENCODE(data[index],(value=value));
    // }

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 channels);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 channels);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 channels);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(SOFT_SCALER32);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for SOFT_SCALER32.
 *
 * Do not edit - automatically generated.
 */

// SOFT_SCALER32(channels)
template<typename __data_src_t>
void SOFT_SCALER32::__unpack(__data_src_t &__buffer,uint32 channels)
{
  // MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  // list(0<=index<channels)

  for (uint32 index = 0; index < (uint32) (channels); ++index)
  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_31: value;
      // ENCODE(data[index],(value=value));
    // }
    union
    {
      struct
      {
#if __BYTE_ORDER == __LITTLE_ENDIAN
        uint32 value : 32; // 0..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
        uint32 value : 32; // 0..31
#endif
      };
      uint32  u32;
    } ch_data;
    READ_FROM_BUFFER_FULL(866,uint32 ,ch_data,ch_data.u32);
    {
      typedef __typeof__(*(&(data))) __array_t;
      typedef typename __array_t::item_t __item_t;
      __item_t &__item = data.insert_index(865,index);
      __item.value = ch_data.value;
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,SOFT_SCALER32::__unpack,uint32 channels);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for SOFT_SCALER32.
 *
 * Do not edit - automatically generated.
 */

// SOFT_SCALER32(channels)
template<typename __data_src_t>
bool SOFT_SCALER32::__match(__data_src_t &__buffer,uint32 channels)
{
  // MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  // list(0<=index<channels)

  for (uint32 index = 0; index < (uint32) (channels); ++index)
  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_31: value;
      // ENCODE(data[index],(value=value));
    // }
    union
    {
      struct
      {
#if __BYTE_ORDER == __LITTLE_ENDIAN
        uint32 value : 32; // 0..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
        uint32 value : 32; // 0..31
#endif
      };
      uint32  u32;
    } ch_data;
    READ_FROM_BUFFER_FULL(866,uint32 ,ch_data,ch_data.u32);
    return true;
    return false;
  }
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,SOFT_SCALER32::__match,uint32 channels);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for SOFT_SCALER32.
 *
 * Do not edit - automatically generated.
 */

// SOFT_SCALER32(channels)
template<typename __data_dest_t>
void PACKER_SOFT_SCALER32::__packer(__data_dest_t &__buffer,uint32 channels)
{
  // MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  // list(0<=index<channels)

  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_31: value;
      // ENCODE(data[index],(value=value));
    // }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,SOFT_SCALER32::__packer,uint32 channels);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_CAEN_V1190
//
//
// Generating code for: VME_CAEN_V1190_SUBTDC
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1190_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SUBTDC(tdc,event_id,data)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1190_SUBTDC
class VME_CAEN_V1190_SUBTDC
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1190_SUBTDC
class PACKER_VME_CAEN_V1190_SUBTDC
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(tdc_start);
  // UINT32 header
  // {
    //  0_11: bunch_id;
    // 12_23: event_id = CHECK(event_id);
    // 24_25: tdc = MATCH(tdc);
    // 27_31: 1;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 bunch_id : 12; // 0..11
      uint32 event_id : 12; // 12..23
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 event_id : 12; // 12..23
      uint32 bunch_id : 12; // 0..11
#endif
    };
    uint32  u32;
  } header;
  // several UINT32 ch_data NOENCODE
  // {
    //  0_18: value;
    // 19_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 5) | channel_low)],(value=value));
  // }
  // optional UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 flags : 15; // 0..14
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 dummy_15_23 : 9;
      uint32 flags : 15; // 0..14
#endif
    };
    uint32  u32;
  } error_flags;
  // MARK_COUNT(tdc_end);
  // UINT32 trailer
  // {
    //  0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
    // 12_23: event_id = CHECK(header.event_id);
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 3;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_count : 12; // 0..11
      uint32 event_id : 12; // 12..23
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 event_id : 12; // 12..23
      uint32 word_count : 12; // 0..11
#endif
    };
    uint32  u32;
  } trailer;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 tdc,uint32 event_id,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 tdc,uint32 event_id);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 tdc,uint32 event_id,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1190_SUBTDC);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1190_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SUBTDC(tdc,event_id,data)
template<typename __data_src_t>
void VME_CAEN_V1190_SUBTDC::__unpack(__data_src_t &__buffer,uint32 tdc,uint32 event_id
                                                           ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(tdc_start);
  void *__mark_tdc_start = __buffer._data;
  // UINT32 header
  // {
    //  0_11: bunch_id;
    // 12_23: event_id = CHECK(event_id);
    // 24_25: tdc = MATCH(tdc);
    // 27_31: 1;
  // }
  READ_FROM_BUFFER_FULL(424,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(420,header.event_id,event_id);
  CHECK_BITS_EQUAL(422,header.tdc,tdc);
  CHECK_BITS_EQUAL(423,header.unnamed_27_31,1);
  CHECK_UNNAMED_BITS_ZERO(424,header.u32,0x04000000);
  // several UINT32 ch_data NOENCODE
  // {
    //  0_18: value;
    // 19_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 5) | channel_low)],(value=value));
  // }
  for ( ; ; ) {
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 19; // 0..18
      uint32 channel_low : 5; // 19..23
      uint32 tdc : 2; // 24..25
      uint32 trailing : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trailing : 1; // 26
      uint32 tdc : 2; // 24..25
      uint32 channel_low : 5; // 19..23
      uint32 value : 19; // 0..18
#endif
    };
    uint32  u32;
  } ch_data;
  if (__buffer.empty()) goto data_done_0;
  PEEK_FROM_BUFFER_FULL(451,uint32 ,ch_data,ch_data.u32);
  CHECK_JUMP_BITS_EQUAL(436,ch_data.tdc,tdc,data_done_0);
  CHECK_JUMP_BITS_EQUAL(441,ch_data.unnamed_27_31,0,data_done_0);
  __buffer.advance(sizeof(ch_data.u32));
  {
    typedef __typeof__(*(&(data))) __array_t;
    typedef typename __array_t::item_t __item_t;
    __item_t &__item = data.insert_index(449,((ch_data.tdc << 5) | ch_data.channel_low));
    __item.value = ch_data.value;
  }
  }
  data_done_0:;
  // optional UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 flags : 15; // 0..14
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 dummy_15_23 : 9;
      uint32 flags : 15; // 0..14
#endif
    };
    uint32  u32;
  } __error_flags;
  if (__buffer.empty()) goto data_done_1;
  PEEK_FROM_BUFFER_FULL(459,uint32 ,error_flags,__error_flags.u32);
  CHECK_JUMP_BITS_EQUAL(457,__error_flags.tdc,tdc,data_done_1);
  CHECK_JUMP_BITS_EQUAL(458,__error_flags.unnamed_27_31,4,data_done_1);
  CHECK_JUMP_UNNAMED_BITS_ZERO(459,__error_flags.u32,0x04ff8000,data_done_1);
  error_flags.u32 = __error_flags.u32;
  __buffer.advance(sizeof(__error_flags.u32));
  data_done_1:;
  // MARK_COUNT(tdc_end);
  void *__mark_tdc_end = __buffer._data;
  // UINT32 trailer
  // {
    //  0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
    // 12_23: event_id = CHECK(header.event_id);
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 3;
  // }
  READ_FROM_BUFFER_FULL(470,uint32 ,trailer,trailer.u32);
  CHECK_WORD_COUNT(465,trailer.word_count,tdc_start,tdc_end,4,4);
  CHECK_BITS_EQUAL(466,trailer.event_id,header.event_id);
  CHECK_BITS_EQUAL(468,trailer.tdc,tdc);
  CHECK_BITS_EQUAL(469,trailer.unnamed_27_31,3);
  CHECK_UNNAMED_BITS_ZERO(470,trailer.u32,0x04000000);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190_SUBTDC::__unpack,uint32 tdc
                                                                ,uint32 event_id
                                                                ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1190_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SUBTDC(tdc,event_id,data)
template<typename __data_src_t>
bool VME_CAEN_V1190_SUBTDC::__match(__data_src_t &__buffer,uint32 tdc,uint32 event_id)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(tdc_start);
  // UINT32 header
  // {
    //  0_11: bunch_id;
    // 12_23: event_id = CHECK(event_id);
    // 24_25: tdc = MATCH(tdc);
    // 27_31: 1;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 bunch_id : 12; // 0..11
      uint32 event_id : 12; // 12..23
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 event_id : 12; // 12..23
      uint32 bunch_id : 12; // 0..11
#endif
    };
    uint32  u32;
  } __header;
  READ_FROM_BUFFER_FULL(424,uint32 ,header,__header.u32);
  MATCH_BITS_EQUAL(420,__header.event_id,event_id);
  MATCH_BITS_EQUAL(422,__header.tdc,tdc);
  MATCH_BITS_EQUAL(423,__header.unnamed_27_31,1);
  MATCH_UNNAMED_BITS_ZERO(424,__header.u32,0x04000000);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1190_SUBTDC::__match,uint32 tdc
                                                               ,uint32 event_id);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1190_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SUBTDC(tdc,event_id,data)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1190_SUBTDC::__packer(__data_dest_t &__buffer,uint32 tdc
                                                                   ,uint32 event_id
                                                                   ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(tdc_start);
  void *__mark_tdc_start = __buffer._offset;
  // UINT32 header
  // {
    //  0_11: bunch_id;
    // 12_23: event_id = CHECK(event_id);
    // 24_25: tdc = MATCH(tdc);
    // 27_31: 1;
  // }
  // several UINT32 ch_data NOENCODE
  // {
    //  0_18: value;
    // 19_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 5) | channel_low)],(value=value));
  // }
  // optional UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  // MARK_COUNT(tdc_end);
  void *__mark_tdc_end = __buffer._offset;
  // UINT32 trailer
  // {
    //  0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
    // 12_23: event_id = CHECK(header.event_id);
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 3;
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190_SUBTDC::__packer,uint32 tdc
                                                                ,uint32 event_id);

/** END_PACKER ********************************************************/


/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1190.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190(geom)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1190
class VME_CAEN_V1190
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1190
class PACKER_VME_CAEN_V1190
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  // MARK_COUNT(v1190_start);
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 event_number : 22; // 5..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 event_number : 22; // 5..26
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } header;
  // select several

    // tdc[0] = VME_CAEN_V1190_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[1] = VME_CAEN_V1190_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[2] = VME_CAEN_V1190_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[3] = VME_CAEN_V1190_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                   // data=data);
  SINGLE(VME_CAEN_V1190_SUBTDC,tdc[4]);
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 time_tag : 27; // 0..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 time_tag : 27; // 0..26
#endif
    };
    uint32  u32;
  } trigger;
  // MARK_COUNT(v1190_end);
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 word_count : 15; // 5..19
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1; // 24
      uint32 buffer_overflow : 1; // 25
      uint32 trigger_lost : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trigger_lost : 1; // 26
      uint32 buffer_overflow : 1; // 25
      uint32 tdc_error : 1; // 24
      uint32 dummy_20_23 : 4;
      uint32 word_count : 15; // 5..19
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } trailer;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1190);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1190.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190(geom)
template<typename __data_src_t>
void VME_CAEN_V1190::__unpack(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  void *__mark_v1190_start = __buffer._data;
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  READ_FROM_BUFFER_FULL(485,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(482,header.geom,geom);
  CHECK_BITS_EQUAL(484,header.unnamed_27_31,8);
  // select several

    // tdc[0] = VME_CAEN_V1190_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[1] = VME_CAEN_V1190_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[2] = VME_CAEN_V1190_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[3] = VME_CAEN_V1190_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                   // data=data);
  for ( ; ; )
  {
    if (__buffer.empty()) break;
    int __match_no = 0;
    // optimized match 1: VME_CAEN_V1190_SUBTDC tdc[0]: (s32) => (0xff000000,0x08000000)
    // optimized match 2: VME_CAEN_V1190_SUBTDC tdc[1]: (s32) => (0xff000000,0x09000000)
    // optimized match 3: VME_CAEN_V1190_SUBTDC tdc[2]: (s32) => (0xff000000,0x0a000000)
    // optimized match 4: VME_CAEN_V1190_SUBTDC tdc[3]: (s32) => (0xff000000,0x0b000000)
    {
    uint32 __match_peek;
    PEEK_FROM_BUFFER(493,uint32,__match_peek);
    // differ = 03000000 : 24 25
    uint32 __match_index = 0 | /* 24,25 */ ((__match_peek >> 24) & 0x00000003);
    static const sint8 __match_index_array[4] = { 1, 2, 3, 4, };
    __match_no = __match_index_array[__match_index];
    // last_subevent_item = 0
    }
    if (!__match_no) break;
    switch (__match_no)
    {
      case 1:
        CHECK_SPURIOUS_MATCH_DECL(489,spurious_match_abort_loop_0,VME_CAEN_V1190_SUBTDC,/*tdc*/0,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(489,VME_CAEN_V1190_SUBTDC,tdc[0],/*tdc*/0,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 2:
        CHECK_SPURIOUS_MATCH_DECL(490,spurious_match_abort_loop_0,VME_CAEN_V1190_SUBTDC,/*tdc*/1,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(490,VME_CAEN_V1190_SUBTDC,tdc[1],/*tdc*/1,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 3:
        CHECK_SPURIOUS_MATCH_DECL(491,spurious_match_abort_loop_0,VME_CAEN_V1190_SUBTDC,/*tdc*/2,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(491,VME_CAEN_V1190_SUBTDC,tdc[2],/*tdc*/2,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 4:
        CHECK_SPURIOUS_MATCH_DECL(492,spurious_match_abort_loop_0,VME_CAEN_V1190_SUBTDC,/*tdc*/3,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(492,VME_CAEN_V1190_SUBTDC,tdc[3],/*tdc*/3,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
    }
  }
  spurious_match_abort_loop_0:;
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  READ_FROM_BUFFER_FULL(499,uint32 ,trigger,trigger.u32);
  CHECK_BITS_EQUAL(498,trigger.unnamed_27_31,17);
  // MARK_COUNT(v1190_end);
  void *__mark_v1190_end = __buffer._data;
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
  READ_FROM_BUFFER_FULL(511,uint32 ,trailer,trailer.u32);
  CHECK_BITS_EQUAL(505,trailer.geom,geom);
  CHECK_WORD_COUNT(506,trailer.word_count,v1190_start,v1190_end,4,4);
  CHECK_BITS_EQUAL(510,trailer.unnamed_27_31,16);
  CHECK_UNNAMED_BITS_ZERO(511,trailer.u32,0x00f00000);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190::__unpack,uint32 geom);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1190.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190(geom)
template<typename __data_src_t>
bool VME_CAEN_V1190::__match(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 event_number : 22; // 5..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 event_number : 22; // 5..26
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } __header;
  READ_FROM_BUFFER_FULL(485,uint32 ,header,__header.u32);
  MATCH_BITS_EQUAL(482,__header.geom,geom);
  MATCH_BITS_EQUAL(484,__header.unnamed_27_31,8);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1190::__match,uint32 geom);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1190.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190(geom)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1190::__packer(__data_dest_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  void *__mark_v1190_start = __buffer._offset;
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  // select several

    // tdc[0] = VME_CAEN_V1190_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[1] = VME_CAEN_V1190_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[2] = VME_CAEN_V1190_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[3] = VME_CAEN_V1190_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                   // data=data);
  {
    PACK_DECL(489,VME_CAEN_V1190_SUBTDC,tdc[0],/*tdc*/0,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(490,VME_CAEN_V1190_SUBTDC,tdc[1],/*tdc*/1,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(491,VME_CAEN_V1190_SUBTDC,tdc[2],/*tdc*/2,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(492,VME_CAEN_V1190_SUBTDC,tdc[3],/*tdc*/3,/*event_id*/(header.event_number & 0xfff),/*data*/data);
  }
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  // MARK_COUNT(v1190_end);
  void *__mark_v1190_end = __buffer._offset;
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190::__packer,uint32 geom);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_CAEN_V1190_SHORT
//
//
// Generating code for: VME_CAEN_V1190_SHORT_SUBTDC
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1190_SHORT_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT_SUBTDC(tdc,event_id,data)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1190_SHORT_SUBTDC
class VME_CAEN_V1190_SHORT_SUBTDC
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1190_SHORT_SUBTDC
class PACKER_VME_CAEN_V1190_SHORT_SUBTDC
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // UINT32 ch_data NOENCODE
  // {
    //  0_18: value;
    // 19_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 5) | channel_low)],(value=value));
  // }

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 tdc,uint32 event_id,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 tdc,uint32 event_id);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 tdc,uint32 event_id,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1190_SHORT_SUBTDC);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1190_SHORT_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT_SUBTDC(tdc,event_id,data)
template<typename __data_src_t>
void VME_CAEN_V1190_SHORT_SUBTDC::__unpack(__data_src_t &__buffer,uint32 tdc
                                                                 ,uint32 event_id
                                                                 ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // UINT32 ch_data NOENCODE
  // {
    //  0_18: value;
    // 19_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 5) | channel_low)],(value=value));
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 19; // 0..18
      uint32 channel_low : 5; // 19..23
      uint32 tdc : 2; // 24..25
      uint32 trailing : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trailing : 1; // 26
      uint32 tdc : 2; // 24..25
      uint32 channel_low : 5; // 19..23
      uint32 value : 19; // 0..18
#endif
    };
    uint32  u32;
  } ch_data;
  READ_FROM_BUFFER_FULL(548,uint32 ,ch_data,ch_data.u32);
  CHECK_BITS_EQUAL(533,ch_data.tdc,tdc);
  CHECK_BITS_EQUAL(538,ch_data.unnamed_27_31,0);
  {
    typedef __typeof__(*(&(data))) __array_t;
    typedef typename __array_t::item_t __item_t;
    __item_t &__item = data.insert_index(546,((ch_data.tdc << 5) | ch_data.channel_low));
    __item.value = ch_data.value;
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190_SHORT_SUBTDC::__unpack,uint32 tdc
                                                                      ,uint32 event_id
                                                                      ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1190_SHORT_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT_SUBTDC(tdc,event_id,data)
template<typename __data_src_t>
bool VME_CAEN_V1190_SHORT_SUBTDC::__match(__data_src_t &__buffer,uint32 tdc
                                                                ,uint32 event_id)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // UINT32 ch_data NOENCODE
  // {
    //  0_18: value;
    // 19_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 5) | channel_low)],(value=value));
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 19; // 0..18
      uint32 channel_low : 5; // 19..23
      uint32 tdc : 2; // 24..25
      uint32 trailing : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trailing : 1; // 26
      uint32 tdc : 2; // 24..25
      uint32 channel_low : 5; // 19..23
      uint32 value : 19; // 0..18
#endif
    };
    uint32  u32;
  } ch_data;
  READ_FROM_BUFFER_FULL(548,uint32 ,ch_data,ch_data.u32);
  MATCH_BITS_EQUAL(533,ch_data.tdc,tdc);
  MATCH_BITS_EQUAL(538,ch_data.unnamed_27_31,0);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1190_SHORT_SUBTDC::__match,uint32 tdc
                                                                     ,uint32 event_id);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1190_SHORT_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT_SUBTDC(tdc,event_id,data)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1190_SHORT_SUBTDC::__packer(__data_dest_t &__buffer,uint32 tdc
                                                                         ,uint32 event_id
                                                                         ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // UINT32 ch_data NOENCODE
  // {
    //  0_18: value;
    // 19_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 5) | channel_low)],(value=value));
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190_SHORT_SUBTDC::__packer,uint32 tdc
                                                                      ,uint32 event_id);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1190_SHORT_SUBTDC_ERROR.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1190_SHORT_SUBTDC_ERROR
class VME_CAEN_V1190_SHORT_SUBTDC_ERROR
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1190_SHORT_SUBTDC_ERROR
class PACKER_VME_CAEN_V1190_SHORT_SUBTDC_ERROR
#endif//PACKER_CODE

{
public:
  // UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 flags : 15; // 0..14
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 dummy_15_23 : 9;
      uint32 flags : 15; // 0..14
#endif
    };
    uint32  u32;
  } error_flags;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 tdc);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 tdc);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 tdc);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1190_SHORT_SUBTDC_ERROR);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1190_SHORT_SUBTDC_ERROR.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc)
template<typename __data_src_t>
void VME_CAEN_V1190_SHORT_SUBTDC_ERROR::__unpack(__data_src_t &__buffer,uint32 tdc)
{
  // UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  READ_FROM_BUFFER_FULL(559,uint32 ,error_flags,error_flags.u32);
  CHECK_BITS_EQUAL(557,error_flags.tdc,tdc);
  CHECK_BITS_EQUAL(558,error_flags.unnamed_27_31,4);
  CHECK_UNNAMED_BITS_ZERO(559,error_flags.u32,0x04ff8000);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190_SHORT_SUBTDC_ERROR::__unpack,uint32 tdc);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1190_SHORT_SUBTDC_ERROR.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc)
template<typename __data_src_t>
bool VME_CAEN_V1190_SHORT_SUBTDC_ERROR::__match(__data_src_t &__buffer,uint32 tdc)
{
  // UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 flags : 15; // 0..14
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 dummy_15_23 : 9;
      uint32 flags : 15; // 0..14
#endif
    };
    uint32  u32;
  } __error_flags;
  READ_FROM_BUFFER_FULL(559,uint32 ,error_flags,__error_flags.u32);
  MATCH_BITS_EQUAL(557,__error_flags.tdc,tdc);
  MATCH_BITS_EQUAL(558,__error_flags.unnamed_27_31,4);
  MATCH_UNNAMED_BITS_ZERO(559,__error_flags.u32,0x04ff8000);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1190_SHORT_SUBTDC_ERROR::__match,uint32 tdc);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1190_SHORT_SUBTDC_ERROR.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1190_SHORT_SUBTDC_ERROR::__packer(__data_dest_t &__buffer,uint32 tdc)
{
  // UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190_SHORT_SUBTDC_ERROR::__packer,uint32 tdc);

/** END_PACKER ********************************************************/


/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1190_SHORT.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT(geom)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1190_SHORT
class VME_CAEN_V1190_SHORT
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1190_SHORT
class PACKER_VME_CAEN_V1190_SHORT
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  // MARK_COUNT(v1190_start);
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 event_number : 22; // 5..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 event_number : 22; // 5..26
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } header;
  // select several

    // tdc[0] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[1] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[2] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[3] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // norevisit err[0] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=0);
    // norevisit err[1] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=1);
    // norevisit err[2] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=2);
    // norevisit err[3] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=3);
  SINGLE(VME_CAEN_V1190_SHORT_SUBTDC,tdc[4]);
  SINGLE(VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[4]);
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 time_tag : 27; // 0..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 time_tag : 27; // 0..26
#endif
    };
    uint32  u32;
  } trigger;
  // MARK_COUNT(v1190_end);
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 word_count : 15; // 5..19
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1; // 24
      uint32 buffer_overflow : 1; // 25
      uint32 trigger_lost : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trigger_lost : 1; // 26
      uint32 buffer_overflow : 1; // 25
      uint32 tdc_error : 1; // 24
      uint32 dummy_20_23 : 4;
      uint32 word_count : 15; // 5..19
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } trailer;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1190_SHORT);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1190_SHORT.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT(geom)
template<typename __data_src_t>
void VME_CAEN_V1190_SHORT::__unpack(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  void *__mark_v1190_start = __buffer._data;
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  READ_FROM_BUFFER_FULL(574,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(571,header.geom,geom);
  CHECK_BITS_EQUAL(573,header.unnamed_27_31,8);
  // select several

    // tdc[0] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[1] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[2] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[3] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // norevisit err[0] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=0);
    // norevisit err[1] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=1);
    // norevisit err[2] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=2);
    // norevisit err[3] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=3);
  bitsone<4> __visited1;
  __visited1.clear();
  for ( ; ; )
  {
    if (__buffer.empty()) break;
    int __match_no = 0;
    // optimized match 1: VME_CAEN_V1190_SHORT_SUBTDC tdc[0]: (s32) => (0xfb000000,0x00000000)
    // optimized match 2: VME_CAEN_V1190_SHORT_SUBTDC tdc[1]: (s32) => (0xfb000000,0x01000000)
    // optimized match 3: VME_CAEN_V1190_SHORT_SUBTDC tdc[2]: (s32) => (0xfb000000,0x02000000)
    // optimized match 4: VME_CAEN_V1190_SHORT_SUBTDC tdc[3]: (s32) => (0xfb000000,0x03000000)
    // optimized match 5: VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[0]: (s32) => (0xffff8000,0x20000000)
    // optimized match 6: VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[1]: (s32) => (0xffff8000,0x21000000)
    // optimized match 7: VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[2]: (s32) => (0xffff8000,0x22000000)
    // optimized match 8: VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[3]: (s32) => (0xffff8000,0x23000000)
    {
    uint32 __match_peek;
    PEEK_FROM_BUFFER(587,uint32,__match_peek);
    // differ = 23000000 : 24 25 29
    uint32 __match_index = 0 | /* 24,25 */ ((__match_peek >> 24) & 0x00000003) | /* 29,29 */ ((__match_peek >> 27) & 0x00000004);
    static const sint8 __match_index_array[8] = { 1, 2, 3, 4, 5, 6, 7, 8, };
    __match_no = __match_index_array[__match_index];
    // last_subevent_item = 0
    }
    if (!__match_no) break;
    switch (__match_no)
    {
      case 1:
        CHECK_SPURIOUS_MATCH_DECL(578,spurious_match_abort_loop_1,VME_CAEN_V1190_SHORT_SUBTDC,/*tdc*/0,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(578,VME_CAEN_V1190_SHORT_SUBTDC,tdc[0],/*tdc*/0,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 2:
        CHECK_SPURIOUS_MATCH_DECL(579,spurious_match_abort_loop_1,VME_CAEN_V1190_SHORT_SUBTDC,/*tdc*/1,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(579,VME_CAEN_V1190_SHORT_SUBTDC,tdc[1],/*tdc*/1,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 3:
        CHECK_SPURIOUS_MATCH_DECL(580,spurious_match_abort_loop_1,VME_CAEN_V1190_SHORT_SUBTDC,/*tdc*/2,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(580,VME_CAEN_V1190_SHORT_SUBTDC,tdc[2],/*tdc*/2,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 4:
        CHECK_SPURIOUS_MATCH_DECL(581,spurious_match_abort_loop_1,VME_CAEN_V1190_SHORT_SUBTDC,/*tdc*/3,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(581,VME_CAEN_V1190_SHORT_SUBTDC,tdc[3],/*tdc*/3,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 5:
        CHECK_SPURIOUS_MATCH_DECL(583,spurious_match_abort_loop_1,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,/*tdc*/0);
        UNPACK_CHECK_NO_REVISIT(583,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[0],__visited1,0);
        UNPACK_DECL(583,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[0],/*tdc*/0);
        break;
      case 6:
        CHECK_SPURIOUS_MATCH_DECL(584,spurious_match_abort_loop_1,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,/*tdc*/1);
        UNPACK_CHECK_NO_REVISIT(584,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[1],__visited1,1);
        UNPACK_DECL(584,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[1],/*tdc*/1);
        break;
      case 7:
        CHECK_SPURIOUS_MATCH_DECL(585,spurious_match_abort_loop_1,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,/*tdc*/2);
        UNPACK_CHECK_NO_REVISIT(585,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[2],__visited1,2);
        UNPACK_DECL(585,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[2],/*tdc*/2);
        break;
      case 8:
        CHECK_SPURIOUS_MATCH_DECL(586,spurious_match_abort_loop_1,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,/*tdc*/3);
        UNPACK_CHECK_NO_REVISIT(586,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[3],__visited1,3);
        UNPACK_DECL(586,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[3],/*tdc*/3);
        break;
    }
  }
  spurious_match_abort_loop_1:;
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  READ_FROM_BUFFER_FULL(593,uint32 ,trigger,trigger.u32);
  CHECK_BITS_EQUAL(592,trigger.unnamed_27_31,17);
  // MARK_COUNT(v1190_end);
  void *__mark_v1190_end = __buffer._data;
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
  READ_FROM_BUFFER_FULL(605,uint32 ,trailer,trailer.u32);
  CHECK_BITS_EQUAL(599,trailer.geom,geom);
  CHECK_WORD_COUNT(600,trailer.word_count,v1190_start,v1190_end,4,4);
  CHECK_BITS_EQUAL(604,trailer.unnamed_27_31,16);
  CHECK_UNNAMED_BITS_ZERO(605,trailer.u32,0x00f00000);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190_SHORT::__unpack,uint32 geom);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1190_SHORT.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT(geom)
template<typename __data_src_t>
bool VME_CAEN_V1190_SHORT::__match(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 event_number : 22; // 5..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 event_number : 22; // 5..26
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } __header;
  READ_FROM_BUFFER_FULL(574,uint32 ,header,__header.u32);
  MATCH_BITS_EQUAL(571,__header.geom,geom);
  MATCH_BITS_EQUAL(573,__header.unnamed_27_31,8);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1190_SHORT::__match,uint32 geom);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1190_SHORT.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1190_SHORT(geom)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1190_SHORT::__packer(__data_dest_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  void *__mark_v1190_start = __buffer._offset;
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  // select several

    // tdc[0] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[1] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[2] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[3] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // norevisit err[0] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=0);
    // norevisit err[1] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=1);
    // norevisit err[2] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=2);
    // norevisit err[3] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=3);
  {
    PACK_DECL(578,VME_CAEN_V1190_SHORT_SUBTDC,tdc[0],/*tdc*/0,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(579,VME_CAEN_V1190_SHORT_SUBTDC,tdc[1],/*tdc*/1,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(580,VME_CAEN_V1190_SHORT_SUBTDC,tdc[2],/*tdc*/2,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(581,VME_CAEN_V1190_SHORT_SUBTDC,tdc[3],/*tdc*/3,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(583,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[0],/*tdc*/0);
    PACK_DECL(584,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[1],/*tdc*/1);
    PACK_DECL(585,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[2],/*tdc*/2);
    PACK_DECL(586,VME_CAEN_V1190_SHORT_SUBTDC_ERROR,err[3],/*tdc*/3);
  }
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  // MARK_COUNT(v1190_end);
  void *__mark_v1190_end = __buffer._offset;
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1190_SHORT::__packer,uint32 geom);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_CAEN_V1290
//
//
// Generating code for: VME_CAEN_V1290_SUBTDC
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1290_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SUBTDC(tdc,event_id,data)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1290_SUBTDC
class VME_CAEN_V1290_SUBTDC
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1290_SUBTDC
class PACKER_VME_CAEN_V1290_SUBTDC
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(tdc_start);
  // UINT32 header
  // {
    //  0_11: bunch_id;
    // 12_23: event_id = CHECK(event_id);
    // 24_25: tdc = MATCH(tdc);
    // 27_31: 1;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 bunch_id : 12; // 0..11
      uint32 event_id : 12; // 12..23
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 event_id : 12; // 12..23
      uint32 bunch_id : 12; // 0..11
#endif
    };
    uint32  u32;
  } header;
  // several UINT32 ch_data NOENCODE
  // {
    //  0_20: value;
    // 21_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 3) | channel_low)],(value=value));
  // }
  // optional UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 flags : 15; // 0..14
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 dummy_15_23 : 9;
      uint32 flags : 15; // 0..14
#endif
    };
    uint32  u32;
  } error_flags;
  // MARK_COUNT(tdc_end);
  // UINT32 trailer
  // {
    //  0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
    // 12_23: event_id = CHECK(header.event_id);
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 3;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_count : 12; // 0..11
      uint32 event_id : 12; // 12..23
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 event_id : 12; // 12..23
      uint32 word_count : 12; // 0..11
#endif
    };
    uint32  u32;
  } trailer;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 tdc,uint32 event_id,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 tdc,uint32 event_id);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 tdc,uint32 event_id,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1290_SUBTDC);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1290_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SUBTDC(tdc,event_id,data)
template<typename __data_src_t>
void VME_CAEN_V1290_SUBTDC::__unpack(__data_src_t &__buffer,uint32 tdc,uint32 event_id
                                                           ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(tdc_start);
  void *__mark_tdc_start = __buffer._data;
  // UINT32 header
  // {
    //  0_11: bunch_id;
    // 12_23: event_id = CHECK(event_id);
    // 24_25: tdc = MATCH(tdc);
    // 27_31: 1;
  // }
  READ_FROM_BUFFER_FULL(219,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(215,header.event_id,event_id);
  CHECK_BITS_EQUAL(217,header.tdc,tdc);
  CHECK_BITS_EQUAL(218,header.unnamed_27_31,1);
  CHECK_UNNAMED_BITS_ZERO(219,header.u32,0x04000000);
  // several UINT32 ch_data NOENCODE
  // {
    //  0_20: value;
    // 21_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 3) | channel_low)],(value=value));
  // }
  for ( ; ; ) {
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 21; // 0..20
      uint32 channel_low : 3; // 21..23
      uint32 tdc : 2; // 24..25
      uint32 trailing : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trailing : 1; // 26
      uint32 tdc : 2; // 24..25
      uint32 channel_low : 3; // 21..23
      uint32 value : 21; // 0..20
#endif
    };
    uint32  u32;
  } ch_data;
  if (__buffer.empty()) goto data_done_2;
  PEEK_FROM_BUFFER_FULL(246,uint32 ,ch_data,ch_data.u32);
  CHECK_JUMP_BITS_EQUAL(226,ch_data.tdc,tdc,data_done_2);
  CHECK_JUMP_BITS_EQUAL(236,ch_data.unnamed_27_31,0,data_done_2);
  __buffer.advance(sizeof(ch_data.u32));
  {
    typedef __typeof__(*(&(data))) __array_t;
    typedef typename __array_t::item_t __item_t;
    __item_t &__item = data.insert_index(240,((ch_data.tdc << 3) | ch_data.channel_low));
    __item.value = ch_data.value;
  }
  }
  data_done_2:;
  // optional UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 flags : 15; // 0..14
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 dummy_15_23 : 9;
      uint32 flags : 15; // 0..14
#endif
    };
    uint32  u32;
  } __error_flags;
  if (__buffer.empty()) goto data_done_3;
  PEEK_FROM_BUFFER_FULL(254,uint32 ,error_flags,__error_flags.u32);
  CHECK_JUMP_BITS_EQUAL(252,__error_flags.tdc,tdc,data_done_3);
  CHECK_JUMP_BITS_EQUAL(253,__error_flags.unnamed_27_31,4,data_done_3);
  CHECK_JUMP_UNNAMED_BITS_ZERO(254,__error_flags.u32,0x04ff8000,data_done_3);
  error_flags.u32 = __error_flags.u32;
  __buffer.advance(sizeof(__error_flags.u32));
  data_done_3:;
  // MARK_COUNT(tdc_end);
  void *__mark_tdc_end = __buffer._data;
  // UINT32 trailer
  // {
    //  0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
    // 12_23: event_id = CHECK(header.event_id);
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 3;
  // }
  READ_FROM_BUFFER_FULL(265,uint32 ,trailer,trailer.u32);
  CHECK_WORD_COUNT(260,trailer.word_count,tdc_start,tdc_end,4,4);
  CHECK_BITS_EQUAL(261,trailer.event_id,header.event_id);
  CHECK_BITS_EQUAL(263,trailer.tdc,tdc);
  CHECK_BITS_EQUAL(264,trailer.unnamed_27_31,3);
  CHECK_UNNAMED_BITS_ZERO(265,trailer.u32,0x04000000);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290_SUBTDC::__unpack,uint32 tdc
                                                                ,uint32 event_id
                                                                ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1290_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SUBTDC(tdc,event_id,data)
template<typename __data_src_t>
bool VME_CAEN_V1290_SUBTDC::__match(__data_src_t &__buffer,uint32 tdc,uint32 event_id)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(tdc_start);
  // UINT32 header
  // {
    //  0_11: bunch_id;
    // 12_23: event_id = CHECK(event_id);
    // 24_25: tdc = MATCH(tdc);
    // 27_31: 1;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 bunch_id : 12; // 0..11
      uint32 event_id : 12; // 12..23
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 event_id : 12; // 12..23
      uint32 bunch_id : 12; // 0..11
#endif
    };
    uint32  u32;
  } __header;
  READ_FROM_BUFFER_FULL(219,uint32 ,header,__header.u32);
  MATCH_BITS_EQUAL(215,__header.event_id,event_id);
  MATCH_BITS_EQUAL(217,__header.tdc,tdc);
  MATCH_BITS_EQUAL(218,__header.unnamed_27_31,1);
  MATCH_UNNAMED_BITS_ZERO(219,__header.u32,0x04000000);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1290_SUBTDC::__match,uint32 tdc
                                                               ,uint32 event_id);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1290_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SUBTDC(tdc,event_id,data)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1290_SUBTDC::__packer(__data_dest_t &__buffer,uint32 tdc
                                                                   ,uint32 event_id
                                                                   ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(tdc_start);
  void *__mark_tdc_start = __buffer._offset;
  // UINT32 header
  // {
    //  0_11: bunch_id;
    // 12_23: event_id = CHECK(event_id);
    // 24_25: tdc = MATCH(tdc);
    // 27_31: 1;
  // }
  // several UINT32 ch_data NOENCODE
  // {
    //  0_20: value;
    // 21_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 3) | channel_low)],(value=value));
  // }
  // optional UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  // MARK_COUNT(tdc_end);
  void *__mark_tdc_end = __buffer._offset;
  // UINT32 trailer
  // {
    //  0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
    // 12_23: event_id = CHECK(header.event_id);
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 3;
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290_SUBTDC::__packer,uint32 tdc
                                                                ,uint32 event_id);

/** END_PACKER ********************************************************/


/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1290.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290(geom)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1290
class VME_CAEN_V1290
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1290
class PACKER_VME_CAEN_V1290
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  // MARK_COUNT(v1190_start);
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 event_number : 22; // 5..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 event_number : 22; // 5..26
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } header;
  // select several

    // tdc[0] = VME_CAEN_V1290_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[1] = VME_CAEN_V1290_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[2] = VME_CAEN_V1290_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[3] = VME_CAEN_V1290_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                   // data=data);
  SINGLE(VME_CAEN_V1290_SUBTDC,tdc[4]);
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 time_tag : 27; // 0..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 time_tag : 27; // 0..26
#endif
    };
    uint32  u32;
  } trigger;
  // MARK_COUNT(v1190_end);
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 word_count : 15; // 5..19
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1; // 24
      uint32 buffer_overflow : 1; // 25
      uint32 trigger_lost : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trigger_lost : 1; // 26
      uint32 buffer_overflow : 1; // 25
      uint32 tdc_error : 1; // 24
      uint32 dummy_20_23 : 4;
      uint32 word_count : 15; // 5..19
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } trailer;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1290);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1290.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290(geom)
template<typename __data_src_t>
void VME_CAEN_V1290::__unpack(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  void *__mark_v1190_start = __buffer._data;
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  READ_FROM_BUFFER_FULL(280,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(277,header.geom,geom);
  CHECK_BITS_EQUAL(279,header.unnamed_27_31,8);
  // select several

    // tdc[0] = VME_CAEN_V1290_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[1] = VME_CAEN_V1290_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[2] = VME_CAEN_V1290_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[3] = VME_CAEN_V1290_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                   // data=data);
  for ( ; ; )
  {
    if (__buffer.empty()) break;
    int __match_no = 0;
    // optimized match 1: VME_CAEN_V1290_SUBTDC tdc[0]: (s32) => (0xff000000,0x08000000)
    // optimized match 2: VME_CAEN_V1290_SUBTDC tdc[1]: (s32) => (0xff000000,0x09000000)
    // optimized match 3: VME_CAEN_V1290_SUBTDC tdc[2]: (s32) => (0xff000000,0x0a000000)
    // optimized match 4: VME_CAEN_V1290_SUBTDC tdc[3]: (s32) => (0xff000000,0x0b000000)
    {
    uint32 __match_peek;
    PEEK_FROM_BUFFER(288,uint32,__match_peek);
    // differ = 03000000 : 24 25
    uint32 __match_index = 0 | /* 24,25 */ ((__match_peek >> 24) & 0x00000003);
    static const sint8 __match_index_array[4] = { 1, 2, 3, 4, };
    __match_no = __match_index_array[__match_index];
    // last_subevent_item = 0
    }
    if (!__match_no) break;
    switch (__match_no)
    {
      case 1:
        CHECK_SPURIOUS_MATCH_DECL(284,spurious_match_abort_loop_2,VME_CAEN_V1290_SUBTDC,/*tdc*/0,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(284,VME_CAEN_V1290_SUBTDC,tdc[0],/*tdc*/0,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 2:
        CHECK_SPURIOUS_MATCH_DECL(285,spurious_match_abort_loop_2,VME_CAEN_V1290_SUBTDC,/*tdc*/1,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(285,VME_CAEN_V1290_SUBTDC,tdc[1],/*tdc*/1,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 3:
        CHECK_SPURIOUS_MATCH_DECL(286,spurious_match_abort_loop_2,VME_CAEN_V1290_SUBTDC,/*tdc*/2,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(286,VME_CAEN_V1290_SUBTDC,tdc[2],/*tdc*/2,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 4:
        CHECK_SPURIOUS_MATCH_DECL(287,spurious_match_abort_loop_2,VME_CAEN_V1290_SUBTDC,/*tdc*/3,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(287,VME_CAEN_V1290_SUBTDC,tdc[3],/*tdc*/3,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
    }
  }
  spurious_match_abort_loop_2:;
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  READ_FROM_BUFFER_FULL(294,uint32 ,trigger,trigger.u32);
  CHECK_BITS_EQUAL(293,trigger.unnamed_27_31,17);
  // MARK_COUNT(v1190_end);
  void *__mark_v1190_end = __buffer._data;
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
  READ_FROM_BUFFER_FULL(306,uint32 ,trailer,trailer.u32);
  CHECK_BITS_EQUAL(300,trailer.geom,geom);
  CHECK_WORD_COUNT(301,trailer.word_count,v1190_start,v1190_end,4,4);
  CHECK_BITS_EQUAL(305,trailer.unnamed_27_31,16);
  CHECK_UNNAMED_BITS_ZERO(306,trailer.u32,0x00f00000);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290::__unpack,uint32 geom);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1290.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290(geom)
template<typename __data_src_t>
bool VME_CAEN_V1290::__match(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 event_number : 22; // 5..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 event_number : 22; // 5..26
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } __header;
  READ_FROM_BUFFER_FULL(280,uint32 ,header,__header.u32);
  MATCH_BITS_EQUAL(277,__header.geom,geom);
  MATCH_BITS_EQUAL(279,__header.unnamed_27_31,8);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1290::__match,uint32 geom);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1290.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290(geom)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1290::__packer(__data_dest_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  void *__mark_v1190_start = __buffer._offset;
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  // select several

    // tdc[0] = VME_CAEN_V1290_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[1] = VME_CAEN_V1290_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[2] = VME_CAEN_V1290_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                   // data=data);
    // tdc[3] = VME_CAEN_V1290_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                   // data=data);
  {
    PACK_DECL(284,VME_CAEN_V1290_SUBTDC,tdc[0],/*tdc*/0,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(285,VME_CAEN_V1290_SUBTDC,tdc[1],/*tdc*/1,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(286,VME_CAEN_V1290_SUBTDC,tdc[2],/*tdc*/2,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(287,VME_CAEN_V1290_SUBTDC,tdc[3],/*tdc*/3,/*event_id*/(header.event_number & 0xfff),/*data*/data);
  }
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  // MARK_COUNT(v1190_end);
  void *__mark_v1190_end = __buffer._offset;
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290::__packer,uint32 geom);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_CAEN_V1290_SHORT
//
//
// Generating code for: VME_CAEN_V1290_SHORT_SUBTDC
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1290_SHORT_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT_SUBTDC(tdc,event_id,data)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1290_SHORT_SUBTDC
class VME_CAEN_V1290_SHORT_SUBTDC
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1290_SHORT_SUBTDC
class PACKER_VME_CAEN_V1290_SHORT_SUBTDC
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // UINT32 ch_data NOENCODE
  // {
    //  0_20: value;
    // 21_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 3) | channel_low)],(value=value));
  // }

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 tdc,uint32 event_id,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 tdc,uint32 event_id);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 tdc,uint32 event_id,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1290_SHORT_SUBTDC);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1290_SHORT_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT_SUBTDC(tdc,event_id,data)
template<typename __data_src_t>
void VME_CAEN_V1290_SHORT_SUBTDC::__unpack(__data_src_t &__buffer,uint32 tdc
                                                                 ,uint32 event_id
                                                                 ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // UINT32 ch_data NOENCODE
  // {
    //  0_20: value;
    // 21_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 3) | channel_low)],(value=value));
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 21; // 0..20
      uint32 channel_low : 3; // 21..23
      uint32 tdc : 2; // 24..25
      uint32 trailing : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trailing : 1; // 26
      uint32 tdc : 2; // 24..25
      uint32 channel_low : 3; // 21..23
      uint32 value : 21; // 0..20
#endif
    };
    uint32  u32;
  } ch_data;
  READ_FROM_BUFFER_FULL(343,uint32 ,ch_data,ch_data.u32);
  CHECK_BITS_EQUAL(323,ch_data.tdc,tdc);
  CHECK_BITS_EQUAL(333,ch_data.unnamed_27_31,0);
  {
    typedef __typeof__(*(&(data))) __array_t;
    typedef typename __array_t::item_t __item_t;
    __item_t &__item = data.insert_index(337,((ch_data.tdc << 3) | ch_data.channel_low));
    __item.value = ch_data.value;
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290_SHORT_SUBTDC::__unpack,uint32 tdc
                                                                      ,uint32 event_id
                                                                      ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1290_SHORT_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT_SUBTDC(tdc,event_id,data)
template<typename __data_src_t>
bool VME_CAEN_V1290_SHORT_SUBTDC::__match(__data_src_t &__buffer,uint32 tdc
                                                                ,uint32 event_id)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // UINT32 ch_data NOENCODE
  // {
    //  0_20: value;
    // 21_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 3) | channel_low)],(value=value));
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 21; // 0..20
      uint32 channel_low : 3; // 21..23
      uint32 tdc : 2; // 24..25
      uint32 trailing : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trailing : 1; // 26
      uint32 tdc : 2; // 24..25
      uint32 channel_low : 3; // 21..23
      uint32 value : 21; // 0..20
#endif
    };
    uint32  u32;
  } ch_data;
  READ_FROM_BUFFER_FULL(343,uint32 ,ch_data,ch_data.u32);
  MATCH_BITS_EQUAL(323,ch_data.tdc,tdc);
  MATCH_BITS_EQUAL(333,ch_data.unnamed_27_31,0);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1290_SHORT_SUBTDC::__match,uint32 tdc
                                                                     ,uint32 event_id);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1290_SHORT_SUBTDC.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT_SUBTDC(tdc,event_id,data)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1290_SHORT_SUBTDC::__packer(__data_dest_t &__buffer,uint32 tdc
                                                                         ,uint32 event_id
                                                                         ,raw_array_multi_zero_suppress<DATA24,DATA24,32,128> &data)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // UINT32 ch_data NOENCODE
  // {
    //  0_20: value;
    // 21_23: channel_low;
    // 24_25: tdc = CHECK(tdc);
    //    26: trailing;
    // 27_31: 0;
    // ENCODE(data[((tdc << 3) | channel_low)],(value=value));
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290_SHORT_SUBTDC::__packer,uint32 tdc
                                                                      ,uint32 event_id);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1290_SHORT_SUBTDC_ERROR.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1290_SHORT_SUBTDC_ERROR
class VME_CAEN_V1290_SHORT_SUBTDC_ERROR
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1290_SHORT_SUBTDC_ERROR
class PACKER_VME_CAEN_V1290_SHORT_SUBTDC_ERROR
#endif//PACKER_CODE

{
public:
  // UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 flags : 15; // 0..14
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 dummy_15_23 : 9;
      uint32 flags : 15; // 0..14
#endif
    };
    uint32  u32;
  } error_flags;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 tdc);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 tdc);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 tdc);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1290_SHORT_SUBTDC_ERROR);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1290_SHORT_SUBTDC_ERROR.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc)
template<typename __data_src_t>
void VME_CAEN_V1290_SHORT_SUBTDC_ERROR::__unpack(__data_src_t &__buffer,uint32 tdc)
{
  // UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  READ_FROM_BUFFER_FULL(354,uint32 ,error_flags,error_flags.u32);
  CHECK_BITS_EQUAL(352,error_flags.tdc,tdc);
  CHECK_BITS_EQUAL(353,error_flags.unnamed_27_31,4);
  CHECK_UNNAMED_BITS_ZERO(354,error_flags.u32,0x04ff8000);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290_SHORT_SUBTDC_ERROR::__unpack,uint32 tdc);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1290_SHORT_SUBTDC_ERROR.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc)
template<typename __data_src_t>
bool VME_CAEN_V1290_SHORT_SUBTDC_ERROR::__match(__data_src_t &__buffer,uint32 tdc)
{
  // UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 flags : 15; // 0..14
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2; // 24..25
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 dummy_26 : 1;
      uint32 tdc : 2; // 24..25
      uint32 dummy_15_23 : 9;
      uint32 flags : 15; // 0..14
#endif
    };
    uint32  u32;
  } __error_flags;
  READ_FROM_BUFFER_FULL(354,uint32 ,error_flags,__error_flags.u32);
  MATCH_BITS_EQUAL(352,__error_flags.tdc,tdc);
  MATCH_BITS_EQUAL(353,__error_flags.unnamed_27_31,4);
  MATCH_UNNAMED_BITS_ZERO(354,__error_flags.u32,0x04ff8000);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1290_SHORT_SUBTDC_ERROR::__match,uint32 tdc);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1290_SHORT_SUBTDC_ERROR.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1290_SHORT_SUBTDC_ERROR::__packer(__data_dest_t &__buffer,uint32 tdc)
{
  // UINT32 error_flags
  // {
    //  0_14: flags;
    // 24_25: tdc = CHECK(tdc);
    // 27_31: 4;
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290_SHORT_SUBTDC_ERROR::__packer,uint32 tdc);

/** END_PACKER ********************************************************/


/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V1290_SHORT.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT(geom)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V1290_SHORT
class VME_CAEN_V1290_SHORT
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V1290_SHORT
class PACKER_VME_CAEN_V1290_SHORT
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  // MARK_COUNT(v1190_start);
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 event_number : 22; // 5..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 event_number : 22; // 5..26
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } header;
  // select several

    // tdc[0] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[1] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[2] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[3] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // norevisit err[0] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=0);
    // norevisit err[1] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=1);
    // norevisit err[2] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=2);
    // norevisit err[3] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=3);
  SINGLE(VME_CAEN_V1290_SHORT_SUBTDC,tdc[4]);
  SINGLE(VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[4]);
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 time_tag : 27; // 0..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 time_tag : 27; // 0..26
#endif
    };
    uint32  u32;
  } trigger;
  // MARK_COUNT(v1190_end);
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 word_count : 15; // 5..19
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1; // 24
      uint32 buffer_overflow : 1; // 25
      uint32 trigger_lost : 1; // 26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 trigger_lost : 1; // 26
      uint32 buffer_overflow : 1; // 25
      uint32 tdc_error : 1; // 24
      uint32 dummy_20_23 : 4;
      uint32 word_count : 15; // 5..19
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } trailer;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V1290_SHORT);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V1290_SHORT.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT(geom)
template<typename __data_src_t>
void VME_CAEN_V1290_SHORT::__unpack(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  void *__mark_v1190_start = __buffer._data;
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  READ_FROM_BUFFER_FULL(369,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(366,header.geom,geom);
  CHECK_BITS_EQUAL(368,header.unnamed_27_31,8);
  // select several

    // tdc[0] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[1] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[2] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[3] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // norevisit err[0] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=0);
    // norevisit err[1] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=1);
    // norevisit err[2] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=2);
    // norevisit err[3] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=3);
  bitsone<4> __visited2;
  __visited2.clear();
  for ( ; ; )
  {
    if (__buffer.empty()) break;
    int __match_no = 0;
    // optimized match 1: VME_CAEN_V1290_SHORT_SUBTDC tdc[0]: (s32) => (0xfb000000,0x00000000)
    // optimized match 2: VME_CAEN_V1290_SHORT_SUBTDC tdc[1]: (s32) => (0xfb000000,0x01000000)
    // optimized match 3: VME_CAEN_V1290_SHORT_SUBTDC tdc[2]: (s32) => (0xfb000000,0x02000000)
    // optimized match 4: VME_CAEN_V1290_SHORT_SUBTDC tdc[3]: (s32) => (0xfb000000,0x03000000)
    // optimized match 5: VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[0]: (s32) => (0xffff8000,0x20000000)
    // optimized match 6: VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[1]: (s32) => (0xffff8000,0x21000000)
    // optimized match 7: VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[2]: (s32) => (0xffff8000,0x22000000)
    // optimized match 8: VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[3]: (s32) => (0xffff8000,0x23000000)
    {
    uint32 __match_peek;
    PEEK_FROM_BUFFER(382,uint32,__match_peek);
    // differ = 23000000 : 24 25 29
    uint32 __match_index = 0 | /* 24,25 */ ((__match_peek >> 24) & 0x00000003) | /* 29,29 */ ((__match_peek >> 27) & 0x00000004);
    static const sint8 __match_index_array[8] = { 1, 2, 3, 4, 5, 6, 7, 8, };
    __match_no = __match_index_array[__match_index];
    // last_subevent_item = 0
    }
    if (!__match_no) break;
    switch (__match_no)
    {
      case 1:
        CHECK_SPURIOUS_MATCH_DECL(373,spurious_match_abort_loop_3,VME_CAEN_V1290_SHORT_SUBTDC,/*tdc*/0,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(373,VME_CAEN_V1290_SHORT_SUBTDC,tdc[0],/*tdc*/0,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 2:
        CHECK_SPURIOUS_MATCH_DECL(374,spurious_match_abort_loop_3,VME_CAEN_V1290_SHORT_SUBTDC,/*tdc*/1,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(374,VME_CAEN_V1290_SHORT_SUBTDC,tdc[1],/*tdc*/1,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 3:
        CHECK_SPURIOUS_MATCH_DECL(375,spurious_match_abort_loop_3,VME_CAEN_V1290_SHORT_SUBTDC,/*tdc*/2,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(375,VME_CAEN_V1290_SHORT_SUBTDC,tdc[2],/*tdc*/2,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 4:
        CHECK_SPURIOUS_MATCH_DECL(376,spurious_match_abort_loop_3,VME_CAEN_V1290_SHORT_SUBTDC,/*tdc*/3,/*event_id*/(header.event_number & 0xfff)/*,data:member*/);
        UNPACK_DECL(376,VME_CAEN_V1290_SHORT_SUBTDC,tdc[3],/*tdc*/3,/*event_id*/(header.event_number & 0xfff),/*data*/data);
        break;
      case 5:
        CHECK_SPURIOUS_MATCH_DECL(378,spurious_match_abort_loop_3,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,/*tdc*/0);
        UNPACK_CHECK_NO_REVISIT(378,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[0],__visited2,0);
        UNPACK_DECL(378,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[0],/*tdc*/0);
        break;
      case 6:
        CHECK_SPURIOUS_MATCH_DECL(379,spurious_match_abort_loop_3,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,/*tdc*/1);
        UNPACK_CHECK_NO_REVISIT(379,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[1],__visited2,1);
        UNPACK_DECL(379,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[1],/*tdc*/1);
        break;
      case 7:
        CHECK_SPURIOUS_MATCH_DECL(380,spurious_match_abort_loop_3,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,/*tdc*/2);
        UNPACK_CHECK_NO_REVISIT(380,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[2],__visited2,2);
        UNPACK_DECL(380,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[2],/*tdc*/2);
        break;
      case 8:
        CHECK_SPURIOUS_MATCH_DECL(381,spurious_match_abort_loop_3,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,/*tdc*/3);
        UNPACK_CHECK_NO_REVISIT(381,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[3],__visited2,3);
        UNPACK_DECL(381,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[3],/*tdc*/3);
        break;
    }
  }
  spurious_match_abort_loop_3:;
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  READ_FROM_BUFFER_FULL(388,uint32 ,trigger,trigger.u32);
  CHECK_BITS_EQUAL(387,trigger.unnamed_27_31,17);
  // MARK_COUNT(v1190_end);
  void *__mark_v1190_end = __buffer._data;
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
  READ_FROM_BUFFER_FULL(400,uint32 ,trailer,trailer.u32);
  CHECK_BITS_EQUAL(394,trailer.geom,geom);
  CHECK_WORD_COUNT(395,trailer.word_count,v1190_start,v1190_end,4,4);
  CHECK_BITS_EQUAL(399,trailer.unnamed_27_31,16);
  CHECK_UNNAMED_BITS_ZERO(400,trailer.u32,0x00f00000);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290_SHORT::__unpack,uint32 geom);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V1290_SHORT.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT(geom)
template<typename __data_src_t>
bool VME_CAEN_V1290_SHORT::__match(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 geom : 5; // 0..4
      uint32 event_number : 22; // 5..26
      uint32 unnamed_27_31 : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_27_31 : 5; // 27..31
      uint32 event_number : 22; // 5..26
      uint32 geom : 5; // 0..4
#endif
    };
    uint32  u32;
  } __header;
  READ_FROM_BUFFER_FULL(369,uint32 ,header,__header.u32);
  MATCH_BITS_EQUAL(366,__header.geom,geom);
  MATCH_BITS_EQUAL(368,__header.unnamed_27_31,8);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V1290_SHORT::__match,uint32 geom);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V1290_SHORT.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V1290_SHORT(geom)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V1290_SHORT::__packer(__data_dest_t &__buffer,uint32 geom)
{
  // MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));
  // MARK_COUNT(v1190_start);
  void *__mark_v1190_start = __buffer._offset;
  // UINT32 header
  // {
    //  0_04: geom = MATCH(geom);
    //  5_26: event_number;
    // 27_31: 8;
  // }
  // select several

    // tdc[0] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=0,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[1] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=1,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[2] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=2,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // tdc[3] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=3,event_id=(header.event_number & 0xfff),
                                         // data=data);
    // norevisit err[0] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=0);
    // norevisit err[1] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=1);
    // norevisit err[2] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=2);
    // norevisit err[3] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=3);
  {
    PACK_DECL(373,VME_CAEN_V1290_SHORT_SUBTDC,tdc[0],/*tdc*/0,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(374,VME_CAEN_V1290_SHORT_SUBTDC,tdc[1],/*tdc*/1,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(375,VME_CAEN_V1290_SHORT_SUBTDC,tdc[2],/*tdc*/2,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(376,VME_CAEN_V1290_SHORT_SUBTDC,tdc[3],/*tdc*/3,/*event_id*/(header.event_number & 0xfff),/*data*/data);
    PACK_DECL(378,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[0],/*tdc*/0);
    PACK_DECL(379,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[1],/*tdc*/1);
    PACK_DECL(380,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[2],/*tdc*/2);
    PACK_DECL(381,VME_CAEN_V1290_SHORT_SUBTDC_ERROR,err[3],/*tdc*/3);
  }
  // UINT32 trigger
  // {
    //  0_26: time_tag;
    // 27_31: 17;
  // }
  // MARK_COUNT(v1190_end);
  void *__mark_v1190_end = __buffer._offset;
  // UINT32 trailer
  // {
    //  0_04: geom = CHECK(geom);
    //  5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
    //    24: tdc_error;
    //    25: buffer_overflow;
    //    26: trigger_lost;
    // 27_31: 16;
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V1290_SHORT::__packer,uint32 geom);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_CAEN_V775
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V775.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V775(geom,crate)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V775
class VME_CAEN_V775
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V775
class PACKER_VME_CAEN_V775
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA12_OVERFLOW data[32] ZERO_SUPPRESS);
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  // UINT32 header NOENCODE
  // {
    //  8_13: count;
    // 16_23: crate = MATCH(crate);
    // 24_26: 2;
    // 27_31: geom = MATCH(geom);
  // }
  // list(0<=index<header.count)

    // UINT32 ch_data NOENCODE
    // {
      //  0_11: value;
      //    12: overflow;
      //    13: underflow;
      //    14: valid;
      // 16_20: channel;
      // 24_26: 0;
      // 27_31: geom = CHECK(geom);
      // ENCODE(data[channel],(value=value,overflow=overflow));
    // }
  // UINT32 eob
  // {
    //  0_23: event_number;
    // 24_26: 4;
    // 27_31: geom = CHECK(geom);
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 event_number : 24; // 0..23
      uint32 unnamed_24_26 : 3; // 24..26
      uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 geom : 5; // 27..31
      uint32 unnamed_24_26 : 3; // 24..26
      uint32 event_number : 24; // 0..23
#endif
    };
    uint32  u32;
  } eob;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom,uint32 crate);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom,uint32 crate);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom,uint32 crate);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V775);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V775.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V775(geom,crate)
template<typename __data_src_t>
void VME_CAEN_V775::__unpack(__data_src_t &__buffer,uint32 geom,uint32 crate)
{
  // MEMBER(DATA12_OVERFLOW data[32] ZERO_SUPPRESS);
  // UINT32 header NOENCODE
  // {
    //  8_13: count;
    // 16_23: crate = MATCH(crate);
    // 24_26: 2;
    // 27_31: geom = MATCH(geom);
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 dummy_0_7 : 8;
      uint32 count : 6; // 8..13
      uint32 dummy_14_15 : 2;
      uint32 crate : 8; // 16..23
      uint32 unnamed_24_26 : 3; // 24..26
      uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 geom : 5; // 27..31
      uint32 unnamed_24_26 : 3; // 24..26
      uint32 crate : 8; // 16..23
      uint32 dummy_14_15 : 2;
      uint32 count : 6; // 8..13
      uint32 dummy_0_7 : 8;
#endif
    };
    uint32  u32;
  } header;
  READ_FROM_BUFFER_FULL(138,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(135,header.crate,crate);
  CHECK_BITS_EQUAL(136,header.unnamed_24_26,2);
  CHECK_BITS_EQUAL(137,header.geom,geom);
  CHECK_UNNAMED_BITS_ZERO(138,header.u32,0x0000c0ff);
  // list(0<=index<header.count)

  for (uint32 index = 0; index < (uint32) (header.count); ++index)
  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_11: value;
      //    12: overflow;
      //    13: underflow;
      //    14: valid;
      // 16_20: channel;
      // 24_26: 0;
      // 27_31: geom = CHECK(geom);
      // ENCODE(data[channel],(value=value,overflow=overflow));
    // }
    union
    {
      struct
      {
#if __BYTE_ORDER == __LITTLE_ENDIAN
        uint32 value : 12; // 0..11
        uint32 overflow : 1; // 12
        uint32 underflow : 1; // 13
        uint32 valid : 1; // 14
        uint32 dummy_15 : 1;
        uint32 channel : 5; // 16..20
        uint32 dummy_21_23 : 3;
        uint32 unnamed_24_26 : 3; // 24..26
        uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
        uint32 geom : 5; // 27..31
        uint32 unnamed_24_26 : 3; // 24..26
        uint32 dummy_21_23 : 3;
        uint32 channel : 5; // 16..20
        uint32 dummy_15 : 1;
        uint32 valid : 1; // 14
        uint32 underflow : 1; // 13
        uint32 overflow : 1; // 12
        uint32 value : 12; // 0..11
#endif
      };
      uint32  u32;
    } ch_data;
    READ_FROM_BUFFER_FULL(158,uint32 ,ch_data,ch_data.u32);
    CHECK_BITS_EQUAL(154,ch_data.unnamed_24_26,0);
    CHECK_BITS_EQUAL(155,ch_data.geom,geom);
    CHECK_UNNAMED_BITS_ZERO(158,ch_data.u32,0x00e08000);
    {
      typedef __typeof__(*(&(data))) __array_t;
      typedef typename __array_t::item_t __item_t;
      __item_t &__item = data.insert_index(157,ch_data.channel);
      __item.value = ch_data.value;
      __item.overflow = ch_data.overflow;
    }
  }
  // UINT32 eob
  // {
    //  0_23: event_number;
    // 24_26: 4;
    // 27_31: geom = CHECK(geom);
  // }
  READ_FROM_BUFFER_FULL(167,uint32 ,eob,eob.u32);
  CHECK_BITS_EQUAL(164,eob.unnamed_24_26,4);
  CHECK_BITS_EQUAL(165,eob.geom,geom);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V775::__unpack,uint32 geom,uint32 crate);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V775.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V775(geom,crate)
template<typename __data_src_t>
bool VME_CAEN_V775::__match(__data_src_t &__buffer,uint32 geom,uint32 crate)
{
  // MEMBER(DATA12_OVERFLOW data[32] ZERO_SUPPRESS);
  // UINT32 header NOENCODE
  // {
    //  8_13: count;
    // 16_23: crate = MATCH(crate);
    // 24_26: 2;
    // 27_31: geom = MATCH(geom);
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 dummy_0_7 : 8;
      uint32 count : 6; // 8..13
      uint32 dummy_14_15 : 2;
      uint32 crate : 8; // 16..23
      uint32 unnamed_24_26 : 3; // 24..26
      uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 geom : 5; // 27..31
      uint32 unnamed_24_26 : 3; // 24..26
      uint32 crate : 8; // 16..23
      uint32 dummy_14_15 : 2;
      uint32 count : 6; // 8..13
      uint32 dummy_0_7 : 8;
#endif
    };
    uint32  u32;
  } header;
  READ_FROM_BUFFER_FULL(138,uint32 ,header,header.u32);
  MATCH_BITS_EQUAL(135,header.crate,crate);
  MATCH_BITS_EQUAL(136,header.unnamed_24_26,2);
  MATCH_BITS_EQUAL(137,header.geom,geom);
  MATCH_UNNAMED_BITS_ZERO(138,header.u32,0x0000c0ff);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V775::__match,uint32 geom,uint32 crate);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V775.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V775(geom,crate)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V775::__packer(__data_dest_t &__buffer,uint32 geom,uint32 crate)
{
  // MEMBER(DATA12_OVERFLOW data[32] ZERO_SUPPRESS);
  // UINT32 header NOENCODE
  // {
    //  8_13: count;
    // 16_23: crate = MATCH(crate);
    // 24_26: 2;
    // 27_31: geom = MATCH(geom);
  // }
  // list(0<=index<header.count)

  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_11: value;
      //    12: overflow;
      //    13: underflow;
      //    14: valid;
      // 16_20: channel;
      // 24_26: 0;
      // 27_31: geom = CHECK(geom);
      // ENCODE(data[channel],(value=value,overflow=overflow));
    // }
  }
  // UINT32 eob
  // {
    //  0_23: event_number;
    // 24_26: 4;
    // 27_31: geom = CHECK(geom);
  // }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V775::__packer,uint32 geom,uint32 crate);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_CAEN_V830
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_CAEN_V830.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V830(geom)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_CAEN_V830
class VME_CAEN_V830
#else//PACKER_CODE
# define DECLARED_PACKER_VME_CAEN_V830
class PACKER_VME_CAEN_V830
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  raw_array_zero_suppress<DATA32,DATA32,32> data;
  // UINT32 header
  // {
    //  0_15: event_number;
    // 16_17: ts;
    // 18_23: count;
    //    26: 1;
    // 27_31: geom = MATCH(geom);
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 event_number : 16; // 0..15
      uint32 ts : 2; // 16..17
      uint32 count : 6; // 18..23
      uint32 dummy_24_25 : 2;
      uint32 unnamed_26_26 : 1; // 26
      uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 geom : 5; // 27..31
      uint32 unnamed_26_26 : 1; // 26
      uint32 dummy_24_25 : 2;
      uint32 count : 6; // 18..23
      uint32 ts : 2; // 16..17
      uint32 event_number : 16; // 0..15
#endif
    };
    uint32  u32;
  } header;
  // list(0<=index<header.count)

    // UINT32 ch_data NOENCODE
    // {
      //  0_25: value;
      //    26: 0;
      // 27_31: channel;
      // ENCODE(data[channel],(value=value));
    // }

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_CAEN_V830);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_CAEN_V830.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V830(geom)
template<typename __data_src_t>
void VME_CAEN_V830::__unpack(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  // UINT32 header
  // {
    //  0_15: event_number;
    // 16_17: ts;
    // 18_23: count;
    //    26: 1;
    // 27_31: geom = MATCH(geom);
  // }
  READ_FROM_BUFFER_FULL(186,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(184,header.unnamed_26_26,1);
  CHECK_BITS_EQUAL(185,header.geom,geom);
  CHECK_UNNAMED_BITS_ZERO(186,header.u32,0x03000000);
  // list(0<=index<header.count)

  for (uint32 index = 0; index < (uint32) (header.count); ++index)
  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_25: value;
      //    26: 0;
      // 27_31: channel;
      // ENCODE(data[channel],(value=value));
    // }
    union
    {
      struct
      {
#if __BYTE_ORDER == __LITTLE_ENDIAN
        uint32 value : 26; // 0..25
        uint32 unnamed_26_26 : 1; // 26
        uint32 channel : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
        uint32 channel : 5; // 27..31
        uint32 unnamed_26_26 : 1; // 26
        uint32 value : 26; // 0..25
#endif
      };
      uint32  u32;
    } ch_data;
    READ_FROM_BUFFER_FULL(197,uint32 ,ch_data,ch_data.u32);
    CHECK_BITS_EQUAL(193,ch_data.unnamed_26_26,0);
    {
      typedef __typeof__(*(&(data))) __array_t;
      typedef typename __array_t::item_t __item_t;
      __item_t &__item = data.insert_index(196,ch_data.channel);
      __item.value = ch_data.value;
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V830::__unpack,uint32 geom);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_CAEN_V830.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V830(geom)
template<typename __data_src_t>
bool VME_CAEN_V830::__match(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  // UINT32 header
  // {
    //  0_15: event_number;
    // 16_17: ts;
    // 18_23: count;
    //    26: 1;
    // 27_31: geom = MATCH(geom);
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 event_number : 16; // 0..15
      uint32 ts : 2; // 16..17
      uint32 count : 6; // 18..23
      uint32 dummy_24_25 : 2;
      uint32 unnamed_26_26 : 1; // 26
      uint32 geom : 5; // 27..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 geom : 5; // 27..31
      uint32 unnamed_26_26 : 1; // 26
      uint32 dummy_24_25 : 2;
      uint32 count : 6; // 18..23
      uint32 ts : 2; // 16..17
      uint32 event_number : 16; // 0..15
#endif
    };
    uint32  u32;
  } __header;
  READ_FROM_BUFFER_FULL(186,uint32 ,header,__header.u32);
  MATCH_BITS_EQUAL(184,__header.unnamed_26_26,1);
  MATCH_BITS_EQUAL(185,__header.geom,geom);
  MATCH_UNNAMED_BITS_ZERO(186,__header.u32,0x03000000);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_CAEN_V830::__match,uint32 geom);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_CAEN_V830.
 *
 * Do not edit - automatically generated.
 */

// VME_CAEN_V830(geom)
template<typename __data_dest_t>
void PACKER_VME_CAEN_V830::__packer(__data_dest_t &__buffer,uint32 geom)
{
  // MEMBER(DATA32 data[32] ZERO_SUPPRESS);
  // UINT32 header
  // {
    //  0_15: event_number;
    // 16_17: ts;
    // 18_23: count;
    //    26: 1;
    // 27_31: geom = MATCH(geom);
  // }
  // list(0<=index<header.count)

  {
    // UINT32 ch_data NOENCODE
    // {
      //  0_25: value;
      //    26: 0;
      // 27_31: channel;
      // ENCODE(data[channel],(value=value));
    // }
  }
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_CAEN_V830::__packer,uint32 geom);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_MESYTEC_MADC32
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_MESYTEC_MADC32.
 *
 * Do not edit - automatically generated.
 */

// VME_MESYTEC_MADC32(geom)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_MESYTEC_MADC32
class VME_MESYTEC_MADC32
#else//PACKER_CODE
# define DECLARED_PACKER_VME_MESYTEC_MADC32
class PACKER_VME_MESYTEC_MADC32
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA14_OVERFLOW data[32] ZERO_SUPPRESS);
  raw_array_zero_suppress<DATA14_OVERFLOW,DATA14_OVERFLOW,32> data;
  // MARK_COUNT(start);
  // UINT32 header NOENCODE
  // {
    //  0_11: word_number;
    // 12_14: adc_resol;
    //    15: out_form;
    // 16_23: geom = MATCH(geom);
    // 24_29: 0;
    // 30_31: 1;
  // }
  // several UINT32 ch_data NOENCODE
  // {
    //  0_12: value;
    //    14: outofrange;
    // 16_20: channel;
    // 21_29: 32;
    // 30_31: 0;
    // ENCODE(data[channel],(value=value,overflow=outofrange));
  // }
  // optional UINT32 filler NOENCODE
  // {
    //  0_31: 0;
  // }
  // UINT32 end_of_event
  // {
    //  0_29: counter;
    // 30_31: 3;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 counter : 30; // 0..29
      uint32 unnamed_30_31 : 2; // 30..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_30_31 : 2; // 30..31
      uint32 counter : 30; // 0..29
#endif
    };
    uint32  u32;
  } end_of_event;
  // MARK_COUNT(end);
  // CHECK_COUNT(header.word_number,start,end,( - 4),4)

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_MESYTEC_MADC32);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_MESYTEC_MADC32.
 *
 * Do not edit - automatically generated.
 */

// VME_MESYTEC_MADC32(geom)
template<typename __data_src_t>
void VME_MESYTEC_MADC32::__unpack(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA14_OVERFLOW data[32] ZERO_SUPPRESS);
  // MARK_COUNT(start);
  void *__mark_start = __buffer._data;
  // UINT32 header NOENCODE
  // {
    //  0_11: word_number;
    // 12_14: adc_resol;
    //    15: out_form;
    // 16_23: geom = MATCH(geom);
    // 24_29: 0;
    // 30_31: 1;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_number : 12; // 0..11
      uint32 adc_resol : 3; // 12..14
      uint32 out_form : 1; // 15
      uint32 geom : 8; // 16..23
      uint32 unnamed_24_29 : 6; // 24..29
      uint32 unnamed_30_31 : 2; // 30..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_30_31 : 2; // 30..31
      uint32 unnamed_24_29 : 6; // 24..29
      uint32 geom : 8; // 16..23
      uint32 out_form : 1; // 15
      uint32 adc_resol : 3; // 12..14
      uint32 word_number : 12; // 0..11
#endif
    };
    uint32  u32;
  } header;
  READ_FROM_BUFFER_FULL(625,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(622,header.geom,geom);
  CHECK_BITS_EQUAL(623,header.unnamed_24_29,0);
  CHECK_BITS_EQUAL(624,header.unnamed_30_31,1);
  // several UINT32 ch_data NOENCODE
  // {
    //  0_12: value;
    //    14: outofrange;
    // 16_20: channel;
    // 21_29: 32;
    // 30_31: 0;
    // ENCODE(data[channel],(value=value,overflow=outofrange));
  // }
  for ( ; ; ) {
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 13; // 0..12
      uint32 dummy_13 : 1;
      uint32 outofrange : 1; // 14
      uint32 dummy_15 : 1;
      uint32 channel : 5; // 16..20
      uint32 unnamed_21_29 : 9; // 21..29
      uint32 unnamed_30_31 : 2; // 30..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_30_31 : 2; // 30..31
      uint32 unnamed_21_29 : 9; // 21..29
      uint32 channel : 5; // 16..20
      uint32 dummy_15 : 1;
      uint32 outofrange : 1; // 14
      uint32 dummy_13 : 1;
      uint32 value : 13; // 0..12
#endif
    };
    uint32  u32;
  } ch_data;
  if (__buffer.empty()) goto data_done_4;
  PEEK_FROM_BUFFER_FULL(636,uint32 ,ch_data,ch_data.u32);
  CHECK_JUMP_BITS_EQUAL(632,ch_data.unnamed_21_29,32,data_done_4);
  CHECK_JUMP_BITS_EQUAL(633,ch_data.unnamed_30_31,0,data_done_4);
  CHECK_JUMP_UNNAMED_BITS_ZERO(636,ch_data.u32,0x0000a000,data_done_4);
  __buffer.advance(sizeof(ch_data.u32));
  {
    typedef __typeof__(*(&(data))) __array_t;
    typedef typename __array_t::item_t __item_t;
    __item_t &__item = data.insert_index(635,ch_data.channel);
    __item.value = ch_data.value;
    __item.overflow = ch_data.outofrange;
  }
  }
  data_done_4:;
  // optional UINT32 filler NOENCODE
  // {
    //  0_31: 0;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 unnamed_0_31 : 32; // 0..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_0_31 : 32; // 0..31
#endif
    };
    uint32  u32;
  } filler;
  if (__buffer.empty()) goto data_done_5;
  PEEK_FROM_BUFFER_FULL(642,uint32 ,filler,filler.u32);
  CHECK_JUMP_BITS_EQUAL(641,filler.unnamed_0_31,0,data_done_5);
  __buffer.advance(sizeof(filler.u32));
  data_done_5:;
  // UINT32 end_of_event
  // {
    //  0_29: counter;
    // 30_31: 3;
  // }
  READ_FROM_BUFFER_FULL(648,uint32 ,end_of_event,end_of_event.u32);
  CHECK_BITS_EQUAL(647,end_of_event.unnamed_30_31,3);
  // MARK_COUNT(end);
  void *__mark_end = __buffer._data;
  // CHECK_COUNT(header.word_number,start,end,( - 4),4)
  CHECK_WORD_COUNT(651,header.word_number,start,end,( - 4),4);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_MESYTEC_MADC32::__unpack,uint32 geom);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_MESYTEC_MADC32.
 *
 * Do not edit - automatically generated.
 */

// VME_MESYTEC_MADC32(geom)
template<typename __data_src_t>
bool VME_MESYTEC_MADC32::__match(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA14_OVERFLOW data[32] ZERO_SUPPRESS);
  // MARK_COUNT(start);
  // UINT32 header NOENCODE
  // {
    //  0_11: word_number;
    // 12_14: adc_resol;
    //    15: out_form;
    // 16_23: geom = MATCH(geom);
    // 24_29: 0;
    // 30_31: 1;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_number : 12; // 0..11
      uint32 adc_resol : 3; // 12..14
      uint32 out_form : 1; // 15
      uint32 geom : 8; // 16..23
      uint32 unnamed_24_29 : 6; // 24..29
      uint32 unnamed_30_31 : 2; // 30..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_30_31 : 2; // 30..31
      uint32 unnamed_24_29 : 6; // 24..29
      uint32 geom : 8; // 16..23
      uint32 out_form : 1; // 15
      uint32 adc_resol : 3; // 12..14
      uint32 word_number : 12; // 0..11
#endif
    };
    uint32  u32;
  } header;
  READ_FROM_BUFFER_FULL(625,uint32 ,header,header.u32);
  MATCH_BITS_EQUAL(622,header.geom,geom);
  MATCH_BITS_EQUAL(623,header.unnamed_24_29,0);
  MATCH_BITS_EQUAL(624,header.unnamed_30_31,1);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_MESYTEC_MADC32::__match,uint32 geom);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_MESYTEC_MADC32.
 *
 * Do not edit - automatically generated.
 */

// VME_MESYTEC_MADC32(geom)
template<typename __data_dest_t>
void PACKER_VME_MESYTEC_MADC32::__packer(__data_dest_t &__buffer,uint32 geom)
{
  // MEMBER(DATA14_OVERFLOW data[32] ZERO_SUPPRESS);
  // MARK_COUNT(start);
  void *__mark_start = __buffer._offset;
  // UINT32 header NOENCODE
  // {
    //  0_11: word_number;
    // 12_14: adc_resol;
    //    15: out_form;
    // 16_23: geom = MATCH(geom);
    // 24_29: 0;
    // 30_31: 1;
  // }
  // several UINT32 ch_data NOENCODE
  // {
    //  0_12: value;
    //    14: outofrange;
    // 16_20: channel;
    // 21_29: 32;
    // 30_31: 0;
    // ENCODE(data[channel],(value=value,overflow=outofrange));
  // }
  // optional UINT32 filler NOENCODE
  // {
    //  0_31: 0;
  // }
  // UINT32 end_of_event
  // {
    //  0_29: counter;
    // 30_31: 3;
  // }
  // MARK_COUNT(end);
  void *__mark_end = __buffer._offset;
  // CHECK_COUNT(header.word_number,start,end,( - 4),4)
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_MESYTEC_MADC32::__packer,uint32 geom);

/** END_PACKER ********************************************************/

//
// Generating code for: VME_MESYTEC_MDPP16
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for VME_MESYTEC_MDPP16.
 *
 * Do not edit - automatically generated.
 */

// VME_MESYTEC_MDPP16(geom)
#if !PACKER_CODE
# define DECLARED_UNPACK_VME_MESYTEC_MDPP16
class VME_MESYTEC_MDPP16
#else//PACKER_CODE
# define DECLARED_PACKER_VME_MESYTEC_MDPP16
class PACKER_VME_MESYTEC_MDPP16
#endif//PACKER_CODE

{
public:
  // MEMBER(DATA16_OVERFLOW data[34] ZERO_SUPPRESS_MULTI(100));
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,34,100> data;
  // MARK_COUNT(start);
  // UINT32 header NOENCODE
  // {
    //  0_09: word_number;
    // 10_12: adc_res;
    // 13_15: tdc_res;
    // 16_23: geom = MATCH(geom);
    // 24_29: 0;
    // 30_31: 1;
  // }
  // several UINT32 ch_data NOENCODE
  // {
    //  0_15: value;
    // 16_21: channel;
    //    22: overflow;
    //    23: pileup;
    // 24_27: 0;
    // 28_31: 1;
    // ENCODE(data[channel],(value=value,overflow=overflow,pileup=pileup));
  // }
  // several UINT32 fill_word NOENCODE
  // {
    //  0_31: 0;
  // }
  // UINT32 end_of_event
  // {
    //  0_29: counter;
    // 30_31: 3;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 counter : 30; // 0..29
      uint32 unnamed_30_31 : 2; // 30..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_30_31 : 2; // 30..31
      uint32 counter : 30; // 0..29
#endif
    };
    uint32  u32;
  } end_of_event;
  // MARK_COUNT(end);
  // CHECK_COUNT(header.word_number,start,end,( - 4),4)

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer,uint32 geom);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer,uint32 geom);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer,uint32 geom);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(VME_MESYTEC_MDPP16);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for VME_MESYTEC_MDPP16.
 *
 * Do not edit - automatically generated.
 */

// VME_MESYTEC_MDPP16(geom)
template<typename __data_src_t>
void VME_MESYTEC_MDPP16::__unpack(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA16_OVERFLOW data[34] ZERO_SUPPRESS_MULTI(100));
  // MARK_COUNT(start);
  void *__mark_start = __buffer._data;
  // UINT32 header NOENCODE
  // {
    //  0_09: word_number;
    // 10_12: adc_res;
    // 13_15: tdc_res;
    // 16_23: geom = MATCH(geom);
    // 24_29: 0;
    // 30_31: 1;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_number : 10; // 0..9
      uint32 adc_res : 3; // 10..12
      uint32 tdc_res : 3; // 13..15
      uint32 geom : 8; // 16..23
      uint32 unnamed_24_29 : 6; // 24..29
      uint32 unnamed_30_31 : 2; // 30..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_30_31 : 2; // 30..31
      uint32 unnamed_24_29 : 6; // 24..29
      uint32 geom : 8; // 16..23
      uint32 tdc_res : 3; // 13..15
      uint32 adc_res : 3; // 10..12
      uint32 word_number : 10; // 0..9
#endif
    };
    uint32  u32;
  } header;
  READ_FROM_BUFFER_FULL(669,uint32 ,header,header.u32);
  CHECK_BITS_EQUAL(666,header.geom,geom);
  CHECK_BITS_EQUAL(667,header.unnamed_24_29,0);
  CHECK_BITS_EQUAL(668,header.unnamed_30_31,1);
  // several UINT32 ch_data NOENCODE
  // {
    //  0_15: value;
    // 16_21: channel;
    //    22: overflow;
    //    23: pileup;
    // 24_27: 0;
    // 28_31: 1;
    // ENCODE(data[channel],(value=value,overflow=overflow,pileup=pileup));
  // }
  for ( ; ; ) {
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 value : 16; // 0..15
      uint32 channel : 6; // 16..21
      uint32 overflow : 1; // 22
      uint32 pileup : 1; // 23
      uint32 unnamed_24_27 : 4; // 24..27
      uint32 unnamed_28_31 : 4; // 28..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_28_31 : 4; // 28..31
      uint32 unnamed_24_27 : 4; // 24..27
      uint32 pileup : 1; // 23
      uint32 overflow : 1; // 22
      uint32 channel : 6; // 16..21
      uint32 value : 16; // 0..15
#endif
    };
    uint32  u32;
  } ch_data;
  if (__buffer.empty()) goto data_done_6;
  PEEK_FROM_BUFFER_FULL(681,uint32 ,ch_data,ch_data.u32);
  CHECK_JUMP_BITS_EQUAL(677,ch_data.unnamed_24_27,0,data_done_6);
  CHECK_JUMP_BITS_EQUAL(678,ch_data.unnamed_28_31,1,data_done_6);
  __buffer.advance(sizeof(ch_data.u32));
  {
    typedef __typeof__(*(&(data))) __array_t;
    typedef typename __array_t::item_t __item_t;
    __item_t &__item = data.insert_index(680,ch_data.channel);
    __item.value = ch_data.value;
    __item.overflow = ch_data.overflow;
    __item.pileup = ch_data.pileup;
  }
  }
  data_done_6:;
  // several UINT32 fill_word NOENCODE
  // {
    //  0_31: 0;
  // }
  for ( ; ; ) {
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 unnamed_0_31 : 32; // 0..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_0_31 : 32; // 0..31
#endif
    };
    uint32  u32;
  } fill_word;
  if (__buffer.empty()) goto data_done_7;
  PEEK_FROM_BUFFER_FULL(686,uint32 ,fill_word,fill_word.u32);
  CHECK_JUMP_BITS_EQUAL(685,fill_word.unnamed_0_31,0,data_done_7);
  __buffer.advance(sizeof(fill_word.u32));
  }
  data_done_7:;
  // UINT32 end_of_event
  // {
    //  0_29: counter;
    // 30_31: 3;
  // }
  READ_FROM_BUFFER_FULL(692,uint32 ,end_of_event,end_of_event.u32);
  CHECK_BITS_EQUAL(691,end_of_event.unnamed_30_31,3);
  // MARK_COUNT(end);
  void *__mark_end = __buffer._data;
  // CHECK_COUNT(header.word_number,start,end,( - 4),4)
  CHECK_WORD_COUNT(695,header.word_number,start,end,( - 4),4);
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_MESYTEC_MDPP16::__unpack,uint32 geom);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for VME_MESYTEC_MDPP16.
 *
 * Do not edit - automatically generated.
 */

// VME_MESYTEC_MDPP16(geom)
template<typename __data_src_t>
bool VME_MESYTEC_MDPP16::__match(__data_src_t &__buffer,uint32 geom)
{
  // MEMBER(DATA16_OVERFLOW data[34] ZERO_SUPPRESS_MULTI(100));
  // MARK_COUNT(start);
  // UINT32 header NOENCODE
  // {
    //  0_09: word_number;
    // 10_12: adc_res;
    // 13_15: tdc_res;
    // 16_23: geom = MATCH(geom);
    // 24_29: 0;
    // 30_31: 1;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 word_number : 10; // 0..9
      uint32 adc_res : 3; // 10..12
      uint32 tdc_res : 3; // 13..15
      uint32 geom : 8; // 16..23
      uint32 unnamed_24_29 : 6; // 24..29
      uint32 unnamed_30_31 : 2; // 30..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_30_31 : 2; // 30..31
      uint32 unnamed_24_29 : 6; // 24..29
      uint32 geom : 8; // 16..23
      uint32 tdc_res : 3; // 13..15
      uint32 adc_res : 3; // 10..12
      uint32 word_number : 10; // 0..9
#endif
    };
    uint32  u32;
  } header;
  READ_FROM_BUFFER_FULL(669,uint32 ,header,header.u32);
  MATCH_BITS_EQUAL(666,header.geom,geom);
  MATCH_BITS_EQUAL(667,header.unnamed_24_29,0);
  MATCH_BITS_EQUAL(668,header.unnamed_30_31,1);
  return true;
  return false;
}
FORCE_IMPL_DATA_SRC_FCN_ARG(bool,VME_MESYTEC_MDPP16::__match,uint32 geom);

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for VME_MESYTEC_MDPP16.
 *
 * Do not edit - automatically generated.
 */

// VME_MESYTEC_MDPP16(geom)
template<typename __data_dest_t>
void PACKER_VME_MESYTEC_MDPP16::__packer(__data_dest_t &__buffer,uint32 geom)
{
  // MEMBER(DATA16_OVERFLOW data[34] ZERO_SUPPRESS_MULTI(100));
  // MARK_COUNT(start);
  void *__mark_start = __buffer._offset;
  // UINT32 header NOENCODE
  // {
    //  0_09: word_number;
    // 10_12: adc_res;
    // 13_15: tdc_res;
    // 16_23: geom = MATCH(geom);
    // 24_29: 0;
    // 30_31: 1;
  // }
  // several UINT32 ch_data NOENCODE
  // {
    //  0_15: value;
    // 16_21: channel;
    //    22: overflow;
    //    23: pileup;
    // 24_27: 0;
    // 28_31: 1;
    // ENCODE(data[channel],(value=value,overflow=overflow,pileup=pileup));
  // }
  // several UINT32 fill_word NOENCODE
  // {
    //  0_31: 0;
  // }
  // UINT32 end_of_event
  // {
    //  0_29: counter;
    // 30_31: 3;
  // }
  // MARK_COUNT(end);
  void *__mark_end = __buffer._offset;
  // CHECK_COUNT(header.word_number,start,end,( - 4),4)
}
FORCE_IMPL_DATA_SRC_FCN_ARG(void,VME_MESYTEC_MDPP16::__packer,uint32 geom);

/** END_PACKER ********************************************************/

//
// Generating code for: DUMMY_TDC
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for DUMMY_TDC.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(DUMMY_TDC)
#if !PACKER_CODE
# define DECLARED_UNPACK_DUMMY_TDC
class DUMMY_TDC
#else//PACKER_CODE
# define DECLARED_PACKER_DUMMY_TDC
class PACKER_DUMMY_TDC
#endif//PACKER_CODE
 : public unpack_subevent_base
{
public:
  // select several

    // dum = DUMMY_WORD();
  SINGLE(DUMMY_WORD,dum);

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(DUMMY_TDC);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for DUMMY_TDC.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(DUMMY_TDC)
template<typename __data_src_t>
void DUMMY_TDC::__unpack(__data_src_t &__buffer)
{
  // select several

    // dum = DUMMY_WORD();
  for ( ; ; )
  {
    if (__buffer.empty()) break;
    int __match_no = 0;
    // optimized match 1: DUMMY_WORD dum: (s32)
    {
    uint32 __match_peek;
    PEEK_FROM_BUFFER(992,uint32,__match_peek);
    // differ = 00000000 :
    uint32 __match_index = 0;
    static const sint8 __match_index_array[1] = { 1, };
    __match_no = __match_index_array[__match_index];
    // last_subevent_item = 1
    }
    if (!__match_no) break;
    switch (__match_no)
    {
      case 1:
        UNPACK_DECL(991,DUMMY_WORD,dum);
        break;
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,DUMMY_TDC::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for DUMMY_TDC.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(DUMMY_TDC)
// No __match function for subevents.

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for DUMMY_TDC.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(DUMMY_TDC)
template<typename __data_dest_t>
void PACKER_DUMMY_TDC::__packer(__data_dest_t &__buffer)
{
  // select several

    // dum = DUMMY_WORD();
  {
    PACK_DECL(991,DUMMY_WORD,dum);
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,DUMMY_TDC::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: LAND_CAMAC_CONVERTER
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for LAND_CAMAC_CONVERTER.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_CONVERTER)
#if !PACKER_CODE
# define DECLARED_UNPACK_LAND_CAMAC_CONVERTER
class LAND_CAMAC_CONVERTER
#else//PACKER_CODE
# define DECLARED_PACKER_LAND_CAMAC_CONVERTER
class PACKER_LAND_CAMAC_CONVERTER
#endif//PACKER_CODE
 : public unpack_subevent_base
{
public:
  // UINT16 tpat;
  uint16  tpat;
  // UINT16 tprev;
  uint16  tprev;
  // UINT16 tnext;
  uint16  tnext;
  // UINT16 tprev2;
  uint16  tprev2;
  // if(EXTERNAL has_data)

#ifndef __PSDC__
  uint32 has_data() const;
#endif//!__PSDC__
    // tPHI10481 = CAMAC_PHILLIPS_7164(channels=8,mark_channel_no=1);
    // aPHI12160 = CAMAC_PHILLIPS_7164(channels=16,mark_channel_no=1);
    // qSIA0429 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    // tSIA8035 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    // tSIA0469 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    // qSIA0480 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    // tC_FRS120 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    // tSIA0426 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    // qSIA0495 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    SINGLE(CAMAC_PHILLIPS_7164,tPHI10481);
    SINGLE(CAMAC_SILENA_4418,qSIA0429);
    SINGLE(CAMAC_PHILLIPS_7164,aPHI12160);
    SINGLE(CAMAC_SILENA_4418,tSIA8035);
    SINGLE(CAMAC_SILENA_4418,tSIA0469);
    SINGLE(CAMAC_SILENA_4418,qSIA0480);
    SINGLE(CAMAC_SILENA_4418,tC_FRS120);
    SINGLE(CAMAC_SILENA_4418,tSIA0426);
    SINGLE(CAMAC_SILENA_4418,qSIA0495);

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(LAND_CAMAC_CONVERTER);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for LAND_CAMAC_CONVERTER.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_CONVERTER)
template<typename __data_src_t>
void LAND_CAMAC_CONVERTER::__unpack(__data_src_t &__buffer)
{
  // UINT16 tpat;
  READ_FROM_BUFFER(705,uint16 ,tpat);
  // UINT16 tprev;
  READ_FROM_BUFFER(706,uint16 ,tprev);
  // UINT16 tnext;
  READ_FROM_BUFFER(707,uint16 ,tnext);
  // UINT16 tprev2;
  READ_FROM_BUFFER(708,uint16 ,tprev2);
  // if(EXTERNAL has_data)

  if (has_data())
  {
    // tPHI10481 = CAMAC_PHILLIPS_7164(channels=8,mark_channel_no=1);
    UNPACK_DECL(715,CAMAC_PHILLIPS_7164,tPHI10481,/*channels*/8,/*mark_channel_no*/1);
    // aPHI12160 = CAMAC_PHILLIPS_7164(channels=16,mark_channel_no=1);
    UNPACK_DECL(716,CAMAC_PHILLIPS_7164,aPHI12160,/*channels*/16,/*mark_channel_no*/1);
    // qSIA0429 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    UNPACK_DECL(717,CAMAC_SILENA_4418,qSIA0429,/*channels*/8,/*mark_channel_no*/0);
    // tSIA8035 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    UNPACK_DECL(718,CAMAC_SILENA_4418,tSIA8035,/*channels*/4,/*mark_channel_no*/0);
    // tSIA0469 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    UNPACK_DECL(719,CAMAC_SILENA_4418,tSIA0469,/*channels*/4,/*mark_channel_no*/0);
    // qSIA0480 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    UNPACK_DECL(720,CAMAC_SILENA_4418,qSIA0480,/*channels*/4,/*mark_channel_no*/0);
    // tC_FRS120 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    UNPACK_DECL(721,CAMAC_SILENA_4418,tC_FRS120,/*channels*/8,/*mark_channel_no*/0);
    // tSIA0426 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    UNPACK_DECL(722,CAMAC_SILENA_4418,tSIA0426,/*channels*/4,/*mark_channel_no*/0);
    // qSIA0495 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    UNPACK_DECL(723,CAMAC_SILENA_4418,qSIA0495,/*channels*/8,/*mark_channel_no*/0);
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_CAMAC_CONVERTER::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for LAND_CAMAC_CONVERTER.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_CONVERTER)
// No __match function for subevents.

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for LAND_CAMAC_CONVERTER.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_CONVERTER)
template<typename __data_dest_t>
void PACKER_LAND_CAMAC_CONVERTER::__packer(__data_dest_t &__buffer)
{
  // UINT16 tpat;
  // UINT16 tprev;
  // UINT16 tnext;
  // UINT16 tprev2;
  // if(EXTERNAL has_data)

  if (has_data())
  {
    // tPHI10481 = CAMAC_PHILLIPS_7164(channels=8,mark_channel_no=1);
    PACK_DECL(715,CAMAC_PHILLIPS_7164,tPHI10481,/*channels*/8,/*mark_channel_no*/1);
    // aPHI12160 = CAMAC_PHILLIPS_7164(channels=16,mark_channel_no=1);
    PACK_DECL(716,CAMAC_PHILLIPS_7164,aPHI12160,/*channels*/16,/*mark_channel_no*/1);
    // qSIA0429 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    PACK_DECL(717,CAMAC_SILENA_4418,qSIA0429,/*channels*/8,/*mark_channel_no*/0);
    // tSIA8035 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    PACK_DECL(718,CAMAC_SILENA_4418,tSIA8035,/*channels*/4,/*mark_channel_no*/0);
    // tSIA0469 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    PACK_DECL(719,CAMAC_SILENA_4418,tSIA0469,/*channels*/4,/*mark_channel_no*/0);
    // qSIA0480 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    PACK_DECL(720,CAMAC_SILENA_4418,qSIA0480,/*channels*/4,/*mark_channel_no*/0);
    // tC_FRS120 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    PACK_DECL(721,CAMAC_SILENA_4418,tC_FRS120,/*channels*/8,/*mark_channel_no*/0);
    // tSIA0426 = CAMAC_SILENA_4418(channels=4,mark_channel_no=0);
    PACK_DECL(722,CAMAC_SILENA_4418,tSIA0426,/*channels*/4,/*mark_channel_no*/0);
    // qSIA0495 = CAMAC_SILENA_4418(channels=8,mark_channel_no=0);
    PACK_DECL(723,CAMAC_SILENA_4418,qSIA0495,/*channels*/8,/*mark_channel_no*/0);
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_CAMAC_CONVERTER::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: LAND_CAMAC_SCALER
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for LAND_CAMAC_SCALER.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_SCALER)
#if !PACKER_CODE
# define DECLARED_UNPACK_LAND_CAMAC_SCALER
class LAND_CAMAC_SCALER
#else//PACKER_CODE
# define DECLARED_PACKER_LAND_CAMAC_SCALER
class PACKER_LAND_CAMAC_SCALER
#endif//PACKER_CODE
 : public unpack_subevent_base
{
public:
  // scaler0 = CAMAC_LECROY_4434(channels=32);
  // scaler1 = CAMAC_LECROY_4434(channels=32);
  // scaler2 = CAMAC_LECROY_4434(channels=32);
  // if(EXTERNAL has_timestamp)

#ifndef __PSDC__
  uint32 has_timestamp() const;
#endif//!__PSDC__
    // UINT32 timestamp;
    uint32  timestamp;
    // UINT32 endianess
    // {
      //  0_31: 0x87654321;
    // }
    union
    {
      struct
      {
#if __BYTE_ORDER == __LITTLE_ENDIAN
        uint32 unnamed_0_31 : 32; // 0..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
        uint32 unnamed_0_31 : 32; // 0..31
#endif
      };
      uint32  u32;
    } endianess;
  SINGLE(CAMAC_LECROY_4434,scaler0);
  SINGLE(CAMAC_LECROY_4434,scaler2);
  SINGLE(CAMAC_LECROY_4434,scaler1);

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(LAND_CAMAC_SCALER);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for LAND_CAMAC_SCALER.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_SCALER)
template<typename __data_src_t>
void LAND_CAMAC_SCALER::__unpack(__data_src_t &__buffer)
{
  // scaler0 = CAMAC_LECROY_4434(channels=32);
  UNPACK_DECL(872,CAMAC_LECROY_4434,scaler0,/*channels*/32);
  // scaler1 = CAMAC_LECROY_4434(channels=32);
  UNPACK_DECL(873,CAMAC_LECROY_4434,scaler1,/*channels*/32);
  // scaler2 = CAMAC_LECROY_4434(channels=32);
  UNPACK_DECL(874,CAMAC_LECROY_4434,scaler2,/*channels*/32);
  // if(EXTERNAL has_timestamp)

  if (has_timestamp())
  {
    // UINT32 timestamp;
    READ_FROM_BUFFER(883,uint32 ,timestamp);
    // UINT32 endianess
    // {
      //  0_31: 0x87654321;
    // }
    READ_FROM_BUFFER_FULL(884,uint32 ,endianess,endianess.u32);
    CHECK_BITS_EQUAL(884,endianess.unnamed_0_31,0x87654321);
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_CAMAC_SCALER::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for LAND_CAMAC_SCALER.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_SCALER)
// No __match function for subevents.

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for LAND_CAMAC_SCALER.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_SCALER)
template<typename __data_dest_t>
void PACKER_LAND_CAMAC_SCALER::__packer(__data_dest_t &__buffer)
{
  // scaler0 = CAMAC_LECROY_4434(channels=32);
  PACK_DECL(872,CAMAC_LECROY_4434,scaler0,/*channels*/32);
  // scaler1 = CAMAC_LECROY_4434(channels=32);
  PACK_DECL(873,CAMAC_LECROY_4434,scaler1,/*channels*/32);
  // scaler2 = CAMAC_LECROY_4434(channels=32);
  PACK_DECL(874,CAMAC_LECROY_4434,scaler2,/*channels*/32);
  // if(EXTERNAL has_timestamp)

  if (has_timestamp())
  {
    // UINT32 timestamp;
    // UINT32 endianess
    // {
      //  0_31: 0x87654321;
    // }
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_CAMAC_SCALER::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: LAND_CAMAC_START_STOP_STAMP
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for LAND_CAMAC_START_STOP_STAMP.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_START_STOP_STAMP)
#if !PACKER_CODE
# define DECLARED_UNPACK_LAND_CAMAC_START_STOP_STAMP
class LAND_CAMAC_START_STOP_STAMP
#else//PACKER_CODE
# define DECLARED_PACKER_LAND_CAMAC_START_STOP_STAMP
class PACKER_LAND_CAMAC_START_STOP_STAMP
#endif//PACKER_CODE
 : public unpack_subevent_base
{
public:
  // UINT32 timestamp;
  uint32  timestamp;
  // UINT32 endianess
  // {
    //  0_31: 0x87654321;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 unnamed_0_31 : 32; // 0..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_0_31 : 32; // 0..31
#endif
    };
    uint32  u32;
  } endianess;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(LAND_CAMAC_START_STOP_STAMP);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for LAND_CAMAC_START_STOP_STAMP.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_START_STOP_STAMP)
template<typename __data_src_t>
void LAND_CAMAC_START_STOP_STAMP::__unpack(__data_src_t &__buffer)
{
  // UINT32 timestamp;
  READ_FROM_BUFFER(890,uint32 ,timestamp);
  // UINT32 endianess
  // {
    //  0_31: 0x87654321;
  // }
  READ_FROM_BUFFER_FULL(891,uint32 ,endianess,endianess.u32);
  CHECK_BITS_EQUAL(891,endianess.unnamed_0_31,0x87654321);
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_CAMAC_START_STOP_STAMP::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for LAND_CAMAC_START_STOP_STAMP.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_START_STOP_STAMP)
// No __match function for subevents.

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for LAND_CAMAC_START_STOP_STAMP.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_START_STOP_STAMP)
template<typename __data_dest_t>
void PACKER_LAND_CAMAC_START_STOP_STAMP::__packer(__data_dest_t &__buffer)
{
  // UINT32 timestamp;
  // UINT32 endianess
  // {
    //  0_31: 0x87654321;
  // }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_CAMAC_START_STOP_STAMP::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: LAND_CAMAC_TCAL_INFO
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for LAND_CAMAC_TCAL_INFO.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_TCAL_INFO)
#if !PACKER_CODE
# define DECLARED_UNPACK_LAND_CAMAC_TCAL_INFO
class LAND_CAMAC_TCAL_INFO
#else//PACKER_CODE
# define DECLARED_PACKER_LAND_CAMAC_TCAL_INFO
class PACKER_LAND_CAMAC_TCAL_INFO
#endif//PACKER_CODE
 : public unpack_subevent_base
{
public:
  // UINT32 info;
  uint32  info;
  // select several

    // rtcal = RANDOM_TCAL(id=231);
    // ntp = NTP_MESSAGE(id=239);
  SINGLE(RANDOM_TCAL,rtcal);
  SINGLE(NTP_MESSAGE,ntp);

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(LAND_CAMAC_TCAL_INFO);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for LAND_CAMAC_TCAL_INFO.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_TCAL_INFO)
template<typename __data_src_t>
void LAND_CAMAC_TCAL_INFO::__unpack(__data_src_t &__buffer)
{
  // UINT32 info;
  READ_FROM_BUFFER(843,uint32 ,info);
  // select several

    // rtcal = RANDOM_TCAL(id=231);
    // ntp = NTP_MESSAGE(id=239);
  for ( ; ; )
  {
    if (__buffer.empty()) break;
    int __match_no = 0;
    // optimized match 1: RANDOM_TCAL rtcal: (s32) => (0xfff00000,0xe7000000)
    // optimized match 2: NTP_MESSAGE ntp: (s32) => (0xfffe0000,0xef000000)
    {
    uint32 __match_peek;
    PEEK_FROM_BUFFER(849,uint32,__match_peek);
    // differ = 08000000 : 27
    uint32 __match_index = 0 | /* 27,27 */ ((__match_peek >> 27) & 0x00000001);
    static const sint8 __match_index_array[2] = { 1, 2, };
    __match_no = __match_index_array[__match_index];
    // last_subevent_item = 1
    }
    if (!__match_no) break;
    switch (__match_no)
    {
      case 1:
        UNPACK_DECL(847,RANDOM_TCAL,rtcal,/*id*/231);
        break;
      case 2:
        UNPACK_DECL(848,NTP_MESSAGE,ntp,/*id*/239);
        break;
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_CAMAC_TCAL_INFO::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for LAND_CAMAC_TCAL_INFO.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_TCAL_INFO)
// No __match function for subevents.

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for LAND_CAMAC_TCAL_INFO.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_CAMAC_TCAL_INFO)
template<typename __data_dest_t>
void PACKER_LAND_CAMAC_TCAL_INFO::__packer(__data_dest_t &__buffer)
{
  // UINT32 info;
  // select several

    // rtcal = RANDOM_TCAL(id=231);
    // ntp = NTP_MESSAGE(id=239);
  {
    PACK_DECL(847,RANDOM_TCAL,rtcal,/*id*/231);
    PACK_DECL(848,NTP_MESSAGE,ntp,/*id*/239);
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_CAMAC_TCAL_INFO::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: LAND_FASTBUS1
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for LAND_FASTBUS1.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS1)
#if !PACKER_CODE
# define DECLARED_UNPACK_LAND_FASTBUS1
class LAND_FASTBUS1
#else//PACKER_CODE
# define DECLARED_PACKER_LAND_FASTBUS1
class PACKER_LAND_FASTBUS1
#endif//PACKER_CODE
 : public unpack_subevent_base
{
public:
  // select several

    // Q47342 = FASTBUS_LECROY_1885(geom=7,channels=96);
    // Q11111 = FASTBUS_LECROY_1885(geom=8,channels=96);
    // Q46848 = FASTBUS_LECROY_1885(geom=10,channels=96);
    // Q47315 = FASTBUS_LECROY_1885(geom=11,channels=96);
    // Q17320 = FASTBUS_LECROY_1885(geom=13,channels=96);
    // Q15372 = FASTBUS_LECROY_1885(geom=15,channels=96);
    // Q46962 = FASTBUS_LECROY_1885(geom=16,channels=96);
    // Q46993 = FASTBUS_LECROY_1885(geom=18,channels=96);
    // Q15358 = FASTBUS_LECROY_1885(geom=20,channels=96);
    // Q47264 = FASTBUS_LECROY_1885(geom=23,channels=96);
    // T81855 = FASTBUS_LECROY_1875(geom=3,channels=64);
    // T87044 = FASTBUS_LECROY_1875(geom=4,channels=64);
    // T87024 = FASTBUS_LECROY_1875(geom=5,channels=64);
    // T81800 = FASTBUS_LECROY_1875(geom=6,channels=64);
  SINGLE(FASTBUS_LECROY_1885,Q47342);
  SINGLE(FASTBUS_LECROY_1885,Q46848);
  SINGLE(FASTBUS_LECROY_1885,Q11111);
  SINGLE(FASTBUS_LECROY_1885,Q47315);
  SINGLE(FASTBUS_LECROY_1885,Q17320);
  SINGLE(FASTBUS_LECROY_1885,Q15372);
  SINGLE(FASTBUS_LECROY_1885,Q46962);
  SINGLE(FASTBUS_LECROY_1885,Q46993);
  SINGLE(FASTBUS_LECROY_1885,Q15358);
  SINGLE(FASTBUS_LECROY_1885,Q47264);
  SINGLE(FASTBUS_LECROY_1875,T81855);
  SINGLE(FASTBUS_LECROY_1875,T87044);
  SINGLE(FASTBUS_LECROY_1875,T87024);
  SINGLE(FASTBUS_LECROY_1875,T81800);

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(LAND_FASTBUS1);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for LAND_FASTBUS1.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS1)
template<typename __data_src_t>
void LAND_FASTBUS1::__unpack(__data_src_t &__buffer)
{
  // select several

    // Q47342 = FASTBUS_LECROY_1885(geom=7,channels=96);
    // Q11111 = FASTBUS_LECROY_1885(geom=8,channels=96);
    // Q46848 = FASTBUS_LECROY_1885(geom=10,channels=96);
    // Q47315 = FASTBUS_LECROY_1885(geom=11,channels=96);
    // Q17320 = FASTBUS_LECROY_1885(geom=13,channels=96);
    // Q15372 = FASTBUS_LECROY_1885(geom=15,channels=96);
    // Q46962 = FASTBUS_LECROY_1885(geom=16,channels=96);
    // Q46993 = FASTBUS_LECROY_1885(geom=18,channels=96);
    // Q15358 = FASTBUS_LECROY_1885(geom=20,channels=96);
    // Q47264 = FASTBUS_LECROY_1885(geom=23,channels=96);
    // T81855 = FASTBUS_LECROY_1875(geom=3,channels=64);
    // T87044 = FASTBUS_LECROY_1875(geom=4,channels=64);
    // T87024 = FASTBUS_LECROY_1875(geom=5,channels=64);
    // T81800 = FASTBUS_LECROY_1875(geom=6,channels=64);
  for ( ; ; )
  {
    if (__buffer.empty()) break;
    int __match_no = 0;
    // optimized match 1: FASTBUS_LECROY_1885 Q47342: (s32) => (0xff00f000,0x38000000)
    // optimized match 2: FASTBUS_LECROY_1885 Q11111: (s32) => (0xff00f000,0x40000000)
    // optimized match 3: FASTBUS_LECROY_1885 Q46848: (s32) => (0xff00f000,0x50000000)
    // optimized match 4: FASTBUS_LECROY_1885 Q47315: (s32) => (0xff00f000,0x58000000)
    // optimized match 5: FASTBUS_LECROY_1885 Q17320: (s32) => (0xff00f000,0x68000000)
    // optimized match 6: FASTBUS_LECROY_1885 Q15372: (s32) => (0xff00f000,0x78000000)
    // optimized match 7: FASTBUS_LECROY_1885 Q46962: (s32) => (0xff00f000,0x80000000)
    // optimized match 8: FASTBUS_LECROY_1885 Q46993: (s32) => (0xff00f000,0x90000000)
    // optimized match 9: FASTBUS_LECROY_1885 Q15358: (s32) => (0xff00f000,0xa0000000)
    // optimized match 10: FASTBUS_LECROY_1885 Q47264: (s32) => (0xff00f000,0xb8000000)
    // optimized match 11: FASTBUS_LECROY_1875 T81855: (s32) => (0xff40f000,0x18000000)
    // optimized match 12: FASTBUS_LECROY_1875 T87044: (s32) => (0xff40f000,0x20000000)
    // optimized match 13: FASTBUS_LECROY_1875 T87024: (s32) => (0xff40f000,0x28000000)
    // optimized match 14: FASTBUS_LECROY_1875 T81800: (s32) => (0xff40f000,0x30000000)
    {
    uint32 __match_peek;
    PEEK_FROM_BUFFER(955,uint32,__match_peek);
    // differ = f8000000 : 27 28 29 30 31
    uint32 __match_index = 0 | /* 27,31 */ ((__match_peek >> 27) & 0x0000001f);
    static const sint8 __match_index_array[32] = { 0, 0, 0, 11, 12, 13, 14, 1, 2, 0, 3, 4, 0, 5, 0, 6, 7, 0, 8, 0, 9, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, };
    __match_no = __match_index_array[__match_index];
    // last_subevent_item = 1
    }
    if (!__match_no) break;
    switch (__match_no)
    {
      case 1:
        UNPACK_DECL(940,FASTBUS_LECROY_1885,Q47342,/*geom*/7,/*channels*/96);
        break;
      case 2:
        UNPACK_DECL(941,FASTBUS_LECROY_1885,Q11111,/*geom*/8,/*channels*/96);
        break;
      case 3:
        UNPACK_DECL(942,FASTBUS_LECROY_1885,Q46848,/*geom*/10,/*channels*/96);
        break;
      case 4:
        UNPACK_DECL(943,FASTBUS_LECROY_1885,Q47315,/*geom*/11,/*channels*/96);
        break;
      case 5:
        UNPACK_DECL(944,FASTBUS_LECROY_1885,Q17320,/*geom*/13,/*channels*/96);
        break;
      case 6:
        UNPACK_DECL(945,FASTBUS_LECROY_1885,Q15372,/*geom*/15,/*channels*/96);
        break;
      case 7:
        UNPACK_DECL(946,FASTBUS_LECROY_1885,Q46962,/*geom*/16,/*channels*/96);
        break;
      case 8:
        UNPACK_DECL(947,FASTBUS_LECROY_1885,Q46993,/*geom*/18,/*channels*/96);
        break;
      case 9:
        UNPACK_DECL(948,FASTBUS_LECROY_1885,Q15358,/*geom*/20,/*channels*/96);
        break;
      case 10:
        UNPACK_DECL(949,FASTBUS_LECROY_1885,Q47264,/*geom*/23,/*channels*/96);
        break;
      case 11:
        UNPACK_DECL(950,FASTBUS_LECROY_1875,T81855,/*geom*/3,/*channels*/64);
        break;
      case 12:
        UNPACK_DECL(951,FASTBUS_LECROY_1875,T87044,/*geom*/4,/*channels*/64);
        break;
      case 13:
        UNPACK_DECL(952,FASTBUS_LECROY_1875,T87024,/*geom*/5,/*channels*/64);
        break;
      case 14:
        UNPACK_DECL(953,FASTBUS_LECROY_1875,T81800,/*geom*/6,/*channels*/64);
        break;
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_FASTBUS1::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for LAND_FASTBUS1.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS1)
// No __match function for subevents.

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for LAND_FASTBUS1.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS1)
template<typename __data_dest_t>
void PACKER_LAND_FASTBUS1::__packer(__data_dest_t &__buffer)
{
  // select several

    // Q47342 = FASTBUS_LECROY_1885(geom=7,channels=96);
    // Q11111 = FASTBUS_LECROY_1885(geom=8,channels=96);
    // Q46848 = FASTBUS_LECROY_1885(geom=10,channels=96);
    // Q47315 = FASTBUS_LECROY_1885(geom=11,channels=96);
    // Q17320 = FASTBUS_LECROY_1885(geom=13,channels=96);
    // Q15372 = FASTBUS_LECROY_1885(geom=15,channels=96);
    // Q46962 = FASTBUS_LECROY_1885(geom=16,channels=96);
    // Q46993 = FASTBUS_LECROY_1885(geom=18,channels=96);
    // Q15358 = FASTBUS_LECROY_1885(geom=20,channels=96);
    // Q47264 = FASTBUS_LECROY_1885(geom=23,channels=96);
    // T81855 = FASTBUS_LECROY_1875(geom=3,channels=64);
    // T87044 = FASTBUS_LECROY_1875(geom=4,channels=64);
    // T87024 = FASTBUS_LECROY_1875(geom=5,channels=64);
    // T81800 = FASTBUS_LECROY_1875(geom=6,channels=64);
  {
    PACK_DECL(940,FASTBUS_LECROY_1885,Q47342,/*geom*/7,/*channels*/96);
    PACK_DECL(941,FASTBUS_LECROY_1885,Q11111,/*geom*/8,/*channels*/96);
    PACK_DECL(942,FASTBUS_LECROY_1885,Q46848,/*geom*/10,/*channels*/96);
    PACK_DECL(943,FASTBUS_LECROY_1885,Q47315,/*geom*/11,/*channels*/96);
    PACK_DECL(944,FASTBUS_LECROY_1885,Q17320,/*geom*/13,/*channels*/96);
    PACK_DECL(945,FASTBUS_LECROY_1885,Q15372,/*geom*/15,/*channels*/96);
    PACK_DECL(946,FASTBUS_LECROY_1885,Q46962,/*geom*/16,/*channels*/96);
    PACK_DECL(947,FASTBUS_LECROY_1885,Q46993,/*geom*/18,/*channels*/96);
    PACK_DECL(948,FASTBUS_LECROY_1885,Q15358,/*geom*/20,/*channels*/96);
    PACK_DECL(949,FASTBUS_LECROY_1885,Q47264,/*geom*/23,/*channels*/96);
    PACK_DECL(950,FASTBUS_LECROY_1875,T81855,/*geom*/3,/*channels*/64);
    PACK_DECL(951,FASTBUS_LECROY_1875,T87044,/*geom*/4,/*channels*/64);
    PACK_DECL(952,FASTBUS_LECROY_1875,T87024,/*geom*/5,/*channels*/64);
    PACK_DECL(953,FASTBUS_LECROY_1875,T81800,/*geom*/6,/*channels*/64);
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_FASTBUS1::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: LAND_FASTBUS2
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for LAND_FASTBUS2.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS2)
#if !PACKER_CODE
# define DECLARED_UNPACK_LAND_FASTBUS2
class LAND_FASTBUS2
#else//PACKER_CODE
# define DECLARED_PACKER_LAND_FASTBUS2
class PACKER_LAND_FASTBUS2
#endif//PACKER_CODE
 : public unpack_subevent_base
{
public:
  // select several

    // T87047 = FASTBUS_LECROY_1875(geom=1,channels=64);
    // T48854 = FASTBUS_LECROY_1875(geom=2,channels=64);
    // T81808 = FASTBUS_LECROY_1875(geom=3,channels=64);
    // T81859 = FASTBUS_LECROY_1875(geom=4,channels=64);
    // T81795 = FASTBUS_LECROY_1875(geom=5,channels=64);
    // T81806 = FASTBUS_LECROY_1875(geom=6,channels=64);
    // T48834 = FASTBUS_LECROY_1875(geom=7,channels=64);
  SINGLE(FASTBUS_LECROY_1875,T87047);
  SINGLE(FASTBUS_LECROY_1875,T81808);
  SINGLE(FASTBUS_LECROY_1875,T48854);
  SINGLE(FASTBUS_LECROY_1875,T81859);
  SINGLE(FASTBUS_LECROY_1875,T81795);
  SINGLE(FASTBUS_LECROY_1875,T81806);
  SINGLE(FASTBUS_LECROY_1875,T48834);

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(LAND_FASTBUS2);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for LAND_FASTBUS2.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS2)
template<typename __data_src_t>
void LAND_FASTBUS2::__unpack(__data_src_t &__buffer)
{
  // select several

    // T87047 = FASTBUS_LECROY_1875(geom=1,channels=64);
    // T48854 = FASTBUS_LECROY_1875(geom=2,channels=64);
    // T81808 = FASTBUS_LECROY_1875(geom=3,channels=64);
    // T81859 = FASTBUS_LECROY_1875(geom=4,channels=64);
    // T81795 = FASTBUS_LECROY_1875(geom=5,channels=64);
    // T81806 = FASTBUS_LECROY_1875(geom=6,channels=64);
    // T48834 = FASTBUS_LECROY_1875(geom=7,channels=64);
  for ( ; ; )
  {
    if (__buffer.empty()) break;
    int __match_no = 0;
    // optimized match 1: FASTBUS_LECROY_1875 T87047: (s32) => (0xff40f000,0x08000000)
    // optimized match 2: FASTBUS_LECROY_1875 T48854: (s32) => (0xff40f000,0x10000000)
    // optimized match 3: FASTBUS_LECROY_1875 T81808: (s32) => (0xff40f000,0x18000000)
    // optimized match 4: FASTBUS_LECROY_1875 T81859: (s32) => (0xff40f000,0x20000000)
    // optimized match 5: FASTBUS_LECROY_1875 T81795: (s32) => (0xff40f000,0x28000000)
    // optimized match 6: FASTBUS_LECROY_1875 T81806: (s32) => (0xff40f000,0x30000000)
    // optimized match 7: FASTBUS_LECROY_1875 T48834: (s32) => (0xff40f000,0x38000000)
    {
    uint32 __match_peek;
    PEEK_FROM_BUFFER(976,uint32,__match_peek);
    // differ = 38000000 : 27 28 29
    uint32 __match_index = 0 | /* 27,29 */ ((__match_peek >> 27) & 0x00000007);
    static const sint8 __match_index_array[8] = { 0, 1, 2, 3, 4, 5, 6, 7, };
    __match_no = __match_index_array[__match_index];
    // last_subevent_item = 1
    }
    if (!__match_no) break;
    switch (__match_no)
    {
      case 1:
        UNPACK_DECL(968,FASTBUS_LECROY_1875,T87047,/*geom*/1,/*channels*/64);
        break;
      case 2:
        UNPACK_DECL(969,FASTBUS_LECROY_1875,T48854,/*geom*/2,/*channels*/64);
        break;
      case 3:
        UNPACK_DECL(970,FASTBUS_LECROY_1875,T81808,/*geom*/3,/*channels*/64);
        break;
      case 4:
        UNPACK_DECL(971,FASTBUS_LECROY_1875,T81859,/*geom*/4,/*channels*/64);
        break;
      case 5:
        UNPACK_DECL(972,FASTBUS_LECROY_1875,T81795,/*geom*/5,/*channels*/64);
        break;
      case 6:
        UNPACK_DECL(973,FASTBUS_LECROY_1875,T81806,/*geom*/6,/*channels*/64);
        break;
      case 7:
        UNPACK_DECL(974,FASTBUS_LECROY_1875,T48834,/*geom*/7,/*channels*/64);
        break;
    }
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_FASTBUS2::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for LAND_FASTBUS2.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS2)
// No __match function for subevents.

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for LAND_FASTBUS2.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS2)
template<typename __data_dest_t>
void PACKER_LAND_FASTBUS2::__packer(__data_dest_t &__buffer)
{
  // select several

    // T87047 = FASTBUS_LECROY_1875(geom=1,channels=64);
    // T48854 = FASTBUS_LECROY_1875(geom=2,channels=64);
    // T81808 = FASTBUS_LECROY_1875(geom=3,channels=64);
    // T81859 = FASTBUS_LECROY_1875(geom=4,channels=64);
    // T81795 = FASTBUS_LECROY_1875(geom=5,channels=64);
    // T81806 = FASTBUS_LECROY_1875(geom=6,channels=64);
    // T48834 = FASTBUS_LECROY_1875(geom=7,channels=64);
  {
    PACK_DECL(968,FASTBUS_LECROY_1875,T87047,/*geom*/1,/*channels*/64);
    PACK_DECL(969,FASTBUS_LECROY_1875,T48854,/*geom*/2,/*channels*/64);
    PACK_DECL(970,FASTBUS_LECROY_1875,T81808,/*geom*/3,/*channels*/64);
    PACK_DECL(971,FASTBUS_LECROY_1875,T81859,/*geom*/4,/*channels*/64);
    PACK_DECL(972,FASTBUS_LECROY_1875,T81795,/*geom*/5,/*channels*/64);
    PACK_DECL(973,FASTBUS_LECROY_1875,T81806,/*geom*/6,/*channels*/64);
    PACK_DECL(974,FASTBUS_LECROY_1875,T48834,/*geom*/7,/*channels*/64);
  }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_FASTBUS2::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: LAND_FASTBUS_ERROR
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for LAND_FASTBUS_ERROR.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS_ERROR)
#if !PACKER_CODE
# define DECLARED_UNPACK_LAND_FASTBUS_ERROR
class LAND_FASTBUS_ERROR
#else//PACKER_CODE
# define DECLARED_PACKER_LAND_FASTBUS_ERROR
class PACKER_LAND_FASTBUS_ERROR
#endif//PACKER_CODE
 : public unpack_subevent_base
{
public:
  // UINT32 error_code
  // {
    //     0: timeout_waiting_smi;
    //     1: illegal_block_transfer;
    //     2: fifa_address_overflow;
    //     3: fifa_register_error;
    //    16: init_error;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 timeout_waiting_smi : 1; // 0
      uint32 illegal_block_transfer : 1; // 1
      uint32 fifa_address_overflow : 1; // 2
      uint32 fifa_register_error : 1; // 3
      uint32 dummy_4_15 : 12;
      uint32 init_error : 1; // 16
      uint32 dummy_17_31 : 15;
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 dummy_17_31 : 15;
      uint32 init_error : 1; // 16
      uint32 dummy_4_15 : 12;
      uint32 fifa_register_error : 1; // 3
      uint32 fifa_address_overflow : 1; // 2
      uint32 illegal_block_transfer : 1; // 1
      uint32 timeout_waiting_smi : 1; // 0
#endif
    };
    uint32  u32;
  } error_code;
  // UINT32 error_num;
  uint32  error_num;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(LAND_FASTBUS_ERROR);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for LAND_FASTBUS_ERROR.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS_ERROR)
template<typename __data_src_t>
void LAND_FASTBUS_ERROR::__unpack(__data_src_t &__buffer)
{
  // UINT32 error_code
  // {
    //     0: timeout_waiting_smi;
    //     1: illegal_block_transfer;
    //     2: fifa_address_overflow;
    //     3: fifa_register_error;
    //    16: init_error;
  // }
  READ_FROM_BUFFER_FULL(906,uint32 ,error_code,error_code.u32);
  CHECK_UNNAMED_BITS_ZERO(906,error_code.u32,0xfffefff0);
  // UINT32 error_num;
  READ_FROM_BUFFER(907,uint32 ,error_num);
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_FASTBUS_ERROR::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for LAND_FASTBUS_ERROR.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS_ERROR)
// No __match function for subevents.

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for LAND_FASTBUS_ERROR.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS_ERROR)
template<typename __data_dest_t>
void PACKER_LAND_FASTBUS_ERROR::__packer(__data_dest_t &__buffer)
{
  // UINT32 error_code
  // {
    //     0: timeout_waiting_smi;
    //     1: illegal_block_transfer;
    //     2: fifa_address_overflow;
    //     3: fifa_register_error;
    //    16: init_error;
  // }
  // UINT32 error_num;
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_FASTBUS_ERROR::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for: LAND_FASTBUS_ERROR_NGF
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for LAND_FASTBUS_ERROR_NGF.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS_ERROR_NGF)
#if !PACKER_CODE
# define DECLARED_UNPACK_LAND_FASTBUS_ERROR_NGF
class LAND_FASTBUS_ERROR_NGF
#else//PACKER_CODE
# define DECLARED_PACKER_LAND_FASTBUS_ERROR_NGF
class PACKER_LAND_FASTBUS_ERROR_NGF
#endif//PACKER_CODE
 : public unpack_subevent_base
{
public:
  // UINT32 magic
  // {
    //  0_31: 0x10000000;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 unnamed_0_31 : 32; // 0..31
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 unnamed_0_31 : 32; // 0..31
#endif
    };
    uint32  u32;
  } magic;
  // UINT32 error_code
  // {
    //     0: error;
    //     1: uninitialized;
    //     2: ss1;
    //     3: wc;
    //     4: mid;
    //     5: fifo_empty;
    //     6: fifo_not_empty;
    //     7: not_finished;
    //     8: bad_end_addr;
    //     9: word_lost;
  // }
  union
  {
    struct
    {
#if __BYTE_ORDER == __LITTLE_ENDIAN
      uint32 error : 1; // 0
      uint32 uninitialized : 1; // 1
      uint32 ss1 : 1; // 2
      uint32 wc : 1; // 3
      uint32 mid : 1; // 4
      uint32 fifo_empty : 1; // 5
      uint32 fifo_not_empty : 1; // 6
      uint32 not_finished : 1; // 7
      uint32 bad_end_addr : 1; // 8
      uint32 word_lost : 1; // 9
      uint32 dummy_10_31 : 22;
#endif
#if __BYTE_ORDER == __BIG_ENDIAN
      uint32 dummy_10_31 : 22;
      uint32 word_lost : 1; // 9
      uint32 bad_end_addr : 1; // 8
      uint32 not_finished : 1; // 7
      uint32 fifo_not_empty : 1; // 6
      uint32 fifo_empty : 1; // 5
      uint32 mid : 1; // 4
      uint32 wc : 1; // 3
      uint32 ss1 : 1; // 2
      uint32 uninitialized : 1; // 1
      uint32 error : 1; // 0
#endif
    };
    uint32  u32;
  } error_code;

public:
#ifndef __PSDC__
# if !PACKER_CODE
template<typename __data_src_t>
  void __unpack(__data_src_t &__buffer);
template<typename __data_src_t>
  static bool __match(__data_src_t &__buffer);
  // void __clean();
# else//PACKER_CODE
template<typename __data_dest_t>
  void __packer(__data_dest_t &__buffer);
# endif//PACKER_CODE

  STRUCT_FCNS_DECL(LAND_FASTBUS_ERROR_NGF);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for LAND_FASTBUS_ERROR_NGF.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS_ERROR_NGF)
template<typename __data_src_t>
void LAND_FASTBUS_ERROR_NGF::__unpack(__data_src_t &__buffer)
{
  // UINT32 magic
  // {
    //  0_31: 0x10000000;
  // }
  READ_FROM_BUFFER_FULL(915,uint32 ,magic,magic.u32);
  CHECK_BITS_EQUAL(914,magic.unnamed_0_31,0x10000000);
  // UINT32 error_code
  // {
    //     0: error;
    //     1: uninitialized;
    //     2: ss1;
    //     3: wc;
    //     4: mid;
    //     5: fifo_empty;
    //     6: fifo_not_empty;
    //     7: not_finished;
    //     8: bad_end_addr;
    //     9: word_lost;
  // }
  READ_FROM_BUFFER_FULL(928,uint32 ,error_code,error_code.u32);
  CHECK_UNNAMED_BITS_ZERO(928,error_code.u32,0xfffffc00);
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_FASTBUS_ERROR_NGF::__unpack);

/** END_UNPACKER ******************************************************/


/** BEGIN_MATCHER ******************************************************
 *
 * Event matcher for LAND_FASTBUS_ERROR_NGF.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS_ERROR_NGF)
// No __match function for subevents.

/** END_MATCHER *******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for LAND_FASTBUS_ERROR_NGF.
 *
 * Do not edit - automatically generated.
 */

// SUBEVENT(LAND_FASTBUS_ERROR_NGF)
template<typename __data_dest_t>
void PACKER_LAND_FASTBUS_ERROR_NGF::__packer(__data_dest_t &__buffer)
{
  // UINT32 magic
  // {
    //  0_31: 0x10000000;
  // }
  // UINT32 error_code
  // {
    //     0: error;
    //     1: uninitialized;
    //     2: ss1;
    //     3: wc;
    //     4: mid;
    //     5: fifo_empty;
    //     6: fifo_not_empty;
    //     7: not_finished;
    //     8: bad_end_addr;
    //     9: word_lost;
  // }
}
FORCE_IMPL_DATA_SRC_FCN(void,LAND_FASTBUS_ERROR_NGF::__packer);

/** END_PACKER ********************************************************/

//
// Generating code for EVENT
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for EVENT.
 *
 * Do not edit - automatically generated.
 */

// EVENT
class unpack_event : public unpack_event_base
{
public:
  // camac = LAND_CAMAC_CONVERTER(type=34,subtype=0xc80);
  // camac = LAND_CAMAC_CONVERTER(type=0x26ce,subtype=0xc80);
  // camac_tcal_info = LAND_CAMAC_TCAL_INFO(type=0x26ce,subtype=0xc7f);
  // camac_start_stop_stamp = LAND_CAMAC_START_STOP_STAMP(type=35,subtype=0xc1c);
  // camac_scalers = LAND_CAMAC_SCALER(type=34,subtype=0xc1c);
  // camac_scalers = LAND_CAMAC_SCALER(type=0x26ce,subtype=0xc1c);
  // fastbus_error = LAND_FASTBUS_ERROR(type=31,subtype=0xc1c);
  // fastbus1 = LAND_FASTBUS1(type=32,subtype=0xc3a,subcrate=1);
  // fastbus2 = LAND_FASTBUS2(type=32,subtype=0xc3a,subcrate=2);
  // d1 = DUMMY_TDC(type=34,subtype=0xdac,control=9);
  // d2 = DUMMY_TDC(type=0x26ce,subtype=0xdac,control=9);
SINGLE(LAND_CAMAC_CONVERTER,camac);
SINGLE(LAND_CAMAC_TCAL_INFO,camac_tcal_info);
SINGLE(LAND_CAMAC_START_STOP_STAMP,camac_start_stop_stamp);
SINGLE(LAND_CAMAC_SCALER,camac_scalers);
SINGLE(LAND_FASTBUS_ERROR,fastbus_error);
SINGLE(LAND_FASTBUS1,fastbus1);
SINGLE(LAND_FASTBUS2,fastbus2);
SINGLE(DUMMY_TDC,d1);
SINGLE(DUMMY_TDC,d2);
public:
#ifndef __PSDC__
  bitsone<11> __visited;
  void __clear_visited() { __visited.clear(); }
  bool ignore_unknown_subevent() { return false; }
#endif//!__PSDC__

public:
#ifndef __PSDC__
template<typename __data_src_t>
  int __unpack_subevent(subevent_header *__header,__data_src_t &__buffer);
  int __revoke_subevent(subevent_header *__header);
  // void __clean_event();

  STRUCT_FCNS_DECL(unpack_event);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for EVENT.
 *
 * Do not edit - automatically generated.
 */

// EVENT
template<typename __data_src_t>
int unpack_event::__unpack_subevent(subevent_header *__header,__data_src_t &__buffer)
  // camac = LAND_CAMAC_CONVERTER(type=34,subtype=0xc80);
  // camac = LAND_CAMAC_CONVERTER(type=0x26ce,subtype=0xc80);
  // camac_tcal_info = LAND_CAMAC_TCAL_INFO(type=0x26ce,subtype=0xc7f);
  // camac_start_stop_stamp = LAND_CAMAC_START_STOP_STAMP(type=35,subtype=0xc1c);
  // camac_scalers = LAND_CAMAC_SCALER(type=34,subtype=0xc1c);
  // camac_scalers = LAND_CAMAC_SCALER(type=0x26ce,subtype=0xc1c);
  // fastbus_error = LAND_FASTBUS_ERROR(type=31,subtype=0xc1c);
  // fastbus1 = LAND_FASTBUS1(type=32,subtype=0xc3a,subcrate=1);
  // fastbus2 = LAND_FASTBUS2(type=32,subtype=0xc3a,subcrate=2);
  // d1 = DUMMY_TDC(type=34,subtype=0xdac,control=9);
  // d2 = DUMMY_TDC(type=0x26ce,subtype=0xdac,control=9);
{
  int __match_no = 0;
  MATCH_SUBEVENT_DECL(1002,__match_no,1,((VES10_1_type==34)&&(VES10_1_subtype==0xc80)),camac);
  MATCH_SUBEVENT_DECL(1003,__match_no,2,((VES10_1_type==0x26ce)&&(VES10_1_subtype==0xc80)),camac);
  MATCH_SUBEVENT_DECL(1005,__match_no,3,((VES10_1_type==0x26ce)&&(VES10_1_subtype==0xc7f)),camac_tcal_info);
  MATCH_SUBEVENT_DECL(1007,__match_no,4,((VES10_1_type==35)&&(VES10_1_subtype==0xc1c)),camac_start_stop_stamp);
  MATCH_SUBEVENT_DECL(1009,__match_no,5,((VES10_1_type==34)&&(VES10_1_subtype==0xc1c)),camac_scalers);
  MATCH_SUBEVENT_DECL(1010,__match_no,6,((VES10_1_type==0x26ce)&&(VES10_1_subtype==0xc1c)),camac_scalers);
  MATCH_SUBEVENT_DECL(1012,__match_no,7,((VES10_1_type==31)&&(VES10_1_subtype==0xc1c)),fastbus_error);
  MATCH_SUBEVENT_DECL(1014,__match_no,8,((VES10_1_type==32)&&(VES10_1_subtype==0xc3a)&&(VES10_1_subcrate==1)),fastbus1);
  MATCH_SUBEVENT_DECL(1015,__match_no,9,((VES10_1_type==32)&&(VES10_1_subtype==0xc3a)&&(VES10_1_subcrate==2)),fastbus2);
  MATCH_SUBEVENT_DECL(1017,__match_no,10,((VES10_1_type==34)&&(VES10_1_subtype==0xdac)&&(VES10_1_control==9)),d1);
  MATCH_SUBEVENT_DECL(1018,__match_no,11,((VES10_1_type==0x26ce)&&(VES10_1_subtype==0xdac)&&(VES10_1_control==9)),d2);
  if (!__match_no) return 0;
  switch (__match_no)
  {
    case 1:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1002,LAND_CAMAC_CONVERTER,camac,0);
      UNPACK_SUBEVENT_DECL(1002,0,LAND_CAMAC_CONVERTER,camac);
      break;
    case 2:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1003,LAND_CAMAC_CONVERTER,camac,1);
      UNPACK_SUBEVENT_DECL(1003,0,LAND_CAMAC_CONVERTER,camac);
      break;
    case 3:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1005,LAND_CAMAC_TCAL_INFO,camac_tcal_info,2);
      UNPACK_SUBEVENT_DECL(1005,0,LAND_CAMAC_TCAL_INFO,camac_tcal_info);
      break;
    case 4:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1007,LAND_CAMAC_START_STOP_STAMP,camac_start_stop_stamp,3);
      UNPACK_SUBEVENT_DECL(1007,0,LAND_CAMAC_START_STOP_STAMP,camac_start_stop_stamp);
      break;
    case 5:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1009,LAND_CAMAC_SCALER,camac_scalers,4);
      UNPACK_SUBEVENT_DECL(1009,0,LAND_CAMAC_SCALER,camac_scalers);
      break;
    case 6:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1010,LAND_CAMAC_SCALER,camac_scalers,5);
      UNPACK_SUBEVENT_DECL(1010,0,LAND_CAMAC_SCALER,camac_scalers);
      break;
    case 7:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1012,LAND_FASTBUS_ERROR,fastbus_error,6);
      UNPACK_SUBEVENT_DECL(1012,0,LAND_FASTBUS_ERROR,fastbus_error);
      break;
    case 8:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1014,LAND_FASTBUS1,fastbus1,7);
      UNPACK_SUBEVENT_DECL(1014,0,LAND_FASTBUS1,fastbus1);
      break;
    case 9:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1015,LAND_FASTBUS2,fastbus2,8);
      UNPACK_SUBEVENT_DECL(1015,0,LAND_FASTBUS2,fastbus2);
      break;
    case 10:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1017,DUMMY_TDC,d1,9);
      UNPACK_SUBEVENT_DECL(1017,0,DUMMY_TDC,d1);
      break;
    case 11:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1018,DUMMY_TDC,d2,10);
      UNPACK_SUBEVENT_DECL(1018,0,DUMMY_TDC,d2);
      break;
  }
  return 0;
}
FORCE_IMPL_DATA_SRC_FCN_HDR(int,unpack_event::__unpack_subevent);

/** END_UNPACKER ******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for EVENT.
 *
 * Do not edit - automatically generated.
 */

// EVENT
  // camac = LAND_CAMAC_CONVERTER(type=34,subtype=0xc80);
  // camac = LAND_CAMAC_CONVERTER(type=0x26ce,subtype=0xc80);
  // camac_tcal_info = LAND_CAMAC_TCAL_INFO(type=0x26ce,subtype=0xc7f);
  // camac_start_stop_stamp = LAND_CAMAC_START_STOP_STAMP(type=35,subtype=0xc1c);
  // camac_scalers = LAND_CAMAC_SCALER(type=34,subtype=0xc1c);
  // camac_scalers = LAND_CAMAC_SCALER(type=0x26ce,subtype=0xc1c);
  // fastbus_error = LAND_FASTBUS_ERROR(type=31,subtype=0xc1c);
  // fastbus1 = LAND_FASTBUS1(type=32,subtype=0xc3a,subcrate=1);
  // fastbus2 = LAND_FASTBUS2(type=32,subtype=0xc3a,subcrate=2);
  // d1 = DUMMY_TDC(type=34,subtype=0xdac,control=9);
  // d2 = DUMMY_TDC(type=0x26ce,subtype=0xdac,control=9);
{
}

/** END_PACKER ********************************************************/


/** BEGIN_REVOKE *******************************************************
 *
 * Event revoker for EVENT.
 *
 * Do not edit - automatically generated.
 */

// EVENT
int unpack_event::__revoke_subevent(subevent_header *__header)
  // camac = LAND_CAMAC_CONVERTER(type=34,subtype=0xc80);
  // camac = LAND_CAMAC_CONVERTER(type=0x26ce,subtype=0xc80);
  // camac_tcal_info = LAND_CAMAC_TCAL_INFO(type=0x26ce,subtype=0xc7f);
  // camac_start_stop_stamp = LAND_CAMAC_START_STOP_STAMP(type=35,subtype=0xc1c);
  // camac_scalers = LAND_CAMAC_SCALER(type=34,subtype=0xc1c);
  // camac_scalers = LAND_CAMAC_SCALER(type=0x26ce,subtype=0xc1c);
  // fastbus_error = LAND_FASTBUS_ERROR(type=31,subtype=0xc1c);
  // fastbus1 = LAND_FASTBUS1(type=32,subtype=0xc3a,subcrate=1);
  // fastbus2 = LAND_FASTBUS2(type=32,subtype=0xc3a,subcrate=2);
  // d1 = DUMMY_TDC(type=34,subtype=0xdac,control=9);
  // d2 = DUMMY_TDC(type=0x26ce,subtype=0xdac,control=9);
{
  int __match_no = 0;
  MATCH_SUBEVENT_DECL(1002,__match_no,1,((VES10_1_type==34)&&(VES10_1_subtype==0xc80)),camac);
  MATCH_SUBEVENT_DECL(1003,__match_no,2,((VES10_1_type==0x26ce)&&(VES10_1_subtype==0xc80)),camac);
  MATCH_SUBEVENT_DECL(1005,__match_no,3,((VES10_1_type==0x26ce)&&(VES10_1_subtype==0xc7f)),camac_tcal_info);
  MATCH_SUBEVENT_DECL(1007,__match_no,4,((VES10_1_type==35)&&(VES10_1_subtype==0xc1c)),camac_start_stop_stamp);
  MATCH_SUBEVENT_DECL(1009,__match_no,5,((VES10_1_type==34)&&(VES10_1_subtype==0xc1c)),camac_scalers);
  MATCH_SUBEVENT_DECL(1010,__match_no,6,((VES10_1_type==0x26ce)&&(VES10_1_subtype==0xc1c)),camac_scalers);
  MATCH_SUBEVENT_DECL(1012,__match_no,7,((VES10_1_type==31)&&(VES10_1_subtype==0xc1c)),fastbus_error);
  MATCH_SUBEVENT_DECL(1014,__match_no,8,((VES10_1_type==32)&&(VES10_1_subtype==0xc3a)&&(VES10_1_subcrate==1)),fastbus1);
  MATCH_SUBEVENT_DECL(1015,__match_no,9,((VES10_1_type==32)&&(VES10_1_subtype==0xc3a)&&(VES10_1_subcrate==2)),fastbus2);
  MATCH_SUBEVENT_DECL(1017,__match_no,10,((VES10_1_type==34)&&(VES10_1_subtype==0xdac)&&(VES10_1_control==9)),d1);
  MATCH_SUBEVENT_DECL(1018,__match_no,11,((VES10_1_type==0x26ce)&&(VES10_1_subtype==0xdac)&&(VES10_1_control==9)),d2);
  if (!__match_no) return 0;
  switch (__match_no)
  {
    case 1:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1002,LAND_CAMAC_CONVERTER,camac,0);
      REVOKE_SUBEVENT_DECL(1002,0,LAND_CAMAC_CONVERTER,camac);
      break;
    case 2:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1003,LAND_CAMAC_CONVERTER,camac,1);
      REVOKE_SUBEVENT_DECL(1003,0,LAND_CAMAC_CONVERTER,camac);
      break;
    case 3:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1005,LAND_CAMAC_TCAL_INFO,camac_tcal_info,2);
      REVOKE_SUBEVENT_DECL(1005,0,LAND_CAMAC_TCAL_INFO,camac_tcal_info);
      break;
    case 4:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1007,LAND_CAMAC_START_STOP_STAMP,camac_start_stop_stamp,3);
      REVOKE_SUBEVENT_DECL(1007,0,LAND_CAMAC_START_STOP_STAMP,camac_start_stop_stamp);
      break;
    case 5:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1009,LAND_CAMAC_SCALER,camac_scalers,4);
      REVOKE_SUBEVENT_DECL(1009,0,LAND_CAMAC_SCALER,camac_scalers);
      break;
    case 6:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1010,LAND_CAMAC_SCALER,camac_scalers,5);
      REVOKE_SUBEVENT_DECL(1010,0,LAND_CAMAC_SCALER,camac_scalers);
      break;
    case 7:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1012,LAND_FASTBUS_ERROR,fastbus_error,6);
      REVOKE_SUBEVENT_DECL(1012,0,LAND_FASTBUS_ERROR,fastbus_error);
      break;
    case 8:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1014,LAND_FASTBUS1,fastbus1,7);
      REVOKE_SUBEVENT_DECL(1014,0,LAND_FASTBUS1,fastbus1);
      break;
    case 9:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1015,LAND_FASTBUS2,fastbus2,8);
      REVOKE_SUBEVENT_DECL(1015,0,LAND_FASTBUS2,fastbus2);
      break;
    case 10:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1017,DUMMY_TDC,d1,9);
      REVOKE_SUBEVENT_DECL(1017,0,DUMMY_TDC,d1);
      break;
    case 11:
      UNPACK_SUBEVENT_CHECK_NO_REVISIT(1018,DUMMY_TDC,d2,10);
      REVOKE_SUBEVENT_DECL(1018,0,DUMMY_TDC,d2);
      break;
  }
  return 0;
}

/** END_REVOKE ********************************************************/


/** BEGIN_SUBEVENT_NAMES ***********************************************
 *
 * Mappings of names for [incl|excl] name lookup.
 *
 * Do not edit - automatically generated.
 */

{ "camac", "type=34:subtype=0xc80" },
{ "camac", "type=0x26ce:subtype=0xc80" },
{ "camac_tcal_info", "type=0x26ce:subtype=0xc7f" },
{ "camac_start_stop_stamp", "type=35:subtype=0xc1c" },
{ "camac_scalers", "type=34:subtype=0xc1c" },
{ "camac_scalers", "type=0x26ce:subtype=0xc1c" },
{ "fastbus_error", "type=31:subtype=0xc1c" },
{ "fastbus1", "type=32:subtype=0xc3a:subcrate=1" },
{ "fastbus2", "type=32:subtype=0xc3a:subcrate=2" },
{ "d1", "type=34:subtype=0xdac:control=9" },
{ "d2", "type=0x26ce:subtype=0xdac:control=9" },

/** END_SUBEVENT_NAMES ************************************************/

//
// Generating code for EVENT
//

/** BEGIN_STRUCTURES ***************************************************
 *
 * Event unpacker associated structures for EVENT.
 *
 * Do not edit - automatically generated.
 */

// STICKY_EVENT
class unpack_sticky_event : public unpack_sticky_event_base
{
public:
public:
#ifndef __PSDC__
  void __clear_visited() { }
  bool ignore_unknown_subevent() { return false; }
#endif//!__PSDC__

public:
#ifndef __PSDC__
template<typename __data_src_t>
  int __unpack_subevent(subevent_header *__header,__data_src_t &__buffer);
  int __revoke_subevent(subevent_header *__header);
  // void __clean_event();

  STRUCT_FCNS_DECL(unpack_sticky_event);
#endif//!__PSDC__
};

/** END_STRUCTURES ****************************************************/


/** BEGIN_UNPACKER *****************************************************
 *
 * Event unpacker for EVENT.
 *
 * Do not edit - automatically generated.
 */

// STICKY_EVENT
template<typename __data_src_t>
int unpack_sticky_event::__unpack_subevent(subevent_header *__header,__data_src_t &__buffer)
{
  int __match_no = 0;
  if (!__match_no) return 0;
  switch (__match_no)
  {
  }
  return 0;
}
FORCE_IMPL_DATA_SRC_FCN_HDR(int,unpack_sticky_event::__unpack_subevent);

/** END_UNPACKER ******************************************************/


/** BEGIN_PACKER *******************************************************
 *
 * Event packer for EVENT.
 *
 * Do not edit - automatically generated.
 */

// STICKY_EVENT
{
}

/** END_PACKER ********************************************************/


/** BEGIN_REVOKE *******************************************************
 *
 * Event revoker for EVENT.
 *
 * Do not edit - automatically generated.
 */

// STICKY_EVENT
int unpack_sticky_event::__revoke_subevent(subevent_header *__header)
{
  int __match_no = 0;
  if (!__match_no) return 0;
  switch (__match_no)
  {
  }
  return 0;
}

/** END_REVOKE ********************************************************/


/** BEGIN_SUBEVENT_NAMES ***********************************************
 *
 * Mappings of names for [incl|excl] name lookup.
 *
 * Do not edit - automatically generated.
 */


/** END_SUBEVENT_NAMES ************************************************/


/** BEGIN_UNPACKER_DEFINES *********************************************
 *
 * Control
 *
 * Do not edit - automatically generated.
 */

#define STICKY_EVENT_IS_NONTRIVIAL  0


/** END_UNPACKER_DEFINES **********************************************/

/**********************************************************/
/**********************************************************
 * Generating event structure...
 */


/** BEGIN_EVENT_RAW_STRUCTURE ******************************************
 *
 * Event data structure.
 *
 * Do not edit - automatically generated.
 */

//DUMPY: 1 0
//DUMPY: 144 1
class raw_event_CS
{
public:
  DATA12 E;
  DATA12 T;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_CS);
#endif//!__PSDC__
} ;

//DUMPY: 1 0
//DUMPY: 12 1
class raw_event_CV
{
public:
  DATA12 E;
  DATA12 T;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_CV);
#endif//!__PSDC__
} ;

//DUMPY: 3 0
//DUMPY: 34 1
class raw_event_GFI
{
public:
  DATA12 E;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_GFI);
#endif//!__PSDC__
} ;

//DUMPY: 10 0
//DUMPY: 20 1
//DUMPY: 2 0
class raw_event_N
{
public:
  DATA12 E;
  DATA12 T;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_N);
#endif//!__PSDC__
} ;

//DUMPY: 8 1
//DUMPY: 2 0
class raw_event_NTF
{
public:
  DATA12 E;
  DATA12 T;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_NTF);
#endif//!__PSDC__
} ;

//DUMPY: 1 0
//DUMPY: 4 0
class raw_event_POS
{
public:
  DATA12 E;
  DATA12 T;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_POS);
#endif//!__PSDC__
} ;

//DUMPY: 3 0
//DUMPY: 5 0
class raw_event_PSP
{
public:
  DATA12 E;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_PSP);
#endif//!__PSDC__
} ;

//DUMPY: 1 0
//DUMPY: 4 0
class raw_event_ROL
{
public:
  DATA12 E;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_ROL);
#endif//!__PSDC__
} ;

//DUMPY: 3 0
//DUMPY: 1 0
class raw_event_PIX
{
public:
  DATA12 E;
  DATA12 T;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_PIX);
#endif//!__PSDC__
} ;

//DUMPY: 32 1
//DUMPY: 2 0
class raw_event_TFW
{
public:
  DATA12 E;
  DATA12 T;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_TFW);
#endif//!__PSDC__
} ;

//DUMPY: 1 0
//DUMPY: 20 1
//DUMPY: 2 0
class raw_event_V
{
public:
  DATA12 E;
  DATA12 T;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_V);
#endif//!__PSDC__
} ;

//DUMPY: 4 0
//DUMPY: 5 0
class raw_event_ZST
{
public:
  DATA12 T;

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event_ZST);
#endif//!__PSDC__
} ;

class raw_event : public raw_event_base
{
public:
//DUMPY: 1 0
//DUMPY: 144 1
  raw_array_zero_suppress<raw_event_CS,raw_event_CS,144>
  /* {
  public:
    DATA12 E;
    DATA12 T;
  } */ CS[1];
//DUMPY: 1 0
//DUMPY: 12 1
  raw_array_zero_suppress<raw_event_CV,raw_event_CV,12>
  /* {
  public:
    DATA12 E;
    DATA12 T;
  } */ CV[1];
//DUMPY: 3 0
//DUMPY: 34 1
  raw_array_zero_suppress<raw_event_GFI,raw_event_GFI,34>
  /* {
  public:
    DATA12 E;
  } */ GFI[3];
//DUMPY: 10 0
//DUMPY: 20 1
//DUMPY: 2 0
  raw_array_zero_suppress_1<raw_event_N,raw_event_N[2],20,2>
  /* {
  public:
    DATA12 E;
    DATA12 T;
  } */ N[10];
//DUMPY: 8 1
//DUMPY: 2 0
  raw_array_zero_suppress_1<raw_event_NTF,raw_event_NTF[2],8,2>
  /* {
  public:
    DATA12 E;
    DATA12 T;
  } */ NTF;
//DUMPY: 1 0
//DUMPY: 4 0
  raw_event_POS
  /* {
  public:
    DATA12 E;
    DATA12 T;
  } */ POS[1][4];
//DUMPY: 3 0
//DUMPY: 5 0
  raw_event_PSP
  /* {
  public:
    DATA12 E;
  } */ PSP[3][5];
//DUMPY: 1 0
//DUMPY: 4 0
  raw_event_ROL
  /* {
  public:
    DATA12 E;
  } */ ROL[1][4];
//DUMPY: 3 0
//DUMPY: 1 0
  raw_event_PIX
  /* {
  public:
    DATA12 E;
    DATA12 T;
  } */ PIX[3][1];
//DUMPY: 32 1
//DUMPY: 2 0
  raw_array_zero_suppress_1<raw_event_TFW,raw_event_TFW[2],32,2>
  /* {
  public:
    DATA12 E;
    DATA12 T;
  } */ TFW;
//DUMPY: 1 0
//DUMPY: 20 1
//DUMPY: 2 0
  raw_array_zero_suppress_1<raw_event_V,raw_event_V[2],20,2>
  /* {
  public:
    DATA12 E;
    DATA12 T;
  } */ V[1];
//DUMPY: 4 0
//DUMPY: 5 0
  raw_event_ZST
  /* {
  public:
    DATA12 T;
  } */ ZST[4][5];

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_event);
#endif//!__PSDC__
} ;

/** END_EVENT_RAW_STRUCTURE *******************************************/


/** BEGIN_EVENT_CAL_STRUCTURE ******************************************
 *
 * Event data structure.
 *
 * Do not edit - automatically generated.
 */

class cal_event : public cal_event_base
{
public:

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(cal_event);
#endif//!__PSDC__
} ;

/** END_EVENT_CAL_STRUCTURE *******************************************/


/** BEGIN_EVENT_RAW_STRUCTURE ******************************************
 *
 * Event data structure.
 *
 * Do not edit - automatically generated.
 */

class raw_sticky : public raw_sticky_base
{
public:

public:
#ifndef __PSDC__
  STRUCT_FCNS_DECL(raw_sticky);
#endif//!__PSDC__
} ;

/** END_EVENT_RAW_STRUCTURE *******************************************/


/** BEGIN_EVENT_DATA_MAPPING *******************************************
 *
 * Event data mapping.
 *
 * Do not edit - automatically generated.
 */

// The order in this file does not matter.
// This information parsed once and not treated eventwise,
// it is used to initialize a structure.

SIGNAL_MAPPING(DATA12,CS1_001_E,fastbus1.Q47342.data[48],CS[0][0].E);/*,ZERO_SUPPRESS_ITEM(CS[0],0)*/
SIGNAL_MAPPING(DATA12,CS1_001_T,fastbus1.T87024.data[16],CS[0][0].T);/*,ZERO_SUPPRESS_ITEM(CS[0],0)*/
SIGNAL_MAPPING(DATA12,CS1_002_E,fastbus1.Q47342.data[50],CS[0][1].E);/*,ZERO_SUPPRESS_ITEM(CS[0],1)*/
SIGNAL_MAPPING(DATA12,CS1_002_T,fastbus1.T87024.data[18],CS[0][1].T);/*,ZERO_SUPPRESS_ITEM(CS[0],1)*/
SIGNAL_MAPPING(DATA12,CS1_003_E,fastbus1.Q47342.data[52],CS[0][2].E);/*,ZERO_SUPPRESS_ITEM(CS[0],2)*/
SIGNAL_MAPPING(DATA12,CS1_003_T,fastbus1.T87024.data[20],CS[0][2].T);/*,ZERO_SUPPRESS_ITEM(CS[0],2)*/
SIGNAL_MAPPING(DATA12,CS1_004_E,fastbus1.Q11111.data[65],CS[0][3].E);/*,ZERO_SUPPRESS_ITEM(CS[0],3)*/
SIGNAL_MAPPING(DATA12,CS1_004_T,fastbus1.T81800.data[41],CS[0][3].T);/*,ZERO_SUPPRESS_ITEM(CS[0],3)*/
SIGNAL_MAPPING(DATA12,CS1_005_E,fastbus1.Q11111.data[67],CS[0][4].E);/*,ZERO_SUPPRESS_ITEM(CS[0],4)*/
SIGNAL_MAPPING(DATA12,CS1_005_T,fastbus1.T81800.data[43],CS[0][4].T);/*,ZERO_SUPPRESS_ITEM(CS[0],4)*/
SIGNAL_MAPPING(DATA12,CS1_006_E,fastbus1.Q11111.data[69],CS[0][5].E);/*,ZERO_SUPPRESS_ITEM(CS[0],5)*/
SIGNAL_MAPPING(DATA12,CS1_006_T,fastbus1.T81800.data[45],CS[0][5].T);/*,ZERO_SUPPRESS_ITEM(CS[0],5)*/
SIGNAL_MAPPING(DATA12,CS1_007_E,fastbus1.Q11111.data[71],CS[0][6].E);/*,ZERO_SUPPRESS_ITEM(CS[0],6)*/
SIGNAL_MAPPING(DATA12,CS1_007_T,fastbus1.T81800.data[47],CS[0][6].T);/*,ZERO_SUPPRESS_ITEM(CS[0],6)*/
SIGNAL_MAPPING(DATA12,CS1_008_E,fastbus1.Q11111.data[73],CS[0][7].E);/*,ZERO_SUPPRESS_ITEM(CS[0],7)*/
SIGNAL_MAPPING(DATA12,CS1_008_T,fastbus1.T87024.data[41],CS[0][7].T);/*,ZERO_SUPPRESS_ITEM(CS[0],7)*/
SIGNAL_MAPPING(DATA12,CS1_009_E,fastbus1.Q11111.data[75],CS[0][8].E);/*,ZERO_SUPPRESS_ITEM(CS[0],8)*/
SIGNAL_MAPPING(DATA12,CS1_009_T,fastbus1.T87024.data[43],CS[0][8].T);/*,ZERO_SUPPRESS_ITEM(CS[0],8)*/
SIGNAL_MAPPING(DATA12,CS1_010_E,fastbus1.Q47342.data[54],CS[0][9].E);/*,ZERO_SUPPRESS_ITEM(CS[0],9)*/
SIGNAL_MAPPING(DATA12,CS1_010_T,fastbus1.T87024.data[22],CS[0][9].T);/*,ZERO_SUPPRESS_ITEM(CS[0],9)*/
SIGNAL_MAPPING(DATA12,CS1_011_E,fastbus1.Q47342.data[56],CS[0][10].E);/*,ZERO_SUPPRESS_ITEM(CS[0],10)*/
SIGNAL_MAPPING(DATA12,CS1_011_T,fastbus1.T81800.data[16],CS[0][10].T);/*,ZERO_SUPPRESS_ITEM(CS[0],10)*/
SIGNAL_MAPPING(DATA12,CS1_012_E,fastbus1.Q47342.data[58],CS[0][11].E);/*,ZERO_SUPPRESS_ITEM(CS[0],11)*/
SIGNAL_MAPPING(DATA12,CS1_012_T,fastbus1.T81800.data[18],CS[0][11].T);/*,ZERO_SUPPRESS_ITEM(CS[0],11)*/
SIGNAL_MAPPING(DATA12,CS1_013_E,fastbus1.Q47342.data[60],CS[0][12].E);/*,ZERO_SUPPRESS_ITEM(CS[0],12)*/
SIGNAL_MAPPING(DATA12,CS1_013_T,fastbus1.T81800.data[20],CS[0][12].T);/*,ZERO_SUPPRESS_ITEM(CS[0],12)*/
SIGNAL_MAPPING(DATA12,CS1_014_E,fastbus1.Q47342.data[62],CS[0][13].E);/*,ZERO_SUPPRESS_ITEM(CS[0],13)*/
SIGNAL_MAPPING(DATA12,CS1_014_T,fastbus1.T81800.data[22],CS[0][13].T);/*,ZERO_SUPPRESS_ITEM(CS[0],13)*/
SIGNAL_MAPPING(DATA12,CS1_015_E,fastbus1.Q47342.data[49],CS[0][14].E);/*,ZERO_SUPPRESS_ITEM(CS[0],14)*/
SIGNAL_MAPPING(DATA12,CS1_015_T,fastbus1.T87024.data[17],CS[0][14].T);/*,ZERO_SUPPRESS_ITEM(CS[0],14)*/
SIGNAL_MAPPING(DATA12,CS1_016_E,fastbus1.Q11111.data[77],CS[0][15].E);/*,ZERO_SUPPRESS_ITEM(CS[0],15)*/
SIGNAL_MAPPING(DATA12,CS1_016_T,fastbus1.T87024.data[45],CS[0][15].T);/*,ZERO_SUPPRESS_ITEM(CS[0],15)*/
SIGNAL_MAPPING(DATA12,CS1_017_E,fastbus1.Q11111.data[79],CS[0][16].E);/*,ZERO_SUPPRESS_ITEM(CS[0],16)*/
SIGNAL_MAPPING(DATA12,CS1_017_T,fastbus1.T87024.data[47],CS[0][16].T);/*,ZERO_SUPPRESS_ITEM(CS[0],16)*/
SIGNAL_MAPPING(DATA12,CS1_018_E,fastbus1.Q11111.data[48],CS[0][17].E);/*,ZERO_SUPPRESS_ITEM(CS[0],17)*/
SIGNAL_MAPPING(DATA12,CS1_018_T,fastbus1.T87024.data[24],CS[0][17].T);/*,ZERO_SUPPRESS_ITEM(CS[0],17)*/
SIGNAL_MAPPING(DATA12,CS1_019_E,fastbus1.Q11111.data[50],CS[0][18].E);/*,ZERO_SUPPRESS_ITEM(CS[0],18)*/
SIGNAL_MAPPING(DATA12,CS1_019_T,fastbus1.T87024.data[26],CS[0][18].T);/*,ZERO_SUPPRESS_ITEM(CS[0],18)*/
SIGNAL_MAPPING(DATA12,CS1_020_E,fastbus1.Q11111.data[52],CS[0][19].E);/*,ZERO_SUPPRESS_ITEM(CS[0],19)*/
SIGNAL_MAPPING(DATA12,CS1_020_T,fastbus1.T87024.data[28],CS[0][19].T);/*,ZERO_SUPPRESS_ITEM(CS[0],19)*/
SIGNAL_MAPPING(DATA12,CS1_021_E,fastbus1.Q11111.data[54],CS[0][20].E);/*,ZERO_SUPPRESS_ITEM(CS[0],20)*/
SIGNAL_MAPPING(DATA12,CS1_021_T,fastbus1.T87024.data[30],CS[0][20].T);/*,ZERO_SUPPRESS_ITEM(CS[0],20)*/
SIGNAL_MAPPING(DATA12,CS1_022_E,fastbus1.Q47342.data[51],CS[0][21].E);/*,ZERO_SUPPRESS_ITEM(CS[0],21)*/
SIGNAL_MAPPING(DATA12,CS1_022_T,fastbus1.T87024.data[19],CS[0][21].T);/*,ZERO_SUPPRESS_ITEM(CS[0],21)*/
SIGNAL_MAPPING(DATA12,CS1_023_E,fastbus1.Q47342.data[53],CS[0][22].E);/*,ZERO_SUPPRESS_ITEM(CS[0],22)*/
SIGNAL_MAPPING(DATA12,CS1_023_T,fastbus1.T87024.data[21],CS[0][22].T);/*,ZERO_SUPPRESS_ITEM(CS[0],22)*/
SIGNAL_MAPPING(DATA12,CS1_024_E,fastbus1.Q47342.data[55],CS[0][23].E);/*,ZERO_SUPPRESS_ITEM(CS[0],23)*/
SIGNAL_MAPPING(DATA12,CS1_024_T,fastbus1.T87024.data[23],CS[0][23].T);/*,ZERO_SUPPRESS_ITEM(CS[0],23)*/
SIGNAL_MAPPING(DATA12,CS1_025_E,fastbus1.Q47342.data[57],CS[0][24].E);/*,ZERO_SUPPRESS_ITEM(CS[0],24)*/
SIGNAL_MAPPING(DATA12,CS1_025_T,fastbus1.T81800.data[17],CS[0][24].T);/*,ZERO_SUPPRESS_ITEM(CS[0],24)*/
SIGNAL_MAPPING(DATA12,CS1_026_E,fastbus1.Q47342.data[59],CS[0][25].E);/*,ZERO_SUPPRESS_ITEM(CS[0],25)*/
SIGNAL_MAPPING(DATA12,CS1_026_T,fastbus1.T81800.data[19],CS[0][25].T);/*,ZERO_SUPPRESS_ITEM(CS[0],25)*/
SIGNAL_MAPPING(DATA12,CS1_027_E,fastbus1.Q47342.data[61],CS[0][26].E);/*,ZERO_SUPPRESS_ITEM(CS[0],26)*/
SIGNAL_MAPPING(DATA12,CS1_027_T,fastbus1.T81800.data[21],CS[0][26].T);/*,ZERO_SUPPRESS_ITEM(CS[0],26)*/
SIGNAL_MAPPING(DATA12,CS1_028_E,fastbus1.Q11111.data[56],CS[0][27].E);/*,ZERO_SUPPRESS_ITEM(CS[0],27)*/
SIGNAL_MAPPING(DATA12,CS1_028_T,fastbus1.T87024.data[32],CS[0][27].T);/*,ZERO_SUPPRESS_ITEM(CS[0],27)*/
SIGNAL_MAPPING(DATA12,CS1_029_E,fastbus1.Q11111.data[58],CS[0][28].E);/*,ZERO_SUPPRESS_ITEM(CS[0],28)*/
SIGNAL_MAPPING(DATA12,CS1_029_T,fastbus1.T87024.data[34],CS[0][28].T);/*,ZERO_SUPPRESS_ITEM(CS[0],28)*/
SIGNAL_MAPPING(DATA12,CS1_030_E,fastbus1.Q11111.data[60],CS[0][29].E);/*,ZERO_SUPPRESS_ITEM(CS[0],29)*/
SIGNAL_MAPPING(DATA12,CS1_030_T,fastbus1.T87024.data[36],CS[0][29].T);/*,ZERO_SUPPRESS_ITEM(CS[0],29)*/
SIGNAL_MAPPING(DATA12,CS1_031_E,fastbus1.Q11111.data[62],CS[0][30].E);/*,ZERO_SUPPRESS_ITEM(CS[0],30)*/
SIGNAL_MAPPING(DATA12,CS1_031_T,fastbus1.T87024.data[38],CS[0][30].T);/*,ZERO_SUPPRESS_ITEM(CS[0],30)*/
SIGNAL_MAPPING(DATA12,CS1_032_E,fastbus1.Q11111.data[49],CS[0][31].E);/*,ZERO_SUPPRESS_ITEM(CS[0],31)*/
SIGNAL_MAPPING(DATA12,CS1_032_T,fastbus1.T87024.data[25],CS[0][31].T);/*,ZERO_SUPPRESS_ITEM(CS[0],31)*/
SIGNAL_MAPPING(DATA12,CS1_033_E,fastbus1.Q11111.data[51],CS[0][32].E);/*,ZERO_SUPPRESS_ITEM(CS[0],32)*/
SIGNAL_MAPPING(DATA12,CS1_033_T,fastbus1.T87024.data[27],CS[0][32].T);/*,ZERO_SUPPRESS_ITEM(CS[0],32)*/
SIGNAL_MAPPING(DATA12,CS1_034_E,fastbus1.Q47342.data[63],CS[0][33].E);/*,ZERO_SUPPRESS_ITEM(CS[0],33)*/
SIGNAL_MAPPING(DATA12,CS1_034_T,fastbus1.T81800.data[23],CS[0][33].T);/*,ZERO_SUPPRESS_ITEM(CS[0],33)*/
SIGNAL_MAPPING(DATA12,CS1_035_E,fastbus1.Q47342.data[32],CS[0][34].E);/*,ZERO_SUPPRESS_ITEM(CS[0],34)*/
SIGNAL_MAPPING(DATA12,CS1_035_T,fastbus1.T87044.data[16],CS[0][34].T);/*,ZERO_SUPPRESS_ITEM(CS[0],34)*/
SIGNAL_MAPPING(DATA12,CS1_036_E,fastbus1.Q47342.data[34],CS[0][35].E);/*,ZERO_SUPPRESS_ITEM(CS[0],35)*/
SIGNAL_MAPPING(DATA12,CS1_036_T,fastbus1.T87044.data[18],CS[0][35].T);/*,ZERO_SUPPRESS_ITEM(CS[0],35)*/
SIGNAL_MAPPING(DATA12,CS1_037_E,fastbus1.Q47342.data[36],CS[0][36].E);/*,ZERO_SUPPRESS_ITEM(CS[0],36)*/
SIGNAL_MAPPING(DATA12,CS1_037_T,fastbus1.T87044.data[20],CS[0][36].T);/*,ZERO_SUPPRESS_ITEM(CS[0],36)*/
SIGNAL_MAPPING(DATA12,CS1_038_E,fastbus1.Q47342.data[38],CS[0][37].E);/*,ZERO_SUPPRESS_ITEM(CS[0],37)*/
SIGNAL_MAPPING(DATA12,CS1_038_T,fastbus1.T87044.data[22],CS[0][37].T);/*,ZERO_SUPPRESS_ITEM(CS[0],37)*/
SIGNAL_MAPPING(DATA12,CS1_039_E,fastbus1.Q47342.data[40],CS[0][38].E);/*,ZERO_SUPPRESS_ITEM(CS[0],38)*/
SIGNAL_MAPPING(DATA12,CS1_039_T,fastbus1.T81800.data[0],CS[0][38].T);/*,ZERO_SUPPRESS_ITEM(CS[0],38)*/
SIGNAL_MAPPING(DATA12,CS1_040_E,fastbus1.Q11111.data[53],CS[0][39].E);/*,ZERO_SUPPRESS_ITEM(CS[0],39)*/
SIGNAL_MAPPING(DATA12,CS1_040_T,fastbus1.T87024.data[29],CS[0][39].T);/*,ZERO_SUPPRESS_ITEM(CS[0],39)*/
SIGNAL_MAPPING(DATA12,CS1_041_E,fastbus1.Q11111.data[55],CS[0][40].E);/*,ZERO_SUPPRESS_ITEM(CS[0],40)*/
SIGNAL_MAPPING(DATA12,CS1_041_T,fastbus1.T87024.data[31],CS[0][40].T);/*,ZERO_SUPPRESS_ITEM(CS[0],40)*/
SIGNAL_MAPPING(DATA12,CS1_042_E,fastbus1.Q11111.data[57],CS[0][41].E);/*,ZERO_SUPPRESS_ITEM(CS[0],41)*/
SIGNAL_MAPPING(DATA12,CS1_042_T,fastbus1.T87024.data[33],CS[0][41].T);/*,ZERO_SUPPRESS_ITEM(CS[0],41)*/
SIGNAL_MAPPING(DATA12,CS1_043_E,fastbus1.Q11111.data[59],CS[0][42].E);/*,ZERO_SUPPRESS_ITEM(CS[0],42)*/
SIGNAL_MAPPING(DATA12,CS1_043_T,fastbus1.T87024.data[35],CS[0][42].T);/*,ZERO_SUPPRESS_ITEM(CS[0],42)*/
SIGNAL_MAPPING(DATA12,CS1_044_E,fastbus1.Q11111.data[61],CS[0][43].E);/*,ZERO_SUPPRESS_ITEM(CS[0],43)*/
SIGNAL_MAPPING(DATA12,CS1_044_T,fastbus1.T87024.data[37],CS[0][43].T);/*,ZERO_SUPPRESS_ITEM(CS[0],43)*/
SIGNAL_MAPPING(DATA12,CS1_045_E,fastbus1.Q11111.data[63],CS[0][44].E);/*,ZERO_SUPPRESS_ITEM(CS[0],44)*/
SIGNAL_MAPPING(DATA12,CS1_045_T,fastbus1.T87024.data[39],CS[0][44].T);/*,ZERO_SUPPRESS_ITEM(CS[0],44)*/
SIGNAL_MAPPING(DATA12,CS1_046_E,fastbus1.Q47342.data[42],CS[0][45].E);/*,ZERO_SUPPRESS_ITEM(CS[0],45)*/
SIGNAL_MAPPING(DATA12,CS1_046_T,fastbus1.T81800.data[2],CS[0][45].T);/*,ZERO_SUPPRESS_ITEM(CS[0],45)*/
SIGNAL_MAPPING(DATA12,CS1_047_E,fastbus1.Q47342.data[44],CS[0][46].E);/*,ZERO_SUPPRESS_ITEM(CS[0],46)*/
SIGNAL_MAPPING(DATA12,CS1_047_T,fastbus1.T81800.data[4],CS[0][46].T);/*,ZERO_SUPPRESS_ITEM(CS[0],46)*/
SIGNAL_MAPPING(DATA12,CS1_048_E,fastbus1.Q47342.data[46],CS[0][47].E);/*,ZERO_SUPPRESS_ITEM(CS[0],47)*/
SIGNAL_MAPPING(DATA12,CS1_048_T,fastbus1.T81800.data[6],CS[0][47].T);/*,ZERO_SUPPRESS_ITEM(CS[0],47)*/
SIGNAL_MAPPING(DATA12,CS1_049_E,fastbus1.Q47342.data[33],CS[0][48].E);/*,ZERO_SUPPRESS_ITEM(CS[0],48)*/
SIGNAL_MAPPING(DATA12,CS1_049_T,fastbus1.T87044.data[17],CS[0][48].T);/*,ZERO_SUPPRESS_ITEM(CS[0],48)*/
SIGNAL_MAPPING(DATA12,CS1_050_E,fastbus1.Q47342.data[35],CS[0][49].E);/*,ZERO_SUPPRESS_ITEM(CS[0],49)*/
SIGNAL_MAPPING(DATA12,CS1_050_T,fastbus1.T87044.data[19],CS[0][49].T);/*,ZERO_SUPPRESS_ITEM(CS[0],49)*/
SIGNAL_MAPPING(DATA12,CS1_051_E,fastbus1.Q47342.data[37],CS[0][50].E);/*,ZERO_SUPPRESS_ITEM(CS[0],50)*/
SIGNAL_MAPPING(DATA12,CS1_051_T,fastbus1.T87044.data[21],CS[0][50].T);/*,ZERO_SUPPRESS_ITEM(CS[0],50)*/
SIGNAL_MAPPING(DATA12,CS1_052_E,fastbus1.Q11111.data[32],CS[0][51].E);/*,ZERO_SUPPRESS_ITEM(CS[0],51)*/
SIGNAL_MAPPING(DATA12,CS1_052_T,fastbus1.T87044.data[0],CS[0][51].T);/*,ZERO_SUPPRESS_ITEM(CS[0],51)*/
SIGNAL_MAPPING(DATA12,CS1_053_E,fastbus1.Q11111.data[34],CS[0][52].E);/*,ZERO_SUPPRESS_ITEM(CS[0],52)*/
SIGNAL_MAPPING(DATA12,CS1_053_T,fastbus1.T87044.data[2],CS[0][52].T);/*,ZERO_SUPPRESS_ITEM(CS[0],52)*/
SIGNAL_MAPPING(DATA12,CS1_054_E,fastbus1.Q11111.data[36],CS[0][53].E);/*,ZERO_SUPPRESS_ITEM(CS[0],53)*/
SIGNAL_MAPPING(DATA12,CS1_054_T,fastbus1.T87044.data[4],CS[0][53].T);/*,ZERO_SUPPRESS_ITEM(CS[0],53)*/
SIGNAL_MAPPING(DATA12,CS1_055_E,fastbus1.Q11111.data[38],CS[0][54].E);/*,ZERO_SUPPRESS_ITEM(CS[0],54)*/
SIGNAL_MAPPING(DATA12,CS1_055_T,fastbus1.T87044.data[6],CS[0][54].T);/*,ZERO_SUPPRESS_ITEM(CS[0],54)*/
SIGNAL_MAPPING(DATA12,CS1_056_E,fastbus1.Q11111.data[40],CS[0][55].E);/*,ZERO_SUPPRESS_ITEM(CS[0],55)*/
SIGNAL_MAPPING(DATA12,CS1_056_T,fastbus1.T87044.data[8],CS[0][55].T);/*,ZERO_SUPPRESS_ITEM(CS[0],55)*/
SIGNAL_MAPPING(DATA12,CS1_057_E,fastbus1.Q11111.data[42],CS[0][56].E);/*,ZERO_SUPPRESS_ITEM(CS[0],56)*/
SIGNAL_MAPPING(DATA12,CS1_057_T,fastbus1.T87044.data[10],CS[0][56].T);/*,ZERO_SUPPRESS_ITEM(CS[0],56)*/
SIGNAL_MAPPING(DATA12,CS1_058_E,fastbus1.Q47342.data[39],CS[0][57].E);/*,ZERO_SUPPRESS_ITEM(CS[0],57)*/
SIGNAL_MAPPING(DATA12,CS1_058_T,fastbus1.T87044.data[23],CS[0][57].T);/*,ZERO_SUPPRESS_ITEM(CS[0],57)*/
SIGNAL_MAPPING(DATA12,CS1_059_E,fastbus1.Q47342.data[41],CS[0][58].E);/*,ZERO_SUPPRESS_ITEM(CS[0],58)*/
SIGNAL_MAPPING(DATA12,CS1_059_T,fastbus1.T81800.data[1],CS[0][58].T);/*,ZERO_SUPPRESS_ITEM(CS[0],58)*/
SIGNAL_MAPPING(DATA12,CS1_060_E,fastbus1.Q47342.data[43],CS[0][59].E);/*,ZERO_SUPPRESS_ITEM(CS[0],59)*/
SIGNAL_MAPPING(DATA12,CS1_060_T,fastbus1.T81800.data[3],CS[0][59].T);/*,ZERO_SUPPRESS_ITEM(CS[0],59)*/
SIGNAL_MAPPING(DATA12,CS1_061_E,fastbus1.Q47342.data[45],CS[0][60].E);/*,ZERO_SUPPRESS_ITEM(CS[0],60)*/
SIGNAL_MAPPING(DATA12,CS1_061_T,fastbus1.T81800.data[5],CS[0][60].T);/*,ZERO_SUPPRESS_ITEM(CS[0],60)*/
SIGNAL_MAPPING(DATA12,CS1_062_E,fastbus1.Q47342.data[47],CS[0][61].E);/*,ZERO_SUPPRESS_ITEM(CS[0],61)*/
SIGNAL_MAPPING(DATA12,CS1_062_T,fastbus1.T81800.data[7],CS[0][61].T);/*,ZERO_SUPPRESS_ITEM(CS[0],61)*/
SIGNAL_MAPPING(DATA12,CS1_063_E,fastbus1.Q47342.data[16],CS[0][62].E);/*,ZERO_SUPPRESS_ITEM(CS[0],62)*/
SIGNAL_MAPPING(DATA12,CS1_063_T,fastbus1.T87044.data[24],CS[0][62].T);/*,ZERO_SUPPRESS_ITEM(CS[0],62)*/
SIGNAL_MAPPING(DATA12,CS1_064_E,fastbus1.Q11111.data[44],CS[0][63].E);/*,ZERO_SUPPRESS_ITEM(CS[0],63)*/
SIGNAL_MAPPING(DATA12,CS1_064_T,fastbus1.T87044.data[12],CS[0][63].T);/*,ZERO_SUPPRESS_ITEM(CS[0],63)*/
SIGNAL_MAPPING(DATA12,CS1_065_E,fastbus1.Q11111.data[46],CS[0][64].E);/*,ZERO_SUPPRESS_ITEM(CS[0],64)*/
SIGNAL_MAPPING(DATA12,CS1_065_T,fastbus1.T87044.data[14],CS[0][64].T);/*,ZERO_SUPPRESS_ITEM(CS[0],64)*/
SIGNAL_MAPPING(DATA12,CS1_066_E,fastbus1.Q11111.data[33],CS[0][65].E);/*,ZERO_SUPPRESS_ITEM(CS[0],65)*/
SIGNAL_MAPPING(DATA12,CS1_066_T,fastbus1.T87044.data[1],CS[0][65].T);/*,ZERO_SUPPRESS_ITEM(CS[0],65)*/
SIGNAL_MAPPING(DATA12,CS1_067_E,fastbus1.Q11111.data[35],CS[0][66].E);/*,ZERO_SUPPRESS_ITEM(CS[0],66)*/
SIGNAL_MAPPING(DATA12,CS1_067_T,fastbus1.T87044.data[3],CS[0][66].T);/*,ZERO_SUPPRESS_ITEM(CS[0],66)*/
SIGNAL_MAPPING(DATA12,CS1_068_E,fastbus1.Q11111.data[37],CS[0][67].E);/*,ZERO_SUPPRESS_ITEM(CS[0],67)*/
SIGNAL_MAPPING(DATA12,CS1_068_T,fastbus1.T87044.data[5],CS[0][67].T);/*,ZERO_SUPPRESS_ITEM(CS[0],67)*/
SIGNAL_MAPPING(DATA12,CS1_069_E,fastbus1.Q11111.data[39],CS[0][68].E);/*,ZERO_SUPPRESS_ITEM(CS[0],68)*/
SIGNAL_MAPPING(DATA12,CS1_069_T,fastbus1.T87044.data[7],CS[0][68].T);/*,ZERO_SUPPRESS_ITEM(CS[0],68)*/
SIGNAL_MAPPING(DATA12,CS1_070_E,fastbus1.Q47342.data[18],CS[0][69].E);/*,ZERO_SUPPRESS_ITEM(CS[0],69)*/
SIGNAL_MAPPING(DATA12,CS1_070_T,fastbus1.T87044.data[26],CS[0][69].T);/*,ZERO_SUPPRESS_ITEM(CS[0],69)*/
SIGNAL_MAPPING(DATA12,CS1_071_E,fastbus1.Q47342.data[20],CS[0][70].E);/*,ZERO_SUPPRESS_ITEM(CS[0],70)*/
SIGNAL_MAPPING(DATA12,CS1_071_T,fastbus1.T87044.data[28],CS[0][70].T);/*,ZERO_SUPPRESS_ITEM(CS[0],70)*/
SIGNAL_MAPPING(DATA12,CS1_072_E,fastbus1.Q47342.data[22],CS[0][71].E);/*,ZERO_SUPPRESS_ITEM(CS[0],71)*/
SIGNAL_MAPPING(DATA12,CS1_072_T,fastbus1.T87044.data[30],CS[0][71].T);/*,ZERO_SUPPRESS_ITEM(CS[0],71)*/
SIGNAL_MAPPING(DATA12,CS1_073_E,fastbus1.Q47342.data[24],CS[0][72].E);/*,ZERO_SUPPRESS_ITEM(CS[0],72)*/
SIGNAL_MAPPING(DATA12,CS1_073_T,fastbus1.T87044.data[40],CS[0][72].T);/*,ZERO_SUPPRESS_ITEM(CS[0],72)*/
SIGNAL_MAPPING(DATA12,CS1_074_E,fastbus1.Q47342.data[26],CS[0][73].E);/*,ZERO_SUPPRESS_ITEM(CS[0],73)*/
SIGNAL_MAPPING(DATA12,CS1_074_T,fastbus1.T87044.data[42],CS[0][73].T);/*,ZERO_SUPPRESS_ITEM(CS[0],73)*/
SIGNAL_MAPPING(DATA12,CS1_075_E,fastbus1.Q47342.data[28],CS[0][74].E);/*,ZERO_SUPPRESS_ITEM(CS[0],74)*/
SIGNAL_MAPPING(DATA12,CS1_075_T,fastbus1.T87044.data[44],CS[0][74].T);/*,ZERO_SUPPRESS_ITEM(CS[0],74)*/
SIGNAL_MAPPING(DATA12,CS1_076_E,fastbus1.Q11111.data[41],CS[0][75].E);/*,ZERO_SUPPRESS_ITEM(CS[0],75)*/
SIGNAL_MAPPING(DATA12,CS1_076_T,fastbus1.T87044.data[9],CS[0][75].T);/*,ZERO_SUPPRESS_ITEM(CS[0],75)*/
SIGNAL_MAPPING(DATA12,CS1_077_E,fastbus1.Q11111.data[43],CS[0][76].E);/*,ZERO_SUPPRESS_ITEM(CS[0],76)*/
SIGNAL_MAPPING(DATA12,CS1_077_T,fastbus1.T87044.data[11],CS[0][76].T);/*,ZERO_SUPPRESS_ITEM(CS[0],76)*/
SIGNAL_MAPPING(DATA12,CS1_078_E,fastbus1.Q11111.data[45],CS[0][77].E);/*,ZERO_SUPPRESS_ITEM(CS[0],77)*/
SIGNAL_MAPPING(DATA12,CS1_078_T,fastbus1.T87044.data[13],CS[0][77].T);/*,ZERO_SUPPRESS_ITEM(CS[0],77)*/
SIGNAL_MAPPING(DATA12,CS1_079_E,fastbus1.Q11111.data[47],CS[0][78].E);/*,ZERO_SUPPRESS_ITEM(CS[0],78)*/
SIGNAL_MAPPING(DATA12,CS1_079_T,fastbus1.T87044.data[15],CS[0][78].T);/*,ZERO_SUPPRESS_ITEM(CS[0],78)*/
SIGNAL_MAPPING(DATA12,CS1_080_E,fastbus1.Q11111.data[16],CS[0][79].E);/*,ZERO_SUPPRESS_ITEM(CS[0],79)*/
SIGNAL_MAPPING(DATA12,CS1_080_T,fastbus1.T87044.data[32],CS[0][79].T);/*,ZERO_SUPPRESS_ITEM(CS[0],79)*/
SIGNAL_MAPPING(DATA12,CS1_081_E,fastbus1.Q11111.data[18],CS[0][80].E);/*,ZERO_SUPPRESS_ITEM(CS[0],80)*/
SIGNAL_MAPPING(DATA12,CS1_081_T,fastbus1.T87044.data[34],CS[0][80].T);/*,ZERO_SUPPRESS_ITEM(CS[0],80)*/
SIGNAL_MAPPING(DATA12,CS1_082_E,fastbus1.Q47342.data[30],CS[0][81].E);/*,ZERO_SUPPRESS_ITEM(CS[0],81)*/
SIGNAL_MAPPING(DATA12,CS1_082_T,fastbus1.T87044.data[46],CS[0][81].T);/*,ZERO_SUPPRESS_ITEM(CS[0],81)*/
SIGNAL_MAPPING(DATA12,CS1_083_E,fastbus1.Q47342.data[17],CS[0][82].E);/*,ZERO_SUPPRESS_ITEM(CS[0],82)*/
SIGNAL_MAPPING(DATA12,CS1_083_T,fastbus1.T87044.data[25],CS[0][82].T);/*,ZERO_SUPPRESS_ITEM(CS[0],82)*/
SIGNAL_MAPPING(DATA12,CS1_084_E,fastbus1.Q47342.data[19],CS[0][83].E);/*,ZERO_SUPPRESS_ITEM(CS[0],83)*/
SIGNAL_MAPPING(DATA12,CS1_084_T,fastbus1.T87044.data[27],CS[0][83].T);/*,ZERO_SUPPRESS_ITEM(CS[0],83)*/
SIGNAL_MAPPING(DATA12,CS1_085_E,fastbus1.Q47342.data[21],CS[0][84].E);/*,ZERO_SUPPRESS_ITEM(CS[0],84)*/
SIGNAL_MAPPING(DATA12,CS1_085_T,fastbus1.T87044.data[29],CS[0][84].T);/*,ZERO_SUPPRESS_ITEM(CS[0],84)*/
SIGNAL_MAPPING(DATA12,CS1_086_E,fastbus1.Q47342.data[23],CS[0][85].E);/*,ZERO_SUPPRESS_ITEM(CS[0],85)*/
SIGNAL_MAPPING(DATA12,CS1_086_T,fastbus1.T87044.data[31],CS[0][85].T);/*,ZERO_SUPPRESS_ITEM(CS[0],85)*/
SIGNAL_MAPPING(DATA12,CS1_087_E,fastbus1.Q47342.data[25],CS[0][86].E);/*,ZERO_SUPPRESS_ITEM(CS[0],86)*/
SIGNAL_MAPPING(DATA12,CS1_087_T,fastbus1.T87044.data[41],CS[0][86].T);/*,ZERO_SUPPRESS_ITEM(CS[0],86)*/
SIGNAL_MAPPING(DATA12,CS1_088_E,fastbus1.Q11111.data[20],CS[0][87].E);/*,ZERO_SUPPRESS_ITEM(CS[0],87)*/
SIGNAL_MAPPING(DATA12,CS1_088_T,fastbus1.T87044.data[36],CS[0][87].T);/*,ZERO_SUPPRESS_ITEM(CS[0],87)*/
SIGNAL_MAPPING(DATA12,CS1_089_E,fastbus1.Q11111.data[22],CS[0][88].E);/*,ZERO_SUPPRESS_ITEM(CS[0],88)*/
SIGNAL_MAPPING(DATA12,CS1_089_T,fastbus1.T87044.data[38],CS[0][88].T);/*,ZERO_SUPPRESS_ITEM(CS[0],88)*/
SIGNAL_MAPPING(DATA12,CS1_090_E,fastbus1.Q11111.data[24],CS[0][89].E);/*,ZERO_SUPPRESS_ITEM(CS[0],89)*/
SIGNAL_MAPPING(DATA12,CS1_090_T,fastbus1.T81800.data[8],CS[0][89].T);/*,ZERO_SUPPRESS_ITEM(CS[0],89)*/
SIGNAL_MAPPING(DATA12,CS1_091_E,fastbus1.Q11111.data[26],CS[0][90].E);/*,ZERO_SUPPRESS_ITEM(CS[0],90)*/
SIGNAL_MAPPING(DATA12,CS1_091_T,fastbus1.T81800.data[10],CS[0][90].T);/*,ZERO_SUPPRESS_ITEM(CS[0],90)*/
SIGNAL_MAPPING(DATA12,CS1_092_E,fastbus1.Q11111.data[28],CS[0][91].E);/*,ZERO_SUPPRESS_ITEM(CS[0],91)*/
SIGNAL_MAPPING(DATA12,CS1_092_T,fastbus1.T81800.data[12],CS[0][91].T);/*,ZERO_SUPPRESS_ITEM(CS[0],91)*/
SIGNAL_MAPPING(DATA12,CS1_093_E,fastbus1.Q11111.data[30],CS[0][92].E);/*,ZERO_SUPPRESS_ITEM(CS[0],92)*/
SIGNAL_MAPPING(DATA12,CS1_093_T,fastbus1.T81800.data[14],CS[0][92].T);/*,ZERO_SUPPRESS_ITEM(CS[0],92)*/
SIGNAL_MAPPING(DATA12,CS1_094_E,fastbus1.Q47342.data[27],CS[0][93].E);/*,ZERO_SUPPRESS_ITEM(CS[0],93)*/
SIGNAL_MAPPING(DATA12,CS1_094_T,fastbus1.T87044.data[43],CS[0][93].T);/*,ZERO_SUPPRESS_ITEM(CS[0],93)*/
SIGNAL_MAPPING(DATA12,CS1_095_E,fastbus1.Q47342.data[29],CS[0][94].E);/*,ZERO_SUPPRESS_ITEM(CS[0],94)*/
SIGNAL_MAPPING(DATA12,CS1_095_T,fastbus1.T87044.data[45],CS[0][94].T);/*,ZERO_SUPPRESS_ITEM(CS[0],94)*/
SIGNAL_MAPPING(DATA12,CS1_096_E,fastbus1.Q47342.data[31],CS[0][95].E);/*,ZERO_SUPPRESS_ITEM(CS[0],95)*/
SIGNAL_MAPPING(DATA12,CS1_096_T,fastbus1.T87044.data[47],CS[0][95].T);/*,ZERO_SUPPRESS_ITEM(CS[0],95)*/
SIGNAL_MAPPING(DATA12,CS1_097_E,fastbus1.Q47342.data[64],CS[0][96].E);/*,ZERO_SUPPRESS_ITEM(CS[0],96)*/
SIGNAL_MAPPING(DATA12,CS1_097_T,fastbus1.T87024.data[0],CS[0][96].T);/*,ZERO_SUPPRESS_ITEM(CS[0],96)*/
SIGNAL_MAPPING(DATA12,CS1_098_E,fastbus1.Q47342.data[66],CS[0][97].E);/*,ZERO_SUPPRESS_ITEM(CS[0],97)*/
SIGNAL_MAPPING(DATA12,CS1_098_T,fastbus1.T87024.data[2],CS[0][97].T);/*,ZERO_SUPPRESS_ITEM(CS[0],97)*/
SIGNAL_MAPPING(DATA12,CS1_099_E,fastbus1.Q47342.data[68],CS[0][98].E);/*,ZERO_SUPPRESS_ITEM(CS[0],98)*/
SIGNAL_MAPPING(DATA12,CS1_099_T,fastbus1.T87024.data[4],CS[0][98].T);/*,ZERO_SUPPRESS_ITEM(CS[0],98)*/
SIGNAL_MAPPING(DATA12,CS1_100_E,fastbus1.Q11111.data[17],CS[0][99].E);/*,ZERO_SUPPRESS_ITEM(CS[0],99)*/
SIGNAL_MAPPING(DATA12,CS1_100_T,fastbus1.T87044.data[33],CS[0][99].T);/*,ZERO_SUPPRESS_ITEM(CS[0],99)*/
SIGNAL_MAPPING(DATA12,CS1_101_E,fastbus1.Q11111.data[19],CS[0][100].E);/*,ZERO_SUPPRESS_ITEM(CS[0],100)*/
SIGNAL_MAPPING(DATA12,CS1_101_T,fastbus1.T87044.data[35],CS[0][100].T);/*,ZERO_SUPPRESS_ITEM(CS[0],100)*/
SIGNAL_MAPPING(DATA12,CS1_102_E,fastbus1.Q11111.data[21],CS[0][101].E);/*,ZERO_SUPPRESS_ITEM(CS[0],101)*/
SIGNAL_MAPPING(DATA12,CS1_102_T,fastbus1.T87044.data[37],CS[0][101].T);/*,ZERO_SUPPRESS_ITEM(CS[0],101)*/
SIGNAL_MAPPING(DATA12,CS1_103_E,fastbus1.Q11111.data[23],CS[0][102].E);/*,ZERO_SUPPRESS_ITEM(CS[0],102)*/
SIGNAL_MAPPING(DATA12,CS1_103_T,fastbus1.T87044.data[39],CS[0][102].T);/*,ZERO_SUPPRESS_ITEM(CS[0],102)*/
SIGNAL_MAPPING(DATA12,CS1_104_E,fastbus1.Q11111.data[25],CS[0][103].E);/*,ZERO_SUPPRESS_ITEM(CS[0],103)*/
SIGNAL_MAPPING(DATA12,CS1_104_T,fastbus1.T81800.data[9],CS[0][103].T);/*,ZERO_SUPPRESS_ITEM(CS[0],103)*/
SIGNAL_MAPPING(DATA12,CS1_105_E,fastbus1.Q11111.data[27],CS[0][104].E);/*,ZERO_SUPPRESS_ITEM(CS[0],104)*/
SIGNAL_MAPPING(DATA12,CS1_105_T,fastbus1.T81800.data[11],CS[0][104].T);/*,ZERO_SUPPRESS_ITEM(CS[0],104)*/
SIGNAL_MAPPING(DATA12,CS1_106_E,fastbus1.Q47342.data[70],CS[0][105].E);/*,ZERO_SUPPRESS_ITEM(CS[0],105)*/
SIGNAL_MAPPING(DATA12,CS1_106_T,fastbus1.T87024.data[6],CS[0][105].T);/*,ZERO_SUPPRESS_ITEM(CS[0],105)*/
SIGNAL_MAPPING(DATA12,CS1_107_E,fastbus1.Q47342.data[72],CS[0][106].E);/*,ZERO_SUPPRESS_ITEM(CS[0],106)*/
SIGNAL_MAPPING(DATA12,CS1_107_T,fastbus1.T87024.data[8],CS[0][106].T);/*,ZERO_SUPPRESS_ITEM(CS[0],106)*/
SIGNAL_MAPPING(DATA12,CS1_108_E,fastbus1.Q47342.data[74],CS[0][107].E);/*,ZERO_SUPPRESS_ITEM(CS[0],107)*/
SIGNAL_MAPPING(DATA12,CS1_108_T,fastbus1.T87024.data[10],CS[0][107].T);/*,ZERO_SUPPRESS_ITEM(CS[0],107)*/
SIGNAL_MAPPING(DATA12,CS1_109_E,fastbus1.Q47342.data[76],CS[0][108].E);/*,ZERO_SUPPRESS_ITEM(CS[0],108)*/
SIGNAL_MAPPING(DATA12,CS1_109_T,fastbus1.T87024.data[12],CS[0][108].T);/*,ZERO_SUPPRESS_ITEM(CS[0],108)*/
SIGNAL_MAPPING(DATA12,CS1_110_E,fastbus1.Q47342.data[78],CS[0][109].E);/*,ZERO_SUPPRESS_ITEM(CS[0],109)*/
SIGNAL_MAPPING(DATA12,CS1_110_T,fastbus1.T87024.data[14],CS[0][109].T);/*,ZERO_SUPPRESS_ITEM(CS[0],109)*/
SIGNAL_MAPPING(DATA12,CS1_111_E,fastbus1.Q47342.data[65],CS[0][110].E);/*,ZERO_SUPPRESS_ITEM(CS[0],110)*/
SIGNAL_MAPPING(DATA12,CS1_111_T,fastbus1.T87024.data[1],CS[0][110].T);/*,ZERO_SUPPRESS_ITEM(CS[0],110)*/
SIGNAL_MAPPING(DATA12,CS1_112_E,fastbus1.Q11111.data[29],CS[0][111].E);/*,ZERO_SUPPRESS_ITEM(CS[0],111)*/
SIGNAL_MAPPING(DATA12,CS1_112_T,fastbus1.T81800.data[13],CS[0][111].T);/*,ZERO_SUPPRESS_ITEM(CS[0],111)*/
SIGNAL_MAPPING(DATA12,CS1_113_E,fastbus1.Q11111.data[31],CS[0][112].E);/*,ZERO_SUPPRESS_ITEM(CS[0],112)*/
SIGNAL_MAPPING(DATA12,CS1_113_T,fastbus1.T81800.data[15],CS[0][112].T);/*,ZERO_SUPPRESS_ITEM(CS[0],112)*/
SIGNAL_MAPPING(DATA12,CS1_114_E,fastbus1.Q11111.data[0],CS[0][113].E);/*,ZERO_SUPPRESS_ITEM(CS[0],113)*/
SIGNAL_MAPPING(DATA12,CS1_114_T,fastbus1.T81800.data[24],CS[0][113].T);/*,ZERO_SUPPRESS_ITEM(CS[0],113)*/
SIGNAL_MAPPING(DATA12,CS1_115_E,fastbus1.Q11111.data[2],CS[0][114].E);/*,ZERO_SUPPRESS_ITEM(CS[0],114)*/
SIGNAL_MAPPING(DATA12,CS1_115_T,fastbus1.T81800.data[26],CS[0][114].T);/*,ZERO_SUPPRESS_ITEM(CS[0],114)*/
SIGNAL_MAPPING(DATA12,CS1_116_E,fastbus1.Q11111.data[4],CS[0][115].E);/*,ZERO_SUPPRESS_ITEM(CS[0],115)*/
SIGNAL_MAPPING(DATA12,CS1_116_T,fastbus1.T81800.data[28],CS[0][115].T);/*,ZERO_SUPPRESS_ITEM(CS[0],115)*/
SIGNAL_MAPPING(DATA12,CS1_117_E,fastbus1.Q11111.data[6],CS[0][116].E);/*,ZERO_SUPPRESS_ITEM(CS[0],116)*/
SIGNAL_MAPPING(DATA12,CS1_117_T,fastbus1.T81800.data[30],CS[0][116].T);/*,ZERO_SUPPRESS_ITEM(CS[0],116)*/
SIGNAL_MAPPING(DATA12,CS1_118_E,fastbus1.Q47342.data[67],CS[0][117].E);/*,ZERO_SUPPRESS_ITEM(CS[0],117)*/
SIGNAL_MAPPING(DATA12,CS1_118_T,fastbus1.T87024.data[3],CS[0][117].T);/*,ZERO_SUPPRESS_ITEM(CS[0],117)*/
SIGNAL_MAPPING(DATA12,CS1_119_E,fastbus1.Q47342.data[69],CS[0][118].E);/*,ZERO_SUPPRESS_ITEM(CS[0],118)*/
SIGNAL_MAPPING(DATA12,CS1_119_T,fastbus1.T87024.data[5],CS[0][118].T);/*,ZERO_SUPPRESS_ITEM(CS[0],118)*/
SIGNAL_MAPPING(DATA12,CS1_120_E,fastbus1.Q47342.data[71],CS[0][119].E);/*,ZERO_SUPPRESS_ITEM(CS[0],119)*/
SIGNAL_MAPPING(DATA12,CS1_120_T,fastbus1.T87024.data[7],CS[0][119].T);/*,ZERO_SUPPRESS_ITEM(CS[0],119)*/
SIGNAL_MAPPING(DATA12,CS1_121_E,fastbus1.Q47342.data[73],CS[0][120].E);/*,ZERO_SUPPRESS_ITEM(CS[0],120)*/
SIGNAL_MAPPING(DATA12,CS1_121_T,fastbus1.T87024.data[9],CS[0][120].T);/*,ZERO_SUPPRESS_ITEM(CS[0],120)*/
SIGNAL_MAPPING(DATA12,CS1_122_E,fastbus1.Q47342.data[75],CS[0][121].E);/*,ZERO_SUPPRESS_ITEM(CS[0],121)*/
SIGNAL_MAPPING(DATA12,CS1_122_T,fastbus1.T87024.data[11],CS[0][121].T);/*,ZERO_SUPPRESS_ITEM(CS[0],121)*/
SIGNAL_MAPPING(DATA12,CS1_123_E,fastbus1.Q47342.data[77],CS[0][122].E);/*,ZERO_SUPPRESS_ITEM(CS[0],122)*/
SIGNAL_MAPPING(DATA12,CS1_123_T,fastbus1.T87024.data[13],CS[0][122].T);/*,ZERO_SUPPRESS_ITEM(CS[0],122)*/
SIGNAL_MAPPING(DATA12,CS1_124_E,fastbus1.Q11111.data[8],CS[0][123].E);/*,ZERO_SUPPRESS_ITEM(CS[0],123)*/
SIGNAL_MAPPING(DATA12,CS1_124_T,fastbus1.T81800.data[32],CS[0][123].T);/*,ZERO_SUPPRESS_ITEM(CS[0],123)*/
SIGNAL_MAPPING(DATA12,CS1_125_E,fastbus1.Q11111.data[10],CS[0][124].E);/*,ZERO_SUPPRESS_ITEM(CS[0],124)*/
SIGNAL_MAPPING(DATA12,CS1_125_T,fastbus1.T81800.data[34],CS[0][124].T);/*,ZERO_SUPPRESS_ITEM(CS[0],124)*/
SIGNAL_MAPPING(DATA12,CS1_126_E,fastbus1.Q11111.data[12],CS[0][125].E);/*,ZERO_SUPPRESS_ITEM(CS[0],125)*/
SIGNAL_MAPPING(DATA12,CS1_126_T,fastbus1.T81800.data[36],CS[0][125].T);/*,ZERO_SUPPRESS_ITEM(CS[0],125)*/
SIGNAL_MAPPING(DATA12,CS1_127_E,fastbus1.Q11111.data[14],CS[0][126].E);/*,ZERO_SUPPRESS_ITEM(CS[0],126)*/
SIGNAL_MAPPING(DATA12,CS1_127_T,fastbus1.T81800.data[38],CS[0][126].T);/*,ZERO_SUPPRESS_ITEM(CS[0],126)*/
SIGNAL_MAPPING(DATA12,CS1_128_E,fastbus1.Q11111.data[1],CS[0][127].E);/*,ZERO_SUPPRESS_ITEM(CS[0],127)*/
SIGNAL_MAPPING(DATA12,CS1_128_T,fastbus1.T81800.data[25],CS[0][127].T);/*,ZERO_SUPPRESS_ITEM(CS[0],127)*/
SIGNAL_MAPPING(DATA12,CS1_129_E,fastbus1.Q11111.data[3],CS[0][128].E);/*,ZERO_SUPPRESS_ITEM(CS[0],128)*/
SIGNAL_MAPPING(DATA12,CS1_129_T,fastbus1.T81800.data[27],CS[0][128].T);/*,ZERO_SUPPRESS_ITEM(CS[0],128)*/
SIGNAL_MAPPING(DATA12,CS1_130_E,fastbus1.Q47342.data[79],CS[0][129].E);/*,ZERO_SUPPRESS_ITEM(CS[0],129)*/
SIGNAL_MAPPING(DATA12,CS1_130_T,fastbus1.T87024.data[15],CS[0][129].T);/*,ZERO_SUPPRESS_ITEM(CS[0],129)*/
SIGNAL_MAPPING(DATA12,CS1_131_E,fastbus1.Q11111.data[64],CS[0][130].E);/*,ZERO_SUPPRESS_ITEM(CS[0],130)*/
SIGNAL_MAPPING(DATA12,CS1_131_T,fastbus1.T81800.data[40],CS[0][130].T);/*,ZERO_SUPPRESS_ITEM(CS[0],130)*/
SIGNAL_MAPPING(DATA12,CS1_132_E,fastbus1.Q11111.data[66],CS[0][131].E);/*,ZERO_SUPPRESS_ITEM(CS[0],131)*/
SIGNAL_MAPPING(DATA12,CS1_132_T,fastbus1.T81800.data[42],CS[0][131].T);/*,ZERO_SUPPRESS_ITEM(CS[0],131)*/
SIGNAL_MAPPING(DATA12,CS1_133_E,fastbus1.Q11111.data[68],CS[0][132].E);/*,ZERO_SUPPRESS_ITEM(CS[0],132)*/
SIGNAL_MAPPING(DATA12,CS1_133_T,fastbus1.T81800.data[44],CS[0][132].T);/*,ZERO_SUPPRESS_ITEM(CS[0],132)*/
SIGNAL_MAPPING(DATA12,CS1_134_E,fastbus1.Q11111.data[70],CS[0][133].E);/*,ZERO_SUPPRESS_ITEM(CS[0],133)*/
SIGNAL_MAPPING(DATA12,CS1_134_T,fastbus1.T81800.data[46],CS[0][133].T);/*,ZERO_SUPPRESS_ITEM(CS[0],133)*/
SIGNAL_MAPPING(DATA12,CS1_135_E,fastbus1.Q11111.data[72],CS[0][134].E);/*,ZERO_SUPPRESS_ITEM(CS[0],134)*/
SIGNAL_MAPPING(DATA12,CS1_135_T,fastbus1.T87024.data[40],CS[0][134].T);/*,ZERO_SUPPRESS_ITEM(CS[0],134)*/
SIGNAL_MAPPING(DATA12,CS1_136_E,fastbus1.Q11111.data[5],CS[0][135].E);/*,ZERO_SUPPRESS_ITEM(CS[0],135)*/
SIGNAL_MAPPING(DATA12,CS1_136_T,fastbus1.T81800.data[29],CS[0][135].T);/*,ZERO_SUPPRESS_ITEM(CS[0],135)*/
SIGNAL_MAPPING(DATA12,CS1_137_E,fastbus1.Q11111.data[7],CS[0][136].E);/*,ZERO_SUPPRESS_ITEM(CS[0],136)*/
SIGNAL_MAPPING(DATA12,CS1_137_T,fastbus1.T81800.data[31],CS[0][136].T);/*,ZERO_SUPPRESS_ITEM(CS[0],136)*/
SIGNAL_MAPPING(DATA12,CS1_138_E,fastbus1.Q11111.data[9],CS[0][137].E);/*,ZERO_SUPPRESS_ITEM(CS[0],137)*/
SIGNAL_MAPPING(DATA12,CS1_138_T,fastbus1.T81800.data[33],CS[0][137].T);/*,ZERO_SUPPRESS_ITEM(CS[0],137)*/
SIGNAL_MAPPING(DATA12,CS1_139_E,fastbus1.Q11111.data[11],CS[0][138].E);/*,ZERO_SUPPRESS_ITEM(CS[0],138)*/
SIGNAL_MAPPING(DATA12,CS1_139_T,fastbus1.T81800.data[35],CS[0][138].T);/*,ZERO_SUPPRESS_ITEM(CS[0],138)*/
SIGNAL_MAPPING(DATA12,CS1_140_E,fastbus1.Q11111.data[13],CS[0][139].E);/*,ZERO_SUPPRESS_ITEM(CS[0],139)*/
SIGNAL_MAPPING(DATA12,CS1_140_T,fastbus1.T81800.data[37],CS[0][139].T);/*,ZERO_SUPPRESS_ITEM(CS[0],139)*/
SIGNAL_MAPPING(DATA12,CS1_141_E,fastbus1.Q11111.data[15],CS[0][140].E);/*,ZERO_SUPPRESS_ITEM(CS[0],140)*/
SIGNAL_MAPPING(DATA12,CS1_141_T,fastbus1.T81800.data[39],CS[0][140].T);/*,ZERO_SUPPRESS_ITEM(CS[0],140)*/
SIGNAL_MAPPING(DATA12,CS1_142_E,fastbus1.Q11111.data[74],CS[0][141].E);/*,ZERO_SUPPRESS_ITEM(CS[0],141)*/
SIGNAL_MAPPING(DATA12,CS1_142_T,fastbus1.T87024.data[42],CS[0][141].T);/*,ZERO_SUPPRESS_ITEM(CS[0],141)*/
SIGNAL_MAPPING(DATA12,CS1_143_E,fastbus1.Q11111.data[76],CS[0][142].E);/*,ZERO_SUPPRESS_ITEM(CS[0],142)*/
SIGNAL_MAPPING(DATA12,CS1_143_T,fastbus1.T87024.data[44],CS[0][142].T);/*,ZERO_SUPPRESS_ITEM(CS[0],142)*/
SIGNAL_MAPPING(DATA12,CS1_144_E,fastbus1.Q11111.data[78],CS[0][143].E);/*,ZERO_SUPPRESS_ITEM(CS[0],143)*/
SIGNAL_MAPPING(DATA12,CS1_144_T,fastbus1.T87024.data[46],CS[0][143].T);/*,ZERO_SUPPRESS_ITEM(CS[0],143)*/
SIGNAL_MAPPING(DATA12,CV1_001_E,fastbus1.Q46848.data[48],CV[0][0].E);/*,ZERO_SUPPRESS_ITEM(CV[0],0)*/
SIGNAL_MAPPING(DATA12,CV1_001_T,fastbus1.T81800.data[48],CV[0][0].T);/*,ZERO_SUPPRESS_ITEM(CV[0],0)*/
SIGNAL_MAPPING(DATA12,CV1_002_E,fastbus1.Q46848.data[50],CV[0][1].E);/*,ZERO_SUPPRESS_ITEM(CV[0],1)*/
SIGNAL_MAPPING(DATA12,CV1_002_T,fastbus1.T81800.data[50],CV[0][1].T);/*,ZERO_SUPPRESS_ITEM(CV[0],1)*/
SIGNAL_MAPPING(DATA12,CV1_003_E,fastbus1.Q46848.data[52],CV[0][2].E);/*,ZERO_SUPPRESS_ITEM(CV[0],2)*/
SIGNAL_MAPPING(DATA12,CV1_003_T,fastbus1.T81800.data[52],CV[0][2].T);/*,ZERO_SUPPRESS_ITEM(CV[0],2)*/
SIGNAL_MAPPING(DATA12,CV1_004_E,fastbus1.Q46848.data[54],CV[0][3].E);/*,ZERO_SUPPRESS_ITEM(CV[0],3)*/
SIGNAL_MAPPING(DATA12,CV1_004_T,fastbus1.T81800.data[54],CV[0][3].T);/*,ZERO_SUPPRESS_ITEM(CV[0],3)*/
SIGNAL_MAPPING(DATA12,CV1_005_E,fastbus1.Q46848.data[56],CV[0][4].E);/*,ZERO_SUPPRESS_ITEM(CV[0],4)*/
SIGNAL_MAPPING(DATA12,CV1_005_T,fastbus1.T81800.data[56],CV[0][4].T);/*,ZERO_SUPPRESS_ITEM(CV[0],4)*/
SIGNAL_MAPPING(DATA12,CV1_006_E,fastbus1.Q46848.data[58],CV[0][5].E);/*,ZERO_SUPPRESS_ITEM(CV[0],5)*/
SIGNAL_MAPPING(DATA12,CV1_006_T,fastbus1.T81800.data[58],CV[0][5].T);/*,ZERO_SUPPRESS_ITEM(CV[0],5)*/
SIGNAL_MAPPING(DATA12,CV1_007_E,fastbus1.Q46848.data[60],CV[0][6].E);/*,ZERO_SUPPRESS_ITEM(CV[0],6)*/
SIGNAL_MAPPING(DATA12,CV1_007_T,fastbus1.T81800.data[60],CV[0][6].T);/*,ZERO_SUPPRESS_ITEM(CV[0],6)*/
SIGNAL_MAPPING(DATA12,CV1_008_E,fastbus1.Q46848.data[62],CV[0][7].E);/*,ZERO_SUPPRESS_ITEM(CV[0],7)*/
SIGNAL_MAPPING(DATA12,CV1_008_T,fastbus1.T81800.data[62],CV[0][7].T);/*,ZERO_SUPPRESS_ITEM(CV[0],7)*/
SIGNAL_MAPPING(DATA12,CV1_009_E,fastbus1.Q46848.data[51],CV[0][8].E);/*,ZERO_SUPPRESS_ITEM(CV[0],8)*/
SIGNAL_MAPPING(DATA12,CV1_009_T,fastbus1.T81800.data[49],CV[0][8].T);/*,ZERO_SUPPRESS_ITEM(CV[0],8)*/
SIGNAL_MAPPING(DATA12,CV1_010_E,fastbus1.Q46848.data[53],CV[0][9].E);/*,ZERO_SUPPRESS_ITEM(CV[0],9)*/
SIGNAL_MAPPING(DATA12,CV1_010_T,fastbus1.T81800.data[53],CV[0][9].T);/*,ZERO_SUPPRESS_ITEM(CV[0],9)*/
SIGNAL_MAPPING(DATA12,CV1_011_E,fastbus1.Q46848.data[55],CV[0][10].E);/*,ZERO_SUPPRESS_ITEM(CV[0],10)*/
SIGNAL_MAPPING(DATA12,CV1_011_T,fastbus1.T81800.data[55],CV[0][10].T);/*,ZERO_SUPPRESS_ITEM(CV[0],10)*/
SIGNAL_MAPPING(DATA12,CV1_012_E,fastbus1.Q46848.data[57],CV[0][11].E);/*,ZERO_SUPPRESS_ITEM(CV[0],11)*/
SIGNAL_MAPPING(DATA12,CV1_012_T,fastbus1.T81800.data[57],CV[0][11].T);/*,ZERO_SUPPRESS_ITEM(CV[0],11)*/
SIGNAL_MAPPING(DATA12,GFI01_01_E,fastbus1.Q46848.data[0],GFI[0][0].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],0)*/
SIGNAL_MAPPING(DATA12,GFI01_02_E,fastbus1.Q46848.data[1],GFI[0][1].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],1)*/
SIGNAL_MAPPING(DATA12,GFI01_03_E,fastbus1.Q46848.data[2],GFI[0][2].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],2)*/
SIGNAL_MAPPING(DATA12,GFI01_04_E,fastbus1.Q46848.data[3],GFI[0][3].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],3)*/
SIGNAL_MAPPING(DATA12,GFI01_05_E,fastbus1.Q46848.data[4],GFI[0][4].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],4)*/
SIGNAL_MAPPING(DATA12,GFI01_06_E,fastbus1.Q46848.data[5],GFI[0][5].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],5)*/
SIGNAL_MAPPING(DATA12,GFI01_07_E,fastbus1.Q46848.data[6],GFI[0][6].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],6)*/
SIGNAL_MAPPING(DATA12,GFI01_08_E,fastbus1.Q46848.data[7],GFI[0][7].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],7)*/
SIGNAL_MAPPING(DATA12,GFI01_09_E,fastbus1.Q46848.data[8],GFI[0][8].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],8)*/
SIGNAL_MAPPING(DATA12,GFI01_10_E,fastbus1.Q46848.data[9],GFI[0][9].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],9)*/
SIGNAL_MAPPING(DATA12,GFI01_11_E,fastbus1.Q46848.data[10],GFI[0][10].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],10)*/
SIGNAL_MAPPING(DATA12,GFI01_12_E,fastbus1.Q46848.data[11],GFI[0][11].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],11)*/
SIGNAL_MAPPING(DATA12,GFI01_13_E,fastbus1.Q46848.data[12],GFI[0][12].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],12)*/
SIGNAL_MAPPING(DATA12,GFI01_14_E,fastbus1.Q46848.data[13],GFI[0][13].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],13)*/
SIGNAL_MAPPING(DATA12,GFI01_15_E,fastbus1.Q46848.data[14],GFI[0][14].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],14)*/
SIGNAL_MAPPING(DATA12,GFI01_16_E,fastbus1.Q46848.data[15],GFI[0][15].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],15)*/
SIGNAL_MAPPING(DATA12,GFI01_17_E,fastbus1.Q46848.data[16],GFI[0][16].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],16)*/
SIGNAL_MAPPING(DATA12,GFI01_18_E,fastbus1.Q46848.data[17],GFI[0][17].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],17)*/
SIGNAL_MAPPING(DATA12,GFI01_19_E,fastbus1.Q46848.data[18],GFI[0][18].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],18)*/
SIGNAL_MAPPING(DATA12,GFI01_20_E,fastbus1.Q46848.data[19],GFI[0][19].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],19)*/
SIGNAL_MAPPING(DATA12,GFI01_21_E,fastbus1.Q46848.data[20],GFI[0][20].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],20)*/
SIGNAL_MAPPING(DATA12,GFI01_22_E,fastbus1.Q46848.data[21],GFI[0][21].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],21)*/
SIGNAL_MAPPING(DATA12,GFI01_23_E,fastbus1.Q46848.data[22],GFI[0][22].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],22)*/
SIGNAL_MAPPING(DATA12,GFI01_24_E,fastbus1.Q46848.data[23],GFI[0][23].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],23)*/
SIGNAL_MAPPING(DATA12,GFI01_25_E,fastbus1.Q46848.data[24],GFI[0][24].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],24)*/
SIGNAL_MAPPING(DATA12,GFI01_26_E,fastbus1.Q46848.data[25],GFI[0][25].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],25)*/
SIGNAL_MAPPING(DATA12,GFI01_27_E,fastbus1.Q46848.data[26],GFI[0][26].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],26)*/
SIGNAL_MAPPING(DATA12,GFI01_28_E,fastbus1.Q46848.data[27],GFI[0][27].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],27)*/
SIGNAL_MAPPING(DATA12,GFI01_29_E,fastbus1.Q46848.data[28],GFI[0][28].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],28)*/
SIGNAL_MAPPING(DATA12,GFI01_30_E,fastbus1.Q46848.data[29],GFI[0][29].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],29)*/
SIGNAL_MAPPING(DATA12,GFI01_31_E,fastbus1.Q46848.data[30],GFI[0][30].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],30)*/
SIGNAL_MAPPING(DATA12,GFI01_32_E,fastbus1.Q46848.data[31],GFI[0][31].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],31)*/
SIGNAL_MAPPING(DATA12,GFI01_33_E,fastbus1.Q46848.data[32],GFI[0][32].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],32)*/
SIGNAL_MAPPING(DATA12,GFI01_34_E,fastbus1.Q46848.data[33],GFI[0][33].E);/*,ZERO_SUPPRESS_ITEM(GFI[0],33)*/
SIGNAL_MAPPING(DATA12,GFI02_01_E,fastbus1.Q47264.data[0],GFI[1][0].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],0)*/
SIGNAL_MAPPING(DATA12,GFI02_02_E,fastbus1.Q47264.data[1],GFI[1][1].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],1)*/
SIGNAL_MAPPING(DATA12,GFI02_03_E,fastbus1.Q47264.data[2],GFI[1][2].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],2)*/
SIGNAL_MAPPING(DATA12,GFI02_04_E,fastbus1.Q47264.data[3],GFI[1][3].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],3)*/
SIGNAL_MAPPING(DATA12,GFI02_05_E,fastbus1.Q47264.data[4],GFI[1][4].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],4)*/
SIGNAL_MAPPING(DATA12,GFI02_06_E,fastbus1.Q47264.data[5],GFI[1][5].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],5)*/
SIGNAL_MAPPING(DATA12,GFI02_07_E,fastbus1.Q47264.data[6],GFI[1][6].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],6)*/
SIGNAL_MAPPING(DATA12,GFI02_08_E,fastbus1.Q47264.data[7],GFI[1][7].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],7)*/
SIGNAL_MAPPING(DATA12,GFI02_09_E,fastbus1.Q47264.data[8],GFI[1][8].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],8)*/
SIGNAL_MAPPING(DATA12,GFI02_10_E,fastbus1.Q47264.data[9],GFI[1][9].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],9)*/
SIGNAL_MAPPING(DATA12,GFI02_11_E,fastbus1.Q47264.data[10],GFI[1][10].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],10)*/
SIGNAL_MAPPING(DATA12,GFI02_12_E,fastbus1.Q47264.data[11],GFI[1][11].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],11)*/
SIGNAL_MAPPING(DATA12,GFI02_13_E,fastbus1.Q47264.data[12],GFI[1][12].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],12)*/
SIGNAL_MAPPING(DATA12,GFI02_14_E,fastbus1.Q47264.data[13],GFI[1][13].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],13)*/
SIGNAL_MAPPING(DATA12,GFI02_15_E,fastbus1.Q47264.data[14],GFI[1][14].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],14)*/
SIGNAL_MAPPING(DATA12,GFI02_16_E,fastbus1.Q47264.data[15],GFI[1][15].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],15)*/
SIGNAL_MAPPING(DATA12,GFI02_17_E,fastbus1.Q47264.data[16],GFI[1][16].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],16)*/
SIGNAL_MAPPING(DATA12,GFI02_18_E,fastbus1.Q47264.data[17],GFI[1][17].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],17)*/
SIGNAL_MAPPING(DATA12,GFI02_19_E,fastbus1.Q47264.data[18],GFI[1][18].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],18)*/
SIGNAL_MAPPING(DATA12,GFI02_20_E,fastbus1.Q47264.data[19],GFI[1][19].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],19)*/
SIGNAL_MAPPING(DATA12,GFI02_21_E,fastbus1.Q47264.data[20],GFI[1][20].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],20)*/
SIGNAL_MAPPING(DATA12,GFI02_22_E,fastbus1.Q47264.data[21],GFI[1][21].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],21)*/
SIGNAL_MAPPING(DATA12,GFI02_23_E,fastbus1.Q47264.data[22],GFI[1][22].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],22)*/
SIGNAL_MAPPING(DATA12,GFI02_24_E,fastbus1.Q47264.data[23],GFI[1][23].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],23)*/
SIGNAL_MAPPING(DATA12,GFI02_25_E,fastbus1.Q47264.data[24],GFI[1][24].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],24)*/
SIGNAL_MAPPING(DATA12,GFI02_26_E,fastbus1.Q47264.data[25],GFI[1][25].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],25)*/
SIGNAL_MAPPING(DATA12,GFI02_27_E,fastbus1.Q47264.data[26],GFI[1][26].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],26)*/
SIGNAL_MAPPING(DATA12,GFI02_28_E,fastbus1.Q47264.data[27],GFI[1][27].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],27)*/
SIGNAL_MAPPING(DATA12,GFI02_29_E,fastbus1.Q47264.data[28],GFI[1][28].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],28)*/
SIGNAL_MAPPING(DATA12,GFI02_30_E,fastbus1.Q47264.data[29],GFI[1][29].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],29)*/
SIGNAL_MAPPING(DATA12,GFI02_31_E,fastbus1.Q47264.data[30],GFI[1][30].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],30)*/
SIGNAL_MAPPING(DATA12,GFI02_32_E,fastbus1.Q47264.data[31],GFI[1][31].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],31)*/
SIGNAL_MAPPING(DATA12,GFI02_33_E,fastbus1.Q47264.data[64],GFI[1][32].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],32)*/
SIGNAL_MAPPING(DATA12,GFI02_34_E,fastbus1.Q47264.data[65],GFI[1][33].E);/*,ZERO_SUPPRESS_ITEM(GFI[1],33)*/
SIGNAL_MAPPING(DATA12,GFI03_01_E,fastbus1.Q47264.data[32],GFI[2][0].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],0)*/
SIGNAL_MAPPING(DATA12,GFI03_02_E,fastbus1.Q47264.data[33],GFI[2][1].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],1)*/
SIGNAL_MAPPING(DATA12,GFI03_03_E,fastbus1.Q47264.data[34],GFI[2][2].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],2)*/
SIGNAL_MAPPING(DATA12,GFI03_04_E,fastbus1.Q47264.data[35],GFI[2][3].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],3)*/
SIGNAL_MAPPING(DATA12,GFI03_05_E,fastbus1.Q47264.data[36],GFI[2][4].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],4)*/
SIGNAL_MAPPING(DATA12,GFI03_06_E,fastbus1.Q47264.data[37],GFI[2][5].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],5)*/
SIGNAL_MAPPING(DATA12,GFI03_07_E,fastbus1.Q47264.data[38],GFI[2][6].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],6)*/
SIGNAL_MAPPING(DATA12,GFI03_08_E,fastbus1.Q47264.data[39],GFI[2][7].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],7)*/
SIGNAL_MAPPING(DATA12,GFI03_09_E,fastbus1.Q47264.data[40],GFI[2][8].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],8)*/
SIGNAL_MAPPING(DATA12,GFI03_10_E,fastbus1.Q47264.data[41],GFI[2][9].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],9)*/
SIGNAL_MAPPING(DATA12,GFI03_11_E,fastbus1.Q47264.data[42],GFI[2][10].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],10)*/
SIGNAL_MAPPING(DATA12,GFI03_12_E,fastbus1.Q47264.data[43],GFI[2][11].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],11)*/
SIGNAL_MAPPING(DATA12,GFI03_13_E,fastbus1.Q47264.data[44],GFI[2][12].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],12)*/
SIGNAL_MAPPING(DATA12,GFI03_14_E,fastbus1.Q47264.data[45],GFI[2][13].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],13)*/
SIGNAL_MAPPING(DATA12,GFI03_15_E,fastbus1.Q47264.data[46],GFI[2][14].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],14)*/
SIGNAL_MAPPING(DATA12,GFI03_16_E,fastbus1.Q47264.data[47],GFI[2][15].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],15)*/
SIGNAL_MAPPING(DATA12,GFI03_17_E,fastbus1.Q47264.data[48],GFI[2][16].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],16)*/
SIGNAL_MAPPING(DATA12,GFI03_18_E,fastbus1.Q47264.data[49],GFI[2][17].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],17)*/
SIGNAL_MAPPING(DATA12,GFI03_19_E,fastbus1.Q47264.data[50],GFI[2][18].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],18)*/
SIGNAL_MAPPING(DATA12,GFI03_20_E,fastbus1.Q47264.data[51],GFI[2][19].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],19)*/
SIGNAL_MAPPING(DATA12,GFI03_21_E,fastbus1.Q47264.data[52],GFI[2][20].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],20)*/
SIGNAL_MAPPING(DATA12,GFI03_22_E,fastbus1.Q47264.data[53],GFI[2][21].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],21)*/
SIGNAL_MAPPING(DATA12,GFI03_23_E,fastbus1.Q47264.data[54],GFI[2][22].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],22)*/
SIGNAL_MAPPING(DATA12,GFI03_24_E,fastbus1.Q47264.data[55],GFI[2][23].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],23)*/
SIGNAL_MAPPING(DATA12,GFI03_25_E,fastbus1.Q47264.data[56],GFI[2][24].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],24)*/
SIGNAL_MAPPING(DATA12,GFI03_26_E,fastbus1.Q47264.data[57],GFI[2][25].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],25)*/
SIGNAL_MAPPING(DATA12,GFI03_27_E,fastbus1.Q47264.data[58],GFI[2][26].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],26)*/
SIGNAL_MAPPING(DATA12,GFI03_28_E,fastbus1.Q47264.data[59],GFI[2][27].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],27)*/
SIGNAL_MAPPING(DATA12,GFI03_29_E,fastbus1.Q47264.data[60],GFI[2][28].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],28)*/
SIGNAL_MAPPING(DATA12,GFI03_30_E,fastbus1.Q47264.data[61],GFI[2][29].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],29)*/
SIGNAL_MAPPING(DATA12,GFI03_31_E,fastbus1.Q47264.data[62],GFI[2][30].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],30)*/
SIGNAL_MAPPING(DATA12,GFI03_32_E,fastbus1.Q47264.data[63],GFI[2][31].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],31)*/
SIGNAL_MAPPING(DATA12,GFI03_33_E,fastbus1.Q47264.data[66],GFI[2][32].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],32)*/
SIGNAL_MAPPING(DATA12,GFI03_34_E,fastbus1.Q47264.data[67],GFI[2][33].E);/*,ZERO_SUPPRESS_ITEM(GFI[2],33)*/
SIGNAL_MAPPING(DATA12,N01_01_1_E,fastbus1.Q46993.data[0],N[0][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],0)*/
SIGNAL_MAPPING(DATA12,N01_01_1_T,fastbus2.T48834.data[0],N[0][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],0)*/
SIGNAL_MAPPING(DATA12,N01_01_2_E,fastbus1.Q46993.data[44],N[0][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],0)*/
SIGNAL_MAPPING(DATA12,N01_01_2_T,fastbus2.T81795.data[12],N[0][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],0)*/
SIGNAL_MAPPING(DATA12,N01_02_1_E,fastbus1.Q46993.data[4],N[0][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],1)*/
SIGNAL_MAPPING(DATA12,N01_02_1_T,fastbus2.T48834.data[4],N[0][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],1)*/
SIGNAL_MAPPING(DATA12,N01_02_2_E,fastbus1.Q46993.data[40],N[0][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],1)*/
SIGNAL_MAPPING(DATA12,N01_02_2_T,fastbus2.T81795.data[8],N[0][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],1)*/
SIGNAL_MAPPING(DATA12,N01_03_1_E,fastbus1.Q46993.data[8],N[0][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],2)*/
SIGNAL_MAPPING(DATA12,N01_03_1_T,fastbus2.T48834.data[8],N[0][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],2)*/
SIGNAL_MAPPING(DATA12,N01_03_2_E,fastbus1.Q46993.data[16],N[0][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],2)*/
SIGNAL_MAPPING(DATA12,N01_03_2_T,fastbus2.T81806.data[0],N[0][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],2)*/
SIGNAL_MAPPING(DATA12,N01_04_1_E,fastbus1.Q46993.data[12],N[0][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],3)*/
SIGNAL_MAPPING(DATA12,N01_04_1_T,fastbus2.T48834.data[12],N[0][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],3)*/
SIGNAL_MAPPING(DATA12,N01_04_2_E,fastbus1.Q46993.data[20],N[0][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],3)*/
SIGNAL_MAPPING(DATA12,N01_04_2_T,fastbus2.T81806.data[4],N[0][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],3)*/
SIGNAL_MAPPING(DATA12,N01_05_1_E,fastbus1.Q46993.data[1],N[0][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],4)*/
SIGNAL_MAPPING(DATA12,N01_05_1_T,fastbus2.T48834.data[1],N[0][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],4)*/
SIGNAL_MAPPING(DATA12,N01_05_2_E,fastbus1.Q46993.data[41],N[0][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],4)*/
SIGNAL_MAPPING(DATA12,N01_05_2_T,fastbus2.T81795.data[9],N[0][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],4)*/
SIGNAL_MAPPING(DATA12,N01_06_1_E,fastbus1.Q46993.data[5],N[0][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],5)*/
SIGNAL_MAPPING(DATA12,N01_06_1_T,fastbus2.T48834.data[5],N[0][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],5)*/
SIGNAL_MAPPING(DATA12,N01_06_2_E,fastbus1.Q46993.data[45],N[0][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],5)*/
SIGNAL_MAPPING(DATA12,N01_06_2_T,fastbus2.T81795.data[13],N[0][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],5)*/
SIGNAL_MAPPING(DATA12,N01_07_1_E,fastbus1.Q46993.data[9],N[0][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],6)*/
SIGNAL_MAPPING(DATA12,N01_07_1_T,fastbus2.T48834.data[9],N[0][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],6)*/
SIGNAL_MAPPING(DATA12,N01_07_2_E,fastbus1.Q46993.data[24],N[0][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],6)*/
SIGNAL_MAPPING(DATA12,N01_07_2_T,fastbus2.T81806.data[8],N[0][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],6)*/
SIGNAL_MAPPING(DATA12,N01_08_1_E,fastbus1.Q46993.data[13],N[0][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],7)*/
SIGNAL_MAPPING(DATA12,N01_08_1_T,fastbus2.T48834.data[13],N[0][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],7)*/
SIGNAL_MAPPING(DATA12,N01_08_2_E,fastbus1.Q46993.data[28],N[0][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],7)*/
SIGNAL_MAPPING(DATA12,N01_08_2_T,fastbus2.T81806.data[12],N[0][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],7)*/
SIGNAL_MAPPING(DATA12,N01_09_1_E,fastbus1.Q46993.data[2],N[0][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],8)*/
SIGNAL_MAPPING(DATA12,N01_09_1_T,fastbus2.T48834.data[2],N[0][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],8)*/
SIGNAL_MAPPING(DATA12,N01_09_2_E,fastbus1.Q46993.data[17],N[0][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],8)*/
SIGNAL_MAPPING(DATA12,N01_09_2_T,fastbus2.T81806.data[1],N[0][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],8)*/
SIGNAL_MAPPING(DATA12,N01_10_1_E,fastbus1.Q46993.data[6],N[0][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],9)*/
SIGNAL_MAPPING(DATA12,N01_10_1_T,fastbus2.T48834.data[6],N[0][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],9)*/
SIGNAL_MAPPING(DATA12,N01_10_2_E,fastbus1.Q46993.data[21],N[0][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],9)*/
SIGNAL_MAPPING(DATA12,N01_10_2_T,fastbus2.T81806.data[5],N[0][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],9)*/
SIGNAL_MAPPING(DATA12,N01_11_1_E,fastbus1.Q46993.data[10],N[0][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],10)*/
SIGNAL_MAPPING(DATA12,N01_11_1_T,fastbus2.T48834.data[10],N[0][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],10)*/
SIGNAL_MAPPING(DATA12,N01_11_2_E,fastbus1.Q46993.data[25],N[0][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],10)*/
SIGNAL_MAPPING(DATA12,N01_11_2_T,fastbus2.T81806.data[9],N[0][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],10)*/
SIGNAL_MAPPING(DATA12,N01_12_1_E,fastbus1.Q46993.data[14],N[0][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],11)*/
SIGNAL_MAPPING(DATA12,N01_12_1_T,fastbus2.T48834.data[14],N[0][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],11)*/
SIGNAL_MAPPING(DATA12,N01_12_2_E,fastbus1.Q46993.data[29],N[0][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],11)*/
SIGNAL_MAPPING(DATA12,N01_12_2_T,fastbus2.T81806.data[13],N[0][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],11)*/
SIGNAL_MAPPING(DATA12,N01_13_1_E,fastbus1.Q46993.data[3],N[0][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],12)*/
SIGNAL_MAPPING(DATA12,N01_13_1_T,fastbus2.T48834.data[3],N[0][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],12)*/
SIGNAL_MAPPING(DATA12,N01_13_2_E,fastbus1.Q46993.data[18],N[0][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],12)*/
SIGNAL_MAPPING(DATA12,N01_13_2_T,fastbus2.T81806.data[2],N[0][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],12)*/
SIGNAL_MAPPING(DATA12,N01_14_1_E,fastbus1.Q46993.data[7],N[0][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],13)*/
SIGNAL_MAPPING(DATA12,N01_14_1_T,fastbus2.T48834.data[7],N[0][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],13)*/
SIGNAL_MAPPING(DATA12,N01_14_2_E,fastbus1.Q46993.data[22],N[0][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],13)*/
SIGNAL_MAPPING(DATA12,N01_14_2_T,fastbus2.T81806.data[6],N[0][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],13)*/
SIGNAL_MAPPING(DATA12,N01_15_1_E,fastbus1.Q46993.data[46],N[0][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],14)*/
SIGNAL_MAPPING(DATA12,N01_15_1_T,fastbus2.T81795.data[14],N[0][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],14)*/
SIGNAL_MAPPING(DATA12,N01_15_2_E,fastbus1.Q46993.data[26],N[0][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],14)*/
SIGNAL_MAPPING(DATA12,N01_15_2_T,fastbus2.T81806.data[10],N[0][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],14)*/
SIGNAL_MAPPING(DATA12,N01_16_1_E,fastbus1.Q46993.data[42],N[0][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],15)*/
SIGNAL_MAPPING(DATA12,N01_16_1_T,fastbus2.T81795.data[10],N[0][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],15)*/
SIGNAL_MAPPING(DATA12,N01_16_2_E,fastbus1.Q46993.data[30],N[0][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],15)*/
SIGNAL_MAPPING(DATA12,N01_16_2_T,fastbus2.T81806.data[14],N[0][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],15)*/
SIGNAL_MAPPING(DATA12,N01_17_1_E,fastbus1.Q46993.data[11],N[0][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],16)*/
SIGNAL_MAPPING(DATA12,N01_17_1_T,fastbus2.T48834.data[11],N[0][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],16)*/
SIGNAL_MAPPING(DATA12,N01_17_2_E,fastbus1.Q46993.data[19],N[0][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],16)*/
SIGNAL_MAPPING(DATA12,N01_17_2_T,fastbus2.T81806.data[3],N[0][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],16)*/
SIGNAL_MAPPING(DATA12,N01_18_1_E,fastbus1.Q46993.data[15],N[0][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],17)*/
SIGNAL_MAPPING(DATA12,N01_18_1_T,fastbus2.T48834.data[15],N[0][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],17)*/
SIGNAL_MAPPING(DATA12,N01_18_2_E,fastbus1.Q46993.data[23],N[0][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],17)*/
SIGNAL_MAPPING(DATA12,N01_18_2_T,fastbus2.T81806.data[7],N[0][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],17)*/
SIGNAL_MAPPING(DATA12,N01_19_1_E,fastbus1.Q46993.data[47],N[0][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],18)*/
SIGNAL_MAPPING(DATA12,N01_19_1_T,fastbus2.T81795.data[15],N[0][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],18)*/
SIGNAL_MAPPING(DATA12,N01_19_2_E,fastbus1.Q46993.data[27],N[0][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],18)*/
SIGNAL_MAPPING(DATA12,N01_19_2_T,fastbus2.T81806.data[11],N[0][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],18)*/
SIGNAL_MAPPING(DATA12,N01_20_1_E,fastbus1.Q46993.data[43],N[0][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[0],19)*/
SIGNAL_MAPPING(DATA12,N01_20_1_T,fastbus2.T81795.data[11],N[0][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[0],19)*/
SIGNAL_MAPPING(DATA12,N01_20_2_E,fastbus1.Q46993.data[31],N[0][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[0],19)*/
SIGNAL_MAPPING(DATA12,N01_20_2_T,fastbus2.T81806.data[15],N[0][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[0],19)*/
SIGNAL_MAPPING(DATA12,N02_01_1_E,fastbus1.Q15358.data[0],N[1][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],0)*/
SIGNAL_MAPPING(DATA12,N02_01_1_T,fastbus2.T81859.data[0],N[1][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],0)*/
SIGNAL_MAPPING(DATA12,N02_01_2_E,fastbus1.Q46993.data[36],N[1][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],0)*/
SIGNAL_MAPPING(DATA12,N02_01_2_T,fastbus2.T81795.data[4],N[1][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],0)*/
SIGNAL_MAPPING(DATA12,N02_02_1_E,fastbus1.Q15358.data[4],N[1][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],1)*/
SIGNAL_MAPPING(DATA12,N02_02_1_T,fastbus2.T81859.data[4],N[1][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],1)*/
SIGNAL_MAPPING(DATA12,N02_02_2_E,fastbus1.Q46993.data[32],N[1][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],1)*/
SIGNAL_MAPPING(DATA12,N02_02_2_T,fastbus2.T81795.data[0],N[1][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],1)*/
SIGNAL_MAPPING(DATA12,N02_03_1_E,fastbus1.Q15358.data[8],N[1][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],2)*/
SIGNAL_MAPPING(DATA12,N02_03_1_T,fastbus2.T81859.data[8],N[1][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],2)*/
SIGNAL_MAPPING(DATA12,N02_03_2_E,fastbus1.Q15358.data[16],N[1][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],2)*/
SIGNAL_MAPPING(DATA12,N02_03_2_T,fastbus2.T81808.data[0],N[1][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],2)*/
SIGNAL_MAPPING(DATA12,N02_04_1_E,fastbus1.Q15358.data[12],N[1][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],3)*/
SIGNAL_MAPPING(DATA12,N02_04_1_T,fastbus2.T81859.data[12],N[1][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],3)*/
SIGNAL_MAPPING(DATA12,N02_04_2_E,fastbus1.Q15358.data[20],N[1][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],3)*/
SIGNAL_MAPPING(DATA12,N02_04_2_T,fastbus2.T81808.data[4],N[1][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],3)*/
SIGNAL_MAPPING(DATA12,N02_05_1_E,fastbus1.Q15358.data[1],N[1][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],4)*/
SIGNAL_MAPPING(DATA12,N02_05_1_T,fastbus2.T81859.data[1],N[1][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],4)*/
SIGNAL_MAPPING(DATA12,N02_05_2_E,fastbus1.Q46993.data[37],N[1][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],4)*/
SIGNAL_MAPPING(DATA12,N02_05_2_T,fastbus2.T81795.data[5],N[1][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],4)*/
SIGNAL_MAPPING(DATA12,N02_06_1_E,fastbus1.Q15358.data[5],N[1][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],5)*/
SIGNAL_MAPPING(DATA12,N02_06_1_T,fastbus2.T81859.data[5],N[1][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],5)*/
SIGNAL_MAPPING(DATA12,N02_06_2_E,fastbus1.Q46993.data[33],N[1][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],5)*/
SIGNAL_MAPPING(DATA12,N02_06_2_T,fastbus2.T81795.data[1],N[1][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],5)*/
SIGNAL_MAPPING(DATA12,N02_07_1_E,fastbus1.Q15358.data[9],N[1][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],6)*/
SIGNAL_MAPPING(DATA12,N02_07_1_T,fastbus2.T81859.data[9],N[1][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],6)*/
SIGNAL_MAPPING(DATA12,N02_07_2_E,fastbus1.Q15358.data[24],N[1][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],6)*/
SIGNAL_MAPPING(DATA12,N02_07_2_T,fastbus2.T81808.data[8],N[1][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],6)*/
SIGNAL_MAPPING(DATA12,N02_08_1_E,fastbus1.Q15358.data[13],N[1][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],7)*/
SIGNAL_MAPPING(DATA12,N02_08_1_T,fastbus2.T81859.data[13],N[1][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],7)*/
SIGNAL_MAPPING(DATA12,N02_08_2_E,fastbus1.Q15358.data[28],N[1][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],7)*/
SIGNAL_MAPPING(DATA12,N02_08_2_T,fastbus2.T81808.data[12],N[1][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],7)*/
SIGNAL_MAPPING(DATA12,N02_09_1_E,fastbus1.Q15358.data[2],N[1][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],8)*/
SIGNAL_MAPPING(DATA12,N02_09_1_T,fastbus2.T81859.data[2],N[1][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],8)*/
SIGNAL_MAPPING(DATA12,N02_09_2_E,fastbus1.Q15358.data[17],N[1][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],8)*/
SIGNAL_MAPPING(DATA12,N02_09_2_T,fastbus2.T81808.data[1],N[1][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],8)*/
SIGNAL_MAPPING(DATA12,N02_10_1_E,fastbus1.Q15358.data[6],N[1][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],9)*/
SIGNAL_MAPPING(DATA12,N02_10_1_T,fastbus2.T81859.data[6],N[1][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],9)*/
SIGNAL_MAPPING(DATA12,N02_10_2_E,fastbus1.Q15358.data[21],N[1][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],9)*/
SIGNAL_MAPPING(DATA12,N02_10_2_T,fastbus2.T81808.data[5],N[1][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],9)*/
SIGNAL_MAPPING(DATA12,N02_11_1_E,fastbus1.Q15358.data[10],N[1][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],10)*/
SIGNAL_MAPPING(DATA12,N02_11_1_T,fastbus2.T81859.data[10],N[1][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],10)*/
SIGNAL_MAPPING(DATA12,N02_11_2_E,fastbus1.Q15358.data[25],N[1][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],10)*/
SIGNAL_MAPPING(DATA12,N02_11_2_T,fastbus2.T81808.data[9],N[1][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],10)*/
SIGNAL_MAPPING(DATA12,N02_12_1_E,fastbus1.Q15358.data[14],N[1][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],11)*/
SIGNAL_MAPPING(DATA12,N02_12_1_T,fastbus2.T81859.data[14],N[1][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],11)*/
SIGNAL_MAPPING(DATA12,N02_12_2_E,fastbus1.Q15358.data[29],N[1][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],11)*/
SIGNAL_MAPPING(DATA12,N02_12_2_T,fastbus2.T81808.data[13],N[1][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],11)*/
SIGNAL_MAPPING(DATA12,N02_13_1_E,fastbus1.Q15358.data[3],N[1][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],12)*/
SIGNAL_MAPPING(DATA12,N02_13_1_T,fastbus2.T81859.data[3],N[1][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],12)*/
SIGNAL_MAPPING(DATA12,N02_13_2_E,fastbus1.Q15358.data[18],N[1][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],12)*/
SIGNAL_MAPPING(DATA12,N02_13_2_T,fastbus2.T81808.data[2],N[1][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],12)*/
SIGNAL_MAPPING(DATA12,N02_14_1_E,fastbus1.Q15358.data[7],N[1][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],13)*/
SIGNAL_MAPPING(DATA12,N02_14_1_T,fastbus2.T81859.data[7],N[1][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],13)*/
SIGNAL_MAPPING(DATA12,N02_14_2_E,fastbus1.Q15358.data[22],N[1][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],13)*/
SIGNAL_MAPPING(DATA12,N02_14_2_T,fastbus2.T81808.data[6],N[1][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],13)*/
SIGNAL_MAPPING(DATA12,N02_15_1_E,fastbus1.Q46993.data[38],N[1][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],14)*/
SIGNAL_MAPPING(DATA12,N02_15_1_T,fastbus2.T81795.data[6],N[1][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],14)*/
SIGNAL_MAPPING(DATA12,N02_15_2_E,fastbus1.Q15358.data[26],N[1][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],14)*/
SIGNAL_MAPPING(DATA12,N02_15_2_T,fastbus2.T81808.data[10],N[1][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],14)*/
SIGNAL_MAPPING(DATA12,N02_16_1_E,fastbus1.Q46993.data[34],N[1][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],15)*/
SIGNAL_MAPPING(DATA12,N02_16_1_T,fastbus2.T81795.data[2],N[1][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],15)*/
SIGNAL_MAPPING(DATA12,N02_16_2_E,fastbus1.Q15358.data[30],N[1][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],15)*/
SIGNAL_MAPPING(DATA12,N02_16_2_T,fastbus2.T81808.data[14],N[1][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],15)*/
SIGNAL_MAPPING(DATA12,N02_17_1_E,fastbus1.Q15358.data[11],N[1][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],16)*/
SIGNAL_MAPPING(DATA12,N02_17_1_T,fastbus2.T81859.data[11],N[1][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],16)*/
SIGNAL_MAPPING(DATA12,N02_17_2_E,fastbus1.Q15358.data[19],N[1][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],16)*/
SIGNAL_MAPPING(DATA12,N02_17_2_T,fastbus2.T81808.data[3],N[1][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],16)*/
SIGNAL_MAPPING(DATA12,N02_18_1_E,fastbus1.Q15358.data[15],N[1][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],17)*/
SIGNAL_MAPPING(DATA12,N02_18_1_T,fastbus2.T81859.data[15],N[1][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],17)*/
SIGNAL_MAPPING(DATA12,N02_18_2_E,fastbus1.Q15358.data[23],N[1][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],17)*/
SIGNAL_MAPPING(DATA12,N02_18_2_T,fastbus2.T81808.data[7],N[1][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],17)*/
SIGNAL_MAPPING(DATA12,N02_19_1_E,fastbus1.Q46993.data[39],N[1][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],18)*/
SIGNAL_MAPPING(DATA12,N02_19_1_T,fastbus2.T81795.data[7],N[1][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],18)*/
SIGNAL_MAPPING(DATA12,N02_19_2_E,fastbus1.Q15358.data[27],N[1][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],18)*/
SIGNAL_MAPPING(DATA12,N02_19_2_T,fastbus2.T81808.data[11],N[1][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],18)*/
SIGNAL_MAPPING(DATA12,N02_20_1_E,fastbus1.Q46993.data[35],N[1][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[1],19)*/
SIGNAL_MAPPING(DATA12,N02_20_1_T,fastbus2.T81795.data[3],N[1][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[1],19)*/
SIGNAL_MAPPING(DATA12,N02_20_2_E,fastbus1.Q15358.data[31],N[1][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[1],19)*/
SIGNAL_MAPPING(DATA12,N02_20_2_T,fastbus2.T81808.data[15],N[1][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[1],19)*/
SIGNAL_MAPPING(DATA12,N03_01_1_E,fastbus1.Q15358.data[32],N[2][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],0)*/
SIGNAL_MAPPING(DATA12,N03_01_1_T,fastbus2.T48854.data[0],N[2][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],0)*/
SIGNAL_MAPPING(DATA12,N03_01_2_E,fastbus1.Q46962.data[28],N[2][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],0)*/
SIGNAL_MAPPING(DATA12,N03_01_2_T,fastbus2.T48834.data[28],N[2][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],0)*/
SIGNAL_MAPPING(DATA12,N03_02_1_E,fastbus1.Q15358.data[36],N[2][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],1)*/
SIGNAL_MAPPING(DATA12,N03_02_1_T,fastbus2.T48854.data[4],N[2][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],1)*/
SIGNAL_MAPPING(DATA12,N03_02_2_E,fastbus1.Q46962.data[24],N[2][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],1)*/
SIGNAL_MAPPING(DATA12,N03_02_2_T,fastbus2.T48834.data[24],N[2][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],1)*/
SIGNAL_MAPPING(DATA12,N03_03_1_E,fastbus1.Q15358.data[40],N[2][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],2)*/
SIGNAL_MAPPING(DATA12,N03_03_1_T,fastbus2.T48854.data[8],N[2][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],2)*/
SIGNAL_MAPPING(DATA12,N03_03_2_E,fastbus1.Q46962.data[0],N[2][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],2)*/
SIGNAL_MAPPING(DATA12,N03_03_2_T,fastbus2.T87047.data[0],N[2][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],2)*/
SIGNAL_MAPPING(DATA12,N03_04_1_E,fastbus1.Q15358.data[44],N[2][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],3)*/
SIGNAL_MAPPING(DATA12,N03_04_1_T,fastbus2.T48854.data[12],N[2][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],3)*/
SIGNAL_MAPPING(DATA12,N03_04_2_E,fastbus1.Q46962.data[4],N[2][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],3)*/
SIGNAL_MAPPING(DATA12,N03_04_2_T,fastbus2.T87047.data[4],N[2][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],3)*/
SIGNAL_MAPPING(DATA12,N03_05_1_E,fastbus1.Q15358.data[33],N[2][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],4)*/
SIGNAL_MAPPING(DATA12,N03_05_1_T,fastbus2.T48854.data[1],N[2][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],4)*/
SIGNAL_MAPPING(DATA12,N03_05_2_E,fastbus1.Q46962.data[25],N[2][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],4)*/
SIGNAL_MAPPING(DATA12,N03_05_2_T,fastbus2.T48834.data[25],N[2][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],4)*/
SIGNAL_MAPPING(DATA12,N03_06_1_E,fastbus1.Q15358.data[37],N[2][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],5)*/
SIGNAL_MAPPING(DATA12,N03_06_1_T,fastbus2.T48854.data[5],N[2][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],5)*/
SIGNAL_MAPPING(DATA12,N03_06_2_E,fastbus1.Q46962.data[29],N[2][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],5)*/
SIGNAL_MAPPING(DATA12,N03_06_2_T,fastbus2.T48834.data[29],N[2][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],5)*/
SIGNAL_MAPPING(DATA12,N03_07_1_E,fastbus1.Q15358.data[41],N[2][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],6)*/
SIGNAL_MAPPING(DATA12,N03_07_1_T,fastbus2.T48854.data[9],N[2][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],6)*/
SIGNAL_MAPPING(DATA12,N03_07_2_E,fastbus1.Q46962.data[8],N[2][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],6)*/
SIGNAL_MAPPING(DATA12,N03_07_2_T,fastbus2.T87047.data[8],N[2][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],6)*/
SIGNAL_MAPPING(DATA12,N03_08_1_E,fastbus1.Q15358.data[45],N[2][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],7)*/
SIGNAL_MAPPING(DATA12,N03_08_1_T,fastbus2.T48854.data[13],N[2][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],7)*/
SIGNAL_MAPPING(DATA12,N03_08_2_E,fastbus1.Q46962.data[12],N[2][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],7)*/
SIGNAL_MAPPING(DATA12,N03_08_2_T,fastbus2.T87047.data[12],N[2][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],7)*/
SIGNAL_MAPPING(DATA12,N03_09_1_E,fastbus1.Q15358.data[34],N[2][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],8)*/
SIGNAL_MAPPING(DATA12,N03_09_1_T,fastbus2.T48854.data[2],N[2][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],8)*/
SIGNAL_MAPPING(DATA12,N03_09_2_E,fastbus1.Q46962.data[1],N[2][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],8)*/
SIGNAL_MAPPING(DATA12,N03_09_2_T,fastbus2.T87047.data[1],N[2][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],8)*/
SIGNAL_MAPPING(DATA12,N03_10_1_E,fastbus1.Q15358.data[38],N[2][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],9)*/
SIGNAL_MAPPING(DATA12,N03_10_1_T,fastbus2.T48854.data[6],N[2][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],9)*/
SIGNAL_MAPPING(DATA12,N03_10_2_E,fastbus1.Q46962.data[5],N[2][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],9)*/
SIGNAL_MAPPING(DATA12,N03_10_2_T,fastbus2.T87047.data[5],N[2][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],9)*/
SIGNAL_MAPPING(DATA12,N03_11_1_E,fastbus1.Q15358.data[42],N[2][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],10)*/
SIGNAL_MAPPING(DATA12,N03_11_1_T,fastbus2.T48854.data[10],N[2][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],10)*/
SIGNAL_MAPPING(DATA12,N03_11_2_E,fastbus1.Q46962.data[9],N[2][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],10)*/
SIGNAL_MAPPING(DATA12,N03_11_2_T,fastbus2.T87047.data[9],N[2][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],10)*/
SIGNAL_MAPPING(DATA12,N03_12_1_E,fastbus1.Q15358.data[46],N[2][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],11)*/
SIGNAL_MAPPING(DATA12,N03_12_1_T,fastbus2.T48854.data[14],N[2][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],11)*/
SIGNAL_MAPPING(DATA12,N03_12_2_E,fastbus1.Q46962.data[13],N[2][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],11)*/
SIGNAL_MAPPING(DATA12,N03_12_2_T,fastbus2.T87047.data[13],N[2][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],11)*/
SIGNAL_MAPPING(DATA12,N03_13_1_E,fastbus1.Q15358.data[35],N[2][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],12)*/
SIGNAL_MAPPING(DATA12,N03_13_1_T,fastbus2.T48854.data[3],N[2][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],12)*/
SIGNAL_MAPPING(DATA12,N03_13_2_E,fastbus1.Q46962.data[2],N[2][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],12)*/
SIGNAL_MAPPING(DATA12,N03_13_2_T,fastbus2.T87047.data[2],N[2][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],12)*/
SIGNAL_MAPPING(DATA12,N03_14_1_E,fastbus1.Q15358.data[39],N[2][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],13)*/
SIGNAL_MAPPING(DATA12,N03_14_1_T,fastbus2.T48854.data[7],N[2][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],13)*/
SIGNAL_MAPPING(DATA12,N03_14_2_E,fastbus1.Q46962.data[6],N[2][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],13)*/
SIGNAL_MAPPING(DATA12,N03_14_2_T,fastbus2.T87047.data[6],N[2][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],13)*/
SIGNAL_MAPPING(DATA12,N03_15_1_E,fastbus1.Q46962.data[30],N[2][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],14)*/
SIGNAL_MAPPING(DATA12,N03_15_1_T,fastbus2.T48834.data[30],N[2][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],14)*/
SIGNAL_MAPPING(DATA12,N03_15_2_E,fastbus1.Q46962.data[10],N[2][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],14)*/
SIGNAL_MAPPING(DATA12,N03_15_2_T,fastbus2.T87047.data[10],N[2][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],14)*/
SIGNAL_MAPPING(DATA12,N03_16_1_E,fastbus1.Q46962.data[26],N[2][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],15)*/
SIGNAL_MAPPING(DATA12,N03_16_1_T,fastbus2.T48834.data[26],N[2][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],15)*/
SIGNAL_MAPPING(DATA12,N03_16_2_E,fastbus1.Q46962.data[14],N[2][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],15)*/
SIGNAL_MAPPING(DATA12,N03_16_2_T,fastbus2.T87047.data[14],N[2][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],15)*/
SIGNAL_MAPPING(DATA12,N03_17_1_E,fastbus1.Q15358.data[43],N[2][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],16)*/
SIGNAL_MAPPING(DATA12,N03_17_1_T,fastbus2.T48854.data[11],N[2][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],16)*/
SIGNAL_MAPPING(DATA12,N03_17_2_E,fastbus1.Q46962.data[3],N[2][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],16)*/
SIGNAL_MAPPING(DATA12,N03_17_2_T,fastbus2.T87047.data[3],N[2][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],16)*/
SIGNAL_MAPPING(DATA12,N03_18_1_E,fastbus1.Q15358.data[47],N[2][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],17)*/
SIGNAL_MAPPING(DATA12,N03_18_1_T,fastbus2.T48854.data[15],N[2][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],17)*/
SIGNAL_MAPPING(DATA12,N03_18_2_E,fastbus1.Q46962.data[7],N[2][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],17)*/
SIGNAL_MAPPING(DATA12,N03_18_2_T,fastbus2.T87047.data[7],N[2][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],17)*/
SIGNAL_MAPPING(DATA12,N03_19_1_E,fastbus1.Q46962.data[31],N[2][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],18)*/
SIGNAL_MAPPING(DATA12,N03_19_1_T,fastbus2.T48834.data[31],N[2][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],18)*/
SIGNAL_MAPPING(DATA12,N03_19_2_E,fastbus1.Q46962.data[11],N[2][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],18)*/
SIGNAL_MAPPING(DATA12,N03_19_2_T,fastbus2.T87047.data[11],N[2][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],18)*/
SIGNAL_MAPPING(DATA12,N03_20_1_E,fastbus1.Q46962.data[27],N[2][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[2],19)*/
SIGNAL_MAPPING(DATA12,N03_20_1_T,fastbus2.T48834.data[27],N[2][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[2],19)*/
SIGNAL_MAPPING(DATA12,N03_20_2_E,fastbus1.Q46962.data[15],N[2][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[2],19)*/
SIGNAL_MAPPING(DATA12,N03_20_2_T,fastbus2.T87047.data[15],N[2][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[2],19)*/
SIGNAL_MAPPING(DATA12,N04_01_1_E,fastbus1.Q46962.data[32],N[3][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],0)*/
SIGNAL_MAPPING(DATA12,N04_01_1_T,fastbus2.T81806.data[16],N[3][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],0)*/
SIGNAL_MAPPING(DATA12,N04_01_2_E,fastbus1.Q46962.data[20],N[3][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],0)*/
SIGNAL_MAPPING(DATA12,N04_01_2_T,fastbus2.T48834.data[20],N[3][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],0)*/
SIGNAL_MAPPING(DATA12,N04_02_1_E,fastbus1.Q46962.data[36],N[3][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],1)*/
SIGNAL_MAPPING(DATA12,N04_02_1_T,fastbus2.T81806.data[20],N[3][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],1)*/
SIGNAL_MAPPING(DATA12,N04_02_2_E,fastbus1.Q46962.data[16],N[3][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],1)*/
SIGNAL_MAPPING(DATA12,N04_02_2_T,fastbus2.T48834.data[16],N[3][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],1)*/
SIGNAL_MAPPING(DATA12,N04_03_1_E,fastbus1.Q46962.data[40],N[3][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],2)*/
SIGNAL_MAPPING(DATA12,N04_03_1_T,fastbus2.T81806.data[24],N[3][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],2)*/
SIGNAL_MAPPING(DATA12,N04_03_2_E,fastbus1.Q15372.data[0],N[3][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],2)*/
SIGNAL_MAPPING(DATA12,N04_03_2_T,fastbus2.T81795.data[16],N[3][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],2)*/
SIGNAL_MAPPING(DATA12,N04_04_1_E,fastbus1.Q46962.data[44],N[3][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],3)*/
SIGNAL_MAPPING(DATA12,N04_04_1_T,fastbus2.T81806.data[28],N[3][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],3)*/
SIGNAL_MAPPING(DATA12,N04_04_2_E,fastbus1.Q15372.data[4],N[3][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],3)*/
SIGNAL_MAPPING(DATA12,N04_04_2_T,fastbus2.T81795.data[20],N[3][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],3)*/
SIGNAL_MAPPING(DATA12,N04_05_1_E,fastbus1.Q46962.data[33],N[3][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],4)*/
SIGNAL_MAPPING(DATA12,N04_05_1_T,fastbus2.T81806.data[17],N[3][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],4)*/
SIGNAL_MAPPING(DATA12,N04_05_2_E,fastbus1.Q46962.data[21],N[3][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],4)*/
SIGNAL_MAPPING(DATA12,N04_05_2_T,fastbus2.T48834.data[21],N[3][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],4)*/
SIGNAL_MAPPING(DATA12,N04_06_1_E,fastbus1.Q46962.data[37],N[3][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],5)*/
SIGNAL_MAPPING(DATA12,N04_06_1_T,fastbus2.T81806.data[21],N[3][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],5)*/
SIGNAL_MAPPING(DATA12,N04_06_2_E,fastbus1.Q46962.data[17],N[3][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],5)*/
SIGNAL_MAPPING(DATA12,N04_06_2_T,fastbus2.T48834.data[17],N[3][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],5)*/
SIGNAL_MAPPING(DATA12,N04_07_1_E,fastbus1.Q46962.data[41],N[3][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],6)*/
SIGNAL_MAPPING(DATA12,N04_07_1_T,fastbus2.T81806.data[25],N[3][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],6)*/
SIGNAL_MAPPING(DATA12,N04_07_2_E,fastbus1.Q15372.data[8],N[3][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],6)*/
SIGNAL_MAPPING(DATA12,N04_07_2_T,fastbus2.T81795.data[24],N[3][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],6)*/
SIGNAL_MAPPING(DATA12,N04_08_1_E,fastbus1.Q46962.data[45],N[3][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],7)*/
SIGNAL_MAPPING(DATA12,N04_08_1_T,fastbus2.T81806.data[29],N[3][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],7)*/
SIGNAL_MAPPING(DATA12,N04_08_2_E,fastbus1.Q15372.data[12],N[3][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],7)*/
SIGNAL_MAPPING(DATA12,N04_08_2_T,fastbus2.T81795.data[28],N[3][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],7)*/
SIGNAL_MAPPING(DATA12,N04_09_1_E,fastbus1.Q46962.data[34],N[3][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],8)*/
SIGNAL_MAPPING(DATA12,N04_09_1_T,fastbus2.T81806.data[18],N[3][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],8)*/
SIGNAL_MAPPING(DATA12,N04_09_2_E,fastbus1.Q15372.data[1],N[3][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],8)*/
SIGNAL_MAPPING(DATA12,N04_09_2_T,fastbus2.T81795.data[17],N[3][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],8)*/
SIGNAL_MAPPING(DATA12,N04_10_1_E,fastbus1.Q46962.data[38],N[3][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],9)*/
SIGNAL_MAPPING(DATA12,N04_10_1_T,fastbus2.T81806.data[22],N[3][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],9)*/
SIGNAL_MAPPING(DATA12,N04_10_2_E,fastbus1.Q15372.data[5],N[3][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],9)*/
SIGNAL_MAPPING(DATA12,N04_10_2_T,fastbus2.T81795.data[21],N[3][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],9)*/
SIGNAL_MAPPING(DATA12,N04_11_1_E,fastbus1.Q46962.data[42],N[3][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],10)*/
SIGNAL_MAPPING(DATA12,N04_11_1_T,fastbus2.T81806.data[26],N[3][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],10)*/
SIGNAL_MAPPING(DATA12,N04_11_2_E,fastbus1.Q15372.data[9],N[3][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],10)*/
SIGNAL_MAPPING(DATA12,N04_11_2_T,fastbus2.T81795.data[25],N[3][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],10)*/
SIGNAL_MAPPING(DATA12,N04_12_1_E,fastbus1.Q46962.data[46],N[3][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],11)*/
SIGNAL_MAPPING(DATA12,N04_12_1_T,fastbus2.T81806.data[30],N[3][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],11)*/
SIGNAL_MAPPING(DATA12,N04_12_2_E,fastbus1.Q15372.data[13],N[3][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],11)*/
SIGNAL_MAPPING(DATA12,N04_12_2_T,fastbus2.T81795.data[29],N[3][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],11)*/
SIGNAL_MAPPING(DATA12,N04_13_1_E,fastbus1.Q46962.data[35],N[3][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],12)*/
SIGNAL_MAPPING(DATA12,N04_13_1_T,fastbus2.T81806.data[19],N[3][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],12)*/
SIGNAL_MAPPING(DATA12,N04_13_2_E,fastbus1.Q15372.data[2],N[3][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],12)*/
SIGNAL_MAPPING(DATA12,N04_13_2_T,fastbus2.T81795.data[18],N[3][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],12)*/
SIGNAL_MAPPING(DATA12,N04_14_1_E,fastbus1.Q46962.data[39],N[3][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],13)*/
SIGNAL_MAPPING(DATA12,N04_14_1_T,fastbus2.T81806.data[23],N[3][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],13)*/
SIGNAL_MAPPING(DATA12,N04_14_2_E,fastbus1.Q15372.data[6],N[3][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],13)*/
SIGNAL_MAPPING(DATA12,N04_14_2_T,fastbus2.T81795.data[22],N[3][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],13)*/
SIGNAL_MAPPING(DATA12,N04_15_1_E,fastbus1.Q46962.data[22],N[3][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],14)*/
SIGNAL_MAPPING(DATA12,N04_15_1_T,fastbus2.T48834.data[22],N[3][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],14)*/
SIGNAL_MAPPING(DATA12,N04_15_2_E,fastbus1.Q15372.data[10],N[3][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],14)*/
SIGNAL_MAPPING(DATA12,N04_15_2_T,fastbus2.T81795.data[26],N[3][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],14)*/
SIGNAL_MAPPING(DATA12,N04_16_1_E,fastbus1.Q46962.data[18],N[3][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],15)*/
SIGNAL_MAPPING(DATA12,N04_16_1_T,fastbus2.T48834.data[18],N[3][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],15)*/
SIGNAL_MAPPING(DATA12,N04_16_2_E,fastbus1.Q15372.data[14],N[3][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],15)*/
SIGNAL_MAPPING(DATA12,N04_16_2_T,fastbus2.T81795.data[30],N[3][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],15)*/
SIGNAL_MAPPING(DATA12,N04_17_1_E,fastbus1.Q46962.data[43],N[3][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],16)*/
SIGNAL_MAPPING(DATA12,N04_17_1_T,fastbus2.T81806.data[27],N[3][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],16)*/
SIGNAL_MAPPING(DATA12,N04_17_2_E,fastbus1.Q15372.data[3],N[3][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],16)*/
SIGNAL_MAPPING(DATA12,N04_17_2_T,fastbus2.T81795.data[19],N[3][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],16)*/
SIGNAL_MAPPING(DATA12,N04_18_1_E,fastbus1.Q46962.data[47],N[3][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],17)*/
SIGNAL_MAPPING(DATA12,N04_18_1_T,fastbus2.T81806.data[31],N[3][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],17)*/
SIGNAL_MAPPING(DATA12,N04_18_2_E,fastbus1.Q15372.data[7],N[3][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],17)*/
SIGNAL_MAPPING(DATA12,N04_18_2_T,fastbus2.T81795.data[23],N[3][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],17)*/
SIGNAL_MAPPING(DATA12,N04_19_1_E,fastbus1.Q46962.data[23],N[3][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],18)*/
SIGNAL_MAPPING(DATA12,N04_19_1_T,fastbus2.T48834.data[23],N[3][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],18)*/
SIGNAL_MAPPING(DATA12,N04_19_2_E,fastbus1.Q15372.data[11],N[3][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],18)*/
SIGNAL_MAPPING(DATA12,N04_19_2_T,fastbus2.T81795.data[27],N[3][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],18)*/
SIGNAL_MAPPING(DATA12,N04_20_1_E,fastbus1.Q46962.data[19],N[3][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[3],19)*/
SIGNAL_MAPPING(DATA12,N04_20_1_T,fastbus2.T48834.data[19],N[3][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[3],19)*/
SIGNAL_MAPPING(DATA12,N04_20_2_E,fastbus1.Q15372.data[15],N[3][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[3],19)*/
SIGNAL_MAPPING(DATA12,N04_20_2_T,fastbus2.T81795.data[31],N[3][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[3],19)*/
SIGNAL_MAPPING(DATA12,N05_01_1_E,fastbus1.Q15372.data[16],N[4][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],0)*/
SIGNAL_MAPPING(DATA12,N05_01_1_T,fastbus2.T81859.data[16],N[4][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],0)*/
SIGNAL_MAPPING(DATA12,N05_01_2_E,fastbus1.Q47315.data[12],N[4][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],0)*/
SIGNAL_MAPPING(DATA12,N05_01_2_T,fastbus2.T48854.data[28],N[4][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],0)*/
SIGNAL_MAPPING(DATA12,N05_02_1_E,fastbus1.Q15372.data[20],N[4][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],1)*/
SIGNAL_MAPPING(DATA12,N05_02_1_T,fastbus2.T81859.data[20],N[4][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],1)*/
SIGNAL_MAPPING(DATA12,N05_02_2_E,fastbus1.Q47315.data[8],N[4][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],1)*/
SIGNAL_MAPPING(DATA12,N05_02_2_T,fastbus2.T48854.data[24],N[4][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],1)*/
SIGNAL_MAPPING(DATA12,N05_03_1_E,fastbus1.Q15372.data[24],N[4][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],2)*/
SIGNAL_MAPPING(DATA12,N05_03_1_T,fastbus2.T81859.data[24],N[4][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],2)*/
SIGNAL_MAPPING(DATA12,N05_03_2_E,fastbus1.Q15372.data[32],N[4][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],2)*/
SIGNAL_MAPPING(DATA12,N05_03_2_T,fastbus2.T81808.data[16],N[4][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],2)*/
SIGNAL_MAPPING(DATA12,N05_04_1_E,fastbus1.Q15372.data[28],N[4][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],3)*/
SIGNAL_MAPPING(DATA12,N05_04_1_T,fastbus2.T81859.data[28],N[4][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],3)*/
SIGNAL_MAPPING(DATA12,N05_04_2_E,fastbus1.Q15372.data[36],N[4][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],3)*/
SIGNAL_MAPPING(DATA12,N05_04_2_T,fastbus2.T81808.data[20],N[4][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],3)*/
SIGNAL_MAPPING(DATA12,N05_05_1_E,fastbus1.Q15372.data[17],N[4][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],4)*/
SIGNAL_MAPPING(DATA12,N05_05_1_T,fastbus2.T81859.data[17],N[4][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],4)*/
SIGNAL_MAPPING(DATA12,N05_05_2_E,fastbus1.Q47315.data[9],N[4][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],4)*/
SIGNAL_MAPPING(DATA12,N05_05_2_T,fastbus2.T48854.data[25],N[4][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],4)*/
SIGNAL_MAPPING(DATA12,N05_06_1_E,fastbus1.Q15372.data[21],N[4][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],5)*/
SIGNAL_MAPPING(DATA12,N05_06_1_T,fastbus2.T81859.data[21],N[4][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],5)*/
SIGNAL_MAPPING(DATA12,N05_06_2_E,fastbus1.Q47315.data[13],N[4][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],5)*/
SIGNAL_MAPPING(DATA12,N05_06_2_T,fastbus2.T48854.data[29],N[4][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],5)*/
SIGNAL_MAPPING(DATA12,N05_07_1_E,fastbus1.Q15372.data[25],N[4][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],6)*/
SIGNAL_MAPPING(DATA12,N05_07_1_T,fastbus2.T81859.data[25],N[4][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],6)*/
SIGNAL_MAPPING(DATA12,N05_07_2_E,fastbus1.Q15372.data[40],N[4][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],6)*/
SIGNAL_MAPPING(DATA12,N05_07_2_T,fastbus2.T81808.data[24],N[4][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],6)*/
SIGNAL_MAPPING(DATA12,N05_08_1_E,fastbus1.Q15372.data[29],N[4][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],7)*/
SIGNAL_MAPPING(DATA12,N05_08_1_T,fastbus2.T81859.data[29],N[4][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],7)*/
SIGNAL_MAPPING(DATA12,N05_08_2_E,fastbus1.Q15372.data[44],N[4][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],7)*/
SIGNAL_MAPPING(DATA12,N05_08_2_T,fastbus2.T81808.data[28],N[4][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],7)*/
SIGNAL_MAPPING(DATA12,N05_09_1_E,fastbus1.Q15372.data[18],N[4][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],8)*/
SIGNAL_MAPPING(DATA12,N05_09_1_T,fastbus2.T81859.data[18],N[4][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],8)*/
SIGNAL_MAPPING(DATA12,N05_09_2_E,fastbus1.Q15372.data[33],N[4][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],8)*/
SIGNAL_MAPPING(DATA12,N05_09_2_T,fastbus2.T81808.data[17],N[4][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],8)*/
SIGNAL_MAPPING(DATA12,N05_10_1_E,fastbus1.Q15372.data[22],N[4][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],9)*/
SIGNAL_MAPPING(DATA12,N05_10_1_T,fastbus2.T81859.data[22],N[4][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],9)*/
SIGNAL_MAPPING(DATA12,N05_10_2_E,fastbus1.Q15372.data[37],N[4][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],9)*/
SIGNAL_MAPPING(DATA12,N05_10_2_T,fastbus2.T81808.data[21],N[4][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],9)*/
SIGNAL_MAPPING(DATA12,N05_11_1_E,fastbus1.Q15372.data[26],N[4][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],10)*/
SIGNAL_MAPPING(DATA12,N05_11_1_T,fastbus2.T81859.data[26],N[4][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],10)*/
SIGNAL_MAPPING(DATA12,N05_11_2_E,fastbus1.Q15372.data[41],N[4][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],10)*/
SIGNAL_MAPPING(DATA12,N05_11_2_T,fastbus2.T81808.data[25],N[4][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],10)*/
SIGNAL_MAPPING(DATA12,N05_12_1_E,fastbus1.Q15372.data[30],N[4][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],11)*/
SIGNAL_MAPPING(DATA12,N05_12_1_T,fastbus2.T81859.data[30],N[4][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],11)*/
SIGNAL_MAPPING(DATA12,N05_12_2_E,fastbus1.Q15372.data[45],N[4][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],11)*/
SIGNAL_MAPPING(DATA12,N05_12_2_T,fastbus2.T81808.data[29],N[4][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],11)*/
SIGNAL_MAPPING(DATA12,N05_13_1_E,fastbus1.Q15372.data[19],N[4][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],12)*/
SIGNAL_MAPPING(DATA12,N05_13_1_T,fastbus2.T81859.data[19],N[4][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],12)*/
SIGNAL_MAPPING(DATA12,N05_13_2_E,fastbus1.Q15372.data[34],N[4][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],12)*/
SIGNAL_MAPPING(DATA12,N05_13_2_T,fastbus2.T81808.data[18],N[4][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],12)*/
SIGNAL_MAPPING(DATA12,N05_14_1_E,fastbus1.Q15372.data[23],N[4][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],13)*/
SIGNAL_MAPPING(DATA12,N05_14_1_T,fastbus2.T81859.data[23],N[4][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],13)*/
SIGNAL_MAPPING(DATA12,N05_14_2_E,fastbus1.Q15372.data[38],N[4][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],13)*/
SIGNAL_MAPPING(DATA12,N05_14_2_T,fastbus2.T81808.data[22],N[4][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],13)*/
SIGNAL_MAPPING(DATA12,N05_15_1_E,fastbus1.Q47315.data[14],N[4][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],14)*/
SIGNAL_MAPPING(DATA12,N05_15_1_T,fastbus2.T48854.data[30],N[4][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],14)*/
SIGNAL_MAPPING(DATA12,N05_15_2_E,fastbus1.Q15372.data[42],N[4][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],14)*/
SIGNAL_MAPPING(DATA12,N05_15_2_T,fastbus2.T81808.data[26],N[4][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],14)*/
SIGNAL_MAPPING(DATA12,N05_16_1_E,fastbus1.Q47315.data[10],N[4][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],15)*/
SIGNAL_MAPPING(DATA12,N05_16_1_T,fastbus2.T48854.data[26],N[4][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],15)*/
SIGNAL_MAPPING(DATA12,N05_16_2_E,fastbus1.Q15372.data[46],N[4][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],15)*/
SIGNAL_MAPPING(DATA12,N05_16_2_T,fastbus2.T81808.data[30],N[4][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],15)*/
SIGNAL_MAPPING(DATA12,N05_17_1_E,fastbus1.Q15372.data[27],N[4][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],16)*/
SIGNAL_MAPPING(DATA12,N05_17_1_T,fastbus2.T81859.data[27],N[4][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],16)*/
SIGNAL_MAPPING(DATA12,N05_17_2_E,fastbus1.Q15372.data[35],N[4][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],16)*/
SIGNAL_MAPPING(DATA12,N05_17_2_T,fastbus2.T81808.data[19],N[4][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],16)*/
SIGNAL_MAPPING(DATA12,N05_18_1_E,fastbus1.Q15372.data[31],N[4][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],17)*/
SIGNAL_MAPPING(DATA12,N05_18_1_T,fastbus2.T81859.data[31],N[4][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],17)*/
SIGNAL_MAPPING(DATA12,N05_18_2_E,fastbus1.Q15372.data[39],N[4][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],17)*/
SIGNAL_MAPPING(DATA12,N05_18_2_T,fastbus2.T81808.data[23],N[4][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],17)*/
SIGNAL_MAPPING(DATA12,N05_19_1_E,fastbus1.Q47315.data[15],N[4][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],18)*/
SIGNAL_MAPPING(DATA12,N05_19_1_T,fastbus2.T48854.data[31],N[4][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],18)*/
SIGNAL_MAPPING(DATA12,N05_19_2_E,fastbus1.Q15372.data[43],N[4][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],18)*/
SIGNAL_MAPPING(DATA12,N05_19_2_T,fastbus2.T81808.data[27],N[4][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],18)*/
SIGNAL_MAPPING(DATA12,N05_20_1_E,fastbus1.Q47315.data[11],N[4][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[4],19)*/
SIGNAL_MAPPING(DATA12,N05_20_1_T,fastbus2.T48854.data[27],N[4][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[4],19)*/
SIGNAL_MAPPING(DATA12,N05_20_2_E,fastbus1.Q15372.data[47],N[4][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[4],19)*/
SIGNAL_MAPPING(DATA12,N05_20_2_T,fastbus2.T81808.data[31],N[4][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[4],19)*/
SIGNAL_MAPPING(DATA12,N06_01_1_E,fastbus1.Q47315.data[16],N[5][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],0)*/
SIGNAL_MAPPING(DATA12,N06_01_1_T,fastbus2.T87047.data[16],N[5][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],0)*/
SIGNAL_MAPPING(DATA12,N06_01_2_E,fastbus1.Q47315.data[4],N[5][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],0)*/
SIGNAL_MAPPING(DATA12,N06_01_2_T,fastbus2.T48854.data[20],N[5][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],0)*/
SIGNAL_MAPPING(DATA12,N06_02_1_E,fastbus1.Q47315.data[20],N[5][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],1)*/
SIGNAL_MAPPING(DATA12,N06_02_1_T,fastbus2.T87047.data[20],N[5][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],1)*/
SIGNAL_MAPPING(DATA12,N06_02_2_E,fastbus1.Q47315.data[0],N[5][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],1)*/
SIGNAL_MAPPING(DATA12,N06_02_2_T,fastbus2.T48854.data[16],N[5][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],1)*/
SIGNAL_MAPPING(DATA12,N06_03_1_E,fastbus1.Q47315.data[24],N[5][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],2)*/
SIGNAL_MAPPING(DATA12,N06_03_1_T,fastbus2.T87047.data[24],N[5][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],2)*/
SIGNAL_MAPPING(DATA12,N06_03_2_E,fastbus1.Q46993.data[48],N[5][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],2)*/
SIGNAL_MAPPING(DATA12,N06_03_2_T,fastbus2.T48834.data[32],N[5][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],2)*/
SIGNAL_MAPPING(DATA12,N06_04_1_E,fastbus1.Q47315.data[28],N[5][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],3)*/
SIGNAL_MAPPING(DATA12,N06_04_1_T,fastbus2.T87047.data[28],N[5][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],3)*/
SIGNAL_MAPPING(DATA12,N06_04_2_E,fastbus1.Q46993.data[52],N[5][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],3)*/
SIGNAL_MAPPING(DATA12,N06_04_2_T,fastbus2.T48834.data[36],N[5][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],3)*/
SIGNAL_MAPPING(DATA12,N06_05_1_E,fastbus1.Q47315.data[17],N[5][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],4)*/
SIGNAL_MAPPING(DATA12,N06_05_1_T,fastbus2.T87047.data[17],N[5][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],4)*/
SIGNAL_MAPPING(DATA12,N06_05_2_E,fastbus1.Q47315.data[5],N[5][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],4)*/
SIGNAL_MAPPING(DATA12,N06_05_2_T,fastbus2.T48854.data[21],N[5][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],4)*/
SIGNAL_MAPPING(DATA12,N06_06_1_E,fastbus1.Q47315.data[21],N[5][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],5)*/
SIGNAL_MAPPING(DATA12,N06_06_1_T,fastbus2.T87047.data[21],N[5][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],5)*/
SIGNAL_MAPPING(DATA12,N06_06_2_E,fastbus1.Q47315.data[1],N[5][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],5)*/
SIGNAL_MAPPING(DATA12,N06_06_2_T,fastbus2.T48854.data[17],N[5][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],5)*/
SIGNAL_MAPPING(DATA12,N06_07_1_E,fastbus1.Q47315.data[25],N[5][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],6)*/
SIGNAL_MAPPING(DATA12,N06_07_1_T,fastbus2.T87047.data[25],N[5][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],6)*/
SIGNAL_MAPPING(DATA12,N06_07_2_E,fastbus1.Q46993.data[56],N[5][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],6)*/
SIGNAL_MAPPING(DATA12,N06_07_2_T,fastbus2.T48834.data[40],N[5][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],6)*/
SIGNAL_MAPPING(DATA12,N06_08_1_E,fastbus1.Q47315.data[29],N[5][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],7)*/
SIGNAL_MAPPING(DATA12,N06_08_1_T,fastbus2.T87047.data[29],N[5][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],7)*/
SIGNAL_MAPPING(DATA12,N06_08_2_E,fastbus1.Q46993.data[60],N[5][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],7)*/
SIGNAL_MAPPING(DATA12,N06_08_2_T,fastbus2.T48834.data[44],N[5][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],7)*/
SIGNAL_MAPPING(DATA12,N06_09_1_E,fastbus1.Q47315.data[18],N[5][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],8)*/
SIGNAL_MAPPING(DATA12,N06_09_1_T,fastbus2.T87047.data[18],N[5][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],8)*/
SIGNAL_MAPPING(DATA12,N06_09_2_E,fastbus1.Q46993.data[49],N[5][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],8)*/
SIGNAL_MAPPING(DATA12,N06_09_2_T,fastbus2.T48834.data[33],N[5][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],8)*/
SIGNAL_MAPPING(DATA12,N06_10_1_E,fastbus1.Q47315.data[22],N[5][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],9)*/
SIGNAL_MAPPING(DATA12,N06_10_1_T,fastbus2.T87047.data[22],N[5][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],9)*/
SIGNAL_MAPPING(DATA12,N06_10_2_E,fastbus1.Q46993.data[53],N[5][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],9)*/
SIGNAL_MAPPING(DATA12,N06_10_2_T,fastbus2.T48834.data[37],N[5][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],9)*/
SIGNAL_MAPPING(DATA12,N06_11_1_E,fastbus1.Q47315.data[26],N[5][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],10)*/
SIGNAL_MAPPING(DATA12,N06_11_1_T,fastbus2.T87047.data[26],N[5][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],10)*/
SIGNAL_MAPPING(DATA12,N06_11_2_E,fastbus1.Q46993.data[57],N[5][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],10)*/
SIGNAL_MAPPING(DATA12,N06_11_2_T,fastbus2.T48834.data[41],N[5][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],10)*/
SIGNAL_MAPPING(DATA12,N06_12_1_E,fastbus1.Q47315.data[30],N[5][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],11)*/
SIGNAL_MAPPING(DATA12,N06_12_1_T,fastbus2.T87047.data[30],N[5][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],11)*/
SIGNAL_MAPPING(DATA12,N06_12_2_E,fastbus1.Q46993.data[61],N[5][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],11)*/
SIGNAL_MAPPING(DATA12,N06_12_2_T,fastbus2.T48834.data[45],N[5][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],11)*/
SIGNAL_MAPPING(DATA12,N06_13_1_E,fastbus1.Q47315.data[19],N[5][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],12)*/
SIGNAL_MAPPING(DATA12,N06_13_1_T,fastbus2.T87047.data[19],N[5][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],12)*/
SIGNAL_MAPPING(DATA12,N06_13_2_E,fastbus1.Q46993.data[50],N[5][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],12)*/
SIGNAL_MAPPING(DATA12,N06_13_2_T,fastbus2.T48834.data[34],N[5][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],12)*/
SIGNAL_MAPPING(DATA12,N06_14_1_E,fastbus1.Q47315.data[23],N[5][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],13)*/
SIGNAL_MAPPING(DATA12,N06_14_1_T,fastbus2.T87047.data[23],N[5][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],13)*/
SIGNAL_MAPPING(DATA12,N06_14_2_E,fastbus1.Q46993.data[54],N[5][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],13)*/
SIGNAL_MAPPING(DATA12,N06_14_2_T,fastbus2.T48834.data[38],N[5][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],13)*/
SIGNAL_MAPPING(DATA12,N06_15_1_E,fastbus1.Q47315.data[6],N[5][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],14)*/
SIGNAL_MAPPING(DATA12,N06_15_1_T,fastbus2.T48854.data[22],N[5][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],14)*/
SIGNAL_MAPPING(DATA12,N06_15_2_E,fastbus1.Q46993.data[58],N[5][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],14)*/
SIGNAL_MAPPING(DATA12,N06_15_2_T,fastbus2.T48834.data[42],N[5][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],14)*/
SIGNAL_MAPPING(DATA12,N06_16_1_E,fastbus1.Q47315.data[2],N[5][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],15)*/
SIGNAL_MAPPING(DATA12,N06_16_1_T,fastbus2.T48854.data[18],N[5][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],15)*/
SIGNAL_MAPPING(DATA12,N06_16_2_E,fastbus1.Q46993.data[62],N[5][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],15)*/
SIGNAL_MAPPING(DATA12,N06_16_2_T,fastbus2.T48834.data[46],N[5][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],15)*/
SIGNAL_MAPPING(DATA12,N06_17_1_E,fastbus1.Q47315.data[27],N[5][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],16)*/
SIGNAL_MAPPING(DATA12,N06_17_1_T,fastbus2.T87047.data[27],N[5][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],16)*/
SIGNAL_MAPPING(DATA12,N06_17_2_E,fastbus1.Q46993.data[51],N[5][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],16)*/
SIGNAL_MAPPING(DATA12,N06_17_2_T,fastbus2.T48834.data[35],N[5][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],16)*/
SIGNAL_MAPPING(DATA12,N06_18_1_E,fastbus1.Q47315.data[31],N[5][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],17)*/
SIGNAL_MAPPING(DATA12,N06_18_1_T,fastbus2.T87047.data[31],N[5][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],17)*/
SIGNAL_MAPPING(DATA12,N06_18_2_E,fastbus1.Q46993.data[55],N[5][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],17)*/
SIGNAL_MAPPING(DATA12,N06_18_2_T,fastbus2.T48834.data[39],N[5][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],17)*/
SIGNAL_MAPPING(DATA12,N06_19_1_E,fastbus1.Q47315.data[7],N[5][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],18)*/
SIGNAL_MAPPING(DATA12,N06_19_1_T,fastbus2.T48854.data[23],N[5][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],18)*/
SIGNAL_MAPPING(DATA12,N06_19_2_E,fastbus1.Q46993.data[59],N[5][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],18)*/
SIGNAL_MAPPING(DATA12,N06_19_2_T,fastbus2.T48834.data[43],N[5][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],18)*/
SIGNAL_MAPPING(DATA12,N06_20_1_E,fastbus1.Q47315.data[3],N[5][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[5],19)*/
SIGNAL_MAPPING(DATA12,N06_20_1_T,fastbus2.T48854.data[19],N[5][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[5],19)*/
SIGNAL_MAPPING(DATA12,N06_20_2_E,fastbus1.Q46993.data[63],N[5][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[5],19)*/
SIGNAL_MAPPING(DATA12,N06_20_2_T,fastbus2.T48834.data[47],N[5][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[5],19)*/
SIGNAL_MAPPING(DATA12,N07_01_1_E,fastbus1.Q46993.data[64],N[6][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],0)*/
SIGNAL_MAPPING(DATA12,N07_01_1_T,fastbus2.T81806.data[32],N[6][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],0)*/
SIGNAL_MAPPING(DATA12,N07_01_2_E,fastbus1.Q15358.data[60],N[6][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],0)*/
SIGNAL_MAPPING(DATA12,N07_01_2_T,fastbus2.T81859.data[44],N[6][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],0)*/
SIGNAL_MAPPING(DATA12,N07_02_1_E,fastbus1.Q46993.data[68],N[6][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],1)*/
SIGNAL_MAPPING(DATA12,N07_02_1_T,fastbus2.T81806.data[36],N[6][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],1)*/
SIGNAL_MAPPING(DATA12,N07_02_2_E,fastbus1.Q15358.data[56],N[6][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],1)*/
SIGNAL_MAPPING(DATA12,N07_02_2_T,fastbus2.T81859.data[40],N[6][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],1)*/
SIGNAL_MAPPING(DATA12,N07_03_1_E,fastbus1.Q46993.data[72],N[6][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],2)*/
SIGNAL_MAPPING(DATA12,N07_03_1_T,fastbus2.T81806.data[40],N[6][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],2)*/
SIGNAL_MAPPING(DATA12,N07_03_2_E,fastbus1.Q46993.data[80],N[6][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],2)*/
SIGNAL_MAPPING(DATA12,N07_03_2_T,fastbus2.T81795.data[32],N[6][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],2)*/
SIGNAL_MAPPING(DATA12,N07_04_1_E,fastbus1.Q46993.data[76],N[6][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],3)*/
SIGNAL_MAPPING(DATA12,N07_04_1_T,fastbus2.T81806.data[44],N[6][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],3)*/
SIGNAL_MAPPING(DATA12,N07_04_2_E,fastbus1.Q46993.data[84],N[6][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],3)*/
SIGNAL_MAPPING(DATA12,N07_04_2_T,fastbus2.T81795.data[36],N[6][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],3)*/
SIGNAL_MAPPING(DATA12,N07_05_1_E,fastbus1.Q46993.data[65],N[6][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],4)*/
SIGNAL_MAPPING(DATA12,N07_05_1_T,fastbus2.T81806.data[33],N[6][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],4)*/
SIGNAL_MAPPING(DATA12,N07_05_2_E,fastbus1.Q15358.data[57],N[6][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],4)*/
SIGNAL_MAPPING(DATA12,N07_05_2_T,fastbus2.T81859.data[41],N[6][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],4)*/
SIGNAL_MAPPING(DATA12,N07_06_1_E,fastbus1.Q46993.data[69],N[6][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],5)*/
SIGNAL_MAPPING(DATA12,N07_06_1_T,fastbus2.T81806.data[37],N[6][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],5)*/
SIGNAL_MAPPING(DATA12,N07_06_2_E,fastbus1.Q15358.data[61],N[6][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],5)*/
SIGNAL_MAPPING(DATA12,N07_06_2_T,fastbus2.T81859.data[45],N[6][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],5)*/
SIGNAL_MAPPING(DATA12,N07_07_1_E,fastbus1.Q46993.data[73],N[6][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],6)*/
SIGNAL_MAPPING(DATA12,N07_07_1_T,fastbus2.T81806.data[41],N[6][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],6)*/
SIGNAL_MAPPING(DATA12,N07_07_2_E,fastbus1.Q46993.data[88],N[6][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],6)*/
SIGNAL_MAPPING(DATA12,N07_07_2_T,fastbus2.T81795.data[40],N[6][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],6)*/
SIGNAL_MAPPING(DATA12,N07_08_1_E,fastbus1.Q46993.data[77],N[6][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],7)*/
SIGNAL_MAPPING(DATA12,N07_08_1_T,fastbus2.T81806.data[45],N[6][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],7)*/
SIGNAL_MAPPING(DATA12,N07_08_2_E,fastbus1.Q46993.data[92],N[6][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],7)*/
SIGNAL_MAPPING(DATA12,N07_08_2_T,fastbus2.T81795.data[44],N[6][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],7)*/
SIGNAL_MAPPING(DATA12,N07_09_1_E,fastbus1.Q46993.data[66],N[6][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],8)*/
SIGNAL_MAPPING(DATA12,N07_09_1_T,fastbus2.T81806.data[34],N[6][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],8)*/
SIGNAL_MAPPING(DATA12,N07_09_2_E,fastbus1.Q46993.data[81],N[6][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],8)*/
SIGNAL_MAPPING(DATA12,N07_09_2_T,fastbus2.T81795.data[33],N[6][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],8)*/
SIGNAL_MAPPING(DATA12,N07_10_1_E,fastbus1.Q46993.data[70],N[6][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],9)*/
SIGNAL_MAPPING(DATA12,N07_10_1_T,fastbus2.T81806.data[38],N[6][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],9)*/
SIGNAL_MAPPING(DATA12,N07_10_2_E,fastbus1.Q46993.data[85],N[6][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],9)*/
SIGNAL_MAPPING(DATA12,N07_10_2_T,fastbus2.T81795.data[37],N[6][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],9)*/
SIGNAL_MAPPING(DATA12,N07_11_1_E,fastbus1.Q46993.data[74],N[6][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],10)*/
SIGNAL_MAPPING(DATA12,N07_11_1_T,fastbus2.T81806.data[42],N[6][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],10)*/
SIGNAL_MAPPING(DATA12,N07_11_2_E,fastbus1.Q46993.data[89],N[6][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],10)*/
SIGNAL_MAPPING(DATA12,N07_11_2_T,fastbus2.T81795.data[41],N[6][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],10)*/
SIGNAL_MAPPING(DATA12,N07_12_1_E,fastbus1.Q46993.data[78],N[6][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],11)*/
SIGNAL_MAPPING(DATA12,N07_12_1_T,fastbus2.T81806.data[46],N[6][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],11)*/
SIGNAL_MAPPING(DATA12,N07_12_2_E,fastbus1.Q46993.data[93],N[6][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],11)*/
SIGNAL_MAPPING(DATA12,N07_12_2_T,fastbus2.T81795.data[45],N[6][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],11)*/
SIGNAL_MAPPING(DATA12,N07_13_1_E,fastbus1.Q46993.data[67],N[6][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],12)*/
SIGNAL_MAPPING(DATA12,N07_13_1_T,fastbus2.T81806.data[35],N[6][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],12)*/
SIGNAL_MAPPING(DATA12,N07_13_2_E,fastbus1.Q46993.data[82],N[6][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],12)*/
SIGNAL_MAPPING(DATA12,N07_13_2_T,fastbus2.T81795.data[34],N[6][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],12)*/
SIGNAL_MAPPING(DATA12,N07_14_1_E,fastbus1.Q46993.data[71],N[6][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],13)*/
SIGNAL_MAPPING(DATA12,N07_14_1_T,fastbus2.T81806.data[39],N[6][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],13)*/
SIGNAL_MAPPING(DATA12,N07_14_2_E,fastbus1.Q46993.data[86],N[6][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],13)*/
SIGNAL_MAPPING(DATA12,N07_14_2_T,fastbus2.T81795.data[38],N[6][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],13)*/
SIGNAL_MAPPING(DATA12,N07_15_1_E,fastbus1.Q15358.data[62],N[6][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],14)*/
SIGNAL_MAPPING(DATA12,N07_15_1_T,fastbus2.T81859.data[46],N[6][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],14)*/
SIGNAL_MAPPING(DATA12,N07_15_2_E,fastbus1.Q46993.data[90],N[6][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],14)*/
SIGNAL_MAPPING(DATA12,N07_15_2_T,fastbus2.T81795.data[42],N[6][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],14)*/
SIGNAL_MAPPING(DATA12,N07_16_1_E,fastbus1.Q15358.data[58],N[6][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],15)*/
SIGNAL_MAPPING(DATA12,N07_16_1_T,fastbus2.T81859.data[42],N[6][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],15)*/
SIGNAL_MAPPING(DATA12,N07_16_2_E,fastbus1.Q46993.data[94],N[6][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],15)*/
SIGNAL_MAPPING(DATA12,N07_16_2_T,fastbus2.T81795.data[46],N[6][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],15)*/
SIGNAL_MAPPING(DATA12,N07_17_1_E,fastbus1.Q46993.data[75],N[6][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],16)*/
SIGNAL_MAPPING(DATA12,N07_17_1_T,fastbus2.T81806.data[43],N[6][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],16)*/
SIGNAL_MAPPING(DATA12,N07_17_2_E,fastbus1.Q46993.data[83],N[6][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],16)*/
SIGNAL_MAPPING(DATA12,N07_17_2_T,fastbus2.T81795.data[35],N[6][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],16)*/
SIGNAL_MAPPING(DATA12,N07_18_1_E,fastbus1.Q46993.data[79],N[6][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],17)*/
SIGNAL_MAPPING(DATA12,N07_18_1_T,fastbus2.T81806.data[47],N[6][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],17)*/
SIGNAL_MAPPING(DATA12,N07_18_2_E,fastbus1.Q46993.data[87],N[6][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],17)*/
SIGNAL_MAPPING(DATA12,N07_18_2_T,fastbus2.T81795.data[39],N[6][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],17)*/
SIGNAL_MAPPING(DATA12,N07_19_1_E,fastbus1.Q15358.data[63],N[6][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],18)*/
SIGNAL_MAPPING(DATA12,N07_19_1_T,fastbus2.T81859.data[47],N[6][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],18)*/
SIGNAL_MAPPING(DATA12,N07_19_2_E,fastbus1.Q46993.data[91],N[6][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],18)*/
SIGNAL_MAPPING(DATA12,N07_19_2_T,fastbus2.T81795.data[43],N[6][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],18)*/
SIGNAL_MAPPING(DATA12,N07_20_1_E,fastbus1.Q15358.data[59],N[6][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[6],19)*/
SIGNAL_MAPPING(DATA12,N07_20_1_T,fastbus2.T81859.data[43],N[6][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[6],19)*/
SIGNAL_MAPPING(DATA12,N07_20_2_E,fastbus1.Q46993.data[95],N[6][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[6],19)*/
SIGNAL_MAPPING(DATA12,N07_20_2_T,fastbus2.T81795.data[47],N[6][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[6],19)*/
SIGNAL_MAPPING(DATA12,N08_01_1_E,fastbus1.Q15358.data[64],N[7][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],0)*/
SIGNAL_MAPPING(DATA12,N08_01_1_T,fastbus2.T81808.data[32],N[7][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],0)*/
SIGNAL_MAPPING(DATA12,N08_01_2_E,fastbus1.Q15358.data[52],N[7][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],0)*/
SIGNAL_MAPPING(DATA12,N08_01_2_T,fastbus2.T81859.data[36],N[7][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],0)*/
SIGNAL_MAPPING(DATA12,N08_02_1_E,fastbus1.Q15358.data[68],N[7][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],1)*/
SIGNAL_MAPPING(DATA12,N08_02_1_T,fastbus2.T81808.data[36],N[7][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],1)*/
SIGNAL_MAPPING(DATA12,N08_02_2_E,fastbus1.Q15358.data[48],N[7][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],1)*/
SIGNAL_MAPPING(DATA12,N08_02_2_T,fastbus2.T81859.data[32],N[7][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],1)*/
SIGNAL_MAPPING(DATA12,N08_03_1_E,fastbus1.Q15358.data[72],N[7][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],2)*/
SIGNAL_MAPPING(DATA12,N08_03_1_T,fastbus2.T81808.data[40],N[7][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],2)*/
SIGNAL_MAPPING(DATA12,N08_03_2_E,fastbus1.Q15358.data[80],N[7][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],2)*/
SIGNAL_MAPPING(DATA12,N08_03_2_T,fastbus2.T48854.data[32],N[7][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],2)*/
SIGNAL_MAPPING(DATA12,N08_04_1_E,fastbus1.Q15358.data[76],N[7][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],3)*/
SIGNAL_MAPPING(DATA12,N08_04_1_T,fastbus2.T81808.data[44],N[7][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],3)*/
SIGNAL_MAPPING(DATA12,N08_04_2_E,fastbus1.Q15358.data[84],N[7][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],3)*/
SIGNAL_MAPPING(DATA12,N08_04_2_T,fastbus2.T48854.data[36],N[7][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],3)*/
SIGNAL_MAPPING(DATA12,N08_05_1_E,fastbus1.Q15358.data[65],N[7][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],4)*/
SIGNAL_MAPPING(DATA12,N08_05_1_T,fastbus2.T81808.data[33],N[7][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],4)*/
SIGNAL_MAPPING(DATA12,N08_05_2_E,fastbus1.Q15358.data[53],N[7][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],4)*/
SIGNAL_MAPPING(DATA12,N08_05_2_T,fastbus2.T81859.data[37],N[7][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],4)*/
SIGNAL_MAPPING(DATA12,N08_06_1_E,fastbus1.Q15358.data[69],N[7][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],5)*/
SIGNAL_MAPPING(DATA12,N08_06_1_T,fastbus2.T81808.data[37],N[7][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],5)*/
SIGNAL_MAPPING(DATA12,N08_06_2_E,fastbus1.Q15358.data[49],N[7][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],5)*/
SIGNAL_MAPPING(DATA12,N08_06_2_T,fastbus2.T81859.data[33],N[7][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],5)*/
SIGNAL_MAPPING(DATA12,N08_07_1_E,fastbus1.Q15358.data[73],N[7][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],6)*/
SIGNAL_MAPPING(DATA12,N08_07_1_T,fastbus2.T81808.data[41],N[7][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],6)*/
SIGNAL_MAPPING(DATA12,N08_07_2_E,fastbus1.Q15358.data[88],N[7][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],6)*/
SIGNAL_MAPPING(DATA12,N08_07_2_T,fastbus2.T48854.data[40],N[7][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],6)*/
SIGNAL_MAPPING(DATA12,N08_08_1_E,fastbus1.Q15358.data[77],N[7][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],7)*/
SIGNAL_MAPPING(DATA12,N08_08_1_T,fastbus2.T81808.data[45],N[7][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],7)*/
SIGNAL_MAPPING(DATA12,N08_08_2_E,fastbus1.Q15358.data[92],N[7][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],7)*/
SIGNAL_MAPPING(DATA12,N08_08_2_T,fastbus2.T48854.data[44],N[7][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],7)*/
SIGNAL_MAPPING(DATA12,N08_09_1_E,fastbus1.Q15358.data[66],N[7][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],8)*/
SIGNAL_MAPPING(DATA12,N08_09_1_T,fastbus2.T81808.data[34],N[7][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],8)*/
SIGNAL_MAPPING(DATA12,N08_09_2_E,fastbus1.Q15358.data[81],N[7][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],8)*/
SIGNAL_MAPPING(DATA12,N08_09_2_T,fastbus2.T48854.data[33],N[7][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],8)*/
SIGNAL_MAPPING(DATA12,N08_10_1_E,fastbus1.Q15358.data[70],N[7][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],9)*/
SIGNAL_MAPPING(DATA12,N08_10_1_T,fastbus2.T81808.data[38],N[7][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],9)*/
SIGNAL_MAPPING(DATA12,N08_10_2_E,fastbus1.Q15358.data[85],N[7][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],9)*/
SIGNAL_MAPPING(DATA12,N08_10_2_T,fastbus2.T48854.data[37],N[7][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],9)*/
SIGNAL_MAPPING(DATA12,N08_11_1_E,fastbus1.Q15358.data[74],N[7][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],10)*/
SIGNAL_MAPPING(DATA12,N08_11_1_T,fastbus2.T81808.data[42],N[7][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],10)*/
SIGNAL_MAPPING(DATA12,N08_11_2_E,fastbus1.Q15358.data[89],N[7][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],10)*/
SIGNAL_MAPPING(DATA12,N08_11_2_T,fastbus2.T48854.data[41],N[7][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],10)*/
SIGNAL_MAPPING(DATA12,N08_12_1_E,fastbus1.Q15358.data[78],N[7][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],11)*/
SIGNAL_MAPPING(DATA12,N08_12_1_T,fastbus2.T81808.data[46],N[7][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],11)*/
SIGNAL_MAPPING(DATA12,N08_12_2_E,fastbus1.Q15358.data[93],N[7][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],11)*/
SIGNAL_MAPPING(DATA12,N08_12_2_T,fastbus2.T48854.data[45],N[7][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],11)*/
SIGNAL_MAPPING(DATA12,N08_13_1_E,fastbus1.Q15358.data[67],N[7][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],12)*/
SIGNAL_MAPPING(DATA12,N08_13_1_T,fastbus2.T81808.data[35],N[7][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],12)*/
SIGNAL_MAPPING(DATA12,N08_13_2_E,fastbus1.Q15358.data[82],N[7][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],12)*/
SIGNAL_MAPPING(DATA12,N08_13_2_T,fastbus2.T48854.data[34],N[7][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],12)*/
SIGNAL_MAPPING(DATA12,N08_14_1_E,fastbus1.Q15358.data[71],N[7][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],13)*/
SIGNAL_MAPPING(DATA12,N08_14_1_T,fastbus2.T81808.data[39],N[7][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],13)*/
SIGNAL_MAPPING(DATA12,N08_14_2_E,fastbus1.Q15358.data[86],N[7][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],13)*/
SIGNAL_MAPPING(DATA12,N08_14_2_T,fastbus2.T48854.data[38],N[7][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],13)*/
SIGNAL_MAPPING(DATA12,N08_15_1_E,fastbus1.Q15358.data[54],N[7][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],14)*/
SIGNAL_MAPPING(DATA12,N08_15_1_T,fastbus2.T81859.data[38],N[7][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],14)*/
SIGNAL_MAPPING(DATA12,N08_15_2_E,fastbus1.Q15358.data[90],N[7][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],14)*/
SIGNAL_MAPPING(DATA12,N08_15_2_T,fastbus2.T48854.data[42],N[7][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],14)*/
SIGNAL_MAPPING(DATA12,N08_16_1_E,fastbus1.Q15358.data[50],N[7][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],15)*/
SIGNAL_MAPPING(DATA12,N08_16_1_T,fastbus2.T81859.data[34],N[7][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],15)*/
SIGNAL_MAPPING(DATA12,N08_16_2_E,fastbus1.Q15358.data[94],N[7][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],15)*/
SIGNAL_MAPPING(DATA12,N08_16_2_T,fastbus2.T48854.data[46],N[7][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],15)*/
SIGNAL_MAPPING(DATA12,N08_17_1_E,fastbus1.Q15358.data[75],N[7][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],16)*/
SIGNAL_MAPPING(DATA12,N08_17_1_T,fastbus2.T81808.data[43],N[7][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],16)*/
SIGNAL_MAPPING(DATA12,N08_17_2_E,fastbus1.Q15358.data[83],N[7][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],16)*/
SIGNAL_MAPPING(DATA12,N08_17_2_T,fastbus2.T48854.data[35],N[7][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],16)*/
SIGNAL_MAPPING(DATA12,N08_18_1_E,fastbus1.Q15358.data[79],N[7][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],17)*/
SIGNAL_MAPPING(DATA12,N08_18_1_T,fastbus2.T81808.data[47],N[7][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],17)*/
SIGNAL_MAPPING(DATA12,N08_18_2_E,fastbus1.Q15358.data[87],N[7][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],17)*/
SIGNAL_MAPPING(DATA12,N08_18_2_T,fastbus2.T48854.data[39],N[7][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],17)*/
SIGNAL_MAPPING(DATA12,N08_19_1_E,fastbus1.Q15358.data[55],N[7][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],18)*/
SIGNAL_MAPPING(DATA12,N08_19_1_T,fastbus2.T81859.data[39],N[7][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],18)*/
SIGNAL_MAPPING(DATA12,N08_19_2_E,fastbus1.Q15358.data[91],N[7][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],18)*/
SIGNAL_MAPPING(DATA12,N08_19_2_T,fastbus2.T48854.data[43],N[7][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],18)*/
SIGNAL_MAPPING(DATA12,N08_20_1_E,fastbus1.Q15358.data[51],N[7][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[7],19)*/
SIGNAL_MAPPING(DATA12,N08_20_1_T,fastbus2.T81859.data[35],N[7][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[7],19)*/
SIGNAL_MAPPING(DATA12,N08_20_2_E,fastbus1.Q15358.data[95],N[7][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[7],19)*/
SIGNAL_MAPPING(DATA12,N08_20_2_T,fastbus2.T48854.data[47],N[7][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[7],19)*/
SIGNAL_MAPPING(DATA12,N09_01_1_E,fastbus1.Q46962.data[48],N[8][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],0)*/
SIGNAL_MAPPING(DATA12,N09_01_1_T,fastbus2.T87047.data[32],N[8][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],0)*/
SIGNAL_MAPPING(DATA12,N09_01_2_E,fastbus1.Q46962.data[92],N[8][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],0)*/
SIGNAL_MAPPING(DATA12,N09_01_2_T,fastbus2.T81808.data[60],N[8][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],0)*/
SIGNAL_MAPPING(DATA12,N09_02_1_E,fastbus1.Q46962.data[52],N[8][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],1)*/
SIGNAL_MAPPING(DATA12,N09_02_1_T,fastbus2.T87047.data[36],N[8][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],1)*/
SIGNAL_MAPPING(DATA12,N09_02_2_E,fastbus1.Q46962.data[88],N[8][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],1)*/
SIGNAL_MAPPING(DATA12,N09_02_2_T,fastbus2.T81808.data[56],N[8][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],1)*/
SIGNAL_MAPPING(DATA12,N09_03_1_E,fastbus1.Q46962.data[56],N[8][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],2)*/
SIGNAL_MAPPING(DATA12,N09_03_1_T,fastbus2.T87047.data[40],N[8][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],2)*/
SIGNAL_MAPPING(DATA12,N09_03_2_E,fastbus1.Q46962.data[64],N[8][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],2)*/
SIGNAL_MAPPING(DATA12,N09_03_2_T,fastbus2.T81859.data[48],N[8][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],2)*/
SIGNAL_MAPPING(DATA12,N09_04_1_E,fastbus1.Q46962.data[60],N[8][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],3)*/
SIGNAL_MAPPING(DATA12,N09_04_1_T,fastbus2.T87047.data[44],N[8][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],3)*/
SIGNAL_MAPPING(DATA12,N09_04_2_E,fastbus1.Q46962.data[68],N[8][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],3)*/
SIGNAL_MAPPING(DATA12,N09_04_2_T,fastbus2.T81859.data[52],N[8][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],3)*/
SIGNAL_MAPPING(DATA12,N09_05_1_E,fastbus1.Q46962.data[49],N[8][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],4)*/
SIGNAL_MAPPING(DATA12,N09_05_1_T,fastbus2.T87047.data[33],N[8][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],4)*/
SIGNAL_MAPPING(DATA12,N09_05_2_E,fastbus1.Q46962.data[89],N[8][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],4)*/
SIGNAL_MAPPING(DATA12,N09_05_2_T,fastbus2.T81808.data[57],N[8][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],4)*/
SIGNAL_MAPPING(DATA12,N09_06_1_E,fastbus1.Q46962.data[53],N[8][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],5)*/
SIGNAL_MAPPING(DATA12,N09_06_1_T,fastbus2.T87047.data[37],N[8][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],5)*/
SIGNAL_MAPPING(DATA12,N09_06_2_E,fastbus1.Q46962.data[93],N[8][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],5)*/
SIGNAL_MAPPING(DATA12,N09_06_2_T,fastbus2.T81808.data[61],N[8][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],5)*/
SIGNAL_MAPPING(DATA12,N09_07_1_E,fastbus1.Q46962.data[57],N[8][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],6)*/
SIGNAL_MAPPING(DATA12,N09_07_1_T,fastbus2.T87047.data[41],N[8][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],6)*/
SIGNAL_MAPPING(DATA12,N09_07_2_E,fastbus1.Q46962.data[72],N[8][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],6)*/
SIGNAL_MAPPING(DATA12,N09_07_2_T,fastbus2.T81859.data[56],N[8][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],6)*/
SIGNAL_MAPPING(DATA12,N09_08_1_E,fastbus1.Q46962.data[61],N[8][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],7)*/
SIGNAL_MAPPING(DATA12,N09_08_1_T,fastbus2.T87047.data[45],N[8][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],7)*/
SIGNAL_MAPPING(DATA12,N09_08_2_E,fastbus1.Q46962.data[76],N[8][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],7)*/
SIGNAL_MAPPING(DATA12,N09_08_2_T,fastbus2.T81859.data[60],N[8][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],7)*/
SIGNAL_MAPPING(DATA12,N09_09_1_E,fastbus1.Q46962.data[50],N[8][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],8)*/
SIGNAL_MAPPING(DATA12,N09_09_1_T,fastbus2.T87047.data[34],N[8][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],8)*/
SIGNAL_MAPPING(DATA12,N09_09_2_E,fastbus1.Q46962.data[65],N[8][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],8)*/
SIGNAL_MAPPING(DATA12,N09_09_2_T,fastbus2.T81859.data[49],N[8][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],8)*/
SIGNAL_MAPPING(DATA12,N09_10_1_E,fastbus1.Q46962.data[54],N[8][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],9)*/
SIGNAL_MAPPING(DATA12,N09_10_1_T,fastbus2.T87047.data[38],N[8][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],9)*/
SIGNAL_MAPPING(DATA12,N09_10_2_E,fastbus1.Q46962.data[69],N[8][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],9)*/
SIGNAL_MAPPING(DATA12,N09_10_2_T,fastbus2.T81859.data[53],N[8][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],9)*/
SIGNAL_MAPPING(DATA12,N09_11_1_E,fastbus1.Q46962.data[58],N[8][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],10)*/
SIGNAL_MAPPING(DATA12,N09_11_1_T,fastbus2.T87047.data[42],N[8][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],10)*/
SIGNAL_MAPPING(DATA12,N09_11_2_E,fastbus1.Q46962.data[73],N[8][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],10)*/
SIGNAL_MAPPING(DATA12,N09_11_2_T,fastbus2.T81859.data[57],N[8][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],10)*/
SIGNAL_MAPPING(DATA12,N09_12_1_E,fastbus1.Q46962.data[62],N[8][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],11)*/
SIGNAL_MAPPING(DATA12,N09_12_1_T,fastbus2.T87047.data[46],N[8][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],11)*/
SIGNAL_MAPPING(DATA12,N09_12_2_E,fastbus1.Q46962.data[77],N[8][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],11)*/
SIGNAL_MAPPING(DATA12,N09_12_2_T,fastbus2.T81859.data[61],N[8][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],11)*/
SIGNAL_MAPPING(DATA12,N09_13_1_E,fastbus1.Q46962.data[51],N[8][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],12)*/
SIGNAL_MAPPING(DATA12,N09_13_1_T,fastbus2.T87047.data[35],N[8][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],12)*/
SIGNAL_MAPPING(DATA12,N09_13_2_E,fastbus1.Q46962.data[66],N[8][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],12)*/
SIGNAL_MAPPING(DATA12,N09_13_2_T,fastbus2.T81859.data[50],N[8][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],12)*/
SIGNAL_MAPPING(DATA12,N09_14_1_E,fastbus1.Q46962.data[55],N[8][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],13)*/
SIGNAL_MAPPING(DATA12,N09_14_1_T,fastbus2.T87047.data[39],N[8][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],13)*/
SIGNAL_MAPPING(DATA12,N09_14_2_E,fastbus1.Q46962.data[70],N[8][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],13)*/
SIGNAL_MAPPING(DATA12,N09_14_2_T,fastbus2.T81859.data[54],N[8][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],13)*/
SIGNAL_MAPPING(DATA12,N09_15_1_E,fastbus1.Q46962.data[94],N[8][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],14)*/
SIGNAL_MAPPING(DATA12,N09_15_1_T,fastbus2.T81808.data[62],N[8][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],14)*/
SIGNAL_MAPPING(DATA12,N09_15_2_E,fastbus1.Q46962.data[74],N[8][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],14)*/
SIGNAL_MAPPING(DATA12,N09_15_2_T,fastbus2.T81859.data[58],N[8][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],14)*/
SIGNAL_MAPPING(DATA12,N09_16_1_E,fastbus1.Q46962.data[90],N[8][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],15)*/
SIGNAL_MAPPING(DATA12,N09_16_1_T,fastbus2.T81808.data[58],N[8][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],15)*/
SIGNAL_MAPPING(DATA12,N09_16_2_E,fastbus1.Q46962.data[78],N[8][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],15)*/
SIGNAL_MAPPING(DATA12,N09_16_2_T,fastbus2.T81859.data[62],N[8][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],15)*/
SIGNAL_MAPPING(DATA12,N09_17_1_E,fastbus1.Q46962.data[59],N[8][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],16)*/
SIGNAL_MAPPING(DATA12,N09_17_1_T,fastbus2.T87047.data[43],N[8][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],16)*/
SIGNAL_MAPPING(DATA12,N09_17_2_E,fastbus1.Q46962.data[67],N[8][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],16)*/
SIGNAL_MAPPING(DATA12,N09_17_2_T,fastbus2.T81859.data[51],N[8][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],16)*/
SIGNAL_MAPPING(DATA12,N09_18_1_E,fastbus1.Q46962.data[63],N[8][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],17)*/
SIGNAL_MAPPING(DATA12,N09_18_1_T,fastbus2.T87047.data[47],N[8][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],17)*/
SIGNAL_MAPPING(DATA12,N09_18_2_E,fastbus1.Q46962.data[71],N[8][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],17)*/
SIGNAL_MAPPING(DATA12,N09_18_2_T,fastbus2.T81859.data[55],N[8][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],17)*/
SIGNAL_MAPPING(DATA12,N09_19_1_E,fastbus1.Q46962.data[95],N[8][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],18)*/
SIGNAL_MAPPING(DATA12,N09_19_1_T,fastbus2.T81808.data[63],N[8][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],18)*/
SIGNAL_MAPPING(DATA12,N09_19_2_E,fastbus1.Q46962.data[75],N[8][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],18)*/
SIGNAL_MAPPING(DATA12,N09_19_2_T,fastbus2.T81859.data[59],N[8][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],18)*/
SIGNAL_MAPPING(DATA12,N09_20_1_E,fastbus1.Q46962.data[91],N[8][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[8],19)*/
SIGNAL_MAPPING(DATA12,N09_20_1_T,fastbus2.T81808.data[59],N[8][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[8],19)*/
SIGNAL_MAPPING(DATA12,N09_20_2_E,fastbus1.Q46962.data[79],N[8][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[8],19)*/
SIGNAL_MAPPING(DATA12,N09_20_2_T,fastbus2.T81859.data[63],N[8][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[8],19)*/
SIGNAL_MAPPING(DATA12,N10_01_1_E,fastbus1.Q15372.data[64],N[9][0][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],0)*/
SIGNAL_MAPPING(DATA12,N10_01_1_T,fastbus2.T48854.data[48],N[9][0][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],0)*/
SIGNAL_MAPPING(DATA12,N10_01_2_E,fastbus1.Q46962.data[84],N[9][0][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],0)*/
SIGNAL_MAPPING(DATA12,N10_01_2_T,fastbus2.T81808.data[52],N[9][0][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],0)*/
SIGNAL_MAPPING(DATA12,N10_02_1_E,fastbus1.Q15372.data[68],N[9][1][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],1)*/
SIGNAL_MAPPING(DATA12,N10_02_1_T,fastbus2.T48854.data[52],N[9][1][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],1)*/
SIGNAL_MAPPING(DATA12,N10_02_2_E,fastbus1.Q46962.data[80],N[9][1][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],1)*/
SIGNAL_MAPPING(DATA12,N10_02_2_T,fastbus2.T81808.data[48],N[9][1][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],1)*/
SIGNAL_MAPPING(DATA12,N10_03_1_E,fastbus1.Q15372.data[72],N[9][2][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],2)*/
SIGNAL_MAPPING(DATA12,N10_03_1_T,fastbus2.T48854.data[56],N[9][2][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],2)*/
SIGNAL_MAPPING(DATA12,N10_03_2_E,fastbus1.Q15372.data[80],N[9][2][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],2)*/
SIGNAL_MAPPING(DATA12,N10_03_2_T,fastbus2.T87047.data[48],N[9][2][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],2)*/
SIGNAL_MAPPING(DATA12,N10_04_1_E,fastbus1.Q15372.data[76],N[9][3][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],3)*/
SIGNAL_MAPPING(DATA12,N10_04_1_T,fastbus2.T48854.data[60],N[9][3][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],3)*/
SIGNAL_MAPPING(DATA12,N10_04_2_E,fastbus1.Q15372.data[84],N[9][3][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],3)*/
SIGNAL_MAPPING(DATA12,N10_04_2_T,fastbus2.T87047.data[52],N[9][3][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],3)*/
SIGNAL_MAPPING(DATA12,N10_05_1_E,fastbus1.Q15372.data[65],N[9][4][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],4)*/
SIGNAL_MAPPING(DATA12,N10_05_1_T,fastbus2.T48854.data[49],N[9][4][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],4)*/
SIGNAL_MAPPING(DATA12,N10_05_2_E,fastbus1.Q46962.data[85],N[9][4][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],4)*/
SIGNAL_MAPPING(DATA12,N10_05_2_T,fastbus2.T81808.data[53],N[9][4][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],4)*/
SIGNAL_MAPPING(DATA12,N10_06_1_E,fastbus1.Q15372.data[69],N[9][5][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],5)*/
SIGNAL_MAPPING(DATA12,N10_06_1_T,fastbus2.T48854.data[53],N[9][5][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],5)*/
SIGNAL_MAPPING(DATA12,N10_06_2_E,fastbus1.Q46962.data[81],N[9][5][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],5)*/
SIGNAL_MAPPING(DATA12,N10_06_2_T,fastbus2.T81808.data[49],N[9][5][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],5)*/
SIGNAL_MAPPING(DATA12,N10_07_1_E,fastbus1.Q15372.data[73],N[9][6][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],6)*/
SIGNAL_MAPPING(DATA12,N10_07_1_T,fastbus2.T48854.data[57],N[9][6][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],6)*/
SIGNAL_MAPPING(DATA12,N10_07_2_E,fastbus1.Q15372.data[88],N[9][6][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],6)*/
SIGNAL_MAPPING(DATA12,N10_07_2_T,fastbus2.T87047.data[56],N[9][6][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],6)*/
SIGNAL_MAPPING(DATA12,N10_08_1_E,fastbus1.Q15372.data[77],N[9][7][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],7)*/
SIGNAL_MAPPING(DATA12,N10_08_1_T,fastbus2.T48854.data[61],N[9][7][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],7)*/
SIGNAL_MAPPING(DATA12,N10_08_2_E,fastbus1.Q15372.data[92],N[9][7][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],7)*/
SIGNAL_MAPPING(DATA12,N10_08_2_T,fastbus2.T87047.data[60],N[9][7][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],7)*/
SIGNAL_MAPPING(DATA12,N10_09_1_E,fastbus1.Q15372.data[66],N[9][8][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],8)*/
SIGNAL_MAPPING(DATA12,N10_09_1_T,fastbus2.T48854.data[50],N[9][8][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],8)*/
SIGNAL_MAPPING(DATA12,N10_09_2_E,fastbus1.Q15372.data[81],N[9][8][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],8)*/
SIGNAL_MAPPING(DATA12,N10_09_2_T,fastbus2.T87047.data[49],N[9][8][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],8)*/
SIGNAL_MAPPING(DATA12,N10_10_1_E,fastbus1.Q15372.data[70],N[9][9][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],9)*/
SIGNAL_MAPPING(DATA12,N10_10_1_T,fastbus2.T48854.data[54],N[9][9][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],9)*/
SIGNAL_MAPPING(DATA12,N10_10_2_E,fastbus1.Q15372.data[85],N[9][9][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],9)*/
SIGNAL_MAPPING(DATA12,N10_10_2_T,fastbus2.T87047.data[53],N[9][9][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],9)*/
SIGNAL_MAPPING(DATA12,N10_11_1_E,fastbus1.Q15372.data[74],N[9][10][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],10)*/
SIGNAL_MAPPING(DATA12,N10_11_1_T,fastbus2.T48854.data[58],N[9][10][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],10)*/
SIGNAL_MAPPING(DATA12,N10_11_2_E,fastbus1.Q15372.data[89],N[9][10][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],10)*/
SIGNAL_MAPPING(DATA12,N10_11_2_T,fastbus2.T87047.data[57],N[9][10][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],10)*/
SIGNAL_MAPPING(DATA12,N10_12_1_E,fastbus1.Q15372.data[79],N[9][11][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],11)*/
SIGNAL_MAPPING(DATA12,N10_12_1_T,fastbus2.T48854.data[63],N[9][11][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],11)*/
SIGNAL_MAPPING(DATA12,N10_12_2_E,fastbus1.Q15372.data[93],N[9][11][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],11)*/
SIGNAL_MAPPING(DATA12,N10_12_2_T,fastbus2.T87047.data[61],N[9][11][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],11)*/
SIGNAL_MAPPING(DATA12,N10_13_1_E,fastbus1.Q15372.data[67],N[9][12][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],12)*/
SIGNAL_MAPPING(DATA12,N10_13_1_T,fastbus2.T48854.data[51],N[9][12][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],12)*/
SIGNAL_MAPPING(DATA12,N10_13_2_E,fastbus1.Q15372.data[82],N[9][12][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],12)*/
SIGNAL_MAPPING(DATA12,N10_13_2_T,fastbus2.T87047.data[50],N[9][12][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],12)*/
SIGNAL_MAPPING(DATA12,N10_14_1_E,fastbus1.Q15372.data[71],N[9][13][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],13)*/
SIGNAL_MAPPING(DATA12,N10_14_1_T,fastbus2.T48854.data[55],N[9][13][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],13)*/
SIGNAL_MAPPING(DATA12,N10_14_2_E,fastbus1.Q15372.data[86],N[9][13][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],13)*/
SIGNAL_MAPPING(DATA12,N10_14_2_T,fastbus2.T87047.data[54],N[9][13][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],13)*/
SIGNAL_MAPPING(DATA12,N10_15_1_E,fastbus1.Q46962.data[86],N[9][14][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],14)*/
SIGNAL_MAPPING(DATA12,N10_15_1_T,fastbus2.T81808.data[54],N[9][14][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],14)*/
SIGNAL_MAPPING(DATA12,N10_15_2_E,fastbus1.Q15372.data[90],N[9][14][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],14)*/
SIGNAL_MAPPING(DATA12,N10_15_2_T,fastbus2.T87047.data[58],N[9][14][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],14)*/
SIGNAL_MAPPING(DATA12,N10_16_1_E,fastbus1.Q46962.data[82],N[9][15][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],15)*/
SIGNAL_MAPPING(DATA12,N10_16_1_T,fastbus2.T81808.data[50],N[9][15][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],15)*/
SIGNAL_MAPPING(DATA12,N10_16_2_E,fastbus1.Q15372.data[94],N[9][15][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],15)*/
SIGNAL_MAPPING(DATA12,N10_16_2_T,fastbus2.T87047.data[62],N[9][15][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],15)*/
SIGNAL_MAPPING(DATA12,N10_17_1_E,fastbus1.Q15372.data[75],N[9][16][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],16)*/
SIGNAL_MAPPING(DATA12,N10_17_1_T,fastbus2.T48854.data[59],N[9][16][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],16)*/
SIGNAL_MAPPING(DATA12,N10_17_2_E,fastbus1.Q15372.data[83],N[9][16][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],16)*/
SIGNAL_MAPPING(DATA12,N10_17_2_T,fastbus2.T87047.data[51],N[9][16][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],16)*/
SIGNAL_MAPPING(DATA12,N10_18_1_E,fastbus1.Q15372.data[78],N[9][17][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],17)*/
SIGNAL_MAPPING(DATA12,N10_18_1_T,fastbus2.T48854.data[62],N[9][17][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],17)*/
SIGNAL_MAPPING(DATA12,N10_18_2_E,fastbus1.Q15372.data[87],N[9][17][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],17)*/
SIGNAL_MAPPING(DATA12,N10_18_2_T,fastbus2.T87047.data[55],N[9][17][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],17)*/
SIGNAL_MAPPING(DATA12,N10_19_1_E,fastbus1.Q46962.data[87],N[9][18][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],18)*/
SIGNAL_MAPPING(DATA12,N10_19_1_T,fastbus2.T81808.data[55],N[9][18][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],18)*/
SIGNAL_MAPPING(DATA12,N10_19_2_E,fastbus1.Q15372.data[91],N[9][18][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],18)*/
SIGNAL_MAPPING(DATA12,N10_19_2_T,fastbus2.T87047.data[59],N[9][18][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],18)*/
SIGNAL_MAPPING(DATA12,N10_20_1_E,fastbus1.Q46962.data[83],N[9][19][0].E);/*,ZERO_SUPPRESS_ITEM(N[9],19)*/
SIGNAL_MAPPING(DATA12,N10_20_1_T,fastbus2.T81808.data[51],N[9][19][0].T);/*,ZERO_SUPPRESS_ITEM(N[9],19)*/
SIGNAL_MAPPING(DATA12,N10_20_2_E,fastbus1.Q15372.data[95],N[9][19][1].E);/*,ZERO_SUPPRESS_ITEM(N[9],19)*/
SIGNAL_MAPPING(DATA12,N10_20_2_T,fastbus2.T87047.data[63],N[9][19][1].T);/*,ZERO_SUPPRESS_ITEM(N[9],19)*/
SIGNAL_MAPPING(DATA12,NTF01_1_E,fastbus1.Q17320.data[32],NTF[0][0].E);/*,ZERO_SUPPRESS_ITEM(NTF,0)*/
SIGNAL_MAPPING(DATA12,NTF01_1_T,fastbus1.T81855.data[48],NTF[0][0].T);/*,ZERO_SUPPRESS_ITEM(NTF,0)*/
SIGNAL_MAPPING(DATA12,NTF01_2_E,fastbus1.Q17320.data[40],NTF[0][1].E);/*,ZERO_SUPPRESS_ITEM(NTF,0)*/
SIGNAL_MAPPING(DATA12,NTF01_2_T,fastbus1.T81855.data[56],NTF[0][1].T);/*,ZERO_SUPPRESS_ITEM(NTF,0)*/
SIGNAL_MAPPING(DATA12,NTF02_1_E,fastbus1.Q17320.data[37],NTF[1][0].E);/*,ZERO_SUPPRESS_ITEM(NTF,1)*/
SIGNAL_MAPPING(DATA12,NTF02_1_T,fastbus1.T81855.data[53],NTF[1][0].T);/*,ZERO_SUPPRESS_ITEM(NTF,1)*/
SIGNAL_MAPPING(DATA12,NTF02_2_E,fastbus1.Q17320.data[45],NTF[1][1].E);/*,ZERO_SUPPRESS_ITEM(NTF,1)*/
SIGNAL_MAPPING(DATA12,NTF02_2_T,fastbus1.T81855.data[61],NTF[1][1].T);/*,ZERO_SUPPRESS_ITEM(NTF,1)*/
SIGNAL_MAPPING(DATA12,NTF03_1_E,fastbus1.Q17320.data[34],NTF[2][0].E);/*,ZERO_SUPPRESS_ITEM(NTF,2)*/
SIGNAL_MAPPING(DATA12,NTF03_1_T,fastbus1.T81855.data[50],NTF[2][0].T);/*,ZERO_SUPPRESS_ITEM(NTF,2)*/
SIGNAL_MAPPING(DATA12,NTF03_2_E,fastbus1.Q17320.data[42],NTF[2][1].E);/*,ZERO_SUPPRESS_ITEM(NTF,2)*/
SIGNAL_MAPPING(DATA12,NTF03_2_T,fastbus1.T81855.data[58],NTF[2][1].T);/*,ZERO_SUPPRESS_ITEM(NTF,2)*/
SIGNAL_MAPPING(DATA12,NTF04_1_E,fastbus1.Q17320.data[39],NTF[3][0].E);/*,ZERO_SUPPRESS_ITEM(NTF,3)*/
SIGNAL_MAPPING(DATA12,NTF04_1_T,fastbus1.T81855.data[55],NTF[3][0].T);/*,ZERO_SUPPRESS_ITEM(NTF,3)*/
SIGNAL_MAPPING(DATA12,NTF04_2_E,fastbus1.Q17320.data[47],NTF[3][1].E);/*,ZERO_SUPPRESS_ITEM(NTF,3)*/
SIGNAL_MAPPING(DATA12,NTF04_2_T,fastbus1.T81855.data[63],NTF[3][1].T);/*,ZERO_SUPPRESS_ITEM(NTF,3)*/
SIGNAL_MAPPING(DATA12,NTF05_1_E,fastbus1.Q17320.data[36],NTF[4][0].E);/*,ZERO_SUPPRESS_ITEM(NTF,4)*/
SIGNAL_MAPPING(DATA12,NTF05_1_T,fastbus1.T81855.data[52],NTF[4][0].T);/*,ZERO_SUPPRESS_ITEM(NTF,4)*/
SIGNAL_MAPPING(DATA12,NTF05_2_E,fastbus1.Q17320.data[44],NTF[4][1].E);/*,ZERO_SUPPRESS_ITEM(NTF,4)*/
SIGNAL_MAPPING(DATA12,NTF05_2_T,fastbus1.T81855.data[60],NTF[4][1].T);/*,ZERO_SUPPRESS_ITEM(NTF,4)*/
SIGNAL_MAPPING(DATA12,NTF06_1_E,fastbus1.Q17320.data[33],NTF[5][0].E);/*,ZERO_SUPPRESS_ITEM(NTF,5)*/
SIGNAL_MAPPING(DATA12,NTF06_1_T,fastbus1.T81855.data[49],NTF[5][0].T);/*,ZERO_SUPPRESS_ITEM(NTF,5)*/
SIGNAL_MAPPING(DATA12,NTF06_2_E,fastbus1.Q17320.data[41],NTF[5][1].E);/*,ZERO_SUPPRESS_ITEM(NTF,5)*/
SIGNAL_MAPPING(DATA12,NTF06_2_T,fastbus1.T81855.data[57],NTF[5][1].T);/*,ZERO_SUPPRESS_ITEM(NTF,5)*/
SIGNAL_MAPPING(DATA12,NTF07_1_E,fastbus1.Q17320.data[38],NTF[6][0].E);/*,ZERO_SUPPRESS_ITEM(NTF,6)*/
SIGNAL_MAPPING(DATA12,NTF07_1_T,fastbus1.T81855.data[54],NTF[6][0].T);/*,ZERO_SUPPRESS_ITEM(NTF,6)*/
SIGNAL_MAPPING(DATA12,NTF07_2_E,fastbus1.Q17320.data[46],NTF[6][1].E);/*,ZERO_SUPPRESS_ITEM(NTF,6)*/
SIGNAL_MAPPING(DATA12,NTF07_2_T,fastbus1.T81855.data[62],NTF[6][1].T);/*,ZERO_SUPPRESS_ITEM(NTF,6)*/
SIGNAL_MAPPING(DATA12,NTF08_1_E,fastbus1.Q17320.data[35],NTF[7][0].E);/*,ZERO_SUPPRESS_ITEM(NTF,7)*/
SIGNAL_MAPPING(DATA12,NTF08_1_T,fastbus1.T81855.data[51],NTF[7][0].T);/*,ZERO_SUPPRESS_ITEM(NTF,7)*/
SIGNAL_MAPPING(DATA12,NTF08_2_E,fastbus1.Q17320.data[43],NTF[7][1].E);/*,ZERO_SUPPRESS_ITEM(NTF,7)*/
SIGNAL_MAPPING(DATA12,NTF08_2_T,fastbus1.T81855.data[59],NTF[7][1].T);/*,ZERO_SUPPRESS_ITEM(NTF,7)*/
SIGNAL_MAPPING(DATA12,PIX1_01_E,camac.qSIA0495.data[0],PIX[0][0].E);
SIGNAL_MAPPING(DATA12,PIX1_01_T,camac.tC_FRS120.data[0],PIX[0][0].T);
SIGNAL_MAPPING(DATA12,PIX2_01_E,camac.qSIA0495.data[1],PIX[1][0].E);
SIGNAL_MAPPING(DATA12,PIX2_01_T,camac.tC_FRS120.data[1],PIX[1][0].T);
SIGNAL_MAPPING(DATA12,PIX3_01_E,camac.qSIA0495.data[2],PIX[2][0].E);
SIGNAL_MAPPING(DATA12,PIX3_01_T,camac.tC_FRS120.data[2],PIX[2][0].T);
SIGNAL_MAPPING(DATA12,POS01_01_E,camac.qSIA0429.data[0],POS[0][0].E);
SIGNAL_MAPPING(DATA12,POS01_01_T,camac.tSIA0426.data[0],POS[0][0].T);
SIGNAL_MAPPING(DATA12,POS01_02_E,camac.qSIA0429.data[1],POS[0][1].E);
SIGNAL_MAPPING(DATA12,POS01_02_T,camac.tSIA0426.data[1],POS[0][1].T);
SIGNAL_MAPPING(DATA12,POS01_03_E,camac.qSIA0429.data[2],POS[0][2].E);
SIGNAL_MAPPING(DATA12,POS01_03_T,camac.tSIA0426.data[2],POS[0][2].T);
SIGNAL_MAPPING(DATA12,POS01_04_E,camac.qSIA0429.data[3],POS[0][3].E);
SIGNAL_MAPPING(DATA12,POS01_04_T,camac.tSIA0426.data[3],POS[0][3].T);
SIGNAL_MAPPING(DATA12,PSP01_01_E,camac.aPHI12160.data[0],PSP[0][0].E);
SIGNAL_MAPPING(DATA12,PSP01_02_E,camac.aPHI12160.data[1],PSP[0][1].E);
SIGNAL_MAPPING(DATA12,PSP01_03_E,camac.aPHI12160.data[2],PSP[0][2].E);
SIGNAL_MAPPING(DATA12,PSP01_04_E,camac.aPHI12160.data[3],PSP[0][3].E);
SIGNAL_MAPPING(DATA12,PSP01_05_E,camac.aPHI12160.data[12],PSP[0][4].E);
SIGNAL_MAPPING(DATA12,PSP02_01_E,camac.aPHI12160.data[4],PSP[1][0].E);
SIGNAL_MAPPING(DATA12,PSP02_02_E,camac.aPHI12160.data[5],PSP[1][1].E);
SIGNAL_MAPPING(DATA12,PSP02_03_E,camac.aPHI12160.data[6],PSP[1][2].E);
SIGNAL_MAPPING(DATA12,PSP02_04_E,camac.aPHI12160.data[7],PSP[1][3].E);
SIGNAL_MAPPING(DATA12,PSP02_05_E,camac.aPHI12160.data[13],PSP[1][4].E);
SIGNAL_MAPPING(DATA12,PSP03_01_E,camac.aPHI12160.data[8],PSP[2][0].E);
SIGNAL_MAPPING(DATA12,PSP03_02_E,camac.aPHI12160.data[9],PSP[2][1].E);
SIGNAL_MAPPING(DATA12,PSP03_03_E,camac.aPHI12160.data[10],PSP[2][2].E);
SIGNAL_MAPPING(DATA12,PSP03_04_E,camac.aPHI12160.data[11],PSP[2][3].E);
SIGNAL_MAPPING(DATA12,PSP03_05_E,camac.aPHI12160.data[14],PSP[2][4].E);
SIGNAL_MAPPING(DATA12,ROL01_01_E,camac.qSIA0429.data[4],ROL[0][0].E);
SIGNAL_MAPPING(DATA12,ROL01_02_E,camac.qSIA0429.data[5],ROL[0][1].E);
SIGNAL_MAPPING(DATA12,ROL01_03_E,camac.qSIA0429.data[6],ROL[0][2].E);
SIGNAL_MAPPING(DATA12,ROL01_04_E,camac.qSIA0429.data[7],ROL[0][3].E);
SIGNAL_MAPPING(DATA12,TFW09_1_E,fastbus1.Q17320.data[16],TFW[8][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,8)*/
SIGNAL_MAPPING(DATA12,TFW09_1_T,fastbus1.T81855.data[32],TFW[8][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,8)*/
SIGNAL_MAPPING(DATA12,TFW09_2_E,fastbus1.Q17320.data[18],TFW[8][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,8)*/
SIGNAL_MAPPING(DATA12,TFW09_2_T,fastbus1.T81855.data[34],TFW[8][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,8)*/
SIGNAL_MAPPING(DATA12,TFW10_1_E,fastbus1.Q17320.data[20],TFW[9][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,9)*/
SIGNAL_MAPPING(DATA12,TFW10_1_T,fastbus1.T81855.data[36],TFW[9][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,9)*/
SIGNAL_MAPPING(DATA12,TFW10_2_E,fastbus1.Q17320.data[22],TFW[9][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,9)*/
SIGNAL_MAPPING(DATA12,TFW10_2_T,fastbus1.T81855.data[38],TFW[9][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,9)*/
SIGNAL_MAPPING(DATA12,TFW11_1_E,fastbus1.Q17320.data[24],TFW[10][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,10)*/
SIGNAL_MAPPING(DATA12,TFW11_1_T,fastbus1.T81855.data[40],TFW[10][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,10)*/
SIGNAL_MAPPING(DATA12,TFW11_2_E,fastbus1.Q17320.data[26],TFW[10][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,10)*/
SIGNAL_MAPPING(DATA12,TFW11_2_T,fastbus1.T81855.data[42],TFW[10][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,10)*/
SIGNAL_MAPPING(DATA12,TFW12_1_E,fastbus1.Q17320.data[28],TFW[11][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,11)*/
SIGNAL_MAPPING(DATA12,TFW12_1_T,fastbus1.T81855.data[44],TFW[11][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,11)*/
SIGNAL_MAPPING(DATA12,TFW12_2_E,fastbus1.Q17320.data[30],TFW[11][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,11)*/
SIGNAL_MAPPING(DATA12,TFW12_2_T,fastbus1.T81855.data[46],TFW[11][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,11)*/
SIGNAL_MAPPING(DATA12,TFW13_1_E,fastbus1.Q17320.data[17],TFW[12][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,12)*/
SIGNAL_MAPPING(DATA12,TFW13_1_T,fastbus1.T81855.data[33],TFW[12][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,12)*/
SIGNAL_MAPPING(DATA12,TFW13_2_E,fastbus1.Q17320.data[19],TFW[12][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,12)*/
SIGNAL_MAPPING(DATA12,TFW13_2_T,fastbus1.T81855.data[35],TFW[12][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,12)*/
SIGNAL_MAPPING(DATA12,TFW14_1_E,fastbus1.Q17320.data[21],TFW[13][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,13)*/
SIGNAL_MAPPING(DATA12,TFW14_1_T,fastbus1.T81855.data[37],TFW[13][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,13)*/
SIGNAL_MAPPING(DATA12,TFW14_2_E,fastbus1.Q17320.data[23],TFW[13][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,13)*/
SIGNAL_MAPPING(DATA12,TFW14_2_T,fastbus1.T81855.data[39],TFW[13][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,13)*/
SIGNAL_MAPPING(DATA12,TFW15_1_E,fastbus1.Q17320.data[25],TFW[14][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,14)*/
SIGNAL_MAPPING(DATA12,TFW15_1_T,fastbus1.T81855.data[41],TFW[14][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,14)*/
SIGNAL_MAPPING(DATA12,TFW15_2_E,fastbus1.Q17320.data[27],TFW[14][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,14)*/
SIGNAL_MAPPING(DATA12,TFW15_2_T,fastbus1.T81855.data[43],TFW[14][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,14)*/
SIGNAL_MAPPING(DATA12,TFW16_1_E,fastbus1.Q17320.data[29],TFW[15][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,15)*/
SIGNAL_MAPPING(DATA12,TFW16_1_T,fastbus1.T81855.data[45],TFW[15][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,15)*/
SIGNAL_MAPPING(DATA12,TFW16_2_E,fastbus1.Q17320.data[31],TFW[15][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,15)*/
SIGNAL_MAPPING(DATA12,TFW16_2_T,fastbus1.T81855.data[47],TFW[15][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,15)*/
SIGNAL_MAPPING(DATA12,TFW17_1_E,fastbus1.Q17320.data[64],TFW[16][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,16)*/
SIGNAL_MAPPING(DATA12,TFW17_1_T,fastbus1.T81855.data[16],TFW[16][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,16)*/
SIGNAL_MAPPING(DATA12,TFW17_2_E,fastbus1.Q17320.data[66],TFW[16][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,16)*/
SIGNAL_MAPPING(DATA12,TFW17_2_T,fastbus1.T81855.data[18],TFW[16][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,16)*/
SIGNAL_MAPPING(DATA12,TFW18_1_E,fastbus1.Q17320.data[68],TFW[17][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,17)*/
SIGNAL_MAPPING(DATA12,TFW18_1_T,fastbus1.T81855.data[20],TFW[17][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,17)*/
SIGNAL_MAPPING(DATA12,TFW18_2_E,fastbus1.Q17320.data[70],TFW[17][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,17)*/
SIGNAL_MAPPING(DATA12,TFW18_2_T,fastbus1.T81855.data[22],TFW[17][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,17)*/
SIGNAL_MAPPING(DATA12,TFW19_1_E,fastbus1.Q17320.data[72],TFW[18][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,18)*/
SIGNAL_MAPPING(DATA12,TFW19_1_T,fastbus1.T81855.data[24],TFW[18][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,18)*/
SIGNAL_MAPPING(DATA12,TFW19_2_E,fastbus1.Q17320.data[74],TFW[18][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,18)*/
SIGNAL_MAPPING(DATA12,TFW19_2_T,fastbus1.T81855.data[26],TFW[18][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,18)*/
SIGNAL_MAPPING(DATA12,TFW20_1_E,fastbus1.Q17320.data[76],TFW[19][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,19)*/
SIGNAL_MAPPING(DATA12,TFW20_1_T,fastbus1.T81855.data[28],TFW[19][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,19)*/
SIGNAL_MAPPING(DATA12,TFW20_2_E,fastbus1.Q17320.data[78],TFW[19][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,19)*/
SIGNAL_MAPPING(DATA12,TFW20_2_T,fastbus1.T81855.data[30],TFW[19][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,19)*/
SIGNAL_MAPPING(DATA12,TFW21_1_E,fastbus1.Q17320.data[65],TFW[20][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,20)*/
SIGNAL_MAPPING(DATA12,TFW21_1_T,fastbus1.T81855.data[17],TFW[20][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,20)*/
SIGNAL_MAPPING(DATA12,TFW21_2_E,fastbus1.Q17320.data[67],TFW[20][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,20)*/
SIGNAL_MAPPING(DATA12,TFW21_2_T,fastbus1.T81855.data[19],TFW[20][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,20)*/
SIGNAL_MAPPING(DATA12,TFW22_1_E,fastbus1.Q17320.data[69],TFW[21][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,21)*/
SIGNAL_MAPPING(DATA12,TFW22_1_T,fastbus1.T81855.data[21],TFW[21][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,21)*/
SIGNAL_MAPPING(DATA12,TFW22_2_E,fastbus1.Q17320.data[71],TFW[21][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,21)*/
SIGNAL_MAPPING(DATA12,TFW22_2_T,fastbus1.T81855.data[23],TFW[21][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,21)*/
SIGNAL_MAPPING(DATA12,TFW23_1_E,fastbus1.Q17320.data[73],TFW[22][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,22)*/
SIGNAL_MAPPING(DATA12,TFW23_1_T,fastbus1.T81855.data[25],TFW[22][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,22)*/
SIGNAL_MAPPING(DATA12,TFW23_2_E,fastbus1.Q17320.data[75],TFW[22][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,22)*/
SIGNAL_MAPPING(DATA12,TFW23_2_T,fastbus1.T81855.data[27],TFW[22][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,22)*/
SIGNAL_MAPPING(DATA12,TFW24_1_E,fastbus1.Q17320.data[77],TFW[23][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,23)*/
SIGNAL_MAPPING(DATA12,TFW24_1_T,fastbus1.T81855.data[29],TFW[23][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,23)*/
SIGNAL_MAPPING(DATA12,TFW24_2_E,fastbus1.Q17320.data[79],TFW[23][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,23)*/
SIGNAL_MAPPING(DATA12,TFW24_2_T,fastbus1.T81855.data[31],TFW[23][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,23)*/
SIGNAL_MAPPING(DATA12,TFW25_1_E,fastbus1.Q17320.data[48],TFW[24][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,24)*/
SIGNAL_MAPPING(DATA12,TFW25_1_T,fastbus1.T81855.data[0],TFW[24][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,24)*/
SIGNAL_MAPPING(DATA12,TFW25_2_E,fastbus1.Q17320.data[50],TFW[24][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,24)*/
SIGNAL_MAPPING(DATA12,TFW25_2_T,fastbus1.T81855.data[2],TFW[24][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,24)*/
SIGNAL_MAPPING(DATA12,TFW26_1_E,fastbus1.Q17320.data[52],TFW[25][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,25)*/
SIGNAL_MAPPING(DATA12,TFW26_1_T,fastbus1.T81855.data[4],TFW[25][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,25)*/
SIGNAL_MAPPING(DATA12,TFW26_2_E,fastbus1.Q17320.data[54],TFW[25][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,25)*/
SIGNAL_MAPPING(DATA12,TFW26_2_T,fastbus1.T81855.data[6],TFW[25][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,25)*/
SIGNAL_MAPPING(DATA12,TFW27_1_E,fastbus1.Q17320.data[56],TFW[26][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,26)*/
SIGNAL_MAPPING(DATA12,TFW27_1_T,fastbus1.T81855.data[8],TFW[26][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,26)*/
SIGNAL_MAPPING(DATA12,TFW27_2_E,fastbus1.Q17320.data[58],TFW[26][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,26)*/
SIGNAL_MAPPING(DATA12,TFW27_2_T,fastbus1.T81855.data[10],TFW[26][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,26)*/
SIGNAL_MAPPING(DATA12,TFW28_1_E,fastbus1.Q17320.data[60],TFW[27][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,27)*/
SIGNAL_MAPPING(DATA12,TFW28_1_T,fastbus1.T81855.data[12],TFW[27][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,27)*/
SIGNAL_MAPPING(DATA12,TFW28_2_E,fastbus1.Q17320.data[62],TFW[27][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,27)*/
SIGNAL_MAPPING(DATA12,TFW28_2_T,fastbus1.T81855.data[14],TFW[27][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,27)*/
SIGNAL_MAPPING(DATA12,TFW29_1_E,fastbus1.Q17320.data[49],TFW[28][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,28)*/
SIGNAL_MAPPING(DATA12,TFW29_1_T,fastbus1.T81855.data[1],TFW[28][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,28)*/
SIGNAL_MAPPING(DATA12,TFW29_2_E,fastbus1.Q17320.data[51],TFW[28][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,28)*/
SIGNAL_MAPPING(DATA12,TFW29_2_T,fastbus1.T81855.data[3],TFW[28][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,28)*/
SIGNAL_MAPPING(DATA12,TFW30_1_E,fastbus1.Q17320.data[53],TFW[29][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,29)*/
SIGNAL_MAPPING(DATA12,TFW30_1_T,fastbus1.T81855.data[5],TFW[29][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,29)*/
SIGNAL_MAPPING(DATA12,TFW30_2_E,fastbus1.Q17320.data[55],TFW[29][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,29)*/
SIGNAL_MAPPING(DATA12,TFW30_2_T,fastbus1.T81855.data[7],TFW[29][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,29)*/
SIGNAL_MAPPING(DATA12,TFW31_1_E,fastbus1.Q17320.data[57],TFW[30][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,30)*/
SIGNAL_MAPPING(DATA12,TFW31_1_T,fastbus1.T81855.data[9],TFW[30][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,30)*/
SIGNAL_MAPPING(DATA12,TFW31_2_E,fastbus1.Q17320.data[59],TFW[30][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,30)*/
SIGNAL_MAPPING(DATA12,TFW31_2_T,fastbus1.T81855.data[11],TFW[30][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,30)*/
SIGNAL_MAPPING(DATA12,TFW32_1_E,fastbus1.Q17320.data[61],TFW[31][0].E);/*,ZERO_SUPPRESS_ITEM(TFW,31)*/
SIGNAL_MAPPING(DATA12,TFW32_1_T,fastbus1.T81855.data[13],TFW[31][0].T);/*,ZERO_SUPPRESS_ITEM(TFW,31)*/
SIGNAL_MAPPING(DATA12,TFW32_2_E,fastbus1.Q17320.data[63],TFW[31][1].E);/*,ZERO_SUPPRESS_ITEM(TFW,31)*/
SIGNAL_MAPPING(DATA12,TFW32_2_T,fastbus1.T81855.data[15],TFW[31][1].T);/*,ZERO_SUPPRESS_ITEM(TFW,31)*/
SIGNAL_MAPPING(DATA12,V1_01_1_E,fastbus1.Q15372.data[48],V[0][0][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],0)*/
SIGNAL_MAPPING(DATA12,V1_01_1_T,fastbus2.T81795.data[48],V[0][0][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],0)*/
SIGNAL_MAPPING(DATA12,V1_01_2_E,fastbus1.Q17320.data[1],V[0][0][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],0)*/
SIGNAL_MAPPING(DATA12,V1_01_2_T,fastbus1.T87024.data[49],V[0][0][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],0)*/
SIGNAL_MAPPING(DATA12,V1_02_1_E,fastbus1.Q15372.data[52],V[0][1][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],1)*/
SIGNAL_MAPPING(DATA12,V1_02_1_T,fastbus2.T81795.data[52],V[0][1][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],1)*/
SIGNAL_MAPPING(DATA12,V1_02_2_E,fastbus1.Q17320.data[3],V[0][1][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],1)*/
SIGNAL_MAPPING(DATA12,V1_02_2_T,fastbus1.T87024.data[51],V[0][1][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],1)*/
SIGNAL_MAPPING(DATA12,V1_03_1_E,fastbus1.Q15372.data[56],V[0][2][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],2)*/
SIGNAL_MAPPING(DATA12,V1_03_1_T,fastbus2.T81795.data[56],V[0][2][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],2)*/
SIGNAL_MAPPING(DATA12,V1_03_2_E,fastbus1.Q47315.data[32],V[0][2][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],2)*/
SIGNAL_MAPPING(DATA12,V1_03_2_T,fastbus1.T87044.data[48],V[0][2][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],2)*/
SIGNAL_MAPPING(DATA12,V1_04_1_E,fastbus1.Q15372.data[60],V[0][3][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],3)*/
SIGNAL_MAPPING(DATA12,V1_04_1_T,fastbus2.T81795.data[60],V[0][3][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],3)*/
SIGNAL_MAPPING(DATA12,V1_04_2_E,fastbus1.Q47315.data[36],V[0][3][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],3)*/
SIGNAL_MAPPING(DATA12,V1_04_2_T,fastbus1.T87044.data[52],V[0][3][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],3)*/
SIGNAL_MAPPING(DATA12,V1_05_1_E,fastbus1.Q15372.data[49],V[0][4][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],4)*/
SIGNAL_MAPPING(DATA12,V1_05_1_T,fastbus2.T81795.data[49],V[0][4][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],4)*/
SIGNAL_MAPPING(DATA12,V1_05_2_E,fastbus1.Q17320.data[5],V[0][4][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],4)*/
SIGNAL_MAPPING(DATA12,V1_05_2_T,fastbus1.T87024.data[53],V[0][4][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],4)*/
SIGNAL_MAPPING(DATA12,V1_06_1_E,fastbus1.Q15372.data[53],V[0][5][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],5)*/
SIGNAL_MAPPING(DATA12,V1_06_1_T,fastbus2.T81795.data[53],V[0][5][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],5)*/
SIGNAL_MAPPING(DATA12,V1_06_2_E,fastbus1.Q17320.data[7],V[0][5][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],5)*/
SIGNAL_MAPPING(DATA12,V1_06_2_T,fastbus1.T87024.data[55],V[0][5][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],5)*/
SIGNAL_MAPPING(DATA12,V1_07_1_E,fastbus1.Q15372.data[57],V[0][6][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],6)*/
SIGNAL_MAPPING(DATA12,V1_07_1_T,fastbus2.T81795.data[57],V[0][6][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],6)*/
SIGNAL_MAPPING(DATA12,V1_07_2_E,fastbus1.Q47315.data[40],V[0][6][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],6)*/
SIGNAL_MAPPING(DATA12,V1_07_2_T,fastbus1.T87044.data[56],V[0][6][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],6)*/
SIGNAL_MAPPING(DATA12,V1_08_1_E,fastbus1.Q15372.data[61],V[0][7][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],7)*/
SIGNAL_MAPPING(DATA12,V1_08_1_T,fastbus2.T81795.data[61],V[0][7][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],7)*/
SIGNAL_MAPPING(DATA12,V1_08_2_E,fastbus1.Q47315.data[44],V[0][7][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],7)*/
SIGNAL_MAPPING(DATA12,V1_08_2_T,fastbus1.T87044.data[60],V[0][7][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],7)*/
SIGNAL_MAPPING(DATA12,V1_09_1_E,fastbus1.Q15372.data[50],V[0][8][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],8)*/
SIGNAL_MAPPING(DATA12,V1_09_1_T,fastbus2.T81795.data[50],V[0][8][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],8)*/
SIGNAL_MAPPING(DATA12,V1_09_2_E,fastbus1.Q47315.data[33],V[0][8][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],8)*/
SIGNAL_MAPPING(DATA12,V1_09_2_T,fastbus1.T87044.data[49],V[0][8][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],8)*/
SIGNAL_MAPPING(DATA12,V1_10_1_E,fastbus1.Q15372.data[54],V[0][9][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],9)*/
SIGNAL_MAPPING(DATA12,V1_10_1_T,fastbus2.T81795.data[54],V[0][9][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],9)*/
SIGNAL_MAPPING(DATA12,V1_10_2_E,fastbus1.Q47315.data[37],V[0][9][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],9)*/
SIGNAL_MAPPING(DATA12,V1_10_2_T,fastbus1.T87044.data[53],V[0][9][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],9)*/
SIGNAL_MAPPING(DATA12,V1_11_1_E,fastbus1.Q15372.data[58],V[0][10][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],10)*/
SIGNAL_MAPPING(DATA12,V1_11_1_T,fastbus2.T81795.data[58],V[0][10][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],10)*/
SIGNAL_MAPPING(DATA12,V1_11_2_E,fastbus1.Q47315.data[41],V[0][10][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],10)*/
SIGNAL_MAPPING(DATA12,V1_11_2_T,fastbus1.T87044.data[57],V[0][10][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],10)*/
SIGNAL_MAPPING(DATA12,V1_12_1_E,fastbus1.Q15372.data[62],V[0][11][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],11)*/
SIGNAL_MAPPING(DATA12,V1_12_1_T,fastbus2.T81795.data[62],V[0][11][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],11)*/
SIGNAL_MAPPING(DATA12,V1_12_2_E,fastbus1.Q47315.data[45],V[0][11][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],11)*/
SIGNAL_MAPPING(DATA12,V1_12_2_T,fastbus1.T87044.data[61],V[0][11][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],11)*/
SIGNAL_MAPPING(DATA12,V1_13_1_E,fastbus1.Q15372.data[51],V[0][12][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],12)*/
SIGNAL_MAPPING(DATA12,V1_13_1_T,fastbus2.T81795.data[51],V[0][12][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],12)*/
SIGNAL_MAPPING(DATA12,V1_13_2_E,fastbus1.Q47315.data[34],V[0][12][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],12)*/
SIGNAL_MAPPING(DATA12,V1_13_2_T,fastbus1.T87044.data[50],V[0][12][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],12)*/
SIGNAL_MAPPING(DATA12,V1_14_1_E,fastbus1.Q15372.data[55],V[0][13][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],13)*/
SIGNAL_MAPPING(DATA12,V1_14_1_T,fastbus2.T81795.data[55],V[0][13][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],13)*/
SIGNAL_MAPPING(DATA12,V1_14_2_E,fastbus1.Q47315.data[38],V[0][13][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],13)*/
SIGNAL_MAPPING(DATA12,V1_14_2_T,fastbus1.T87044.data[54],V[0][13][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],13)*/
SIGNAL_MAPPING(DATA12,V1_15_1_E,fastbus1.Q17320.data[0],V[0][14][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],14)*/
SIGNAL_MAPPING(DATA12,V1_15_1_T,fastbus1.T87024.data[48],V[0][14][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],14)*/
SIGNAL_MAPPING(DATA12,V1_15_2_E,fastbus1.Q47315.data[42],V[0][14][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],14)*/
SIGNAL_MAPPING(DATA12,V1_15_2_T,fastbus1.T87044.data[58],V[0][14][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],14)*/
SIGNAL_MAPPING(DATA12,V1_16_1_E,fastbus1.Q17320.data[2],V[0][15][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],15)*/
SIGNAL_MAPPING(DATA12,V1_16_1_T,fastbus1.T87024.data[50],V[0][15][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],15)*/
SIGNAL_MAPPING(DATA12,V1_16_2_E,fastbus1.Q47315.data[46],V[0][15][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],15)*/
SIGNAL_MAPPING(DATA12,V1_16_2_T,fastbus1.T87044.data[62],V[0][15][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],15)*/
SIGNAL_MAPPING(DATA12,V1_17_1_E,fastbus1.Q15372.data[59],V[0][16][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],16)*/
SIGNAL_MAPPING(DATA12,V1_17_1_T,fastbus2.T81795.data[59],V[0][16][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],16)*/
SIGNAL_MAPPING(DATA12,V1_17_2_E,fastbus1.Q47315.data[35],V[0][16][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],16)*/
SIGNAL_MAPPING(DATA12,V1_17_2_T,fastbus1.T87044.data[51],V[0][16][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],16)*/
SIGNAL_MAPPING(DATA12,V1_18_1_E,fastbus1.Q15372.data[63],V[0][17][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],17)*/
SIGNAL_MAPPING(DATA12,V1_18_1_T,fastbus2.T81795.data[63],V[0][17][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],17)*/
SIGNAL_MAPPING(DATA12,V1_18_2_E,fastbus1.Q47315.data[39],V[0][17][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],17)*/
SIGNAL_MAPPING(DATA12,V1_18_2_T,fastbus1.T87044.data[55],V[0][17][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],17)*/
SIGNAL_MAPPING(DATA12,V1_19_1_E,fastbus1.Q17320.data[4],V[0][18][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],18)*/
SIGNAL_MAPPING(DATA12,V1_19_1_T,fastbus1.T87024.data[52],V[0][18][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],18)*/
SIGNAL_MAPPING(DATA12,V1_19_2_E,fastbus1.Q47315.data[43],V[0][18][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],18)*/
SIGNAL_MAPPING(DATA12,V1_19_2_T,fastbus1.T87044.data[59],V[0][18][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],18)*/
SIGNAL_MAPPING(DATA12,V1_20_1_E,fastbus1.Q17320.data[6],V[0][19][0].E);/*,ZERO_SUPPRESS_ITEM(V[0],19)*/
SIGNAL_MAPPING(DATA12,V1_20_1_T,fastbus1.T87024.data[54],V[0][19][0].T);/*,ZERO_SUPPRESS_ITEM(V[0],19)*/
SIGNAL_MAPPING(DATA12,V1_20_2_E,fastbus1.Q47315.data[47],V[0][19][1].E);/*,ZERO_SUPPRESS_ITEM(V[0],19)*/
SIGNAL_MAPPING(DATA12,V1_20_2_T,fastbus1.T87044.data[63],V[0][19][1].T);/*,ZERO_SUPPRESS_ITEM(V[0],19)*/
SIGNAL_MAPPING(DATA12,ZST3_1_T,camac.tPHI10481.data[0],ZST[2][0].T);
SIGNAL_MAPPING(DATA12,ZST3_2_T,camac.tPHI10481.data[1],ZST[2][1].T);
SIGNAL_MAPPING(DATA12,ZST3_3_T,camac.tPHI10481.data[2],ZST[2][2].T);
SIGNAL_MAPPING(DATA12,ZST3_4_T,camac.tPHI10481.data[3],ZST[2][3].T);
SIGNAL_MAPPING(DATA12,ZST3_5_T,camac.tSIA0469.data[0],ZST[2][4].T);
SIGNAL_MAPPING(DATA12,ZST4_1_T,camac.tPHI10481.data[4],ZST[3][0].T);
SIGNAL_MAPPING(DATA12,ZST4_2_T,camac.tPHI10481.data[5],ZST[3][1].T);
SIGNAL_MAPPING(DATA12,ZST4_3_T,camac.tPHI10481.data[6],ZST[3][2].T);
SIGNAL_MAPPING(DATA12,ZST4_4_T,camac.tPHI10481.data[7],ZST[3][3].T);
SIGNAL_MAPPING(DATA12,ZST4_5_T,camac.tSIA0469.data[1],ZST[3][4].T);

/** END_EVENT_DATA_MAPPING ********************************************/


/** BEGIN_EVENT_DATA_MAPPING *******************************************
 *
 * Event data mapping.
 *
 * Do not edit - automatically generated.
 */

// The order in this file does not matter.
// This information parsed once and not treated eventwise,
// it is used to initialize a structure.


/** END_EVENT_DATA_MAPPING ********************************************/

/**********************************************************/

/** BEGIN_LOCATIONS ****************************************************
 *
 * File and line locations from the parsed specification files.
 *
 * Do not edit - automatically generated.
 */

// It's left to the compiler to only store one copy of each
// unique string.

location spec_locations[] =
{ 
  { 2, 1, "s295.spec" },
  { 3, 1, "<built-in>" },
  { 4, 1, "<command-line>" },
  { 5, 1, "/usr/include/stdc-predef.h" },
  { 6, 1, "<command-line>" },
  { 7, 1, "s295.spec" },
  { 10, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 11, 23, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 12, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/camac_lecroy_4434.spec" },
  { 13, 23, "/u/taniuchi/s467/upexps/../ucesb/spec/camac_lecroy_4434.spec" },
  { 29, 24, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 30, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/camac_silena_4418.spec" },
  { 31, 28, "/u/taniuchi/s467/upexps/../ucesb/spec/camac_silena_4418.spec" },
  { 58, 25, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 59, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/camac_phillips_7164.spec" },
  { 60, 26, "/u/taniuchi/s467/upexps/../ucesb/spec/camac_phillips_7164.spec" },
  { 85, 26, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 87, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/fastbus.spec" },
  { 88, 23, "/u/taniuchi/s467/upexps/../ucesb/spec/fastbus.spec" },
  { 123, 28, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 125, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v775.spec" },
  { 126, 26, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v775.spec" },
  { 170, 30, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 171, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v830.spec" },
  { 172, 23, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v830.spec" },
  { 201, 31, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 202, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" },
  { 203, 27, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" },
  { 204, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" },
  { 205, 39, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" },
  { 403, 28, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" },
  { 409, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" },
  { 410, 39, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" },
  { 608, 34, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" },
  { 609, 32, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 611, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_mesytec_madc32.spec" },
  { 612, 23, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_mesytec_madc32.spec" },
  { 654, 34, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 655, 1, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_mesytec_mdpp16.spec" },
  { 656, 35, "/u/taniuchi/s467/upexps/../ucesb/spec/vme_mesytec_mdpp16.spec" },
  { 698, 35, "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" },
  { 699, 4, "s295.spec" },
  { 701, 1, "./../land_common/land_camac_converter.spec" },
  { 713, 1, "./camac_c2.hh" },
  { 714, 13, "./../land_common/land_camac_converter.spec" },
  { 715, 1, "./camac_c3.hh" },
  { 725, 14, "./../land_common/land_camac_converter.spec" },
  { 729, 1, "./../land_common/ntp_tcal.spec" },
  { 840, 18, "./../land_common/land_camac_converter.spec" },
  { 852, 6, "s295.spec" },
  { 853, 1, "./../land_common/land_camac_scaler.spec" },
  { 894, 7, "s295.spec" },
  { 895, 1, "./../land_common/land_fastbus.spec" },
  { 940, 1, "./fastbus_c1.hh" },
  { 955, 46, "./../land_common/land_fastbus.spec" },
  { 968, 1, "./fastbus_c2.hh" },
  { 976, 59, "./../land_common/land_fastbus.spec" },
  { 979, 8, "s295.spec" },
  { 980, 1, "./../land_common/land_type_subtype.spec" },
  { 981, 9, "s295.spec" },
  { 1022, 1, "mapping.hh" },
  { 2488, 50, "s295.spec" },
};

/** END_LOCATIONS *****************************************************/

