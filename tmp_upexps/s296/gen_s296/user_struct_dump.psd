
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

struct PDC_wire_hit
{
  uint8 wire;
  uint8 start;
  uint8 stop;
} ;
struct PDC_hits
{
  raw_list_ii_zero_suppress<PDC_wire_hit,PDC_wire_hit,1024> hits;
} ;
struct s296_user_struct
{
  PDC_hits ccb[2];
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_PDC_wire_hit
STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(PDC_wire_hit)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(wire);
  STRUCT_MIRROR_TYPE(uint8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(wire);
  STRUCT_MIRROR_ITEM_CTRL(start);
  STRUCT_MIRROR_TYPE(uint8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(start);
  STRUCT_MIRROR_ITEM_CTRL(stop);
  STRUCT_MIRROR_TYPE(uint8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(stop);
  STRUCT_MIRROR_FCNS_DECL(PDC_wire_hit);
};
#endif//USER_DEF_PDC_wire_hit

#ifndef USER_DEF_PDC_hits
STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(PDC_hits)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(hits);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(PDC_wire_hit),STRUCT_MIRROR_TEMPLATE_ARG(PDC_wire_hit),1024> STRUCT_MIRROR_NAME(hits);
  STRUCT_MIRROR_FCNS_DECL(PDC_hits);
};
#endif//USER_DEF_PDC_hits

#ifndef USER_DEF_s296_user_struct
STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(s296_user_struct)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ccb);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(ccb__i0,,2);
  STRUCT_MIRROR_TYPE(PDC_hits) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ccb[2]);
  STRUCT_MIRROR_FCNS_DECL(s296_user_struct);
};
#endif//USER_DEF_s296_user_struct

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(PDC_wire_hit);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(PDC_hits);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(s296_user_struct);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_PDC_wire_hit
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(PDC_wire_hit)::FCNCALL_NAME(PDC_wire_hit)
{
  FCNCALL_INIT;
  // uint8 wire;
  {
  FCNCALL_SUBNAME("wire");
  { FCNCALL_CALL_CTRL_WRAP(wire,FCNCALL_CALL_TYPE(uint8,wire)); }
  FCNCALL_SUBNAME_END;
  }
  // uint8 start;
  {
  FCNCALL_SUBNAME("start");
  { FCNCALL_CALL_CTRL_WRAP(start,FCNCALL_CALL_TYPE(uint8,start)); }
  FCNCALL_SUBNAME_END;
  }
  // uint8 stop;
  {
  FCNCALL_SUBNAME("stop");
  { FCNCALL_CALL_CTRL_WRAP(stop,FCNCALL_CALL_TYPE(uint8,stop)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_PDC_wire_hit

#ifndef USER_DEF_PDC_hits
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(PDC_hits)::FCNCALL_NAME(PDC_hits)
{
  FCNCALL_INIT;
  // raw_list_ii_zero_suppress<PDC_wire_hit,PDC_wire_hit,1024> hits;
  {
  FCNCALL_SUBNAME("hits");
  { FCNCALL_CALL_CTRL_WRAP(hits,hits.FCNCALL_CALL(hits)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_PDC_hits

#ifndef USER_DEF_s296_user_struct
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(s296_user_struct)::FCNCALL_NAME(s296_user_struct)
{
  FCNCALL_INIT;
  // PDC_hits ccb[2];
  {
  FCNCALL_SUBNAME("ccb");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(ccb__i0,,__i0,ccb[__i0].FCNCALL_CALL(ccb[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_s296_user_struct

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: PDC_wire_hit
// uint8  .wire
  // ---
// uint8  .start
  // ---
// uint8  .stop
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: PDC_wire_hit
// .PDC_wire_hit// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: PDC_wire_hit
// .PDC_wire_hit// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: PDC_wire_hit
// .PDC_wire_hit
// Corr struct for: PDC_hits
// raw_list_ii_zero_suppress  .hits(PDC_wire_hit)[1024]
  // uint8  .wire
    // ---
  // uint8  .start
    // ---
  // uint8  .stop
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: PDC_hits
// .PDC_hits// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: PDC_hits
// .PDC_hits// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: PDC_hits
// .PDC_hits
// Corr struct for: s296_user_struct
// PDC_hits  .ccb[2]
  // raw_list_ii_zero_suppress  .hits(PDC_wire_hit)[1024]
    // uint8  .wire
      // ---
    // uint8  .start
      // ---
    // uint8  .stop
      // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s296_user_struct
// .s296_user_struct// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s296_user_struct
// .s296_user_struct// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s296_user_struct
// .s296_user_struct

/** END_CORR_STRUCT ***************************************************/

