# 1 "jun16_ptof.spec"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "jun16_ptof.spec"
# 1 "/u/land/fake_cvmfs/upexps/../ucesb/spec/vme_mesytec_madc32.spec" 1
# 23 "/u/land/fake_cvmfs/upexps/../ucesb/spec/vme_mesytec_madc32.spec"
VME_MESYTEC_MADC32(geom)
{
  MEMBER(DATA14_OVERFLOW data[32] ZERO_SUPPRESS);

  MARK_COUNT(start);
  UINT32 header NOENCODE
  {
    0_11: word_number;
    12_14: adc_resol;
    15: out_form;
    16_23: geom = MATCH(geom);
    24_29: 0b000000;
    30_31: 0b01;
  }

  several UINT32 ch_data NOENCODE
  {
    0_12: value;
    14: outofrange;
    16_20: channel;
    21_29: 0b000100000;
    30_31: 0b00;

    ENCODE(data[channel], (value = value, overflow = outofrange));
  }


  optional UINT32 filler NOENCODE
  {
    0_31: 0x00000000;
  }

  UINT32 end_of_event
  {
    0_29: counter;
    30_31: 0b11;
  }

  MARK_COUNT(end);
  CHECK_COUNT(header.word_number,start,end,-4,4);
}
# 2 "jun16_ptof.spec" 2
# 1 "../land_common/barrier.spec" 1
BARRIER()
{
 UINT32 barrier {
  0_31: 0xbabababa;
 }
}
# 3 "jun16_ptof.spec" 2



# 1 "gsi_febex.spec" 1
FEBEX_EVENTHEADER()
{
 select {
  good = FEBEX_GOOD_EVENTHEADER();
  bad = FEBEX_BAD_EVENTHEADER();
 }
}

FEBEX_BAD_EVENTHEADER()
{
 UINT32 badbad {
  0_31: 0xbad00bad;
 }
}

FEBEX_GOOD_EVENTHEADER()
{
 UINT32 febexcards {
  0_7: n_febex_sfp0 = RANGE(0, 64);
  8_15: n_febex_sfp1 = RANGE(0, 64);
  16_23: n_febex_sfp2 = RANGE(0, 64);
  24_31: n_febex_sfp3 = RANGE(0, 64);
 }
 UINT32 trig_length {
  0_15: trace_length;
  16_31: trigger_delay;
 }
 UINT32 energy_filter {
  0_10: sum_b;
  11_20: gap;
  21_31: sum_a;
 }
 UINT32 polarity1 {
  0_31: pola;
 }
 UINT32 polarity2 {
  0_31: pola;
 }
 UINT32 polarity3 {
  0_31: pola;
 }
 UINT32 polarity4 {
  0_31: pola;
 }
}

FEBEX_PADDING()
{
 UINT32 pads_data NOENCODE {
  0_11: counter;
  12_19: index;
  20_31: 0xadd;
 }
}

FEBEX_NOTRACE(sfp, card)
{
 MEMBER(DATA8 n_hit[16]);
 MEMBER(DATA12 t[16] ZERO_SUPPRESS_MULTI(32));
 MEMBER(DATA32 e[16] ZERO_SUPPRESS_MULTI(32));

 UINT32 indicator NOENCODE {
  0_7: 0x34;
  8_11: trigger_type;
  12_15: sfp = MATCH(sfp);
  16_23: card = MATCH(card);
  24_31: 0xff;
 }

 UINT32 data_size NOENCODE {
  0_31: size;
 }

 UINT32 head NOENCODE {
  0_23: unused;
  24_31: 0xaf;
 }

 UINT32 triggertime NOENCODE {
  0_31: trigger_time;
 }

 UINT32 time NOENCODE {
  0_31: time;
 }

 list (0 <= i < ((data_size.size - 16) >> 3)) {
  UINT32 time NOENCODE {
           0_10: time;
   11_14: unused1;
   15: sign;
   16_19: unused2;
   20_23: multi_hit;
   24_27: n_hit;
   28_31: channel_id;
   ENCODE(t[channel_id], (value = (time | sign << 11 ) & 0xfff) );
   ENCODE(n_hit[channel_id], (value = n_hit));
  }

  UINT32 energy NOENCODE {
   0_21: energy;
   22: unused1;
   23: sign;
   24_27: unused2;
   28_31: channel_id;
   ENCODE(e[channel_id], (value = energy | sign << 23));
  }
 }

 UINT32 trailer NOENCODE {
  0_23: unused;
  24_31: 0xbf;
 }
}

FEBEX_TRACE(sfp, card)
{
 MEMBER(DATA32 trace_length[16] ZERO_SUPPRESS);
 MEMBER(DATA16 trace[16][1000] ZERO_SUPPRESS);
        MEMBER(DATA32 filter[16][1000] ZERO_SUPPRESS);

 UINT32 header NOENCODE {
    0_7: 0x34;
   8_11: trigger_type;
  12_15: sfp = MATCH(sfp);
  16_23: card = MATCH(card);
  24_31: channel_id = RANGE(0, 0xfe);
 }

 UINT32 trace_size NOENCODE {
  0_31: size;
  ENCODE(trace_length[header.channel_id], (value = size / 2 - 4));
 }

 UINT32 trace_header NOENCODE {
   0_17: notused1;
     18: filter_mode;
     19: filter_onoff;
  20_22: notused2;
     23: adc_type;
  24_31: 0xaa;
 }

 if (trace_header.filter_onoff == 0) {
  list (0 <= i < (trace_size.size / 4) - 2) {
   UINT32 channel_trace NOENCODE {
     0_13: data1;
    14_15: nik_knows;
    16_29: data2;
    30_31: nik_knows2;

    ENCODE(trace[header.channel_id][2*i+0], (value = data1));
    ENCODE(trace[header.channel_id][2*i+1], (value = data2));
   }
  }
 } else {
  list (0 <= i < (trace_size.size / 8) - 1) {
   UINT32 channel_trace NOENCODE {
     0_13: data1;
    14_31: nik_knows;

    ENCODE(trace[header.channel_id][i], (value = data1));
   }
   UINT32 channel_filter NOENCODE {
     0_22: data1;
       23: sign;
    24_31: nik_knows2;

    ENCODE(filter[header.channel_id][i], (value = data1*(1-2*sign)));
   }
  }
 }

 UINT32 trace_trailer NOENCODE {
   0_23: notused;
  24_31: 0xbb;
 }
}
# 7 "jun16_ptof.spec" 2

# 1 "../land_common/land_vme.spec" 1


LAND_STD_VME()
{

  UINT32 failure
    {
      0: fail_general;
      1: fail_data_corrupt;
      2: fail_data_missing;
      3: fail_data_too_much;
      4: fail_event_counter_mismatch;
      5: fail_readout_error_driver;
      6: fail_unexpected_trigger;
      7: fail_firmware_mismatch;

      22: has_multi_trlo_ii_counter0;
      23: has_clock_counter_stamp;
      24: has_continous_event_counter;
      25: has_update_qdc_iped_value;
      26: spurious_start_before_tcal;
      27: has_no_zero_suppression;
      28: has_multi_adctdc_counter0;
      29: has_multi_scaler_counter0;
      30: has_multi_event;
      31: has_time_stamp;
    }

  if (failure.has_continous_event_counter) {
    UINT32 continous_event_counter;
  }

  if (failure.has_time_stamp) {
    UINT32 time_stamp;
  }

  if (failure.has_clock_counter_stamp) {
    UINT32 clock_counter_stamp;
  }

  if (failure.has_update_qdc_iped_value) {
    UINT32 iped;
  }

  if (failure.has_multi_event) {
    UINT32 multi_events;
  }

  if (failure.has_multi_trlo_ii_counter0) {
    UINT32 multi_trlo_ii_counter0;
  }

  if (failure.has_multi_scaler_counter0) {
    UINT32 multi_scaler_counter0;
  }

  if (failure.has_multi_adctdc_counter0) {
    UINT32 multi_adctdc_counter0;
  }
}
# 9 "jun16_ptof.spec" 2
# 1 "../land_common/trloii.spec" 1
TRLOII_LMU_SCALERS(id)
{
 MEMBER(DATA32 before_lmu[63] ZERO_SUPPRESS);
 MEMBER(DATA32 before_lmu_mux[31] ZERO_SUPPRESS);
 MEMBER(DATA32 before_lmu_aux[31] ZERO_SUPPRESS);
 MEMBER(DATA32 before_dt[127] ZERO_SUPPRESS);
 MEMBER(DATA32 after_dt[127] ZERO_SUPPRESS);
 MEMBER(DATA32 after_reduction[127] ZERO_SUPPRESS);

 UINT32 header {
  0_5: before_lmu;
  6_10: before_lmu_mux;
  11_15: before_lmu_aux;
  16_23: after_lmu;
  24_31: id = MATCH(id);
 }

 list(0 <= i < header.before_lmu) {
  UINT32 scaler NOENCODE {
   0_31: value;
   ENCODE(before_lmu[i], (value=value));
  }
 }
 list(0 <= i < header.before_lmu_mux) {
  UINT32 scaler NOENCODE {
   0_31: value;
   ENCODE(before_lmu_mux[i], (value=value));
  }
 }
 list(0 <= i < header.before_lmu_aux) {
  UINT32 scaler NOENCODE {
   0_31: value;
   ENCODE(before_lmu_aux[i], (value=value));
  }
 }
# 57 "../land_common/trloii.spec"
 list(0 <= i < header.after_lmu) {
  UINT32 scaler_bdt NOENCODE {
   0_31: value;
   ENCODE(before_dt[i], (value=value));
  }
  UINT32 scaler_adt NOENCODE {
   0_31: value;
   ENCODE(after_dt[i], (value=value));
  }
  UINT32 scaler_ard NOENCODE {
   0_31: value;
   ENCODE(after_reduction[i], (value = value));
  }
 }

}

TRLOII_SAMPLER(mark)
{
 MEMBER(DATA32 sampler[512] ZERO_SUPPRESS);

 UINT32 header {
  0_9: word_num;
  10: overflow;
  16_31: mark = MATCH(mark);
 }

 list(0 <= index < header.word_num) {
  UINT32 time_lo NOENCODE {
   0_29: time;
   30: dunno;
   31: overflow;
   ENCODE(sampler[index], (value = time));
  }
 }
}

TRLOII_SAMPLER_TWO(mark)
{
 MEMBER(DATA32 sampler_hi[512] ZERO_SUPPRESS);
 MEMBER(DATA32 sampler_lo[512] ZERO_SUPPRESS);

 UINT32 header {
  0_9: word_num;
  10: overflow;
  16_31: mark = MATCH(mark);
 }

 list(0 <= index < (header.word_num) / 2) {
  UINT32 time_lo NOENCODE {
   0_29: time;
   30: dunno;
   31: overflow;
   ENCODE(sampler_lo[index], (value = time));
  }
  UINT32 time_hi NOENCODE {
   0_29: time;
   30: dunno;
   31: overflow;
   ENCODE(sampler_hi[index], (value = time));
  }
 }

 if ((header.word_num % 2) == 1) {
  UINT32 last_word NOENCODE;
 }

}

TRLOII_TPAT(id)
{
 MEMBER(DATA32 n);
 MEMBER(DATA16 tpat[170] NO_INDEX_LIST);
 MEMBER(DATA8 trig[170] NO_INDEX_LIST);
 MEMBER(DATA32 ts_lo[170] NO_INDEX_LIST);
 MEMBER(DATA32 ts_hi[170] NO_INDEX_LIST);

 UINT32 header NOENCODE {
  0_11: uint32_num;
  12_23: event_num;
  24_31: id = MATCH(id);
  ENCODE(n, (value=uint32_num / 3));
 }

 list(0 <= index < header.uint32_num / 3) {
  UINT32 time_lo NOENCODE {
   0_31: t;
   ENCODE(ts_lo APPEND_LIST, (value=t));
  }
  UINT32 time_hi NOENCODE {
   0_30: t;
   31: overflow;
   ENCODE(ts_hi APPEND_LIST, (value=t));
  }
  UINT32 trigger NOENCODE {
    0_15: tpat;
   16_23: dunno;
   24_27: encoded;
   28_31: lec;
   ENCODE(tpat APPEND_LIST, (value=tpat));
   ENCODE(trig APPEND_LIST, (value=encoded));
  }
 }
}
# 10 "jun16_ptof.spec" 2
# 1 "../land_common/vme_gsi_vftx2.spec" 1
VME_GSI_VFTX2(id)
{
 MEMBER(DATA12 time_fine[32] ZERO_SUPPRESS_MULTI(32));
 MEMBER(DATA16 time_coarse[32] ZERO_SUPPRESS_MULTI(32));
 MEMBER(DATA16 time_trigger);

 UINT32 custom_header {
  0_4: id = MATCH(id);
  5_8: internal_status;
  9_17: count;
  24_31: 0xab;
 }

 if (0 < custom_header.count) {
  UINT32 event_header {
   0_7: 0xaa;
   11_23: trigger_timestamp;
   29_30: 0b01;
   31: 0b1;

   ENCODE(time_trigger, (value = trigger_timestamp));
  }
 }

 list(1 <= index < custom_header.count) {
  UINT32 event NOENCODE {
   0_10: time_fine;
   11_23: time_coarse;
   24: future;

   25_29: channel;

   ENCODE(time_fine[channel], (value = time_fine));
   ENCODE(time_coarse[channel], (value = time_coarse));
  }
 }
}

VME_GSI_VFTX2_LT(id)
{
 MEMBER(DATA12 time_fine[64] ZERO_SUPPRESS_MULTI(32));
 MEMBER(DATA16 time_coarse[64] ZERO_SUPPRESS_MULTI(32));
 MEMBER(DATA16 time_trigger);

 UINT32 custom_header {
  0_4: id = MATCH(id);
  5_8: internal_status;
  9_17: count;
  24_31: 0xab;
 }

 if (0 < custom_header.count) {
  UINT32 event_header {
   0_7: 0xaa;
   11_23: trigger_timestamp;
   29_30: 0b01;
   31: 0b1;

   ENCODE(time_trigger, (value = trigger_timestamp));
  }
 }

 list(1 <= index < custom_header.count) {
  UINT32 event NOENCODE {
   0_10: time_fine;
   11_23: time_coarse;
   24: future;
   25_30: channel;

   ENCODE(time_fine[channel], (value = time_fine));
   ENCODE(time_coarse[channel], (value = time_coarse));
  }
 }
}

VME_GSI_VFTX2_7PS(id)
{
 MEMBER(DATA12 time_fine[32] ZERO_SUPPRESS_MULTI(32));
 MEMBER(DATA16 time_coarse[32] ZERO_SUPPRESS_MULTI(32));
 MEMBER(DATA16 time_trigger);

 UINT32 custom_header {
  0_4: id = MATCH(id);
  5_8: internal_status;
  9_17: count;
  24_31: 0xab;
 }

 if (0 < custom_header.count) {
  UINT32 event_header NOENCODE {
   0_7: 0xaa;
   11_23: trigger_timestamp;
   29_30: 0b01;
   31: 0b1;

   ENCODE(time_trigger, (value = trigger_timestamp));
  }
 }

 list(1 <= index < custom_header.count) {
  UINT32 event NOENCODE {
   0_10: time_fine;
   11_23: time_coarse;
   24: future;
   25_29: channel;

   ENCODE(time_fine[channel], (value = time_fine));
   ENCODE(time_coarse[channel], (value = time_coarse));
  }
 }
}
# 11 "jun16_ptof.spec" 2
# 1 "../land_common/whiterabbit.spec" 1
TIMESTAMP_WHITERABBIT(id)
{
 MEMBER(DATA12 subsystem_id);
 MEMBER(DATA16 t1);
 MEMBER(DATA16 t2);
 MEMBER(DATA16 t3);
 MEMBER(DATA16 t4);

 UINT32 header NOENCODE {
  0_11: id = MATCH(id);
  12_15: 0;
     16: error_bit;
  17_31: 0;
  ENCODE(subsystem_id, (value=id));
 };
 UINT32 d1 NOENCODE {
  0_15: t1;
  16_31: 0x03e1;
  ENCODE(t1, (value=t1));
 };
 UINT32 d2 NOENCODE {
  0_15: t2;
  16_31: 0x04e1;
  ENCODE(t2, (value=t2));
 };
 UINT32 d3 NOENCODE {
  0_15: t3;
  16_31: 0x05e1;
  ENCODE(t3, (value=t3));
 };
 UINT32 d4 NOENCODE {
  0_15: t4;
  16_31: 0x06e1;
  ENCODE(t4, (value=t4));
 };
}

WR_MULTI()
{
 MEMBER(DATA32 time_hi);
 MEMBER(DATA32 time_lo);

 UINT32 hi NOENCODE {
  0_31: time;
  ENCODE(time_hi, (value = time));
 }
 UINT32 lo NOENCODE {
  0_31: time;
  ENCODE(time_lo, (value = time));
 }
}
# 12 "jun16_ptof.spec" 2
# 1 "gsi_tamex3.spec" 1
TAMEX3_HEADER()
{
 UINT32 trigger_window {
   0_15: post_trig_ns;
  16_31: pre_trig_ns;
 }
}

TAMEX3_PADDING()
{
 UINT32 padding NOENCODE {
   0_11: counter;
  12_19: index;
  20_31: 0xadd;
 }
}

TAMEX3_SFP(sfp, card)
{







 MEMBER(DATA16 time_coarse[34] ZERO_SUPPRESS_MULTI(200));
 MEMBER(DATA12 time_fine[34] ZERO_SUPPRESS_MULTI(200));

 UINT32 indicator NOENCODE {
    0_7: 0x34;
   8_11: trigger_type;
  12_15: sfp = MATCH(sfp);
  16_23: card = MATCH(card);
  24_31: 0;
 }

 MATCH_END;

 UINT32 data_size NOENCODE {

  0_31: bytes;
 }

 UINT32 tdc_header NOENCODE {
   0_15: lec;
     16: buf_no;
  17_19: reserved;
  20_23: trigger_type;
  24_31: 0xaa;
 }

 list (0 <= i < data_size.bytes / 4 - 3) {
  UINT32 data NOENCODE {
    0_10: coarse;
      11: is_leading;

   12_21: fine;
   22_28: channel_index;
   29_31: type;

   ENCODE(time_coarse[
       (0x4 <= type) * channel_index +
       (0x4 > type) * 33
       ], (value = coarse));
   ENCODE(time_fine[
       (0x4 <= type) * channel_index +
       (0x4 > type) * 33
       ], (value = fine));
  }
 }

 UINT32 error_bits NOENCODE {
   0_23: bits;
  24_31: 0xee;
 }

 UINT32 trailer NOENCODE {
   0_23: unused;
  24_31: 0xbb;
 }
}
# 13 "jun16_ptof.spec" 2
# 1 "gsi_vftx2_straw.spec" 1
VME_GSI_VFTX2_STRAW(id)
{
 MEMBER(DATA12 time_fine[32] ZERO_SUPPRESS_MULTI(32));
 MEMBER(DATA16 time_coarse[32] ZERO_SUPPRESS_MULTI(32));
 MEMBER(DATA16 time_trigger);

 UINT32 status {
  0_3: internal;
  4_12: count;
 }

 UINT32 custom_header {
  0_15: count;
  16_23: id = MATCH(id);
  24_31: 0xab;
 }

 UINT32 event_header {
  0_7: 0xaa;
  11_23: trigger_timestamp;
  29_30: 0b01;
  31: 0b1;

  ENCODE(time_trigger, (value = trigger_timestamp));
 }

 list(0 <= index < custom_header.count) {
  UINT32 event NOENCODE {
   0_10: time_fine;
   11_23: time_coarse;
   24: future;
   25_30: channel;
   31: bluppidupp;

   ENCODE(time_fine[channel], (value = time_fine));
   ENCODE(time_coarse[channel], (value = time_coarse));
  }
 }
}
# 14 "jun16_ptof.spec" 2

SCALER()
{
 UINT32 scaler;
}

VFTX2_STATUS()
{
 UINT32 status;
}

SUBEVENT(wr_100)
{
 ts100 = TIMESTAMP_WHITERABBIT(id=0x100);


 multi_ = WR_MULTI();

}

SUBEVENT(wr_200)
{
 ts200 = TIMESTAMP_WHITERABBIT(id=0x200);


 multi_ = WR_MULTI();

}

SUBEVENT(wr_400)
{
 ts400 = TIMESTAMP_WHITERABBIT(id=0x400);
}

SUBEVENT(empty_subev)
{
}

SUBEVENT(lmu_scalers_subev)
{
 scalers = TRLOII_LMU_SCALERS(id=0xc7);
}

SUBEVENT(los_subev)
{
 land_vme = LAND_STD_VME();
 barrier1 = BARRIER();
 barrier2 = BARRIER();
 select several {
  vftx2 = VME_GSI_VFTX2_7PS(id=2);
 }
}

SUBEVENT(los_scalers_subev)
{
 select several {
  scaler = SCALER();
 }
}

SUBEVENT(los_sampler_subev)
{
 land_vme = LAND_STD_VME();
 select several {
  sampler = TRLOII_SAMPLER(mark=0x1050);
 }
}

SUBEVENT(master_subev)
{
 land_vme = LAND_STD_VME();
 barrier = BARRIER();
}

SUBEVENT(tracking_febex_subev)
{
# 131 "jun16_ptof.spec"
 header = FEBEX_EVENTHEADER();
 select several {
  padding = FEBEX_PADDING();
 }
 select several {
  febex_0[ 0] = FEBEX_NOTRACE(sfp=0, card=0);
  febex_0[ 1] = FEBEX_NOTRACE(sfp=0, card=1);
  febex_0[ 2] = FEBEX_NOTRACE(sfp=0, card=2);
  febex_0[ 3] = FEBEX_NOTRACE(sfp=0, card=3);
  febex_0[ 4] = FEBEX_NOTRACE(sfp=0, card=4);
  febex_0[ 5] = FEBEX_NOTRACE(sfp=0, card=5);
  febex_0[ 6] = FEBEX_NOTRACE(sfp=0, card=6);
  febex_0[ 7] = FEBEX_NOTRACE(sfp=0, card=7);
  febex_0[ 8] = FEBEX_NOTRACE(sfp=0, card=8);
  febex_0[ 9] = FEBEX_NOTRACE(sfp=0, card=9);
  febex_0[10] = FEBEX_NOTRACE(sfp=0, card=10);
  febex_0[11] = FEBEX_NOTRACE(sfp=0, card=11);
  febex_0[12] = FEBEX_NOTRACE(sfp=0, card=12);
  febex_0[13] = FEBEX_NOTRACE(sfp=0, card=13);
  febex_0[14] = FEBEX_NOTRACE(sfp=0, card=14);
  febex_0[15] = FEBEX_NOTRACE(sfp=0, card=15);
  febex_0[16] = FEBEX_NOTRACE(sfp=0, card=16);
  febex_0[17] = FEBEX_NOTRACE(sfp=0, card=17);
  febextrace_0[ 0] = FEBEX_TRACE(sfp=0, card=0);
  febextrace_0[ 1] = FEBEX_TRACE(sfp=0, card=1);
  febextrace_0[ 2] = FEBEX_TRACE(sfp=0, card=2);
  febextrace_0[ 3] = FEBEX_TRACE(sfp=0, card=3);
  febextrace_0[ 4] = FEBEX_TRACE(sfp=0, card=4);
  febextrace_0[ 5] = FEBEX_TRACE(sfp=0, card=5);
  febextrace_0[ 6] = FEBEX_TRACE(sfp=0, card=6);
  febextrace_0[ 7] = FEBEX_TRACE(sfp=0, card=7);
  febextrace_0[ 8] = FEBEX_TRACE(sfp=0, card=8);
  febextrace_0[ 9] = FEBEX_TRACE(sfp=0, card=9);
  febextrace_0[10] = FEBEX_TRACE(sfp=0, card=10);
  febextrace_0[11] = FEBEX_TRACE(sfp=0, card=11);
  febextrace_0[12] = FEBEX_TRACE(sfp=0, card=12);
  febextrace_0[13] = FEBEX_TRACE(sfp=0, card=13);
  febextrace_0[14] = FEBEX_TRACE(sfp=0, card=14);
  febextrace_0[15] = FEBEX_TRACE(sfp=0, card=15);
  febextrace_0[16] = FEBEX_TRACE(sfp=0, card=16);
  febextrace_0[17] = FEBEX_TRACE(sfp=0, card=17);
 }
# 282 "jun16_ptof.spec"
}

SUBEVENT(fitest_febex_subev)
{
 header = FEBEX_EVENTHEADER();
 select several {
  padding = FEBEX_PADDING();
 }
 select several {
     febex[ 0] = FEBEX_NOTRACE(sfp=3, card=0);
     febex[ 1] = FEBEX_NOTRACE(sfp=3, card=1);
     febex[ 2] = FEBEX_NOTRACE(sfp=3, card=2);
     febex[ 3] = FEBEX_NOTRACE(sfp=3, card=3);
     febex[ 4] = FEBEX_NOTRACE(sfp=3, card=4);
     febex[ 5] = FEBEX_NOTRACE(sfp=3, card=5);
     febex[ 6] = FEBEX_NOTRACE(sfp=3, card=6);
     febex[ 7] = FEBEX_NOTRACE(sfp=3, card=7);
     febextrace[ 0] = FEBEX_TRACE(sfp=3, card=0);
     febextrace[ 1] = FEBEX_TRACE(sfp=3, card=1);
     febextrace[ 2] = FEBEX_TRACE(sfp=3, card=2);
     febextrace[ 3] = FEBEX_TRACE(sfp=3, card=3);
     febextrace[ 4] = FEBEX_TRACE(sfp=3, card=4);
     febextrace[ 5] = FEBEX_TRACE(sfp=3, card=5);
     febextrace[ 6] = FEBEX_TRACE(sfp=3, card=6);
     febextrace[ 7] = FEBEX_TRACE(sfp=3, card=7);
 }
}

SUBEVENT(straw_vme_subev)
{
 select several {
  vftx2 = VME_GSI_VFTX2_STRAW(id=0);
 }
}

SUBEVENT(tbm_subev)
{
 land_vme = LAND_STD_VME();

 barrier = BARRIER();
 select several {
  vftx2 = VME_GSI_VFTX2_LT(id=1);
  madc32 = VME_MESYTEC_MADC32(geom=2);
 }

}

SUBEVENT(tofd_tamex_subev)
{
 header = TAMEX3_HEADER();
 select several {
  padding1 = TAMEX3_PADDING();
 }
 select several {
  tamex_1 = TAMEX3_SFP(sfp=2, card=0);
  tamex_2 = TAMEX3_SFP(sfp=2, card=1);
 }
 select several {
  padding2 = TAMEX3_PADDING();
 }
 select several {
  tamex_3 = TAMEX3_SFP(sfp=3, card=0);
  tamex_4 = TAMEX3_SFP(sfp=3, card=1);
 }
}

SUBEVENT(tofd_vme_subev)
{
 land_vme = LAND_STD_VME();
 barrier = BARRIER();
 select several {
  vftx2_1 = VME_GSI_VFTX2_7PS(id=1);
  vftx2_2 = VME_GSI_VFTX2_7PS(id=2);
  vftx2_3 = VME_GSI_VFTX2_7PS(id=3);
 }
}

SUBEVENT(tpat_subev)
{
 tpat = TRLOII_TPAT(id=0xcf);
}

EVENT
{
 master_ts = wr_100(type=10, subtype=1, control=0);
 master_tpat = tpat_subev(type=36, subtype=3600, control=0);
 master_lmu_scalers = lmu_scalers_subev(type=37, subtype=3700, control=0);
 master_vme = master_subev(type=88, subtype=8800, control=0);
 los = los_subev(type=88, subtype=8800, control=1);
 los_scalers = los_scalers_subev(type=38, subtype=3800, control=1);
 los_sampler = los_sampler_subev(type=39, subtype=3900, control=1);
 tofd_vme = tofd_vme_subev(type=88, subtype=8800, control=2);
 tbm_ts = wr_200(type=10, subtype=1, control=3);
 tbm_tpat = tpat_subev(type=36, subtype=3600, control=3);
 tbm_vme = tbm_subev(type=88, subtype=8800, control=3);
 tofd_tamex = tofd_tamex_subev(type=102, subtype=10200, control=4);
 tracking_febex = tracking_febex_subev(type=100, subtype=10000, control=5);

 fitest_febex = fitest_febex_subev(type=100, subtype=10000, control=6);


 straw_ts = wr_400(type=10, subtype=1, control=7);
 straw = straw_vme_subev(type=88, subtype=8800, control=7);

 los_empty = empty_subev(type=10, subtype=1, control=1);
 tofd_empty = empty_subev(type=10, subtype=1, control=2);
}

# 1 "mapping.hh" 1
# 1 "mapping_los.hh" 1


SIGNAL(ZERO_SUPPRESS_MULTI(32): LOS01_TF1);
SIGNAL(LOS01_TF1, los.vftx2.time_fine[0],
       LOS01_TF4, los.vftx2.time_fine[3], DATA12);


SIGNAL(ZERO_SUPPRESS_MULTI(32): LOS01_TC1);
SIGNAL(LOS01_TC1, los.vftx2.time_coarse[0],
       LOS01_TC4, los.vftx2.time_coarse[3], DATA16);



SIGNAL(ZERO_SUPPRESS_MULTI(32): LOS02_TF1);
SIGNAL(LOS02_TF1, los.vftx2.time_fine[4],
       LOS02_TF4, los.vftx2.time_fine[7], DATA12);


SIGNAL(ZERO_SUPPRESS_MULTI(32): LOS02_TC1);
SIGNAL(LOS02_TC1, los.vftx2.time_coarse[4],
       LOS02_TC4, los.vftx2.time_coarse[7], DATA16);
# 2 "mapping.hh" 2
# 1 "mapping_tofd.hh" 1
# 21 "mapping_tofd.hh"
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P3T1_TFL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P3T1_TFT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P3T2_TFL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P3T2_TFT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P4T1_TFL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P4T1_TFT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P4T2_TFL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P4T2_TFT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P5T1_TFL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P5T1_TFT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P5T2_TFL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P5T2_TFT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P6T1_TFL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P6T1_TFT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P6T2_TFL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P6T2_TFT1);
# 48 "mapping_tofd.hh"
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P3T1_TCL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P3T1_TCT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P3T2_TCL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P3T2_TCT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P4T1_TCL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P4T1_TCT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P4T2_TCL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P4T2_TCT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P5T1_TCL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P5T1_TCT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P5T2_TCL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P5T2_TCT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P6T1_TCL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P6T1_TCT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P6T2_TCL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): TOFD_P6T2_TCT1);

SIGNAL(TOFD_VFTX2_T1, tofd_vme.vftx2_1.time_trigger, DATA16);
SIGNAL(TOFD_VFTX2_T2, tofd_vme.vftx2_2.time_trigger, DATA16);
SIGNAL(TOFD_VFTX2_T3, tofd_vme.vftx2_3.time_trigger, DATA16);
# 200 "mapping_tofd.hh"
SIGNAL(TOFD_P3T1_TFL1, tofd_tamex.tamex_1.time_fine[1], DATA12);
SIGNAL(TOFD_P3T1_TFT1, tofd_tamex.tamex_1.time_fine[2], DATA12);
SIGNAL(TOFD_P3T2_TFL1, tofd_tamex.tamex_1.time_fine[3], DATA12);
SIGNAL(TOFD_P3T2_TFT1, tofd_tamex.tamex_1.time_fine[4], DATA12);

SIGNAL(TOFD_P3T1_TFL2, tofd_tamex.tamex_1.time_fine[5], DATA12);
SIGNAL(TOFD_P3T1_TFT2, tofd_tamex.tamex_1.time_fine[6], DATA12);
SIGNAL(TOFD_P3T2_TFL2, tofd_tamex.tamex_1.time_fine[7], DATA12);
SIGNAL(TOFD_P3T2_TFT2, tofd_tamex.tamex_1.time_fine[8], DATA12);

SIGNAL(TOFD_P3T1_TFL3, tofd_tamex.tamex_1.time_fine[9], DATA12);
SIGNAL(TOFD_P3T1_TFT3, tofd_tamex.tamex_1.time_fine[10], DATA12);
SIGNAL(TOFD_P3T2_TFL3, tofd_tamex.tamex_1.time_fine[11], DATA12);
SIGNAL(TOFD_P3T2_TFT3, tofd_tamex.tamex_1.time_fine[12], DATA12);

SIGNAL(TOFD_P3T1_TFL4, tofd_tamex.tamex_1.time_fine[13], DATA12);
SIGNAL(TOFD_P3T1_TFT4, tofd_tamex.tamex_1.time_fine[14], DATA12);
SIGNAL(TOFD_P3T2_TFL4, tofd_tamex.tamex_1.time_fine[15], DATA12);
SIGNAL(TOFD_P3T2_TFT4, tofd_tamex.tamex_1.time_fine[16], DATA12);

SIGNAL(TOFD_P3T1_TFL5, tofd_tamex.tamex_1.time_fine[17], DATA12);
SIGNAL(TOFD_P3T1_TFT5, tofd_tamex.tamex_1.time_fine[18], DATA12);
SIGNAL(TOFD_P3T2_TFL5, tofd_tamex.tamex_1.time_fine[19], DATA12);
SIGNAL(TOFD_P3T2_TFT5, tofd_tamex.tamex_1.time_fine[20], DATA12);

SIGNAL(TOFD_P3T1_TFL6, tofd_tamex.tamex_1.time_fine[21], DATA12);
SIGNAL(TOFD_P3T1_TFT6, tofd_tamex.tamex_1.time_fine[22], DATA12);
SIGNAL(TOFD_P3T2_TFL6, tofd_tamex.tamex_1.time_fine[23], DATA12);
SIGNAL(TOFD_P3T2_TFT6, tofd_tamex.tamex_1.time_fine[24], DATA12);


SIGNAL(TOFD_P4T1_TFL1, tofd_tamex.tamex_2.time_fine[1], DATA12);
SIGNAL(TOFD_P4T1_TFT1, tofd_tamex.tamex_2.time_fine[2], DATA12);
SIGNAL(TOFD_P4T2_TFL1, tofd_tamex.tamex_2.time_fine[3], DATA12);
SIGNAL(TOFD_P4T2_TFT1, tofd_tamex.tamex_2.time_fine[4], DATA12);

SIGNAL(TOFD_P4T1_TFL2, tofd_tamex.tamex_2.time_fine[5], DATA12);
SIGNAL(TOFD_P4T1_TFT2, tofd_tamex.tamex_2.time_fine[6], DATA12);
SIGNAL(TOFD_P4T2_TFL2, tofd_tamex.tamex_2.time_fine[7], DATA12);
SIGNAL(TOFD_P4T2_TFT2, tofd_tamex.tamex_2.time_fine[8], DATA12);

SIGNAL(TOFD_P4T1_TFL3, tofd_tamex.tamex_2.time_fine[9], DATA12);
SIGNAL(TOFD_P4T1_TFT3, tofd_tamex.tamex_2.time_fine[10], DATA12);
SIGNAL(TOFD_P4T2_TFL3, tofd_tamex.tamex_2.time_fine[11], DATA12);
SIGNAL(TOFD_P4T2_TFT3, tofd_tamex.tamex_2.time_fine[12], DATA12);

SIGNAL(TOFD_P4T1_TFL4, tofd_tamex.tamex_2.time_fine[13], DATA12);
SIGNAL(TOFD_P4T1_TFT4, tofd_tamex.tamex_2.time_fine[14], DATA12);
SIGNAL(TOFD_P4T2_TFL4, tofd_tamex.tamex_2.time_fine[15], DATA12);
SIGNAL(TOFD_P4T2_TFT4, tofd_tamex.tamex_2.time_fine[16], DATA12);

SIGNAL(TOFD_P4T1_TFL5, tofd_tamex.tamex_2.time_fine[17], DATA12);
SIGNAL(TOFD_P4T1_TFT5, tofd_tamex.tamex_2.time_fine[18], DATA12);
SIGNAL(TOFD_P4T2_TFL5, tofd_tamex.tamex_2.time_fine[19], DATA12);
SIGNAL(TOFD_P4T2_TFT5, tofd_tamex.tamex_2.time_fine[20], DATA12);

SIGNAL(TOFD_P4T1_TFL6, tofd_tamex.tamex_2.time_fine[21], DATA12);
SIGNAL(TOFD_P4T1_TFT6, tofd_tamex.tamex_2.time_fine[22], DATA12);
SIGNAL(TOFD_P4T2_TFL6, tofd_tamex.tamex_2.time_fine[23], DATA12);
SIGNAL(TOFD_P4T2_TFT6, tofd_tamex.tamex_2.time_fine[24], DATA12);
# 456 "mapping_tofd.hh"
SIGNAL(TOFD_P3T1_TCL1, tofd_tamex.tamex_1.time_coarse[1], DATA16);
SIGNAL(TOFD_P3T1_TCT1, tofd_tamex.tamex_1.time_coarse[2], DATA16);
SIGNAL(TOFD_P3T2_TCL1, tofd_tamex.tamex_1.time_coarse[3], DATA16);
SIGNAL(TOFD_P3T2_TCT1, tofd_tamex.tamex_1.time_coarse[4], DATA16);

SIGNAL(TOFD_P3T1_TCL2, tofd_tamex.tamex_1.time_coarse[5], DATA16);
SIGNAL(TOFD_P3T1_TCT2, tofd_tamex.tamex_1.time_coarse[6], DATA16);
SIGNAL(TOFD_P3T2_TCL2, tofd_tamex.tamex_1.time_coarse[7], DATA16);
SIGNAL(TOFD_P3T2_TCT2, tofd_tamex.tamex_1.time_coarse[8], DATA16);

SIGNAL(TOFD_P3T1_TCL3, tofd_tamex.tamex_1.time_coarse[9], DATA16);
SIGNAL(TOFD_P3T1_TCT3, tofd_tamex.tamex_1.time_coarse[10], DATA16);
SIGNAL(TOFD_P3T2_TCL3, tofd_tamex.tamex_1.time_coarse[11], DATA16);
SIGNAL(TOFD_P3T2_TCT3, tofd_tamex.tamex_1.time_coarse[12], DATA16);

SIGNAL(TOFD_P3T1_TCL4, tofd_tamex.tamex_1.time_coarse[13], DATA16);
SIGNAL(TOFD_P3T1_TCT4, tofd_tamex.tamex_1.time_coarse[14], DATA16);
SIGNAL(TOFD_P3T2_TCL4, tofd_tamex.tamex_1.time_coarse[15], DATA16);
SIGNAL(TOFD_P3T2_TCT4, tofd_tamex.tamex_1.time_coarse[16], DATA16);

SIGNAL(TOFD_P3T1_TCL5, tofd_tamex.tamex_1.time_coarse[17], DATA16);
SIGNAL(TOFD_P3T1_TCT5, tofd_tamex.tamex_1.time_coarse[18], DATA16);
SIGNAL(TOFD_P3T2_TCL5, tofd_tamex.tamex_1.time_coarse[19], DATA16);
SIGNAL(TOFD_P3T2_TCT5, tofd_tamex.tamex_1.time_coarse[20], DATA16);

SIGNAL(TOFD_P3T1_TCL6, tofd_tamex.tamex_1.time_coarse[21], DATA16);
SIGNAL(TOFD_P3T1_TCT6, tofd_tamex.tamex_1.time_coarse[22], DATA16);
SIGNAL(TOFD_P3T2_TCL6, tofd_tamex.tamex_1.time_coarse[23], DATA16);
SIGNAL(TOFD_P3T2_TCT6, tofd_tamex.tamex_1.time_coarse[24], DATA16);


SIGNAL(TOFD_P4T1_TCL1, tofd_tamex.tamex_2.time_coarse[1], DATA16);
SIGNAL(TOFD_P4T1_TCT1, tofd_tamex.tamex_2.time_coarse[2], DATA16);
SIGNAL(TOFD_P4T2_TCL1, tofd_tamex.tamex_2.time_coarse[3], DATA16);
SIGNAL(TOFD_P4T2_TCT1, tofd_tamex.tamex_2.time_coarse[4], DATA16);

SIGNAL(TOFD_P4T1_TCL2, tofd_tamex.tamex_2.time_coarse[5], DATA16);
SIGNAL(TOFD_P4T1_TCT2, tofd_tamex.tamex_2.time_coarse[6], DATA16);
SIGNAL(TOFD_P4T2_TCL2, tofd_tamex.tamex_2.time_coarse[7], DATA16);
SIGNAL(TOFD_P4T2_TCT2, tofd_tamex.tamex_2.time_coarse[8], DATA16);

SIGNAL(TOFD_P4T1_TCL3, tofd_tamex.tamex_2.time_coarse[9], DATA16);
SIGNAL(TOFD_P4T1_TCT3, tofd_tamex.tamex_2.time_coarse[10], DATA16);
SIGNAL(TOFD_P4T2_TCL3, tofd_tamex.tamex_2.time_coarse[11], DATA16);
SIGNAL(TOFD_P4T2_TCT3, tofd_tamex.tamex_2.time_coarse[12], DATA16);

SIGNAL(TOFD_P4T1_TCL4, tofd_tamex.tamex_2.time_coarse[13], DATA16);
SIGNAL(TOFD_P4T1_TCT4, tofd_tamex.tamex_2.time_coarse[14], DATA16);
SIGNAL(TOFD_P4T2_TCL4, tofd_tamex.tamex_2.time_coarse[15], DATA16);
SIGNAL(TOFD_P4T2_TCT4, tofd_tamex.tamex_2.time_coarse[16], DATA16);

SIGNAL(TOFD_P4T1_TCL5, tofd_tamex.tamex_2.time_coarse[17], DATA16);
SIGNAL(TOFD_P4T1_TCT5, tofd_tamex.tamex_2.time_coarse[18], DATA16);
SIGNAL(TOFD_P4T2_TCL5, tofd_tamex.tamex_2.time_coarse[19], DATA16);
SIGNAL(TOFD_P4T2_TCT5, tofd_tamex.tamex_2.time_coarse[20], DATA16);

SIGNAL(TOFD_P4T1_TCL6, tofd_tamex.tamex_2.time_coarse[21], DATA16);
SIGNAL(TOFD_P4T1_TCT6, tofd_tamex.tamex_2.time_coarse[22], DATA16);
SIGNAL(TOFD_P4T2_TCL6, tofd_tamex.tamex_2.time_coarse[23], DATA16);
SIGNAL(TOFD_P4T2_TCT6, tofd_tamex.tamex_2.time_coarse[24], DATA16);
# 3 "mapping.hh" 2
# 1 "mapping_pspx.hh" 1
# 4 "mapping.hh" 2
# 1 "mapping_timestamp.hh" 1
SIGNAL(TIMESTAMP_MASTER_ID, master_ts.ts100.subsystem_id, DATA12);
SIGNAL(TIMESTAMP_MASTER_WR_T1, master_ts.ts100.t1, DATA16);
SIGNAL(TIMESTAMP_MASTER_WR_T2, master_ts.ts100.t2, DATA16);
SIGNAL(TIMESTAMP_MASTER_WR_T3, master_ts.ts100.t3, DATA16);
SIGNAL(TIMESTAMP_MASTER_WR_T4, master_ts.ts100.t4, DATA16);

SIGNAL(TIMESTAMP_MASTER_HI, master_ts.multi_.time_hi, DATA32);
SIGNAL(TIMESTAMP_MASTER_LO, master_ts.multi_.time_lo, DATA32);



SIGNAL(ZERO_SUPPRESS: TRLO_SAMPLER_S1);
SIGNAL(TRLO_SAMPLER_S1, los_sampler.sampler.sampler[0],
       TRLO_SAMPLER_S512, los_sampler.sampler.sampler[511], DATA32);
# 5 "mapping.hh" 2


# 1 "mapping_ptof.hh" 1


SIGNAL(ZERO_SUPPRESS_MULTI(32): PTOF_P1T1_TFL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): PTOF_P1T1_TFT1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): PTOF_P1T1_TCL1);
SIGNAL(ZERO_SUPPRESS_MULTI(32): PTOF_P1T1_TCT1);



SIGNAL(PTOF_P1T1_TFL1, tofd_tamex.tamex_3.time_fine[1], DATA12);
SIGNAL(PTOF_P1T1_TFT1, tofd_tamex.tamex_3.time_fine[2], DATA12);
SIGNAL(PTOF_P1T2_TFL1, tofd_tamex.tamex_3.time_fine[3], DATA12);
SIGNAL(PTOF_P1T2_TFT1, tofd_tamex.tamex_3.time_fine[4], DATA12);

SIGNAL(PTOF_P1T1_TFL2, tofd_tamex.tamex_3.time_fine[5], DATA12);
SIGNAL(PTOF_P1T1_TFT2, tofd_tamex.tamex_3.time_fine[6], DATA12);
SIGNAL(PTOF_P1T2_TFL2, tofd_tamex.tamex_3.time_fine[7], DATA12);
SIGNAL(PTOF_P1T2_TFT2, tofd_tamex.tamex_3.time_fine[8], DATA12);

SIGNAL(PTOF_P1T1_TFL3, tofd_tamex.tamex_3.time_fine[9], DATA12);
SIGNAL(PTOF_P1T1_TFT3, tofd_tamex.tamex_3.time_fine[10], DATA12);
SIGNAL(PTOF_P1T2_TFL3, tofd_tamex.tamex_3.time_fine[11], DATA12);
SIGNAL(PTOF_P1T2_TFT3, tofd_tamex.tamex_3.time_fine[12], DATA12);

SIGNAL(PTOF_P1T1_TFL4, tofd_tamex.tamex_3.time_fine[13], DATA12);
SIGNAL(PTOF_P1T1_TFT4, tofd_tamex.tamex_3.time_fine[14], DATA12);
SIGNAL(PTOF_P1T2_TFL4, tofd_tamex.tamex_3.time_fine[15], DATA12);
SIGNAL(PTOF_P1T2_TFT4, tofd_tamex.tamex_3.time_fine[16], DATA12);

SIGNAL(PTOF_P1T1_TFL5, tofd_tamex.tamex_3.time_fine[17], DATA12);
SIGNAL(PTOF_P1T1_TFT5, tofd_tamex.tamex_3.time_fine[18], DATA12);
SIGNAL(PTOF_P1T2_TFL5, tofd_tamex.tamex_3.time_fine[19], DATA12);
SIGNAL(PTOF_P1T2_TFT5, tofd_tamex.tamex_3.time_fine[20], DATA12);


SIGNAL(PTOF_P1T1_TFL6, tofd_tamex.tamex_3.time_fine[21], DATA12);
SIGNAL(PTOF_P1T1_TFT6, tofd_tamex.tamex_3.time_fine[22], DATA12);
SIGNAL(PTOF_P1T2_TFL6, tofd_tamex.tamex_3.time_fine[23], DATA12);
SIGNAL(PTOF_P1T2_TFT6, tofd_tamex.tamex_3.time_fine[24], DATA12);

SIGNAL(PTOF_P2T1_TFL1, tofd_tamex.tamex_4.time_fine[1], DATA12);
SIGNAL(PTOF_P2T1_TFT1, tofd_tamex.tamex_4.time_fine[2], DATA12);
SIGNAL(PTOF_P2T2_TFL1, tofd_tamex.tamex_4.time_fine[3], DATA12);
SIGNAL(PTOF_P2T2_TFT1, tofd_tamex.tamex_4.time_fine[4], DATA12);

SIGNAL(PTOF_P2T1_TFL2, tofd_tamex.tamex_4.time_fine[5], DATA12);
SIGNAL(PTOF_P2T1_TFT2, tofd_tamex.tamex_4.time_fine[6], DATA12);
SIGNAL(PTOF_P2T2_TFL2, tofd_tamex.tamex_4.time_fine[7], DATA12);
SIGNAL(PTOF_P2T2_TFT2, tofd_tamex.tamex_4.time_fine[8], DATA12);

SIGNAL(PTOF_P2T1_TFL3, tofd_tamex.tamex_4.time_fine[9], DATA12);
SIGNAL(PTOF_P2T1_TFT3, tofd_tamex.tamex_4.time_fine[10], DATA12);
SIGNAL(PTOF_P2T2_TFL3, tofd_tamex.tamex_4.time_fine[11], DATA12);
SIGNAL(PTOF_P2T2_TFT3, tofd_tamex.tamex_4.time_fine[12], DATA12);

SIGNAL(PTOF_P2T1_TFL4, tofd_tamex.tamex_4.time_fine[13], DATA12);
SIGNAL(PTOF_P2T1_TFT4, tofd_tamex.tamex_4.time_fine[14], DATA12);
SIGNAL(PTOF_P2T2_TFL4, tofd_tamex.tamex_4.time_fine[15], DATA12);
SIGNAL(PTOF_P2T2_TFT4, tofd_tamex.tamex_4.time_fine[16], DATA12);

SIGNAL(PTOF_P2T1_TFL5, tofd_tamex.tamex_4.time_fine[17], DATA12);
SIGNAL(PTOF_P2T1_TFT5, tofd_tamex.tamex_4.time_fine[18], DATA12);
SIGNAL(PTOF_P2T2_TFL5, tofd_tamex.tamex_4.time_fine[19], DATA12);
SIGNAL(PTOF_P2T2_TFT5, tofd_tamex.tamex_4.time_fine[20], DATA12);

SIGNAL(PTOF_P2T1_TFL6, tofd_tamex.tamex_4.time_fine[21], DATA12);
SIGNAL(PTOF_P2T1_TFT6, tofd_tamex.tamex_4.time_fine[22], DATA12);
SIGNAL(PTOF_P2T2_TFL6, tofd_tamex.tamex_4.time_fine[23], DATA12);
SIGNAL(PTOF_P2T2_TFT6, tofd_tamex.tamex_4.time_fine[24], DATA12);



SIGNAL(PTOF_P1T1_TCL1, tofd_tamex.tamex_3.time_coarse[1], DATA16);
SIGNAL(PTOF_P1T1_TCT1, tofd_tamex.tamex_3.time_coarse[2], DATA16);
SIGNAL(PTOF_P1T2_TCL1, tofd_tamex.tamex_3.time_coarse[3], DATA16);
SIGNAL(PTOF_P1T2_TCT1, tofd_tamex.tamex_3.time_coarse[4], DATA16);

SIGNAL(PTOF_P1T1_TCL2, tofd_tamex.tamex_3.time_coarse[5], DATA16);
SIGNAL(PTOF_P1T1_TCT2, tofd_tamex.tamex_3.time_coarse[6], DATA16);
SIGNAL(PTOF_P1T2_TCL2, tofd_tamex.tamex_3.time_coarse[7], DATA16);
SIGNAL(PTOF_P1T2_TCT2, tofd_tamex.tamex_3.time_coarse[8], DATA16);

SIGNAL(PTOF_P1T1_TCL3, tofd_tamex.tamex_3.time_coarse[9], DATA16);
SIGNAL(PTOF_P1T1_TCT3, tofd_tamex.tamex_3.time_coarse[10], DATA16);
SIGNAL(PTOF_P1T2_TCL3, tofd_tamex.tamex_3.time_coarse[11], DATA16);
SIGNAL(PTOF_P1T2_TCT3, tofd_tamex.tamex_3.time_coarse[12], DATA16);

SIGNAL(PTOF_P1T1_TCL4, tofd_tamex.tamex_3.time_coarse[13], DATA16);
SIGNAL(PTOF_P1T1_TCT4, tofd_tamex.tamex_3.time_coarse[14], DATA16);
SIGNAL(PTOF_P1T2_TCL4, tofd_tamex.tamex_3.time_coarse[15], DATA16);
SIGNAL(PTOF_P1T2_TCT4, tofd_tamex.tamex_3.time_coarse[16], DATA16);

SIGNAL(PTOF_P1T1_TCL5, tofd_tamex.tamex_3.time_coarse[17], DATA16);
SIGNAL(PTOF_P1T1_TCT5, tofd_tamex.tamex_3.time_coarse[18], DATA16);
SIGNAL(PTOF_P1T2_TCL5, tofd_tamex.tamex_3.time_coarse[19], DATA16);
SIGNAL(PTOF_P1T2_TCT5, tofd_tamex.tamex_3.time_coarse[20], DATA16);

SIGNAL(PTOF_P1T1_TCL6, tofd_tamex.tamex_3.time_coarse[21], DATA16);
SIGNAL(PTOF_P1T1_TCT6, tofd_tamex.tamex_3.time_coarse[22], DATA16);
SIGNAL(PTOF_P1T2_TCL6, tofd_tamex.tamex_3.time_coarse[23], DATA16);
SIGNAL(PTOF_P1T2_TCT6, tofd_tamex.tamex_3.time_coarse[24], DATA16);


SIGNAL(PTOF_P2T1_TCL1, tofd_tamex.tamex_4.time_coarse[1], DATA16);
SIGNAL(PTOF_P2T1_TCT1, tofd_tamex.tamex_4.time_coarse[2], DATA16);
SIGNAL(PTOF_P2T2_TCL1, tofd_tamex.tamex_4.time_coarse[3], DATA16);
SIGNAL(PTOF_P2T2_TCT1, tofd_tamex.tamex_4.time_coarse[4], DATA16);

SIGNAL(PTOF_P2T1_TCL2, tofd_tamex.tamex_4.time_coarse[5], DATA16);
SIGNAL(PTOF_P2T1_TCT2, tofd_tamex.tamex_4.time_coarse[6], DATA16);
SIGNAL(PTOF_P2T2_TCL2, tofd_tamex.tamex_4.time_coarse[7], DATA16);
SIGNAL(PTOF_P2T2_TCT2, tofd_tamex.tamex_4.time_coarse[8], DATA16);

SIGNAL(PTOF_P2T1_TCL3, tofd_tamex.tamex_4.time_coarse[9], DATA16);
SIGNAL(PTOF_P2T1_TCT3, tofd_tamex.tamex_4.time_coarse[10], DATA16);
SIGNAL(PTOF_P2T2_TCL3, tofd_tamex.tamex_4.time_coarse[11], DATA16);
SIGNAL(PTOF_P2T2_TCT3, tofd_tamex.tamex_4.time_coarse[12], DATA16);

SIGNAL(PTOF_P2T1_TCL4, tofd_tamex.tamex_4.time_coarse[13], DATA16);
SIGNAL(PTOF_P2T1_TCT4, tofd_tamex.tamex_4.time_coarse[14], DATA16);
SIGNAL(PTOF_P2T2_TCL4, tofd_tamex.tamex_4.time_coarse[15], DATA16);
SIGNAL(PTOF_P2T2_TCT4, tofd_tamex.tamex_4.time_coarse[16], DATA16);

SIGNAL(PTOF_P2T1_TCL5, tofd_tamex.tamex_4.time_coarse[17], DATA16);
SIGNAL(PTOF_P2T1_TCT5, tofd_tamex.tamex_4.time_coarse[18], DATA16);
SIGNAL(PTOF_P2T2_TCL5, tofd_tamex.tamex_4.time_coarse[19], DATA16);
SIGNAL(PTOF_P2T2_TCT5, tofd_tamex.tamex_4.time_coarse[20], DATA16);

SIGNAL(PTOF_P2T1_TCL6, tofd_tamex.tamex_4.time_coarse[21], DATA16);
SIGNAL(PTOF_P2T1_TCT6, tofd_tamex.tamex_4.time_coarse[22], DATA16);
SIGNAL(PTOF_P2T2_TCL6, tofd_tamex.tamex_4.time_coarse[23], DATA16);
SIGNAL(PTOF_P2T2_TCT6, tofd_tamex.tamex_4.time_coarse[24], DATA16);
# 8 "mapping.hh" 2
# 16 "mapping.hh"
# 1 "mapping_fitest.hh" 1

SIGNAL(ZERO_SUPPRESS_MULTI(64): FITEST_TF1);
SIGNAL(FITEST_TF1 , tbm_vme.vftx2.time_fine[0],
FITEST_TF64, tbm_vme.vftx2.time_fine[63], DATA12);


SIGNAL(ZERO_SUPPRESS_MULTI(64): FITEST_TC1);
SIGNAL(FITEST_TC1 , tbm_vme.vftx2.time_coarse[0],
FITEST_TC64, tbm_vme.vftx2.time_coarse[63], DATA16);
# 17 "mapping.hh" 2
# 1 "mapping_fitrack.hh" 1


SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_1t1);
SIGNAL(FITRACK_3t1, fitest_febex.febex[0].t[0],
       FITRACK_3t16,fitest_febex.febex[0].t[15],DATA12);
SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_1E1);
SIGNAL(FITRACK_3E1, fitest_febex.febex[0].e[0],
       FITRACK_3E16,fitest_febex.febex[0].e[15],DATA32);

SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_2t1);
SIGNAL(FITRACK_4t1, fitest_febex.febex[1].t[0],
       FITRACK_4t16,fitest_febex.febex[1].t[15],DATA12);
SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_2E1);
SIGNAL(FITRACK_4E1, fitest_febex.febex[1].e[0],
       FITRACK_4E16,fitest_febex.febex[1].e[15],DATA32);

SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_3t1);
SIGNAL(FITRACK_5t1, fitest_febex.febex[2].t[0],
       FITRACK_5t16,fitest_febex.febex[2].t[15],DATA12);
SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_3E1);
SIGNAL(FITRACK_5E1, fitest_febex.febex[2].e[0],
       FITRACK_5E16,fitest_febex.febex[2].e[15],DATA32);

SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_4t1);
SIGNAL(FITRACK_6t1, fitest_febex.febex[3].t[0],
       FITRACK_6t16,fitest_febex.febex[3].t[15],DATA12);
SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_4E1);
SIGNAL(FITRACK_6E1, fitest_febex.febex[3].e[0],
       FITRACK_6E16,fitest_febex.febex[3].e[15],DATA32);

SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_5t1);
SIGNAL(FITRACK_7t1, fitest_febex.febex[4].t[0],
       FITRACK_7t16,fitest_febex.febex[4].t[15],DATA12);
SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_5E1);
SIGNAL(FITRACK_7E1, fitest_febex.febex[4].e[0],
       FITRACK_7E16,fitest_febex.febex[4].e[15],DATA32);

SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_6t1);
SIGNAL(FITRACK_8t1, fitest_febex.febex[5].t[0],
       FITRACK_8t16,fitest_febex.febex[5].t[15],DATA12);
SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_6E1);
SIGNAL(FITRACK_8E1, fitest_febex.febex[5].e[0],
       FITRACK_8E16,fitest_febex.febex[5].e[15],DATA32);

SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_7t1);
SIGNAL(FITRACK_9t1, fitest_febex.febex[6].t[0],
       FITRACK_9t16,fitest_febex.febex[6].t[15],DATA12);
SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_7E1);
SIGNAL(FITRACK_9E1, fitest_febex.febex[6].e[0],
       FITRACK_9E16,fitest_febex.febex[6].e[15],DATA32);

SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_8t1);
SIGNAL(FITRACK_10t1, fitest_febex.febex[7].t[0],
       FITRACK_10t16,fitest_febex.febex[7].t[15],DATA12);
SIGNAL(ZERO_SUPPRESS_MULTI(32): FITRACK_8E1);
SIGNAL(FITRACK_10E1, fitest_febex.febex[7].e[0],
       FITRACK_10E16,fitest_febex.febex[7].e[15],DATA32);
# 18 "mapping.hh" 2



# 1 "mapping_sipd.hh" 1

SIGNAL(ZERO_SUPPRESS: SIPD_E1);
SIGNAL(SIPD_E1 , tbm_vme.madc32.data[0],
       SIPD_E8, tbm_vme.madc32.data[7], DATA14_OVERFLOW);
# 22 "mapping.hh" 2
# 1 "mapping_strawtubes.hh" 1

SIGNAL(ZERO_SUPPRESS_MULTI(200): STRAW1_S1_TF1);
SIGNAL(STRAW1_S1_TF1 , straw.vftx2.time_fine[ 0],
       STRAW1_S1_TF32, straw.vftx2.time_fine[31], DATA12);
SIGNAL(ZERO_SUPPRESS_MULTI(200): STRAW1_S1_TC1);
SIGNAL(STRAW1_S1_TC1 , straw.vftx2.time_coarse[ 0],
       STRAW1_S1_TC32, straw.vftx2.time_coarse[31], DATA16);
SIGNAL(STRAW1_S1_TRIG, straw.vftx2.time_trigger, DATA16);
# 23 "mapping.hh" 2
# 390 "jun16_ptof.spec" 2
