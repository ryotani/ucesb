
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

class BARRIER
{
  union 
  {
    struct 
    {
      uint32 unnamed_0_31 : 32;
    } ;
    uint32 u32;
  } barrier;
} ;
class FEBEX_BAD_EVENTHEADER
{
  union 
  {
    struct 
    {
      uint32 unnamed_0_31 : 32;
    } ;
    uint32 u32;
  } badbad;
} ;
class FEBEX_GOOD_EVENTHEADER
{
  union 
  {
    struct 
    {
      uint32 n_febex_sfp0 : 8;
      uint32 n_febex_sfp1 : 8;
      uint32 n_febex_sfp2 : 8;
      uint32 n_febex_sfp3 : 8;
    } ;
    uint32 u32;
  } febexcards;
  union 
  {
    struct 
    {
      uint32 trace_length : 16;
      uint32 trigger_delay : 16;
    } ;
    uint32 u32;
  } trig_length;
  union 
  {
    struct 
    {
      uint32 sum_b : 11;
      uint32 gap : 10;
      uint32 sum_a : 11;
    } ;
    uint32 u32;
  } energy_filter;
  union 
  {
    struct 
    {
      uint32 pola : 32;
    } ;
    uint32 u32;
  } polarity1;
  union 
  {
    struct 
    {
      uint32 pola : 32;
    } ;
    uint32 u32;
  } polarity2;
  union 
  {
    struct 
    {
      uint32 pola : 32;
    } ;
    uint32 u32;
  } polarity3;
  union 
  {
    struct 
    {
      uint32 pola : 32;
    } ;
    uint32 u32;
  } polarity4;
} ;
class FEBEX_EVENTHEADER
{
  FEBEX_GOOD_EVENTHEADER good;
  FEBEX_BAD_EVENTHEADER bad;
} ;
class FEBEX_NOTRACE
{
  raw_array<DATA8,DATA8,16> n_hit;
  raw_array_multi_zero_suppress<DATA12,DATA12,16,32> t;
  raw_array_multi_zero_suppress<DATA32,DATA32,16,32> e;
} ;
class FEBEX_PADDING
{
  ;
} ;
class FEBEX_TRACE
{
  raw_array_zero_suppress<DATA32,DATA32,16> trace_length;
  raw_array_zero_suppress<DATA16,DATA16,1000> trace[16];
  raw_array_zero_suppress<DATA32,DATA32,1000> filter[16];
} ;
class LAND_STD_VME
{
  union 
  {
    struct 
    {
      uint32 fail_general : 1;
      uint32 fail_data_corrupt : 1;
      uint32 fail_data_missing : 1;
      uint32 fail_data_too_much : 1;
      uint32 fail_event_counter_mismatch : 1;
      uint32 fail_readout_error_driver : 1;
      uint32 fail_unexpected_trigger : 1;
      uint32 fail_firmware_mismatch : 1;
      uint32 dummy_8_21 : 14;
      uint32 has_multi_trlo_ii_counter0 : 1;
      uint32 has_clock_counter_stamp : 1;
      uint32 has_continous_event_counter : 1;
      uint32 has_update_qdc_iped_value : 1;
      uint32 spurious_start_before_tcal : 1;
      uint32 has_no_zero_suppression : 1;
      uint32 has_multi_adctdc_counter0 : 1;
      uint32 has_multi_scaler_counter0 : 1;
      uint32 has_multi_event : 1;
      uint32 has_time_stamp : 1;
    } ;
    uint32 u32;
  } failure;
  uint32 continous_event_counter;
  uint32 time_stamp;
  uint32 clock_counter_stamp;
  uint32 iped;
  uint32 multi_events;
  uint32 multi_trlo_ii_counter0;
  uint32 multi_scaler_counter0;
  uint32 multi_adctdc_counter0;
} ;
class SCALER
{
  uint32 scaler;
} ;
class TAMEX3_HEADER
{
  union 
  {
    struct 
    {
      uint32 post_trig_ns : 16;
      uint32 pre_trig_ns : 16;
    } ;
    uint32 u32;
  } trigger_window;
} ;
class TAMEX3_PADDING
{
  ;
} ;
class TAMEX3_SFP
{
  raw_array_multi_zero_suppress<DATA16,DATA16,34,200> time_coarse;
  raw_array_multi_zero_suppress<DATA12,DATA12,34,200> time_fine;
} ;
class TIMESTAMP_WHITERABBIT
{
  DATA12 subsystem_id;
  DATA16 t1;
  DATA16 t2;
  DATA16 t3;
  DATA16 t4;
} ;
class TRLOII_LMU_SCALERS
{
  raw_array_zero_suppress<DATA32,DATA32,63> before_lmu;
  raw_array_zero_suppress<DATA32,DATA32,31> before_lmu_mux;
  raw_array_zero_suppress<DATA32,DATA32,31> before_lmu_aux;
  raw_array_zero_suppress<DATA32,DATA32,127> before_dt;
  raw_array_zero_suppress<DATA32,DATA32,127> after_dt;
  raw_array_zero_suppress<DATA32,DATA32,127> after_reduction;
  union 
  {
    struct 
    {
      uint32 before_lmu : 6;
      uint32 before_lmu_mux : 5;
      uint32 before_lmu_aux : 5;
      uint32 after_lmu : 8;
      uint32 id : 8;
    } ;
    uint32 u32;
  } header;
} ;
class TRLOII_SAMPLER
{
  raw_array_zero_suppress<DATA32,DATA32,512> sampler;
  union 
  {
    struct 
    {
      uint32 word_num : 10;
      uint32 overflow : 1;
      uint32 dummy_11_15 : 5;
      uint32 mark : 16;
    } ;
    uint32 u32;
  } header;
} ;
class TRLOII_SAMPLER_TWO
{
  raw_array_zero_suppress<DATA32,DATA32,512> sampler_hi;
  raw_array_zero_suppress<DATA32,DATA32,512> sampler_lo;
  union 
  {
    struct 
    {
      uint32 word_num : 10;
      uint32 overflow : 1;
      uint32 dummy_11_15 : 5;
      uint32 mark : 16;
    } ;
    uint32 u32;
  } header;
} ;
class TRLOII_TPAT
{
  DATA32 n;
  raw_list_ii_zero_suppress<DATA16,DATA16,170> tpat;
  raw_list_ii_zero_suppress<DATA8,DATA8,170> trig;
  raw_list_ii_zero_suppress<DATA32,DATA32,170> ts_lo;
  raw_list_ii_zero_suppress<DATA32,DATA32,170> ts_hi;
} ;
class VFTX2_STATUS
{
  uint32 status;
} ;
class VME_GSI_VFTX2
{
  raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 id : 5;
      uint32 internal_status : 4;
      uint32 count : 9;
      uint32 dummy_18_23 : 6;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 unnamed_0_7 : 8;
      uint32 dummy_8_10 : 3;
      uint32 trigger_timestamp : 13;
      uint32 dummy_24_28 : 5;
      uint32 unnamed_29_30 : 2;
      uint32 unnamed_31_31 : 1;
    } ;
    uint32 u32;
  } event_header;
} ;
class VME_GSI_VFTX2_7PS
{
  raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 id : 5;
      uint32 internal_status : 4;
      uint32 count : 9;
      uint32 dummy_18_23 : 6;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
} ;
class VME_GSI_VFTX2_LT
{
  raw_array_multi_zero_suppress<DATA12,DATA12,64,100> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,64,100> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 id : 5;
      uint32 internal_status : 4;
      uint32 count : 9;
      uint32 dummy_18_23 : 6;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 unnamed_0_7 : 8;
      uint32 dummy_8_10 : 3;
      uint32 trigger_timestamp : 13;
      uint32 dummy_24_28 : 5;
      uint32 unnamed_29_30 : 2;
      uint32 unnamed_31_31 : 1;
    } ;
    uint32 u32;
  } event_header;
} ;
class VME_GSI_VFTX2_STRAW
{
  raw_array_multi_zero_suppress<DATA12,DATA12,32,32> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,32,32> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 internal : 4;
      uint32 count : 9;
      uint32 dummy_13_31 : 19;
    } ;
    uint32 u32;
  } status;
  union 
  {
    struct 
    {
      uint32 count : 16;
      uint32 id : 8;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 unnamed_0_7 : 8;
      uint32 dummy_8_10 : 3;
      uint32 trigger_timestamp : 13;
      uint32 dummy_24_28 : 5;
      uint32 unnamed_29_30 : 2;
      uint32 unnamed_31_31 : 1;
    } ;
    uint32 u32;
  } event_header;
} ;
class VME_MESYTEC_MADC32
{
  raw_array_zero_suppress<DATA14_OVERFLOW,DATA14_OVERFLOW,32> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class WR_MULTI
{
  DATA32 time_hi;
  DATA32 time_lo;
} ;
class empty_subev : public unpack_subevent_base
{
  ;
} ;
class fitest_febex_subev : public unpack_subevent_base
{
  FEBEX_PADDING padding;
  FEBEX_NOTRACE febex[8];
  FEBEX_TRACE febextrace[8];
  FEBEX_EVENTHEADER header;
} ;
class lmu_scalers_subev : public unpack_subevent_base
{
  TRLOII_LMU_SCALERS scalers;
} ;
class los_sampler_subev : public unpack_subevent_base
{
  TRLOII_SAMPLER sampler;
  LAND_STD_VME land_vme;
} ;
class los_scalers_subev : public unpack_subevent_base
{
  SCALER scaler;
} ;
class los_subev : public unpack_subevent_base
{
  VME_GSI_VFTX2_7PS vftx2;
  LAND_STD_VME land_vme;
  BARRIER barrier2;
  BARRIER barrier1;
} ;
class master_subev : public unpack_subevent_base
{
  BARRIER barrier;
  LAND_STD_VME land_vme;
} ;
class straw_vme_subev : public unpack_subevent_base
{
  VME_GSI_VFTX2_STRAW vftx2;
} ;
class tbm_subev : public unpack_subevent_base
{
  LAND_STD_VME land_vme;
} ;
class tofd_tamex_subev : public unpack_subevent_base
{
  TAMEX3_PADDING padding1;
  TAMEX3_SFP tamex_1;
  TAMEX3_SFP tamex_2;
  TAMEX3_PADDING padding2;
  TAMEX3_SFP tamex_3;
  TAMEX3_SFP tamex_4;
  TAMEX3_HEADER header;
} ;
class tofd_vme_subev : public unpack_subevent_base
{
  VME_GSI_VFTX2_7PS vftx2_1;
  VME_GSI_VFTX2_7PS vftx2_3;
  VME_GSI_VFTX2_7PS vftx2_2;
  BARRIER barrier;
  LAND_STD_VME land_vme;
} ;
class tpat_subev : public unpack_subevent_base
{
  TRLOII_TPAT tpat;
} ;
class tracking_febex_subev : public unpack_subevent_base
{
  FEBEX_NOTRACE febex_0[10];
  FEBEX_NOTRACE febex_2[12];
  FEBEX_EVENTHEADER header0;
  FEBEX_EVENTHEADER header2;
} ;
class wr_100 : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts100;
  WR_MULTI multi_;
} ;
class wr_200 : public unpack_subevent_base
{
  WR_MULTI multi_;
  TIMESTAMP_WHITERABBIT ts200;
} ;
class wr_400 : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts400;
} ;
class unpack_event : public unpack_event_base
{
  wr_100 master_ts;
  lmu_scalers_subev master_lmu_scalers;
  tpat_subev master_tpat;
  master_subev master_vme;
  los_subev los;
  los_scalers_subev los_scalers;
  los_sampler_subev los_sampler;
  tofd_vme_subev tofd_vme;
  wr_200 tbm_ts;
  tpat_subev tbm_tpat;
  tbm_subev tbm_vme;
  tofd_tamex_subev tofd_tamex;
  tracking_febex_subev tracking_febex;
  empty_subev los_empty;
  empty_subev tofd_empty;
} ;
class unpack_sticky_event : public unpack_sticky_event_base
{
  ;
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_BARRIER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(BARRIER)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(barrier);
  STRUCT_MIRROR_FCNS_DECL(BARRIER);
};
#endif//USER_DEF_BARRIER

#ifndef USER_DEF_FEBEX_BAD_EVENTHEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_BAD_EVENTHEADER)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(badbad);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_BAD_EVENTHEADER);
};
#endif//USER_DEF_FEBEX_BAD_EVENTHEADER

#ifndef USER_DEF_FEBEX_GOOD_EVENTHEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_GOOD_EVENTHEADER)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(n_febex_sfp0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n_febex_sfp0);
      STRUCT_MIRROR_ITEM_CTRL(n_febex_sfp1);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n_febex_sfp1);
      STRUCT_MIRROR_ITEM_CTRL(n_febex_sfp2);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n_febex_sfp2);
      STRUCT_MIRROR_ITEM_CTRL(n_febex_sfp3);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n_febex_sfp3);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(febexcards);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(trace_length);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trace_length);
      STRUCT_MIRROR_ITEM_CTRL(trigger_delay);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_delay);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trig_length);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(sum_b);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sum_b);
      STRUCT_MIRROR_ITEM_CTRL(gap);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(gap);
      STRUCT_MIRROR_ITEM_CTRL(sum_a);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sum_a);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(energy_filter);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(pola);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pola);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(polarity1);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(pola);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pola);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(polarity2);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(pola);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pola);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(polarity3);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(pola);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pola);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(polarity4);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_GOOD_EVENTHEADER);
};
#endif//USER_DEF_FEBEX_GOOD_EVENTHEADER

#ifndef USER_DEF_FEBEX_EVENTHEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_EVENTHEADER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(good);
  STRUCT_MIRROR_TYPE(FEBEX_GOOD_EVENTHEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(good);
  STRUCT_MIRROR_ITEM_CTRL(bad);
  STRUCT_MIRROR_TYPE(FEBEX_BAD_EVENTHEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bad);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_EVENTHEADER);
};
#endif//USER_DEF_FEBEX_EVENTHEADER

#ifndef USER_DEF_FEBEX_NOTRACE
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_NOTRACE)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(n_hit);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(n_hit);
  STRUCT_MIRROR_ITEM_CTRL(t);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),16,32> STRUCT_MIRROR_NAME(t);
  STRUCT_MIRROR_ITEM_CTRL(e);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16,32> STRUCT_MIRROR_NAME(e);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_NOTRACE);
};
#endif//USER_DEF_FEBEX_NOTRACE

#ifndef USER_DEF_FEBEX_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(FEBEX_PADDING);
};
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_FEBEX_TRACE
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_TRACE)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(trace_length);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(trace_length);
  STRUCT_MIRROR_ITEM_CTRL(trace);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(trace__i0,,16);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),1000> STRUCT_MIRROR_NAME(trace[16]);
  STRUCT_MIRROR_ITEM_CTRL(filter);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(filter__i0,,16);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),1000> STRUCT_MIRROR_NAME(filter[16]);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_TRACE);
};
#endif//USER_DEF_FEBEX_TRACE

#ifndef USER_DEF_LAND_STD_VME
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_STD_VME)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(fail_general);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_general);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_corrupt);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_corrupt);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_missing);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_missing);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_too_much);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_too_much);
      STRUCT_MIRROR_ITEM_CTRL(fail_event_counter_mismatch);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_event_counter_mismatch);
      STRUCT_MIRROR_ITEM_CTRL(fail_readout_error_driver);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_readout_error_driver);
      STRUCT_MIRROR_ITEM_CTRL(fail_unexpected_trigger);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_unexpected_trigger);
      STRUCT_MIRROR_ITEM_CTRL(fail_firmware_mismatch);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_firmware_mismatch);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_21);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_21);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_trlo_ii_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_trlo_ii_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_clock_counter_stamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_clock_counter_stamp);
      STRUCT_MIRROR_ITEM_CTRL(has_continous_event_counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_continous_event_counter);
      STRUCT_MIRROR_ITEM_CTRL(has_update_qdc_iped_value);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_update_qdc_iped_value);
      STRUCT_MIRROR_ITEM_CTRL(spurious_start_before_tcal);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spurious_start_before_tcal);
      STRUCT_MIRROR_ITEM_CTRL(has_no_zero_suppression);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_no_zero_suppression);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_adctdc_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_adctdc_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_scaler_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_scaler_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_event);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_event);
      STRUCT_MIRROR_ITEM_CTRL(has_time_stamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_time_stamp);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(failure);
  STRUCT_MIRROR_ITEM_CTRL(continous_event_counter);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(continous_event_counter);
  STRUCT_MIRROR_ITEM_CTRL(time_stamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_stamp);
  STRUCT_MIRROR_ITEM_CTRL(clock_counter_stamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(clock_counter_stamp);
  STRUCT_MIRROR_ITEM_CTRL(iped);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(iped);
  STRUCT_MIRROR_ITEM_CTRL(multi_events);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_events);
  STRUCT_MIRROR_ITEM_CTRL(multi_trlo_ii_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_trlo_ii_counter0);
  STRUCT_MIRROR_ITEM_CTRL(multi_scaler_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_scaler_counter0);
  STRUCT_MIRROR_ITEM_CTRL(multi_adctdc_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_adctdc_counter0);
  STRUCT_MIRROR_FCNS_DECL(LAND_STD_VME);
};
#endif//USER_DEF_LAND_STD_VME

#ifndef USER_DEF_SCALER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SCALER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(scaler);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler);
  STRUCT_MIRROR_FCNS_DECL(SCALER);
};
#endif//USER_DEF_SCALER

#ifndef USER_DEF_TAMEX3_HEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX3_HEADER)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(post_trig_ns);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(post_trig_ns);
      STRUCT_MIRROR_ITEM_CTRL(pre_trig_ns);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pre_trig_ns);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger_window);
  STRUCT_MIRROR_FCNS_DECL(TAMEX3_HEADER);
};
#endif//USER_DEF_TAMEX3_HEADER

#ifndef USER_DEF_TAMEX3_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX3_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TAMEX3_PADDING);
};
#endif//USER_DEF_TAMEX3_PADDING

#ifndef USER_DEF_TAMEX3_SFP
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX3_SFP)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),34,200> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),34,200> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_FCNS_DECL(TAMEX3_SFP);
};
#endif//USER_DEF_TAMEX3_SFP

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(subsystem_id);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(subsystem_id);
  STRUCT_MIRROR_ITEM_CTRL(t1);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t1);
  STRUCT_MIRROR_ITEM_CTRL(t2);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t2);
  STRUCT_MIRROR_ITEM_CTRL(t3);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t3);
  STRUCT_MIRROR_ITEM_CTRL(t4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t4);
  STRUCT_MIRROR_FCNS_DECL(TIMESTAMP_WHITERABBIT);
};
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TRLOII_LMU_SCALERS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLOII_LMU_SCALERS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(before_lmu);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),63> STRUCT_MIRROR_NAME(before_lmu);
  STRUCT_MIRROR_ITEM_CTRL(before_lmu_mux);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),31> STRUCT_MIRROR_NAME(before_lmu_mux);
  STRUCT_MIRROR_ITEM_CTRL(before_lmu_aux);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),31> STRUCT_MIRROR_NAME(before_lmu_aux);
  STRUCT_MIRROR_ITEM_CTRL(before_dt);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),127> STRUCT_MIRROR_NAME(before_dt);
  STRUCT_MIRROR_ITEM_CTRL(after_dt);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),127> STRUCT_MIRROR_NAME(after_dt);
  STRUCT_MIRROR_ITEM_CTRL(after_reduction);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),127> STRUCT_MIRROR_NAME(after_reduction);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(before_lmu);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(before_lmu);
      STRUCT_MIRROR_ITEM_CTRL(before_lmu_mux);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(before_lmu_mux);
      STRUCT_MIRROR_ITEM_CTRL(before_lmu_aux);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(before_lmu_aux);
      STRUCT_MIRROR_ITEM_CTRL(after_lmu);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(after_lmu);
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TRLOII_LMU_SCALERS);
};
#endif//USER_DEF_TRLOII_LMU_SCALERS

#ifndef USER_DEF_TRLOII_SAMPLER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLOII_SAMPLER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(sampler);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),512> STRUCT_MIRROR_NAME(sampler);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_num);
      STRUCT_MIRROR_ITEM_CTRL(overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(overflow);
      STRUCT_MIRROR_ITEM_CTRL(dummy_11_15);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_11_15);
      STRUCT_MIRROR_ITEM_CTRL(mark);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mark);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TRLOII_SAMPLER);
};
#endif//USER_DEF_TRLOII_SAMPLER

#ifndef USER_DEF_TRLOII_SAMPLER_TWO
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLOII_SAMPLER_TWO)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(sampler_hi);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),512> STRUCT_MIRROR_NAME(sampler_hi);
  STRUCT_MIRROR_ITEM_CTRL(sampler_lo);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),512> STRUCT_MIRROR_NAME(sampler_lo);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_num);
      STRUCT_MIRROR_ITEM_CTRL(overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(overflow);
      STRUCT_MIRROR_ITEM_CTRL(dummy_11_15);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_11_15);
      STRUCT_MIRROR_ITEM_CTRL(mark);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mark);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TRLOII_SAMPLER_TWO);
};
#endif//USER_DEF_TRLOII_SAMPLER_TWO

#ifndef USER_DEF_TRLOII_TPAT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLOII_TPAT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(n);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n);
  STRUCT_MIRROR_ITEM_CTRL(tpat);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),170> STRUCT_MIRROR_NAME(tpat);
  STRUCT_MIRROR_ITEM_CTRL(trig);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),170> STRUCT_MIRROR_NAME(trig);
  STRUCT_MIRROR_ITEM_CTRL(ts_lo);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),170> STRUCT_MIRROR_NAME(ts_lo);
  STRUCT_MIRROR_ITEM_CTRL(ts_hi);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),170> STRUCT_MIRROR_NAME(ts_hi);
  STRUCT_MIRROR_FCNS_DECL(TRLOII_TPAT);
};
#endif//USER_DEF_TRLOII_TPAT

#ifndef USER_DEF_VFTX2_STATUS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VFTX2_STATUS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(status);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(status);
  STRUCT_MIRROR_FCNS_DECL(VFTX2_STATUS);
};
#endif//USER_DEF_VFTX2_STATUS

#ifndef USER_DEF_VME_GSI_VFTX2
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),32,100> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),32,100> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(internal_status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal_status);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_18_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_18_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_7);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_7);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_10);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_10);
      STRUCT_MIRROR_ITEM_CTRL(trigger_timestamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_timestamp);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_28);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_28);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_29_30);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_29_30);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_31_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_31_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(event_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2);
};
#endif//USER_DEF_VME_GSI_VFTX2

#ifndef USER_DEF_VME_GSI_VFTX2_7PS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_7PS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),32,100> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),32,100> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(internal_status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal_status);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_18_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_18_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2_7PS);
};
#endif//USER_DEF_VME_GSI_VFTX2_7PS

#ifndef USER_DEF_VME_GSI_VFTX2_LT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_LT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),64,100> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),64,100> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(internal_status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal_status);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_18_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_18_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_7);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_7);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_10);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_10);
      STRUCT_MIRROR_ITEM_CTRL(trigger_timestamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_timestamp);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_28);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_28);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_29_30);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_29_30);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_31_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_31_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(event_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2_LT);
};
#endif//USER_DEF_VME_GSI_VFTX2_LT

#ifndef USER_DEF_VME_GSI_VFTX2_STRAW
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_STRAW)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),32,32> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),32,32> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(internal);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_13_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_13_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(status);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_7);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_7);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_10);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_10);
      STRUCT_MIRROR_ITEM_CTRL(trigger_timestamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_timestamp);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_28);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_28);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_29_30);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_29_30);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_31_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_31_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(event_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2_STRAW);
};
#endif//USER_DEF_VME_GSI_VFTX2_STRAW

#ifndef USER_DEF_VME_MESYTEC_MADC32
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_MADC32)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA14_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA14_OVERFLOW),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_MADC32);
};
#endif//USER_DEF_VME_MESYTEC_MADC32

#ifndef USER_DEF_WR_MULTI
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(WR_MULTI)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_hi);
  STRUCT_MIRROR_ITEM_CTRL(time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_lo);
  STRUCT_MIRROR_FCNS_DECL(WR_MULTI);
};
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_empty_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(empty_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_FCNS_DECL(empty_subev);
};
#endif//USER_DEF_empty_subev

#ifndef USER_DEF_fitest_febex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(fitest_febex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(FEBEX_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(febex);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(febex__i0,,8);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex[8]);
  STRUCT_MIRROR_ITEM_CTRL(febextrace);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(febextrace__i0,,8);
  STRUCT_MIRROR_TYPE(FEBEX_TRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febextrace[8]);
  STRUCT_MIRROR_ITEM_CTRL(header);
  STRUCT_MIRROR_TYPE(FEBEX_EVENTHEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(fitest_febex_subev);
};
#endif//USER_DEF_fitest_febex_subev

#ifndef USER_DEF_lmu_scalers_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(lmu_scalers_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(scalers);
  STRUCT_MIRROR_TYPE(TRLOII_LMU_SCALERS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scalers);
  STRUCT_MIRROR_FCNS_DECL(lmu_scalers_subev);
};
#endif//USER_DEF_lmu_scalers_subev

#ifndef USER_DEF_los_sampler_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_sampler_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(sampler);
  STRUCT_MIRROR_TYPE(TRLOII_SAMPLER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sampler);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(los_sampler_subev);
};
#endif//USER_DEF_los_sampler_subev

#ifndef USER_DEF_los_scalers_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_scalers_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(scaler);
  STRUCT_MIRROR_TYPE(SCALER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler);
  STRUCT_MIRROR_FCNS_DECL(los_scalers_subev);
};
#endif//USER_DEF_los_scalers_subev

#ifndef USER_DEF_los_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(vftx2);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_ITEM_CTRL(barrier2);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier2);
  STRUCT_MIRROR_ITEM_CTRL(barrier1);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier1);
  STRUCT_MIRROR_FCNS_DECL(los_subev);
};
#endif//USER_DEF_los_subev

#ifndef USER_DEF_master_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(master_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(barrier);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(master_subev);
};
#endif//USER_DEF_master_subev

#ifndef USER_DEF_straw_vme_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(straw_vme_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(vftx2);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_STRAW) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2);
  STRUCT_MIRROR_FCNS_DECL(straw_vme_subev);
};
#endif//USER_DEF_straw_vme_subev

#ifndef USER_DEF_tbm_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(tbm_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(tbm_subev);
};
#endif//USER_DEF_tbm_subev

#ifndef USER_DEF_tofd_tamex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(tofd_tamex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(padding1);
  STRUCT_MIRROR_TYPE(TAMEX3_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding1);
  STRUCT_MIRROR_ITEM_CTRL(tamex_1);
  STRUCT_MIRROR_TYPE(TAMEX3_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex_1);
  STRUCT_MIRROR_ITEM_CTRL(tamex_2);
  STRUCT_MIRROR_TYPE(TAMEX3_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex_2);
  STRUCT_MIRROR_ITEM_CTRL(padding2);
  STRUCT_MIRROR_TYPE(TAMEX3_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding2);
  STRUCT_MIRROR_ITEM_CTRL(tamex_3);
  STRUCT_MIRROR_TYPE(TAMEX3_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex_3);
  STRUCT_MIRROR_ITEM_CTRL(tamex_4);
  STRUCT_MIRROR_TYPE(TAMEX3_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex_4);
  STRUCT_MIRROR_ITEM_CTRL(header);
  STRUCT_MIRROR_TYPE(TAMEX3_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(tofd_tamex_subev);
};
#endif//USER_DEF_tofd_tamex_subev

#ifndef USER_DEF_tofd_vme_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(tofd_vme_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(vftx2_1);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2_1);
  STRUCT_MIRROR_ITEM_CTRL(vftx2_3);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2_3);
  STRUCT_MIRROR_ITEM_CTRL(vftx2_2);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2_2);
  STRUCT_MIRROR_ITEM_CTRL(barrier);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(tofd_vme_subev);
};
#endif//USER_DEF_tofd_vme_subev

#ifndef USER_DEF_tpat_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(tpat_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(tpat);
  STRUCT_MIRROR_TYPE(TRLOII_TPAT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tpat);
  STRUCT_MIRROR_FCNS_DECL(tpat_subev);
};
#endif//USER_DEF_tpat_subev

#ifndef USER_DEF_tracking_febex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(tracking_febex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(febex_0);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(febex_0__i0,,10);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex_0[10]);
  STRUCT_MIRROR_ITEM_CTRL(febex_2);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(febex_2__i0,,12);
  STRUCT_MIRROR_TYPE(FEBEX_NOTRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex_2[12]);
  STRUCT_MIRROR_ITEM_CTRL(header0);
  STRUCT_MIRROR_TYPE(FEBEX_EVENTHEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(header0);
  STRUCT_MIRROR_ITEM_CTRL(header2);
  STRUCT_MIRROR_TYPE(FEBEX_EVENTHEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(header2);
  STRUCT_MIRROR_FCNS_DECL(tracking_febex_subev);
};
#endif//USER_DEF_tracking_febex_subev

#ifndef USER_DEF_wr_100
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(wr_100) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts100);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts100);
  STRUCT_MIRROR_ITEM_CTRL(multi_);
  STRUCT_MIRROR_TYPE(WR_MULTI) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_);
  STRUCT_MIRROR_FCNS_DECL(wr_100);
};
#endif//USER_DEF_wr_100

#ifndef USER_DEF_wr_200
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(wr_200) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(multi_);
  STRUCT_MIRROR_TYPE(WR_MULTI) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_);
  STRUCT_MIRROR_ITEM_CTRL(ts200);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts200);
  STRUCT_MIRROR_FCNS_DECL(wr_200);
};
#endif//USER_DEF_wr_200

#ifndef USER_DEF_wr_400
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(wr_400) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts400);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts400);
  STRUCT_MIRROR_FCNS_DECL(wr_400);
};
#endif//USER_DEF_wr_400

#ifndef USER_DEF_unpack_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_event) : public STRUCT_MIRROR_BASE(unpack_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_event_base);
  STRUCT_MIRROR_ITEM_CTRL(master_ts);
  STRUCT_MIRROR_TYPE(wr_100) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(master_ts);
  STRUCT_MIRROR_ITEM_CTRL(master_lmu_scalers);
  STRUCT_MIRROR_TYPE(lmu_scalers_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(master_lmu_scalers);
  STRUCT_MIRROR_ITEM_CTRL(master_tpat);
  STRUCT_MIRROR_TYPE(tpat_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(master_tpat);
  STRUCT_MIRROR_ITEM_CTRL(master_vme);
  STRUCT_MIRROR_TYPE(master_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(master_vme);
  STRUCT_MIRROR_ITEM_CTRL(los);
  STRUCT_MIRROR_TYPE(los_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los);
  STRUCT_MIRROR_ITEM_CTRL(los_scalers);
  STRUCT_MIRROR_TYPE(los_scalers_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_scalers);
  STRUCT_MIRROR_ITEM_CTRL(los_sampler);
  STRUCT_MIRROR_TYPE(los_sampler_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_sampler);
  STRUCT_MIRROR_ITEM_CTRL(tofd_vme);
  STRUCT_MIRROR_TYPE(tofd_vme_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tofd_vme);
  STRUCT_MIRROR_ITEM_CTRL(tbm_ts);
  STRUCT_MIRROR_TYPE(wr_200) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tbm_ts);
  STRUCT_MIRROR_ITEM_CTRL(tbm_tpat);
  STRUCT_MIRROR_TYPE(tpat_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tbm_tpat);
  STRUCT_MIRROR_ITEM_CTRL(tbm_vme);
  STRUCT_MIRROR_TYPE(tbm_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tbm_vme);
  STRUCT_MIRROR_ITEM_CTRL(tofd_tamex);
  STRUCT_MIRROR_TYPE(tofd_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tofd_tamex);
  STRUCT_MIRROR_ITEM_CTRL(tracking_febex);
  STRUCT_MIRROR_TYPE(tracking_febex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tracking_febex);
  STRUCT_MIRROR_ITEM_CTRL(los_empty);
  STRUCT_MIRROR_TYPE(empty_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_empty);
  STRUCT_MIRROR_ITEM_CTRL(tofd_empty);
  STRUCT_MIRROR_TYPE(empty_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tofd_empty);
  STRUCT_MIRROR_FCNS_DECL(unpack_event);
};
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_sticky_event) : public STRUCT_MIRROR_BASE(unpack_sticky_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_sticky_event_base);
  STRUCT_MIRROR_FCNS_DECL(unpack_sticky_event);
};
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(BARRIER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_BAD_EVENTHEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_GOOD_EVENTHEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_EVENTHEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_NOTRACE);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_TRACE);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_STD_VME);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SCALER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX3_HEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX3_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX3_SFP);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLOII_LMU_SCALERS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLOII_SAMPLER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLOII_SAMPLER_TWO);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLOII_TPAT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VFTX2_STATUS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_7PS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_LT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_STRAW);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_MADC32);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(WR_MULTI);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(empty_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(fitest_febex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(lmu_scalers_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_sampler_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_scalers_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(master_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(straw_vme_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(tbm_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(tofd_tamex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(tofd_vme_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(tpat_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(tracking_febex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(wr_100);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(wr_200);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(wr_400);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_event);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_sticky_event);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_BARRIER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(BARRIER)::FCNCALL_NAME(BARRIER)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_31 : 32;
    // } ;
    // uint32 u32;
  // } barrier;
  {
  FCNCALL_SUBNAME("barrier");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_31 : 32;
  // } ;
  // uint32 unnamed_0_31 : 32;
  {
  FCNCALL_SUBNAME("unnamed_0_31");
  { FCNCALL_CALL_CTRL_WRAP(barrier.unnamed_0_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,barrier.unnamed_0_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(barrier.u32,FCNCALL_CALL_TYPE(uint32,barrier.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_BARRIER

#ifndef USER_DEF_FEBEX_BAD_EVENTHEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_BAD_EVENTHEADER)::FCNCALL_NAME(FEBEX_BAD_EVENTHEADER)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_31 : 32;
    // } ;
    // uint32 u32;
  // } badbad;
  {
  FCNCALL_SUBNAME("badbad");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_31 : 32;
  // } ;
  // uint32 unnamed_0_31 : 32;
  {
  FCNCALL_SUBNAME("unnamed_0_31");
  { FCNCALL_CALL_CTRL_WRAP(badbad.unnamed_0_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,badbad.unnamed_0_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(badbad.u32,FCNCALL_CALL_TYPE(uint32,badbad.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_BAD_EVENTHEADER

#ifndef USER_DEF_FEBEX_GOOD_EVENTHEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_GOOD_EVENTHEADER)::FCNCALL_NAME(FEBEX_GOOD_EVENTHEADER)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 n_febex_sfp0 : 8;
      // uint32 n_febex_sfp1 : 8;
      // uint32 n_febex_sfp2 : 8;
      // uint32 n_febex_sfp3 : 8;
    // } ;
    // uint32 u32;
  // } febexcards;
  {
  FCNCALL_SUBNAME("febexcards");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 n_febex_sfp0 : 8;
    // uint32 n_febex_sfp1 : 8;
    // uint32 n_febex_sfp2 : 8;
    // uint32 n_febex_sfp3 : 8;
  // } ;
  // uint32 n_febex_sfp0 : 8;
  {
  FCNCALL_SUBNAME("n_febex_sfp0");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.n_febex_sfp0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.n_febex_sfp0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 n_febex_sfp1 : 8;
  {
  FCNCALL_SUBNAME("n_febex_sfp1");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.n_febex_sfp1,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.n_febex_sfp1)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 n_febex_sfp2 : 8;
  {
  FCNCALL_SUBNAME("n_febex_sfp2");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.n_febex_sfp2,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.n_febex_sfp2)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 n_febex_sfp3 : 8;
  {
  FCNCALL_SUBNAME("n_febex_sfp3");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.n_febex_sfp3,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.n_febex_sfp3)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.u32,FCNCALL_CALL_TYPE(uint32,febexcards.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 trace_length : 16;
      // uint32 trigger_delay : 16;
    // } ;
    // uint32 u32;
  // } trig_length;
  {
  FCNCALL_SUBNAME("trig_length");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 trace_length : 16;
    // uint32 trigger_delay : 16;
  // } ;
  // uint32 trace_length : 16;
  {
  FCNCALL_SUBNAME("trace_length");
  { FCNCALL_CALL_CTRL_WRAP(trig_length.trace_length,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trig_length.trace_length)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_delay : 16;
  {
  FCNCALL_SUBNAME("trigger_delay");
  { FCNCALL_CALL_CTRL_WRAP(trig_length.trigger_delay,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trig_length.trigger_delay)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trig_length.u32,FCNCALL_CALL_TYPE(uint32,trig_length.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 sum_b : 11;
      // uint32 gap : 10;
      // uint32 sum_a : 11;
    // } ;
    // uint32 u32;
  // } energy_filter;
  {
  FCNCALL_SUBNAME("energy_filter");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 sum_b : 11;
    // uint32 gap : 10;
    // uint32 sum_a : 11;
  // } ;
  // uint32 sum_b : 11;
  {
  FCNCALL_SUBNAME("sum_b");
  { FCNCALL_CALL_CTRL_WRAP(energy_filter.sum_b,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,energy_filter.sum_b)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 gap : 10;
  {
  FCNCALL_SUBNAME("gap");
  { FCNCALL_CALL_CTRL_WRAP(energy_filter.gap,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,energy_filter.gap)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sum_a : 11;
  {
  FCNCALL_SUBNAME("sum_a");
  { FCNCALL_CALL_CTRL_WRAP(energy_filter.sum_a,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,energy_filter.sum_a)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(energy_filter.u32,FCNCALL_CALL_TYPE(uint32,energy_filter.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 pola : 32;
    // } ;
    // uint32 u32;
  // } polarity1;
  {
  FCNCALL_SUBNAME("polarity1");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 pola : 32;
  // } ;
  // uint32 pola : 32;
  {
  FCNCALL_SUBNAME("pola");
  { FCNCALL_CALL_CTRL_WRAP(polarity1.pola,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,polarity1.pola)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(polarity1.u32,FCNCALL_CALL_TYPE(uint32,polarity1.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 pola : 32;
    // } ;
    // uint32 u32;
  // } polarity2;
  {
  FCNCALL_SUBNAME("polarity2");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 pola : 32;
  // } ;
  // uint32 pola : 32;
  {
  FCNCALL_SUBNAME("pola");
  { FCNCALL_CALL_CTRL_WRAP(polarity2.pola,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,polarity2.pola)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(polarity2.u32,FCNCALL_CALL_TYPE(uint32,polarity2.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 pola : 32;
    // } ;
    // uint32 u32;
  // } polarity3;
  {
  FCNCALL_SUBNAME("polarity3");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 pola : 32;
  // } ;
  // uint32 pola : 32;
  {
  FCNCALL_SUBNAME("pola");
  { FCNCALL_CALL_CTRL_WRAP(polarity3.pola,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,polarity3.pola)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(polarity3.u32,FCNCALL_CALL_TYPE(uint32,polarity3.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 pola : 32;
    // } ;
    // uint32 u32;
  // } polarity4;
  {
  FCNCALL_SUBNAME("polarity4");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 pola : 32;
  // } ;
  // uint32 pola : 32;
  {
  FCNCALL_SUBNAME("pola");
  { FCNCALL_CALL_CTRL_WRAP(polarity4.pola,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,polarity4.pola)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(polarity4.u32,FCNCALL_CALL_TYPE(uint32,polarity4.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_GOOD_EVENTHEADER

#ifndef USER_DEF_FEBEX_EVENTHEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_EVENTHEADER)::FCNCALL_NAME(FEBEX_EVENTHEADER)
{
  FCNCALL_INIT;
  // FEBEX_GOOD_EVENTHEADER good;
  {
  FCNCALL_SUBNAME("good");
  { FCNCALL_CALL_CTRL_WRAP(good,good.FCNCALL_CALL(good)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_BAD_EVENTHEADER bad;
  {
  FCNCALL_SUBNAME("bad");
  { FCNCALL_CALL_CTRL_WRAP(bad,bad.FCNCALL_CALL(bad)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_EVENTHEADER

#ifndef USER_DEF_FEBEX_NOTRACE
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_NOTRACE)::FCNCALL_NAME(FEBEX_NOTRACE)
{
  FCNCALL_INIT;
  // raw_array<DATA8,DATA8,16> n_hit;
  {
  FCNCALL_SUBNAME("n_hit");
  { FCNCALL_CALL_CTRL_WRAP(n_hit,n_hit.FCNCALL_CALL(n_hit)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,16,32> t;
  {
  FCNCALL_SUBNAME("t");
  { FCNCALL_CALL_CTRL_WRAP(t,t.FCNCALL_CALL(t)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA32,DATA32,16,32> e;
  {
  FCNCALL_SUBNAME("e");
  { FCNCALL_CALL_CTRL_WRAP(e,e.FCNCALL_CALL(e)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_NOTRACE

#ifndef USER_DEF_FEBEX_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_PADDING)::FCNCALL_NAME(FEBEX_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_FEBEX_TRACE
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_TRACE)::FCNCALL_NAME(FEBEX_TRACE)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,16> trace_length;
  {
  FCNCALL_SUBNAME("trace_length");
  { FCNCALL_CALL_CTRL_WRAP(trace_length,trace_length.FCNCALL_CALL(trace_length)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,1000> trace[16];
  {
  FCNCALL_SUBNAME("trace");
  FCNCALL_FOR(__i0,16)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(trace__i0,,__i0,trace[__i0].FCNCALL_CALL(trace[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,1000> filter[16];
  {
  FCNCALL_SUBNAME("filter");
  FCNCALL_FOR(__i0,16)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(filter__i0,,__i0,filter[__i0].FCNCALL_CALL(filter[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_TRACE

#ifndef USER_DEF_LAND_STD_VME
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_STD_VME)::FCNCALL_NAME(LAND_STD_VME)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 fail_general : 1;
      // uint32 fail_data_corrupt : 1;
      // uint32 fail_data_missing : 1;
      // uint32 fail_data_too_much : 1;
      // uint32 fail_event_counter_mismatch : 1;
      // uint32 fail_readout_error_driver : 1;
      // uint32 fail_unexpected_trigger : 1;
      // uint32 fail_firmware_mismatch : 1;
      // uint32 dummy_8_21 : 14;
      // uint32 has_multi_trlo_ii_counter0 : 1;
      // uint32 has_clock_counter_stamp : 1;
      // uint32 has_continous_event_counter : 1;
      // uint32 has_update_qdc_iped_value : 1;
      // uint32 spurious_start_before_tcal : 1;
      // uint32 has_no_zero_suppression : 1;
      // uint32 has_multi_adctdc_counter0 : 1;
      // uint32 has_multi_scaler_counter0 : 1;
      // uint32 has_multi_event : 1;
      // uint32 has_time_stamp : 1;
    // } ;
    // uint32 u32;
  // } failure;
  {
  FCNCALL_SUBNAME("failure");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 fail_general : 1;
    // uint32 fail_data_corrupt : 1;
    // uint32 fail_data_missing : 1;
    // uint32 fail_data_too_much : 1;
    // uint32 fail_event_counter_mismatch : 1;
    // uint32 fail_readout_error_driver : 1;
    // uint32 fail_unexpected_trigger : 1;
    // uint32 fail_firmware_mismatch : 1;
    // uint32 dummy_8_21 : 14;
    // uint32 has_multi_trlo_ii_counter0 : 1;
    // uint32 has_clock_counter_stamp : 1;
    // uint32 has_continous_event_counter : 1;
    // uint32 has_update_qdc_iped_value : 1;
    // uint32 spurious_start_before_tcal : 1;
    // uint32 has_no_zero_suppression : 1;
    // uint32 has_multi_adctdc_counter0 : 1;
    // uint32 has_multi_scaler_counter0 : 1;
    // uint32 has_multi_event : 1;
    // uint32 has_time_stamp : 1;
  // } ;
  // uint32 fail_general : 1;
  {
  FCNCALL_SUBNAME("fail_general");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_general,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_general)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_corrupt : 1;
  {
  FCNCALL_SUBNAME("fail_data_corrupt");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_corrupt,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_corrupt)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_missing : 1;
  {
  FCNCALL_SUBNAME("fail_data_missing");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_missing,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_missing)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_too_much : 1;
  {
  FCNCALL_SUBNAME("fail_data_too_much");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_too_much,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_too_much)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_event_counter_mismatch : 1;
  {
  FCNCALL_SUBNAME("fail_event_counter_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_event_counter_mismatch,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_event_counter_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_readout_error_driver : 1;
  {
  FCNCALL_SUBNAME("fail_readout_error_driver");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_readout_error_driver,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_readout_error_driver)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_unexpected_trigger : 1;
  {
  FCNCALL_SUBNAME("fail_unexpected_trigger");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_unexpected_trigger,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_unexpected_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_firmware_mismatch : 1;
  {
  FCNCALL_SUBNAME("fail_firmware_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_firmware_mismatch,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_firmware_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_21 : 14;
  {
  FCNCALL_SUBNAME("dummy_8_21");
  { FCNCALL_CALL_CTRL_WRAP(failure.dummy_8_21,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.dummy_8_21)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_trlo_ii_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_trlo_ii_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_trlo_ii_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_trlo_ii_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_clock_counter_stamp : 1;
  {
  FCNCALL_SUBNAME("has_clock_counter_stamp");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_clock_counter_stamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_clock_counter_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_continous_event_counter : 1;
  {
  FCNCALL_SUBNAME("has_continous_event_counter");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_continous_event_counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_continous_event_counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_update_qdc_iped_value : 1;
  {
  FCNCALL_SUBNAME("has_update_qdc_iped_value");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_update_qdc_iped_value,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_update_qdc_iped_value)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 spurious_start_before_tcal : 1;
  {
  FCNCALL_SUBNAME("spurious_start_before_tcal");
  { FCNCALL_CALL_CTRL_WRAP(failure.spurious_start_before_tcal,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.spurious_start_before_tcal)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_no_zero_suppression : 1;
  {
  FCNCALL_SUBNAME("has_no_zero_suppression");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_no_zero_suppression,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_no_zero_suppression)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_adctdc_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_adctdc_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_adctdc_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_adctdc_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_scaler_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_scaler_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_scaler_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_scaler_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_event : 1;
  {
  FCNCALL_SUBNAME("has_multi_event");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_event,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_event)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_time_stamp : 1;
  {
  FCNCALL_SUBNAME("has_time_stamp");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_time_stamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_time_stamp)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(failure.u32,FCNCALL_CALL_TYPE(uint32,failure.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 continous_event_counter;
  {
  FCNCALL_SUBNAME("continous_event_counter");
  { FCNCALL_CALL_CTRL_WRAP(continous_event_counter,FCNCALL_CALL_TYPE(uint32,continous_event_counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_stamp;
  {
  FCNCALL_SUBNAME("time_stamp");
  { FCNCALL_CALL_CTRL_WRAP(time_stamp,FCNCALL_CALL_TYPE(uint32,time_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 clock_counter_stamp;
  {
  FCNCALL_SUBNAME("clock_counter_stamp");
  { FCNCALL_CALL_CTRL_WRAP(clock_counter_stamp,FCNCALL_CALL_TYPE(uint32,clock_counter_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 iped;
  {
  FCNCALL_SUBNAME("iped");
  { FCNCALL_CALL_CTRL_WRAP(iped,FCNCALL_CALL_TYPE(uint32,iped)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_events;
  {
  FCNCALL_SUBNAME("multi_events");
  { FCNCALL_CALL_CTRL_WRAP(multi_events,FCNCALL_CALL_TYPE(uint32,multi_events)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_trlo_ii_counter0;
  {
  FCNCALL_SUBNAME("multi_trlo_ii_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_trlo_ii_counter0,FCNCALL_CALL_TYPE(uint32,multi_trlo_ii_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_scaler_counter0;
  {
  FCNCALL_SUBNAME("multi_scaler_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_scaler_counter0,FCNCALL_CALL_TYPE(uint32,multi_scaler_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_adctdc_counter0;
  {
  FCNCALL_SUBNAME("multi_adctdc_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_adctdc_counter0,FCNCALL_CALL_TYPE(uint32,multi_adctdc_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_STD_VME

#ifndef USER_DEF_SCALER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SCALER)::FCNCALL_NAME(SCALER)
{
  FCNCALL_INIT;
  // uint32 scaler;
  {
  FCNCALL_SUBNAME("scaler");
  { FCNCALL_CALL_CTRL_WRAP(scaler,FCNCALL_CALL_TYPE(uint32,scaler)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SCALER

#ifndef USER_DEF_TAMEX3_HEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX3_HEADER)::FCNCALL_NAME(TAMEX3_HEADER)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 post_trig_ns : 16;
      // uint32 pre_trig_ns : 16;
    // } ;
    // uint32 u32;
  // } trigger_window;
  {
  FCNCALL_SUBNAME("trigger_window");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 post_trig_ns : 16;
    // uint32 pre_trig_ns : 16;
  // } ;
  // uint32 post_trig_ns : 16;
  {
  FCNCALL_SUBNAME("post_trig_ns");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.post_trig_ns,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.post_trig_ns)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 pre_trig_ns : 16;
  {
  FCNCALL_SUBNAME("pre_trig_ns");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.pre_trig_ns,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.pre_trig_ns)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.u32,FCNCALL_CALL_TYPE(uint32,trigger_window.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX3_HEADER

#ifndef USER_DEF_TAMEX3_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX3_PADDING)::FCNCALL_NAME(TAMEX3_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX3_PADDING

#ifndef USER_DEF_TAMEX3_SFP
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX3_SFP)::FCNCALL_NAME(TAMEX3_SFP)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA16,DATA16,34,200> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,34,200> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX3_SFP

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TIMESTAMP_WHITERABBIT)::FCNCALL_NAME(TIMESTAMP_WHITERABBIT)
{
  FCNCALL_INIT;
  // DATA12 subsystem_id;
  {
  FCNCALL_SUBNAME("subsystem_id");
  { FCNCALL_CALL_CTRL_WRAP(subsystem_id,subsystem_id.FCNCALL_CALL(subsystem_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t1;
  {
  FCNCALL_SUBNAME("t1");
  { FCNCALL_CALL_CTRL_WRAP(t1,t1.FCNCALL_CALL(t1)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t2;
  {
  FCNCALL_SUBNAME("t2");
  { FCNCALL_CALL_CTRL_WRAP(t2,t2.FCNCALL_CALL(t2)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t3;
  {
  FCNCALL_SUBNAME("t3");
  { FCNCALL_CALL_CTRL_WRAP(t3,t3.FCNCALL_CALL(t3)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t4;
  {
  FCNCALL_SUBNAME("t4");
  { FCNCALL_CALL_CTRL_WRAP(t4,t4.FCNCALL_CALL(t4)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TRLOII_LMU_SCALERS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLOII_LMU_SCALERS)::FCNCALL_NAME(TRLOII_LMU_SCALERS)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,63> before_lmu;
  {
  FCNCALL_SUBNAME("before_lmu");
  { FCNCALL_CALL_CTRL_WRAP(before_lmu,before_lmu.FCNCALL_CALL(before_lmu)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,31> before_lmu_mux;
  {
  FCNCALL_SUBNAME("before_lmu_mux");
  { FCNCALL_CALL_CTRL_WRAP(before_lmu_mux,before_lmu_mux.FCNCALL_CALL(before_lmu_mux)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,31> before_lmu_aux;
  {
  FCNCALL_SUBNAME("before_lmu_aux");
  { FCNCALL_CALL_CTRL_WRAP(before_lmu_aux,before_lmu_aux.FCNCALL_CALL(before_lmu_aux)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,127> before_dt;
  {
  FCNCALL_SUBNAME("before_dt");
  { FCNCALL_CALL_CTRL_WRAP(before_dt,before_dt.FCNCALL_CALL(before_dt)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,127> after_dt;
  {
  FCNCALL_SUBNAME("after_dt");
  { FCNCALL_CALL_CTRL_WRAP(after_dt,after_dt.FCNCALL_CALL(after_dt)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,127> after_reduction;
  {
  FCNCALL_SUBNAME("after_reduction");
  { FCNCALL_CALL_CTRL_WRAP(after_reduction,after_reduction.FCNCALL_CALL(after_reduction)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 before_lmu : 6;
      // uint32 before_lmu_mux : 5;
      // uint32 before_lmu_aux : 5;
      // uint32 after_lmu : 8;
      // uint32 id : 8;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 before_lmu : 6;
    // uint32 before_lmu_mux : 5;
    // uint32 before_lmu_aux : 5;
    // uint32 after_lmu : 8;
    // uint32 id : 8;
  // } ;
  // uint32 before_lmu : 6;
  {
  FCNCALL_SUBNAME("before_lmu");
  { FCNCALL_CALL_CTRL_WRAP(header.before_lmu,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.before_lmu)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 before_lmu_mux : 5;
  {
  FCNCALL_SUBNAME("before_lmu_mux");
  { FCNCALL_CALL_CTRL_WRAP(header.before_lmu_mux,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.before_lmu_mux)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 before_lmu_aux : 5;
  {
  FCNCALL_SUBNAME("before_lmu_aux");
  { FCNCALL_CALL_CTRL_WRAP(header.before_lmu_aux,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.before_lmu_aux)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 after_lmu : 8;
  {
  FCNCALL_SUBNAME("after_lmu");
  { FCNCALL_CALL_CTRL_WRAP(header.after_lmu,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.after_lmu)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 id : 8;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.id)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLOII_LMU_SCALERS

#ifndef USER_DEF_TRLOII_SAMPLER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLOII_SAMPLER)::FCNCALL_NAME(TRLOII_SAMPLER)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,512> sampler;
  {
  FCNCALL_SUBNAME("sampler");
  { FCNCALL_CALL_CTRL_WRAP(sampler,sampler.FCNCALL_CALL(sampler)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_num : 10;
      // uint32 overflow : 1;
      // uint32 dummy_11_15 : 5;
      // uint32 mark : 16;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_num : 10;
    // uint32 overflow : 1;
    // uint32 dummy_11_15 : 5;
    // uint32 mark : 16;
  // } ;
  // uint32 word_num : 10;
  {
  FCNCALL_SUBNAME("word_num");
  { FCNCALL_CALL_CTRL_WRAP(header.word_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.word_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 overflow : 1;
  {
  FCNCALL_SUBNAME("overflow");
  { FCNCALL_CALL_CTRL_WRAP(header.overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_11_15 : 5;
  {
  FCNCALL_SUBNAME("dummy_11_15");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_11_15,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_11_15)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 mark : 16;
  {
  FCNCALL_SUBNAME("mark");
  { FCNCALL_CALL_CTRL_WRAP(header.mark,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.mark)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLOII_SAMPLER

#ifndef USER_DEF_TRLOII_SAMPLER_TWO
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLOII_SAMPLER_TWO)::FCNCALL_NAME(TRLOII_SAMPLER_TWO)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,512> sampler_hi;
  {
  FCNCALL_SUBNAME("sampler_hi");
  { FCNCALL_CALL_CTRL_WRAP(sampler_hi,sampler_hi.FCNCALL_CALL(sampler_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,512> sampler_lo;
  {
  FCNCALL_SUBNAME("sampler_lo");
  { FCNCALL_CALL_CTRL_WRAP(sampler_lo,sampler_lo.FCNCALL_CALL(sampler_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_num : 10;
      // uint32 overflow : 1;
      // uint32 dummy_11_15 : 5;
      // uint32 mark : 16;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_num : 10;
    // uint32 overflow : 1;
    // uint32 dummy_11_15 : 5;
    // uint32 mark : 16;
  // } ;
  // uint32 word_num : 10;
  {
  FCNCALL_SUBNAME("word_num");
  { FCNCALL_CALL_CTRL_WRAP(header.word_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.word_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 overflow : 1;
  {
  FCNCALL_SUBNAME("overflow");
  { FCNCALL_CALL_CTRL_WRAP(header.overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_11_15 : 5;
  {
  FCNCALL_SUBNAME("dummy_11_15");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_11_15,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_11_15)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 mark : 16;
  {
  FCNCALL_SUBNAME("mark");
  { FCNCALL_CALL_CTRL_WRAP(header.mark,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.mark)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLOII_SAMPLER_TWO

#ifndef USER_DEF_TRLOII_TPAT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLOII_TPAT)::FCNCALL_NAME(TRLOII_TPAT)
{
  FCNCALL_INIT;
  // DATA32 n;
  {
  FCNCALL_SUBNAME("n");
  { FCNCALL_CALL_CTRL_WRAP(n,n.FCNCALL_CALL(n)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA16,DATA16,170> tpat;
  {
  FCNCALL_SUBNAME("tpat");
  { FCNCALL_CALL_CTRL_WRAP(tpat,tpat.FCNCALL_CALL(tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA8,DATA8,170> trig;
  {
  FCNCALL_SUBNAME("trig");
  { FCNCALL_CALL_CTRL_WRAP(trig,trig.FCNCALL_CALL(trig)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA32,DATA32,170> ts_lo;
  {
  FCNCALL_SUBNAME("ts_lo");
  { FCNCALL_CALL_CTRL_WRAP(ts_lo,ts_lo.FCNCALL_CALL(ts_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA32,DATA32,170> ts_hi;
  {
  FCNCALL_SUBNAME("ts_hi");
  { FCNCALL_CALL_CTRL_WRAP(ts_hi,ts_hi.FCNCALL_CALL(ts_hi)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLOII_TPAT

#ifndef USER_DEF_VFTX2_STATUS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VFTX2_STATUS)::FCNCALL_NAME(VFTX2_STATUS)
{
  FCNCALL_INIT;
  // uint32 status;
  {
  FCNCALL_SUBNAME("status");
  { FCNCALL_CALL_CTRL_WRAP(status,FCNCALL_CALL_TYPE(uint32,status)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VFTX2_STATUS

#ifndef USER_DEF_VME_GSI_VFTX2
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2)::FCNCALL_NAME(VME_GSI_VFTX2)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 5;
      // uint32 internal_status : 4;
      // uint32 count : 9;
      // uint32 dummy_18_23 : 6;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 5;
    // uint32 internal_status : 4;
    // uint32 count : 9;
    // uint32 dummy_18_23 : 6;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 id : 5;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 internal_status : 4;
  {
  FCNCALL_SUBNAME("internal_status");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.internal_status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.internal_status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_18_23 : 6;
  {
  FCNCALL_SUBNAME("dummy_18_23");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.dummy_18_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.dummy_18_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_7 : 8;
      // uint32 dummy_8_10 : 3;
      // uint32 trigger_timestamp : 13;
      // uint32 dummy_24_28 : 5;
      // uint32 unnamed_29_30 : 2;
      // uint32 unnamed_31_31 : 1;
    // } ;
    // uint32 u32;
  // } event_header;
  {
  FCNCALL_SUBNAME("event_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_7 : 8;
    // uint32 dummy_8_10 : 3;
    // uint32 trigger_timestamp : 13;
    // uint32 dummy_24_28 : 5;
    // uint32 unnamed_29_30 : 2;
    // uint32 unnamed_31_31 : 1;
  // } ;
  // uint32 unnamed_0_7 : 8;
  {
  FCNCALL_SUBNAME("unnamed_0_7");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_0_7,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_0_7)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_10 : 3;
  {
  FCNCALL_SUBNAME("dummy_8_10");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_8_10,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_8_10)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_timestamp : 13;
  {
  FCNCALL_SUBNAME("trigger_timestamp");
  { FCNCALL_CALL_CTRL_WRAP(event_header.trigger_timestamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.trigger_timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_28 : 5;
  {
  FCNCALL_SUBNAME("dummy_24_28");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_24_28,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_24_28)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_29_30 : 2;
  {
  FCNCALL_SUBNAME("unnamed_29_30");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_29_30,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_29_30)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_31_31 : 1;
  {
  FCNCALL_SUBNAME("unnamed_31_31");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_31_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_31_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(event_header.u32,FCNCALL_CALL_TYPE(uint32,event_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2

#ifndef USER_DEF_VME_GSI_VFTX2_7PS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2_7PS)::FCNCALL_NAME(VME_GSI_VFTX2_7PS)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,32,100> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,32,100> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 5;
      // uint32 internal_status : 4;
      // uint32 count : 9;
      // uint32 dummy_18_23 : 6;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 5;
    // uint32 internal_status : 4;
    // uint32 count : 9;
    // uint32 dummy_18_23 : 6;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 id : 5;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 internal_status : 4;
  {
  FCNCALL_SUBNAME("internal_status");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.internal_status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.internal_status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_18_23 : 6;
  {
  FCNCALL_SUBNAME("dummy_18_23");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.dummy_18_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.dummy_18_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2_7PS

#ifndef USER_DEF_VME_GSI_VFTX2_LT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2_LT)::FCNCALL_NAME(VME_GSI_VFTX2_LT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,64,100> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,64,100> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 5;
      // uint32 internal_status : 4;
      // uint32 count : 9;
      // uint32 dummy_18_23 : 6;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 5;
    // uint32 internal_status : 4;
    // uint32 count : 9;
    // uint32 dummy_18_23 : 6;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 id : 5;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 internal_status : 4;
  {
  FCNCALL_SUBNAME("internal_status");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.internal_status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.internal_status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_18_23 : 6;
  {
  FCNCALL_SUBNAME("dummy_18_23");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.dummy_18_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.dummy_18_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_7 : 8;
      // uint32 dummy_8_10 : 3;
      // uint32 trigger_timestamp : 13;
      // uint32 dummy_24_28 : 5;
      // uint32 unnamed_29_30 : 2;
      // uint32 unnamed_31_31 : 1;
    // } ;
    // uint32 u32;
  // } event_header;
  {
  FCNCALL_SUBNAME("event_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_7 : 8;
    // uint32 dummy_8_10 : 3;
    // uint32 trigger_timestamp : 13;
    // uint32 dummy_24_28 : 5;
    // uint32 unnamed_29_30 : 2;
    // uint32 unnamed_31_31 : 1;
  // } ;
  // uint32 unnamed_0_7 : 8;
  {
  FCNCALL_SUBNAME("unnamed_0_7");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_0_7,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_0_7)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_10 : 3;
  {
  FCNCALL_SUBNAME("dummy_8_10");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_8_10,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_8_10)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_timestamp : 13;
  {
  FCNCALL_SUBNAME("trigger_timestamp");
  { FCNCALL_CALL_CTRL_WRAP(event_header.trigger_timestamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.trigger_timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_28 : 5;
  {
  FCNCALL_SUBNAME("dummy_24_28");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_24_28,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_24_28)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_29_30 : 2;
  {
  FCNCALL_SUBNAME("unnamed_29_30");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_29_30,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_29_30)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_31_31 : 1;
  {
  FCNCALL_SUBNAME("unnamed_31_31");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_31_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_31_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(event_header.u32,FCNCALL_CALL_TYPE(uint32,event_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2_LT

#ifndef USER_DEF_VME_GSI_VFTX2_STRAW
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2_STRAW)::FCNCALL_NAME(VME_GSI_VFTX2_STRAW)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,32,32> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,32,32> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 internal : 4;
      // uint32 count : 9;
      // uint32 dummy_13_31 : 19;
    // } ;
    // uint32 u32;
  // } status;
  {
  FCNCALL_SUBNAME("status");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 internal : 4;
    // uint32 count : 9;
    // uint32 dummy_13_31 : 19;
  // } ;
  // uint32 internal : 4;
  {
  FCNCALL_SUBNAME("internal");
  { FCNCALL_CALL_CTRL_WRAP(status.internal,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,status.internal)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(status.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,status.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_13_31 : 19;
  {
  FCNCALL_SUBNAME("dummy_13_31");
  { FCNCALL_CALL_CTRL_WRAP(status.dummy_13_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,status.dummy_13_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(status.u32,FCNCALL_CALL_TYPE(uint32,status.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 count : 16;
      // uint32 id : 8;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 count : 16;
    // uint32 id : 8;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 count : 16;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 id : 8;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_7 : 8;
      // uint32 dummy_8_10 : 3;
      // uint32 trigger_timestamp : 13;
      // uint32 dummy_24_28 : 5;
      // uint32 unnamed_29_30 : 2;
      // uint32 unnamed_31_31 : 1;
    // } ;
    // uint32 u32;
  // } event_header;
  {
  FCNCALL_SUBNAME("event_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_7 : 8;
    // uint32 dummy_8_10 : 3;
    // uint32 trigger_timestamp : 13;
    // uint32 dummy_24_28 : 5;
    // uint32 unnamed_29_30 : 2;
    // uint32 unnamed_31_31 : 1;
  // } ;
  // uint32 unnamed_0_7 : 8;
  {
  FCNCALL_SUBNAME("unnamed_0_7");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_0_7,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_0_7)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_10 : 3;
  {
  FCNCALL_SUBNAME("dummy_8_10");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_8_10,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_8_10)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_timestamp : 13;
  {
  FCNCALL_SUBNAME("trigger_timestamp");
  { FCNCALL_CALL_CTRL_WRAP(event_header.trigger_timestamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.trigger_timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_28 : 5;
  {
  FCNCALL_SUBNAME("dummy_24_28");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_24_28,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_24_28)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_29_30 : 2;
  {
  FCNCALL_SUBNAME("unnamed_29_30");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_29_30,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_29_30)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_31_31 : 1;
  {
  FCNCALL_SUBNAME("unnamed_31_31");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_31_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_31_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(event_header.u32,FCNCALL_CALL_TYPE(uint32,event_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2_STRAW

#ifndef USER_DEF_VME_MESYTEC_MADC32
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_MADC32)::FCNCALL_NAME(VME_MESYTEC_MADC32)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA14_OVERFLOW,DATA14_OVERFLOW,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_MADC32

#ifndef USER_DEF_WR_MULTI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(WR_MULTI)::FCNCALL_NAME(WR_MULTI)
{
  FCNCALL_INIT;
  // DATA32 time_hi;
  {
  FCNCALL_SUBNAME("time_hi");
  { FCNCALL_CALL_CTRL_WRAP(time_hi,time_hi.FCNCALL_CALL(time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 time_lo;
  {
  FCNCALL_SUBNAME("time_lo");
  { FCNCALL_CALL_CTRL_WRAP(time_lo,time_lo.FCNCALL_CALL(time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_empty_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(empty_subev)::FCNCALL_NAME(empty_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_empty_subev

#ifndef USER_DEF_fitest_febex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(fitest_febex_subev)::FCNCALL_NAME(fitest_febex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // FEBEX_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex[8];
  {
  FCNCALL_SUBNAME("febex");
  FCNCALL_FOR(__i0,8)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(febex__i0,,__i0,febex[__i0].FCNCALL_CALL(febex[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_TRACE febextrace[8];
  {
  FCNCALL_SUBNAME("febextrace");
  FCNCALL_FOR(__i0,8)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(febextrace__i0,,__i0,febextrace[__i0].FCNCALL_CALL(febextrace[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_EVENTHEADER header;
  {
  FCNCALL_SUBNAME("header");
  { FCNCALL_CALL_CTRL_WRAP(header,header.FCNCALL_CALL(header)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_fitest_febex_subev

#ifndef USER_DEF_lmu_scalers_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(lmu_scalers_subev)::FCNCALL_NAME(lmu_scalers_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRLOII_LMU_SCALERS scalers;
  {
  FCNCALL_SUBNAME("scalers");
  { FCNCALL_CALL_CTRL_WRAP(scalers,scalers.FCNCALL_CALL(scalers)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_lmu_scalers_subev

#ifndef USER_DEF_los_sampler_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_sampler_subev)::FCNCALL_NAME(los_sampler_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRLOII_SAMPLER sampler;
  {
  FCNCALL_SUBNAME("sampler");
  { FCNCALL_CALL_CTRL_WRAP(sampler,sampler.FCNCALL_CALL(sampler)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_sampler_subev

#ifndef USER_DEF_los_scalers_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_scalers_subev)::FCNCALL_NAME(los_scalers_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // SCALER scaler;
  {
  FCNCALL_SUBNAME("scaler");
  { FCNCALL_CALL_CTRL_WRAP(scaler,scaler.FCNCALL_CALL(scaler)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_scalers_subev

#ifndef USER_DEF_los_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_subev)::FCNCALL_NAME(los_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // VME_GSI_VFTX2_7PS vftx2;
  {
  FCNCALL_SUBNAME("vftx2");
  { FCNCALL_CALL_CTRL_WRAP(vftx2,vftx2.FCNCALL_CALL(vftx2)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER barrier2;
  {
  FCNCALL_SUBNAME("barrier2");
  { FCNCALL_CALL_CTRL_WRAP(barrier2,barrier2.FCNCALL_CALL(barrier2)); }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER barrier1;
  {
  FCNCALL_SUBNAME("barrier1");
  { FCNCALL_CALL_CTRL_WRAP(barrier1,barrier1.FCNCALL_CALL(barrier1)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_subev

#ifndef USER_DEF_master_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(master_subev)::FCNCALL_NAME(master_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // BARRIER barrier;
  {
  FCNCALL_SUBNAME("barrier");
  { FCNCALL_CALL_CTRL_WRAP(barrier,barrier.FCNCALL_CALL(barrier)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_master_subev

#ifndef USER_DEF_straw_vme_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(straw_vme_subev)::FCNCALL_NAME(straw_vme_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // VME_GSI_VFTX2_STRAW vftx2;
  {
  FCNCALL_SUBNAME("vftx2");
  { FCNCALL_CALL_CTRL_WRAP(vftx2,vftx2.FCNCALL_CALL(vftx2)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_straw_vme_subev

#ifndef USER_DEF_tbm_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(tbm_subev)::FCNCALL_NAME(tbm_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_tbm_subev

#ifndef USER_DEF_tofd_tamex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(tofd_tamex_subev)::FCNCALL_NAME(tofd_tamex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TAMEX3_PADDING padding1;
  {
  FCNCALL_SUBNAME("padding1");
  { FCNCALL_CALL_CTRL_WRAP(padding1,padding1.FCNCALL_CALL(padding1)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX3_SFP tamex_1;
  {
  FCNCALL_SUBNAME("tamex_1");
  { FCNCALL_CALL_CTRL_WRAP(tamex_1,tamex_1.FCNCALL_CALL(tamex_1)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX3_SFP tamex_2;
  {
  FCNCALL_SUBNAME("tamex_2");
  { FCNCALL_CALL_CTRL_WRAP(tamex_2,tamex_2.FCNCALL_CALL(tamex_2)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX3_PADDING padding2;
  {
  FCNCALL_SUBNAME("padding2");
  { FCNCALL_CALL_CTRL_WRAP(padding2,padding2.FCNCALL_CALL(padding2)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX3_SFP tamex_3;
  {
  FCNCALL_SUBNAME("tamex_3");
  { FCNCALL_CALL_CTRL_WRAP(tamex_3,tamex_3.FCNCALL_CALL(tamex_3)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX3_SFP tamex_4;
  {
  FCNCALL_SUBNAME("tamex_4");
  { FCNCALL_CALL_CTRL_WRAP(tamex_4,tamex_4.FCNCALL_CALL(tamex_4)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX3_HEADER header;
  {
  FCNCALL_SUBNAME("header");
  { FCNCALL_CALL_CTRL_WRAP(header,header.FCNCALL_CALL(header)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_tofd_tamex_subev

#ifndef USER_DEF_tofd_vme_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(tofd_vme_subev)::FCNCALL_NAME(tofd_vme_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // VME_GSI_VFTX2_7PS vftx2_1;
  {
  FCNCALL_SUBNAME("vftx2_1");
  { FCNCALL_CALL_CTRL_WRAP(vftx2_1,vftx2_1.FCNCALL_CALL(vftx2_1)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_GSI_VFTX2_7PS vftx2_3;
  {
  FCNCALL_SUBNAME("vftx2_3");
  { FCNCALL_CALL_CTRL_WRAP(vftx2_3,vftx2_3.FCNCALL_CALL(vftx2_3)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_GSI_VFTX2_7PS vftx2_2;
  {
  FCNCALL_SUBNAME("vftx2_2");
  { FCNCALL_CALL_CTRL_WRAP(vftx2_2,vftx2_2.FCNCALL_CALL(vftx2_2)); }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER barrier;
  {
  FCNCALL_SUBNAME("barrier");
  { FCNCALL_CALL_CTRL_WRAP(barrier,barrier.FCNCALL_CALL(barrier)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_tofd_vme_subev

#ifndef USER_DEF_tpat_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(tpat_subev)::FCNCALL_NAME(tpat_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRLOII_TPAT tpat;
  {
  FCNCALL_SUBNAME("tpat");
  { FCNCALL_CALL_CTRL_WRAP(tpat,tpat.FCNCALL_CALL(tpat)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_tpat_subev

#ifndef USER_DEF_tracking_febex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(tracking_febex_subev)::FCNCALL_NAME(tracking_febex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // FEBEX_NOTRACE febex_0[10];
  {
  FCNCALL_SUBNAME("febex_0");
  FCNCALL_FOR(__i0,10)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(febex_0__i0,,__i0,febex_0[__i0].FCNCALL_CALL(febex_0[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_NOTRACE febex_2[12];
  {
  FCNCALL_SUBNAME("febex_2");
  FCNCALL_FOR(__i0,12)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(febex_2__i0,,__i0,febex_2[__i0].FCNCALL_CALL(febex_2[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_EVENTHEADER header0;
  {
  FCNCALL_SUBNAME("header0");
  { FCNCALL_CALL_CTRL_WRAP(header0,header0.FCNCALL_CALL(header0)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_EVENTHEADER header2;
  {
  FCNCALL_SUBNAME("header2");
  { FCNCALL_CALL_CTRL_WRAP(header2,header2.FCNCALL_CALL(header2)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_tracking_febex_subev

#ifndef USER_DEF_wr_100
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(wr_100)::FCNCALL_NAME(wr_100)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts100;
  {
  FCNCALL_SUBNAME("ts100");
  { FCNCALL_CALL_CTRL_WRAP(ts100,ts100.FCNCALL_CALL(ts100)); }
  FCNCALL_SUBNAME_END;
  }
  // WR_MULTI multi_;
  {
  FCNCALL_SUBNAME("multi_");
  { FCNCALL_CALL_CTRL_WRAP(multi_,multi_.FCNCALL_CALL(multi_)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_wr_100

#ifndef USER_DEF_wr_200
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(wr_200)::FCNCALL_NAME(wr_200)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // WR_MULTI multi_;
  {
  FCNCALL_SUBNAME("multi_");
  { FCNCALL_CALL_CTRL_WRAP(multi_,multi_.FCNCALL_CALL(multi_)); }
  FCNCALL_SUBNAME_END;
  }
  // TIMESTAMP_WHITERABBIT ts200;
  {
  FCNCALL_SUBNAME("ts200");
  { FCNCALL_CALL_CTRL_WRAP(ts200,ts200.FCNCALL_CALL(ts200)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_wr_200

#ifndef USER_DEF_wr_400
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(wr_400)::FCNCALL_NAME(wr_400)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts400;
  {
  FCNCALL_SUBNAME("ts400");
  { FCNCALL_CALL_CTRL_WRAP(ts400,ts400.FCNCALL_CALL(ts400)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_wr_400

#ifndef USER_DEF_unpack_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_event)::FCNCALL_NAME(unpack_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_event_base,FCNCALL_CLASS_NAME(unpack_event_base)::FCNCALL_CALL_BASE());
  // wr_100 master_ts;
  {
  FCNCALL_SUBNAME("master_ts");
  { FCNCALL_CALL_CTRL_WRAP(master_ts,master_ts.FCNCALL_CALL(master_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // lmu_scalers_subev master_lmu_scalers;
  {
  FCNCALL_SUBNAME("master_lmu_scalers");
  { FCNCALL_CALL_CTRL_WRAP(master_lmu_scalers,master_lmu_scalers.FCNCALL_CALL(master_lmu_scalers)); }
  FCNCALL_SUBNAME_END;
  }
  // tpat_subev master_tpat;
  {
  FCNCALL_SUBNAME("master_tpat");
  { FCNCALL_CALL_CTRL_WRAP(master_tpat,master_tpat.FCNCALL_CALL(master_tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // master_subev master_vme;
  {
  FCNCALL_SUBNAME("master_vme");
  { FCNCALL_CALL_CTRL_WRAP(master_vme,master_vme.FCNCALL_CALL(master_vme)); }
  FCNCALL_SUBNAME_END;
  }
  // los_subev los;
  {
  FCNCALL_SUBNAME("los");
  { FCNCALL_CALL_CTRL_WRAP(los,los.FCNCALL_CALL(los)); }
  FCNCALL_SUBNAME_END;
  }
  // los_scalers_subev los_scalers;
  {
  FCNCALL_SUBNAME("los_scalers");
  { FCNCALL_CALL_CTRL_WRAP(los_scalers,los_scalers.FCNCALL_CALL(los_scalers)); }
  FCNCALL_SUBNAME_END;
  }
  // los_sampler_subev los_sampler;
  {
  FCNCALL_SUBNAME("los_sampler");
  { FCNCALL_CALL_CTRL_WRAP(los_sampler,los_sampler.FCNCALL_CALL(los_sampler)); }
  FCNCALL_SUBNAME_END;
  }
  // tofd_vme_subev tofd_vme;
  {
  FCNCALL_SUBNAME("tofd_vme");
  { FCNCALL_CALL_CTRL_WRAP(tofd_vme,tofd_vme.FCNCALL_CALL(tofd_vme)); }
  FCNCALL_SUBNAME_END;
  }
  // wr_200 tbm_ts;
  {
  FCNCALL_SUBNAME("tbm_ts");
  { FCNCALL_CALL_CTRL_WRAP(tbm_ts,tbm_ts.FCNCALL_CALL(tbm_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // tpat_subev tbm_tpat;
  {
  FCNCALL_SUBNAME("tbm_tpat");
  { FCNCALL_CALL_CTRL_WRAP(tbm_tpat,tbm_tpat.FCNCALL_CALL(tbm_tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // tbm_subev tbm_vme;
  {
  FCNCALL_SUBNAME("tbm_vme");
  { FCNCALL_CALL_CTRL_WRAP(tbm_vme,tbm_vme.FCNCALL_CALL(tbm_vme)); }
  FCNCALL_SUBNAME_END;
  }
  // tofd_tamex_subev tofd_tamex;
  {
  FCNCALL_SUBNAME("tofd_tamex");
  { FCNCALL_CALL_CTRL_WRAP(tofd_tamex,tofd_tamex.FCNCALL_CALL(tofd_tamex)); }
  FCNCALL_SUBNAME_END;
  }
  // tracking_febex_subev tracking_febex;
  {
  FCNCALL_SUBNAME("tracking_febex");
  { FCNCALL_CALL_CTRL_WRAP(tracking_febex,tracking_febex.FCNCALL_CALL(tracking_febex)); }
  FCNCALL_SUBNAME_END;
  }
  // empty_subev los_empty;
  {
  FCNCALL_SUBNAME("los_empty");
  { FCNCALL_CALL_CTRL_WRAP(los_empty,los_empty.FCNCALL_CALL(los_empty)); }
  FCNCALL_SUBNAME_END;
  }
  // empty_subev tofd_empty;
  {
  FCNCALL_SUBNAME("tofd_empty");
  { FCNCALL_CALL_CTRL_WRAP(tofd_empty,tofd_empty.FCNCALL_CALL(tofd_empty)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_sticky_event)::FCNCALL_NAME(unpack_sticky_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_sticky_event_base,FCNCALL_CLASS_NAME(unpack_sticky_event_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: BARRIER
// uint32  .unnamed_0_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER
// Corr struct for: FEBEX_BAD_EVENTHEADER
// uint32  .unnamed_0_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_BAD_EVENTHEADER
// .FEBEX_BAD_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_BAD_EVENTHEADER
// .FEBEX_BAD_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_BAD_EVENTHEADER
// .FEBEX_BAD_EVENTHEADER
// Corr struct for: FEBEX_GOOD_EVENTHEADER
// uint32  .n_febex_sfp0
  // ---
// uint32  .n_febex_sfp1
  // ---
// uint32  .n_febex_sfp2
  // ---
// uint32  .n_febex_sfp3
  // ---
// uint32  .u32
  // ---
// uint32  .trace_length
  // ---
// uint32  .trigger_delay
  // ---
// uint32  .u32
  // ---
// uint32  .sum_b
  // ---
// uint32  .gap
  // ---
// uint32  .sum_a
  // ---
// uint32  .u32
  // ---
// uint32  .pola
  // ---
// uint32  .u32
  // ---
// uint32  .pola
  // ---
// uint32  .u32
  // ---
// uint32  .pola
  // ---
// uint32  .u32
  // ---
// uint32  .pola
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_GOOD_EVENTHEADER
// .FEBEX_GOOD_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_GOOD_EVENTHEADER
// .FEBEX_GOOD_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_GOOD_EVENTHEADER
// .FEBEX_GOOD_EVENTHEADER
// Corr struct for: FEBEX_EVENTHEADER
// FEBEX_GOOD_EVENTHEADER  .good
  // uint32  .n_febex_sfp0
    // ---
  // uint32  .n_febex_sfp1
    // ---
  // uint32  .n_febex_sfp2
    // ---
  // uint32  .n_febex_sfp3
    // ---
  // uint32  .u32
    // ---
  // uint32  .trace_length
    // ---
  // uint32  .trigger_delay
    // ---
  // uint32  .u32
    // ---
  // uint32  .sum_b
    // ---
  // uint32  .gap
    // ---
  // uint32  .sum_a
    // ---
  // uint32  .u32
    // ---
  // uint32  .pola
    // ---
  // uint32  .u32
    // ---
  // uint32  .pola
    // ---
  // uint32  .u32
    // ---
  // uint32  .pola
    // ---
  // uint32  .u32
    // ---
  // uint32  .pola
    // ---
  // uint32  .u32
    // ---
// FEBEX_BAD_EVENTHEADER  .bad
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENTHEADER
// .FEBEX_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENTHEADER
// .FEBEX_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENTHEADER
// .FEBEX_EVENTHEADER
// Corr struct for: FEBEX_NOTRACE
// raw_array  .n_hit(DATA8)[16]
  // ---
// raw_array_multi_zero_suppress  .t(DATA12)[16][32]
// raw_array_multi_zero_suppress  .e(DATA32)[16][32]
  // ---
// DATA12 .t[16][32]
// 
// size= 1  chunks=512  mem= 512  line=1024  total=524288
// size=32  chunks= 16  mem= 512  line=528  total=270336
// size=512  chunks=  1  mem= 512  line=513  total=262656
// 
// corr structure: FEBEX_NOTRACE
  // DATA12 .t[16][32]
// .FEBEX_NOTRACE/512/.t/512/[16]/32/[32]// 
// size= 1  chunks=512  mem= 512  line=1024  total=524288
// size=32  chunks= 16  mem= 512  line=528  total=270336
// size=512  chunks=  1  mem= 512  line=513  total=262656
// 
// corr structure: FEBEX_NOTRACE
  // DATA12 .t[16][32]
// .FEBEX_NOTRACE/512/.t/512/[16]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_NOTRACE
// .FEBEX_NOTRACE
// Corr struct for: FEBEX_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING
// Corr struct for: FEBEX_TRACE
// raw_array_zero_suppress  .trace_length(DATA32)[16]
  // ---
// raw_array_zero_suppress  .trace[16](DATA16)[1000]
// raw_array_zero_suppress  .filter[16](DATA32)[1000]
  // ---
// DATA16 .trace[16][1000]
// 
// size= 1  chunks=16000  mem=16000  line=32000  total=512000000
// size=1000  chunks= 16  mem=16000  line=16016  total=256256000
// size=16000  chunks=  1  mem=16000  line=16001  total=256016000
// 
// corr structure: FEBEX_TRACE
  // DATA16 .trace[16][1000]
// .FEBEX_TRACE/16000/.trace/16000/[16]/1000/[1000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_TRACE
// .FEBEX_TRACE// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_TRACE
// .FEBEX_TRACE
// Corr struct for: LAND_STD_VME
// uint32  .fail_general
  // ---
// uint32  .fail_data_corrupt
  // ---
// uint32  .fail_data_missing
  // ---
// uint32  .fail_data_too_much
  // ---
// uint32  .fail_event_counter_mismatch
  // ---
// uint32  .fail_readout_error_driver
  // ---
// uint32  .fail_unexpected_trigger
  // ---
// uint32  .fail_firmware_mismatch
  // ---
// uint32  .dummy_8_21
  // ---
// uint32  .has_multi_trlo_ii_counter0
  // ---
// uint32  .has_clock_counter_stamp
  // ---
// uint32  .has_continous_event_counter
  // ---
// uint32  .has_update_qdc_iped_value
  // ---
// uint32  .spurious_start_before_tcal
  // ---
// uint32  .has_no_zero_suppression
  // ---
// uint32  .has_multi_adctdc_counter0
  // ---
// uint32  .has_multi_scaler_counter0
  // ---
// uint32  .has_multi_event
  // ---
// uint32  .has_time_stamp
  // ---
// uint32  .u32
  // ---
// uint32  .continous_event_counter
  // ---
// uint32  .time_stamp
  // ---
// uint32  .clock_counter_stamp
  // ---
// uint32  .iped
  // ---
// uint32  .multi_events
  // ---
// uint32  .multi_trlo_ii_counter0
  // ---
// uint32  .multi_scaler_counter0
  // ---
// uint32  .multi_adctdc_counter0
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME
// Corr struct for: SCALER
// uint32  .scaler
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SCALER
// .SCALER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SCALER
// .SCALER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SCALER
// .SCALER
// Corr struct for: TAMEX3_HEADER
// uint32  .post_trig_ns
  // ---
// uint32  .pre_trig_ns
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_HEADER
// .TAMEX3_HEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_HEADER
// .TAMEX3_HEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_HEADER
// .TAMEX3_HEADER
// Corr struct for: TAMEX3_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_PADDING
// .TAMEX3_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_PADDING
// .TAMEX3_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_PADDING
// .TAMEX3_PADDING
// Corr struct for: TAMEX3_SFP
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[34][200]
// raw_array_multi_zero_suppress  .time_fine(DATA12)[34][200]
// DATA16 .time_coarse[34][200]
// DATA12 .time_fine[34][200]
// 
// size= 1  chunks=13600  mem=13600  line=27200  total=369920000
// size=200  chunks= 68  mem=13600  line=13668  total=185884800
// size=6800  chunks=  2  mem=13600  line=13602  total=184987200
// size=13600  chunks=  1  mem=13600  line=13601  total=184973600
// 
// corr structure: TAMEX3_SFP
  // DATA16 .time_coarse[34][200]
  // DATA12 .time_fine[34][200]
// .TAMEX3_SFP/13600/.time_coarse/6800/[34]/200/[200]
                  // .time_fine/6800/[34]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_SFP
// .TAMEX3_SFP// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_SFP
// .TAMEX3_SFP
// Corr struct for: TIMESTAMP_WHITERABBIT
// DATA12  .subsystem_id
// DATA16  .t1
// DATA16  .t2
// DATA16  .t3
// DATA16  .t4
// DATA12 .subsystem_id
// DATA16 .t1
// DATA16 .t2
// DATA16 .t3
// DATA16 .t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: TIMESTAMP_WHITERABBIT
  // DATA12 .subsystem_id
  // DATA16 .t1
  // DATA16 .t2
  // DATA16 .t3
  // DATA16 .t4
// .TIMESTAMP_WHITERABBIT/5/.subsystem_id
                         // .t1
                         // .t2
                         // .t3
                         // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT
// Corr struct for: TRLOII_LMU_SCALERS
// raw_array_zero_suppress  .before_lmu(DATA32)[63]
  // ---
// raw_array_zero_suppress  .before_lmu_mux(DATA32)[31]
  // ---
// raw_array_zero_suppress  .before_lmu_aux(DATA32)[31]
  // ---
// raw_array_zero_suppress  .before_dt(DATA32)[127]
  // ---
// raw_array_zero_suppress  .after_dt(DATA32)[127]
  // ---
// raw_array_zero_suppress  .after_reduction(DATA32)[127]
  // ---
// uint32  .before_lmu
  // ---
// uint32  .before_lmu_mux
  // ---
// uint32  .before_lmu_aux
  // ---
// uint32  .after_lmu
  // ---
// uint32  .id
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_LMU_SCALERS
// .TRLOII_LMU_SCALERS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_LMU_SCALERS
// .TRLOII_LMU_SCALERS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_LMU_SCALERS
// .TRLOII_LMU_SCALERS
// Corr struct for: TRLOII_SAMPLER
// raw_array_zero_suppress  .sampler(DATA32)[512]
  // ---
// uint32  .word_num
  // ---
// uint32  .overflow
  // ---
// uint32  .dummy_11_15
  // ---
// uint32  .mark
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER
// .TRLOII_SAMPLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER
// .TRLOII_SAMPLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER
// .TRLOII_SAMPLER
// Corr struct for: TRLOII_SAMPLER_TWO
// raw_array_zero_suppress  .sampler_hi(DATA32)[512]
  // ---
// raw_array_zero_suppress  .sampler_lo(DATA32)[512]
  // ---
// uint32  .word_num
  // ---
// uint32  .overflow
  // ---
// uint32  .dummy_11_15
  // ---
// uint32  .mark
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER_TWO
// .TRLOII_SAMPLER_TWO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER_TWO
// .TRLOII_SAMPLER_TWO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER_TWO
// .TRLOII_SAMPLER_TWO
// Corr struct for: TRLOII_TPAT
// DATA32  .n
  // ---
// raw_list_ii_zero_suppress  .tpat(DATA16)[170]
// raw_list_ii_zero_suppress  .trig(DATA8)[170]
  // ---
// raw_list_ii_zero_suppress  .ts_lo(DATA32)[170]
  // ---
// raw_list_ii_zero_suppress  .ts_hi(DATA32)[170]
  // ---
// DATA16 .tpat[170]
// 
// size= 1  chunks=170  mem= 170  line=340  total=57800
// size=170  chunks=  1  mem= 170  line=171  total=29070
// 
// corr structure: TRLOII_TPAT
  // DATA16 .tpat[170]
// .TRLOII_TPAT/170/.tpat/170/[170]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_TPAT
// .TRLOII_TPAT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_TPAT
// .TRLOII_TPAT
// Corr struct for: VFTX2_STATUS
// uint32  .status
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VFTX2_STATUS
// .VFTX2_STATUS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VFTX2_STATUS
// .VFTX2_STATUS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VFTX2_STATUS
// .VFTX2_STATUS
// Corr struct for: VME_GSI_VFTX2
// raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
// DATA16  .time_trigger
// uint32  .id
  // ---
// uint32  .internal_status
  // ---
// uint32  .count
  // ---
// uint32  .dummy_18_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .unnamed_0_7
  // ---
// uint32  .dummy_8_10
  // ---
// uint32  .trigger_timestamp
  // ---
// uint32  .dummy_24_28
  // ---
// uint32  .unnamed_29_30
  // ---
// uint32  .unnamed_31_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[32][100]
// DATA16 .time_coarse[32][100]
// DATA16 .time_trigger
// 
// size= 1  chunks=6401  mem=6401  line=12802  total=81945602
// size=100  chunks= 65  mem=6500  line=6565  total=42022565
// size=3200  chunks=  3  mem=9600  line=9603  total=61468803
// size=6401  chunks=  1  mem=6401  line=6402  total=40979202
// 
// corr structure: VME_GSI_VFTX2
  // DATA12 .time_fine[32][100]
  // DATA16 .time_coarse[32][100]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2/6401/.time_fine/3200/[32]/100/[100]
                    // .time_coarse/3200/[32]/100/[100]
                    // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2
// .VME_GSI_VFTX2// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2
// .VME_GSI_VFTX2
// Corr struct for: VME_GSI_VFTX2_7PS
// raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
// DATA16  .time_trigger
// uint32  .id
  // ---
// uint32  .internal_status
  // ---
// uint32  .count
  // ---
// uint32  .dummy_18_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[32][100]
// DATA16 .time_coarse[32][100]
// DATA16 .time_trigger
// 
// size= 1  chunks=6401  mem=6401  line=12802  total=81945602
// size=100  chunks= 65  mem=6500  line=6565  total=42022565
// size=3200  chunks=  3  mem=9600  line=9603  total=61468803
// size=6401  chunks=  1  mem=6401  line=6402  total=40979202
// 
// corr structure: VME_GSI_VFTX2_7PS
  // DATA12 .time_fine[32][100]
  // DATA16 .time_coarse[32][100]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2_7PS/6401/.time_fine/3200/[32]/100/[100]
                        // .time_coarse/3200/[32]/100/[100]
                        // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_7PS
// .VME_GSI_VFTX2_7PS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_7PS
// .VME_GSI_VFTX2_7PS
// Corr struct for: VME_GSI_VFTX2_LT
// raw_array_multi_zero_suppress  .time_fine(DATA12)[64][100]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[64][100]
// DATA16  .time_trigger
// uint32  .id
  // ---
// uint32  .internal_status
  // ---
// uint32  .count
  // ---
// uint32  .dummy_18_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .unnamed_0_7
  // ---
// uint32  .dummy_8_10
  // ---
// uint32  .trigger_timestamp
  // ---
// uint32  .dummy_24_28
  // ---
// uint32  .unnamed_29_30
  // ---
// uint32  .unnamed_31_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[64][100]
// DATA16 .time_coarse[64][100]
// DATA16 .time_trigger
// 
// size= 1  chunks=12801  mem=12801  line=25602  total=327731202
// size=100  chunks=129  mem=12900  line=13029  total=166784229
// size=6400  chunks=  3  mem=19200  line=19203  total=245817603
// size=12801  chunks=  1  mem=12801  line=12802  total=163878402
// 
// corr structure: VME_GSI_VFTX2_LT
  // DATA12 .time_fine[64][100]
  // DATA16 .time_coarse[64][100]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2_LT/12801/.time_fine/6400/[64]/100/[100]
                        // .time_coarse/6400/[64]/100/[100]
                        // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_LT
// .VME_GSI_VFTX2_LT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_LT
// .VME_GSI_VFTX2_LT
// Corr struct for: VME_GSI_VFTX2_STRAW
// raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
// DATA16  .time_trigger
// uint32  .internal
  // ---
// uint32  .count
  // ---
// uint32  .dummy_13_31
  // ---
// uint32  .u32
  // ---
// uint32  .count
  // ---
// uint32  .id
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .unnamed_0_7
  // ---
// uint32  .dummy_8_10
  // ---
// uint32  .trigger_timestamp
  // ---
// uint32  .dummy_24_28
  // ---
// uint32  .unnamed_29_30
  // ---
// uint32  .unnamed_31_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[32][32]
// DATA16 .time_coarse[32][32]
// DATA16 .time_trigger
// 
// size= 1  chunks=2049  mem=2049  line=4098  total=8396802
// size=32  chunks= 65  mem=2080  line=2145  total=4395105
// size=1024  chunks=  3  mem=3072  line=3075  total=6300675
// size=2049  chunks=  1  mem=2049  line=2050  total=4200450
// 
// corr structure: VME_GSI_VFTX2_STRAW
  // DATA12 .time_fine[32][32]
  // DATA16 .time_coarse[32][32]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2_STRAW/2049/.time_fine/1024/[32]/32/[32]
                          // .time_coarse/1024/[32]/32/[32]
                          // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_STRAW
// .VME_GSI_VFTX2_STRAW// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_STRAW
// .VME_GSI_VFTX2_STRAW
// Corr struct for: VME_MESYTEC_MADC32
// raw_array_zero_suppress  .data(DATA14_OVERFLOW)[32]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA14_OVERFLOW .data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: VME_MESYTEC_MADC32
  // DATA14_OVERFLOW .data[32]
// .VME_MESYTEC_MADC32/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MADC32
// .VME_MESYTEC_MADC32// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MADC32
// .VME_MESYTEC_MADC32
// Corr struct for: WR_MULTI
// DATA32  .time_hi
  // ---
// DATA32  .time_lo
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI
// Corr struct for: empty_subev
//  : public unpack_subevent_base
// ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: empty_subev
// .empty_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: empty_subev
// .empty_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: empty_subev
// .empty_subev
// Corr struct for: fitest_febex_subev
//  : public unpack_subevent_base
// ---
// FEBEX_PADDING  .padding
// FEBEX_NOTRACE  .febex[8]
  // raw_array  .n_hit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][32]
  // raw_array_multi_zero_suppress  .e(DATA32)[16][32]
    // ---
// FEBEX_TRACE  .febextrace[8]
  // raw_array_zero_suppress  .trace_length(DATA32)[16]
    // ---
  // raw_array_zero_suppress  .trace[16](DATA16)[1000]
  // raw_array_zero_suppress  .filter[16](DATA32)[1000]
    // ---
// FEBEX_EVENTHEADER  .header
  // FEBEX_GOOD_EVENTHEADER  .good
    // uint32  .n_febex_sfp0
      // ---
    // uint32  .n_febex_sfp1
      // ---
    // uint32  .n_febex_sfp2
      // ---
    // uint32  .n_febex_sfp3
      // ---
    // uint32  .u32
      // ---
    // uint32  .trace_length
      // ---
    // uint32  .trigger_delay
      // ---
    // uint32  .u32
      // ---
    // uint32  .sum_b
      // ---
    // uint32  .gap
      // ---
    // uint32  .sum_a
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
  // FEBEX_BAD_EVENTHEADER  .bad
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
// DATA12 .febex[8].t[16][32]
// DATA16 .febextrace[8].trace[16][1000]
// 
// size= 1  chunks=132096  mem=132096  line=264192  total=538968064
// size=32  chunks=128128  mem=4100096  line=4228224  total=185729024
// size=512  chunks=128008  mem=65540096  line=65668104  total=-1340071936
// size=1000  chunks=136  mem=136000  line=136136  total=803151872
// size=4096  chunks=129  mem=528384  line=528513  total=1094976512
// size=16000  chunks=  9  mem=144000  line=144009  total=1843143680
// size=128000  chunks=  2  mem=256000  line=256002  total=-542898176
// size=132096  chunks=  1  mem=132096  line=132097  total=269616128
// 
// corr structure: fitest_febex_subev
  // DATA12 .febex[8].t[16][32]
  // DATA16 .febextrace[8].trace[16][1000]
// .fitest_febex_subev/132096/.febex/4096/[8]/512/.t/512/[16]/32/[32]
                           // .febextrace/128000/[8]/16000/.trace/16000/[16]/1000/[1000]// 
// size= 1  chunks=4096  mem=4096  line=8192  total=33554432
// size=32  chunks=128  mem=4096  line=4224  total=17301504
// size=512  chunks=  8  mem=4096  line=4104  total=16809984
// size=4096  chunks=  1  mem=4096  line=4097  total=16781312
// 
// corr structure: fitest_febex_subev
  // DATA12 .febex[8].t[16][32]
// .fitest_febex_subev/4096/.febex/4096/[8]/512/.t/512/[16]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fitest_febex_subev
// .fitest_febex_subev
// Corr struct for: lmu_scalers_subev
//  : public unpack_subevent_base
// ---
// TRLOII_LMU_SCALERS  .scalers
  // raw_array_zero_suppress  .before_lmu(DATA32)[63]
    // ---
  // raw_array_zero_suppress  .before_lmu_mux(DATA32)[31]
    // ---
  // raw_array_zero_suppress  .before_lmu_aux(DATA32)[31]
    // ---
  // raw_array_zero_suppress  .before_dt(DATA32)[127]
    // ---
  // raw_array_zero_suppress  .after_dt(DATA32)[127]
    // ---
  // raw_array_zero_suppress  .after_reduction(DATA32)[127]
    // ---
  // uint32  .before_lmu
    // ---
  // uint32  .before_lmu_mux
    // ---
  // uint32  .before_lmu_aux
    // ---
  // uint32  .after_lmu
    // ---
  // uint32  .id
    // ---
  // uint32  .u32
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: lmu_scalers_subev
// .lmu_scalers_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: lmu_scalers_subev
// .lmu_scalers_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: lmu_scalers_subev
// .lmu_scalers_subev
// Corr struct for: los_sampler_subev
//  : public unpack_subevent_base
// ---
// TRLOII_SAMPLER  .sampler
  // raw_array_zero_suppress  .sampler(DATA32)[512]
    // ---
  // uint32  .word_num
    // ---
  // uint32  .overflow
    // ---
  // uint32  .dummy_11_15
    // ---
  // uint32  .mark
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_sampler_subev
// .los_sampler_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_sampler_subev
// .los_sampler_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_sampler_subev
// .los_sampler_subev
// Corr struct for: los_scalers_subev
//  : public unpack_subevent_base
// ---
// SCALER  .scaler
  // uint32  .scaler
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_scalers_subev
// .los_scalers_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_scalers_subev
// .los_scalers_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_scalers_subev
// .los_scalers_subev
// Corr struct for: los_subev
//  : public unpack_subevent_base
// ---
// VME_GSI_VFTX2_7PS  .vftx2
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// BARRIER  .barrier2
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
// BARRIER  .barrier1
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
// DATA12 .vftx2.time_fine[32][100]
// DATA16 .vftx2.time_coarse[32][100]
// DATA16 .vftx2.time_trigger
// 
// size= 1  chunks=6401  mem=6401  line=12802  total=81945602
// size=100  chunks= 65  mem=6500  line=6565  total=42022565
// size=3200  chunks=  3  mem=9600  line=9603  total=61468803
// size=6401  chunks=  1  mem=6401  line=6402  total=40979202
// 
// corr structure: los_subev
  // DATA12 .vftx2.time_fine[32][100]
  // DATA16 .vftx2.time_coarse[32][100]
  // DATA16 .vftx2.time_trigger
// .los_subev/6401/.vftx2/6401/.time_fine/3200/[32]/100/[100]
                            // .time_coarse/3200/[32]/100/[100]
                            // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_subev
// .los_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_subev
// .los_subev
// Corr struct for: master_subev
//  : public unpack_subevent_base
// ---
// BARRIER  .barrier
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: master_subev
// .master_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: master_subev
// .master_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: master_subev
// .master_subev
// Corr struct for: straw_vme_subev
//  : public unpack_subevent_base
// ---
// VME_GSI_VFTX2_STRAW  .vftx2
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
  // DATA16  .time_trigger
  // uint32  .internal
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_13_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .count
    // ---
  // uint32  .id
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .unnamed_0_7
    // ---
  // uint32  .dummy_8_10
    // ---
  // uint32  .trigger_timestamp
    // ---
  // uint32  .dummy_24_28
    // ---
  // uint32  .unnamed_29_30
    // ---
  // uint32  .unnamed_31_31
    // ---
  // uint32  .u32
    // ---
// DATA12 .vftx2.time_fine[32][32]
// DATA16 .vftx2.time_coarse[32][32]
// DATA16 .vftx2.time_trigger
// 
// size= 1  chunks=2049  mem=2049  line=4098  total=8396802
// size=32  chunks= 65  mem=2080  line=2145  total=4395105
// size=1024  chunks=  3  mem=3072  line=3075  total=6300675
// size=2049  chunks=  1  mem=2049  line=2050  total=4200450
// 
// corr structure: straw_vme_subev
  // DATA12 .vftx2.time_fine[32][32]
  // DATA16 .vftx2.time_coarse[32][32]
  // DATA16 .vftx2.time_trigger
// .straw_vme_subev/2049/.vftx2/2049/.time_fine/1024/[32]/32/[32]
                                  // .time_coarse/1024/[32]/32/[32]
                                  // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: straw_vme_subev
// .straw_vme_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: straw_vme_subev
// .straw_vme_subev
// Corr struct for: tbm_subev
//  : public unpack_subevent_base
// ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tbm_subev
// .tbm_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tbm_subev
// .tbm_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tbm_subev
// .tbm_subev
// Corr struct for: tofd_tamex_subev
//  : public unpack_subevent_base
// ---
// TAMEX3_PADDING  .padding1
// TAMEX3_SFP  .tamex_1
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[34][200]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][200]
// TAMEX3_SFP  .tamex_2
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[34][200]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][200]
// TAMEX3_PADDING  .padding2
// TAMEX3_SFP  .tamex_3
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[34][200]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][200]
// TAMEX3_SFP  .tamex_4
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[34][200]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][200]
// TAMEX3_HEADER  .header
  // uint32  .post_trig_ns
    // ---
  // uint32  .pre_trig_ns
    // ---
  // uint32  .u32
    // ---
// DATA16 .tamex_1.time_coarse[34][200]
// DATA12 .tamex_1.time_fine[34][200]
// DATA16 .tamex_2.time_coarse[34][200]
// DATA12 .tamex_2.time_fine[34][200]
// DATA16 .tamex_3.time_coarse[34][200]
// DATA12 .tamex_3.time_fine[34][200]
// DATA16 .tamex_4.time_coarse[34][200]
// DATA12 .tamex_4.time_fine[34][200]
// 
// size= 1  chunks=54400  mem=54400  line=108800  total=1623752704
// size=200  chunks=272  mem=54400  line=54672  total=-1320810496
// size=6800  chunks=  8  mem=54400  line=54408  total=-1335172096
// size=13600  chunks=  4  mem=54400  line=54404  total=-1335389696
// size=54400  chunks=  1  mem=54400  line=54401  total=-1335552896
// 
// corr structure: tofd_tamex_subev
  // DATA16 .tamex_1.time_coarse[34][200]
  // DATA12 .tamex_1.time_fine[34][200]
  // DATA16 .tamex_2.time_coarse[34][200]
  // DATA12 .tamex_2.time_fine[34][200]
  // DATA16 .tamex_3.time_coarse[34][200]
  // DATA12 .tamex_3.time_fine[34][200]
  // DATA16 .tamex_4.time_coarse[34][200]
  // DATA12 .tamex_4.time_fine[34][200]
// .tofd_tamex_subev/54400/.tamex_1/13600/.time_coarse/6800/[34]/200/[200]
                                       // .time_fine/6800/[34]/200/[200]
                        // .tamex_2/13600/.time_coarse/6800/[34]/200/[200]
                                       // .time_fine/6800/[34]/200/[200]
                        // .tamex_3/13600/.time_coarse/6800/[34]/200/[200]
                                       // .time_fine/6800/[34]/200/[200]
                        // .tamex_4/13600/.time_coarse/6800/[34]/200/[200]
                                       // .time_fine/6800/[34]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tofd_tamex_subev
// .tofd_tamex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tofd_tamex_subev
// .tofd_tamex_subev
// Corr struct for: tofd_vme_subev
//  : public unpack_subevent_base
// ---
// VME_GSI_VFTX2_7PS  .vftx2_1
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// VME_GSI_VFTX2_7PS  .vftx2_3
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// VME_GSI_VFTX2_7PS  .vftx2_2
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// BARRIER  .barrier
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .vftx2_1.time_fine[32][100]
// DATA16 .vftx2_1.time_coarse[32][100]
// DATA16 .vftx2_1.time_trigger
// DATA12 .vftx2_3.time_fine[32][100]
// DATA16 .vftx2_3.time_coarse[32][100]
// DATA16 .vftx2_3.time_trigger
// DATA12 .vftx2_2.time_fine[32][100]
// DATA16 .vftx2_2.time_coarse[32][100]
// DATA16 .vftx2_2.time_trigger
// 
// size= 1  chunks=19203  mem=19203  line=38406  total=737510418
// size=100  chunks=195  mem=19500  line=19695  total=378203085
// size=3200  chunks=  9  mem=28800  line=28809  total=553219227
// size=6401  chunks=  3  mem=19203  line=19206  total=368812818
// size=19203  chunks=  1  mem=19203  line=19204  total=368774412
// 
// corr structure: tofd_vme_subev
  // DATA12 .vftx2_1.time_fine[32][100]
  // DATA16 .vftx2_1.time_coarse[32][100]
  // DATA16 .vftx2_1.time_trigger
  // DATA12 .vftx2_3.time_fine[32][100]
  // DATA16 .vftx2_3.time_coarse[32][100]
  // DATA16 .vftx2_3.time_trigger
  // DATA12 .vftx2_2.time_fine[32][100]
  // DATA16 .vftx2_2.time_coarse[32][100]
  // DATA16 .vftx2_2.time_trigger
// .tofd_vme_subev/19203/.vftx2_1/6401/.time_fine/3200/[32]/100/[100]
                                    // .time_coarse/3200/[32]/100/[100]
                                    // .time_trigger
                      // .vftx2_3/6401/.time_fine/3200/[32]/100/[100]
                                    // .time_coarse/3200/[32]/100/[100]
                                    // .time_trigger
                      // .vftx2_2/6401/.time_fine/3200/[32]/100/[100]
                                    // .time_coarse/3200/[32]/100/[100]
                                    // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tofd_vme_subev
// .tofd_vme_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tofd_vme_subev
// .tofd_vme_subev
// Corr struct for: tpat_subev
//  : public unpack_subevent_base
// ---
// TRLOII_TPAT  .tpat
  // DATA32  .n
    // ---
  // raw_list_ii_zero_suppress  .tpat(DATA16)[170]
  // raw_list_ii_zero_suppress  .trig(DATA8)[170]
    // ---
  // raw_list_ii_zero_suppress  .ts_lo(DATA32)[170]
    // ---
  // raw_list_ii_zero_suppress  .ts_hi(DATA32)[170]
    // ---
// DATA16 .tpat.tpat[170]
// 
// size= 1  chunks=170  mem= 170  line=340  total=57800
// size=170  chunks=  1  mem= 170  line=171  total=29070
// 
// corr structure: tpat_subev
  // DATA16 .tpat.tpat[170]
// .tpat_subev/170/.tpat/170/.tpat/170/[170]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tpat_subev
// .tpat_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tpat_subev
// .tpat_subev
// Corr struct for: tracking_febex_subev
//  : public unpack_subevent_base
// ---
// FEBEX_NOTRACE  .febex_0[10]
  // raw_array  .n_hit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][32]
  // raw_array_multi_zero_suppress  .e(DATA32)[16][32]
    // ---
// FEBEX_NOTRACE  .febex_2[12]
  // raw_array  .n_hit(DATA8)[16]
    // ---
  // raw_array_multi_zero_suppress  .t(DATA12)[16][32]
  // raw_array_multi_zero_suppress  .e(DATA32)[16][32]
    // ---
// FEBEX_EVENTHEADER  .header0
  // FEBEX_GOOD_EVENTHEADER  .good
    // uint32  .n_febex_sfp0
      // ---
    // uint32  .n_febex_sfp1
      // ---
    // uint32  .n_febex_sfp2
      // ---
    // uint32  .n_febex_sfp3
      // ---
    // uint32  .u32
      // ---
    // uint32  .trace_length
      // ---
    // uint32  .trigger_delay
      // ---
    // uint32  .u32
      // ---
    // uint32  .sum_b
      // ---
    // uint32  .gap
      // ---
    // uint32  .sum_a
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
  // FEBEX_BAD_EVENTHEADER  .bad
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
// FEBEX_EVENTHEADER  .header2
  // FEBEX_GOOD_EVENTHEADER  .good
    // uint32  .n_febex_sfp0
      // ---
    // uint32  .n_febex_sfp1
      // ---
    // uint32  .n_febex_sfp2
      // ---
    // uint32  .n_febex_sfp3
      // ---
    // uint32  .u32
      // ---
    // uint32  .trace_length
      // ---
    // uint32  .trigger_delay
      // ---
    // uint32  .u32
      // ---
    // uint32  .sum_b
      // ---
    // uint32  .gap
      // ---
    // uint32  .sum_a
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
    // uint32  .pola
      // ---
    // uint32  .u32
      // ---
  // FEBEX_BAD_EVENTHEADER  .bad
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
// DATA12 .febex_0[10].t[16][32]
// DATA12 .febex_2[12].t[16][32]
// 
// size= 1  chunks=11264  mem=11264  line=22528  total=253755392
// size=32  chunks=352  mem=11264  line=11616  total=130842624
// size=512  chunks= 22  mem=11264  line=11286  total=127125504
// size=5120  chunks= 13  mem=66560  line=66573  total=749878272
// size=6144  chunks=  2  mem=12288  line=12290  total=138434560
// size=11264  chunks=  1  mem=11264  line=11265  total=126888960
// 
// corr structure: tracking_febex_subev
  // DATA12 .febex_0[10].t[16][32]
  // DATA12 .febex_2[12].t[16][32]
// .tracking_febex_subev/11264/.febex_0/5120/[10]/512/.t/512/[16]/32/[32]
                            // .febex_2/6144/[12]/512/.t/512/[16]/32/[32]// 
// size= 1  chunks=11264  mem=11264  line=22528  total=253755392
// size=32  chunks=352  mem=11264  line=11616  total=130842624
// size=512  chunks= 22  mem=11264  line=11286  total=127125504
// size=5120  chunks= 13  mem=66560  line=66573  total=749878272
// size=6144  chunks=  2  mem=12288  line=12290  total=138434560
// size=11264  chunks=  1  mem=11264  line=11265  total=126888960
// 
// corr structure: tracking_febex_subev
  // DATA12 .febex_0[10].t[16][32]
  // DATA12 .febex_2[12].t[16][32]
// .tracking_febex_subev/11264/.febex_0/5120/[10]/512/.t/512/[16]/32/[32]
                            // .febex_2/6144/[12]/512/.t/512/[16]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: tracking_febex_subev
// .tracking_febex_subev
// Corr struct for: wr_100
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts100
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// WR_MULTI  .multi_
  // DATA32  .time_hi
    // ---
  // DATA32  .time_lo
    // ---
// DATA12 .ts100.subsystem_id
// DATA16 .ts100.t1
// DATA16 .ts100.t2
// DATA16 .ts100.t3
// DATA16 .ts100.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: wr_100
  // DATA12 .ts100.subsystem_id
  // DATA16 .ts100.t1
  // DATA16 .ts100.t2
  // DATA16 .ts100.t3
  // DATA16 .ts100.t4
// .wr_100/5/.ts100/5/.subsystem_id
                   // .t1
                   // .t2
                   // .t3
                   // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_100
// .wr_100// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_100
// .wr_100
// Corr struct for: wr_200
//  : public unpack_subevent_base
// ---
// WR_MULTI  .multi_
  // DATA32  .time_hi
    // ---
  // DATA32  .time_lo
    // ---
// TIMESTAMP_WHITERABBIT  .ts200
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts200.subsystem_id
// DATA16 .ts200.t1
// DATA16 .ts200.t2
// DATA16 .ts200.t3
// DATA16 .ts200.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: wr_200
  // DATA12 .ts200.subsystem_id
  // DATA16 .ts200.t1
  // DATA16 .ts200.t2
  // DATA16 .ts200.t3
  // DATA16 .ts200.t4
// .wr_200/5/.ts200/5/.subsystem_id
                   // .t1
                   // .t2
                   // .t3
                   // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_200
// .wr_200// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_200
// .wr_200
// Corr struct for: wr_400
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts400
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts400.subsystem_id
// DATA16 .ts400.t1
// DATA16 .ts400.t2
// DATA16 .ts400.t3
// DATA16 .ts400.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: wr_400
  // DATA12 .ts400.subsystem_id
  // DATA16 .ts400.t1
  // DATA16 .ts400.t2
  // DATA16 .ts400.t3
  // DATA16 .ts400.t4
// .wr_400/5/.ts400/5/.subsystem_id
                   // .t1
                   // .t2
                   // .t3
                   // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_400
// .wr_400// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_400
// .wr_400
// Corr struct for: unpack_event
//  : public unpack_event_base
// ---
// wr_100  .master_ts
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts100
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // WR_MULTI  .multi_
    // DATA32  .time_hi
      // ---
    // DATA32  .time_lo
      // ---
// lmu_scalers_subev  .master_lmu_scalers
  //  : public unpack_subevent_base
  // ---
  // TRLOII_LMU_SCALERS  .scalers
    // raw_array_zero_suppress  .before_lmu(DATA32)[63]
      // ---
    // raw_array_zero_suppress  .before_lmu_mux(DATA32)[31]
      // ---
    // raw_array_zero_suppress  .before_lmu_aux(DATA32)[31]
      // ---
    // raw_array_zero_suppress  .before_dt(DATA32)[127]
      // ---
    // raw_array_zero_suppress  .after_dt(DATA32)[127]
      // ---
    // raw_array_zero_suppress  .after_reduction(DATA32)[127]
      // ---
    // uint32  .before_lmu
      // ---
    // uint32  .before_lmu_mux
      // ---
    // uint32  .before_lmu_aux
      // ---
    // uint32  .after_lmu
      // ---
    // uint32  .id
      // ---
    // uint32  .u32
      // ---
// tpat_subev  .master_tpat
  //  : public unpack_subevent_base
  // ---
  // TRLOII_TPAT  .tpat
    // DATA32  .n
      // ---
    // raw_list_ii_zero_suppress  .tpat(DATA16)[170]
    // raw_list_ii_zero_suppress  .trig(DATA8)[170]
      // ---
    // raw_list_ii_zero_suppress  .ts_lo(DATA32)[170]
      // ---
    // raw_list_ii_zero_suppress  .ts_hi(DATA32)[170]
      // ---
// master_subev  .master_vme
  //  : public unpack_subevent_base
  // ---
  // BARRIER  .barrier
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// los_subev  .los
  //  : public unpack_subevent_base
  // ---
  // VME_GSI_VFTX2_7PS  .vftx2
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
  // BARRIER  .barrier2
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
  // BARRIER  .barrier1
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
// los_scalers_subev  .los_scalers
  //  : public unpack_subevent_base
  // ---
  // SCALER  .scaler
    // uint32  .scaler
      // ---
// los_sampler_subev  .los_sampler
  //  : public unpack_subevent_base
  // ---
  // TRLOII_SAMPLER  .sampler
    // raw_array_zero_suppress  .sampler(DATA32)[512]
      // ---
    // uint32  .word_num
      // ---
    // uint32  .overflow
      // ---
    // uint32  .dummy_11_15
      // ---
    // uint32  .mark
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// tofd_vme_subev  .tofd_vme
  //  : public unpack_subevent_base
  // ---
  // VME_GSI_VFTX2_7PS  .vftx2_1
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // VME_GSI_VFTX2_7PS  .vftx2_3
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // VME_GSI_VFTX2_7PS  .vftx2_2
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][100]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][100]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // BARRIER  .barrier
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// wr_200  .tbm_ts
  //  : public unpack_subevent_base
  // ---
  // WR_MULTI  .multi_
    // DATA32  .time_hi
      // ---
    // DATA32  .time_lo
      // ---
  // TIMESTAMP_WHITERABBIT  .ts200
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// tpat_subev  .tbm_tpat
  //  : public unpack_subevent_base
  // ---
  // TRLOII_TPAT  .tpat
    // DATA32  .n
      // ---
    // raw_list_ii_zero_suppress  .tpat(DATA16)[170]
    // raw_list_ii_zero_suppress  .trig(DATA8)[170]
      // ---
    // raw_list_ii_zero_suppress  .ts_lo(DATA32)[170]
      // ---
    // raw_list_ii_zero_suppress  .ts_hi(DATA32)[170]
      // ---
// tbm_subev  .tbm_vme
  //  : public unpack_subevent_base
  // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// tofd_tamex_subev  .tofd_tamex
  //  : public unpack_subevent_base
  // ---
  // TAMEX3_PADDING  .padding1
  // TAMEX3_SFP  .tamex_1
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[34][200]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][200]
  // TAMEX3_SFP  .tamex_2
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[34][200]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][200]
  // TAMEX3_PADDING  .padding2
  // TAMEX3_SFP  .tamex_3
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[34][200]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][200]
  // TAMEX3_SFP  .tamex_4
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[34][200]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][200]
  // TAMEX3_HEADER  .header
    // uint32  .post_trig_ns
      // ---
    // uint32  .pre_trig_ns
      // ---
    // uint32  .u32
      // ---
// tracking_febex_subev  .tracking_febex
  //  : public unpack_subevent_base
  // ---
  // FEBEX_NOTRACE  .febex_0[10]
    // raw_array  .n_hit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][32]
    // raw_array_multi_zero_suppress  .e(DATA32)[16][32]
      // ---
  // FEBEX_NOTRACE  .febex_2[12]
    // raw_array  .n_hit(DATA8)[16]
      // ---
    // raw_array_multi_zero_suppress  .t(DATA12)[16][32]
    // raw_array_multi_zero_suppress  .e(DATA32)[16][32]
      // ---
  // FEBEX_EVENTHEADER  .header0
    // FEBEX_GOOD_EVENTHEADER  .good
      // uint32  .n_febex_sfp0
        // ---
      // uint32  .n_febex_sfp1
        // ---
      // uint32  .n_febex_sfp2
        // ---
      // uint32  .n_febex_sfp3
        // ---
      // uint32  .u32
        // ---
      // uint32  .trace_length
        // ---
      // uint32  .trigger_delay
        // ---
      // uint32  .u32
        // ---
      // uint32  .sum_b
        // ---
      // uint32  .gap
        // ---
      // uint32  .sum_a
        // ---
      // uint32  .u32
        // ---
      // uint32  .pola
        // ---
      // uint32  .u32
        // ---
      // uint32  .pola
        // ---
      // uint32  .u32
        // ---
      // uint32  .pola
        // ---
      // uint32  .u32
        // ---
      // uint32  .pola
        // ---
      // uint32  .u32
        // ---
    // FEBEX_BAD_EVENTHEADER  .bad
      // uint32  .unnamed_0_31
        // ---
      // uint32  .u32
        // ---
  // FEBEX_EVENTHEADER  .header2
    // FEBEX_GOOD_EVENTHEADER  .good
      // uint32  .n_febex_sfp0
        // ---
      // uint32  .n_febex_sfp1
        // ---
      // uint32  .n_febex_sfp2
        // ---
      // uint32  .n_febex_sfp3
        // ---
      // uint32  .u32
        // ---
      // uint32  .trace_length
        // ---
      // uint32  .trigger_delay
        // ---
      // uint32  .u32
        // ---
      // uint32  .sum_b
        // ---
      // uint32  .gap
        // ---
      // uint32  .sum_a
        // ---
      // uint32  .u32
        // ---
      // uint32  .pola
        // ---
      // uint32  .u32
        // ---
      // uint32  .pola
        // ---
      // uint32  .u32
        // ---
      // uint32  .pola
        // ---
      // uint32  .u32
        // ---
      // uint32  .pola
        // ---
      // uint32  .u32
        // ---
    // FEBEX_BAD_EVENTHEADER  .bad
      // uint32  .unnamed_0_31
        // ---
      // uint32  .u32
        // ---
// empty_subev  .los_empty
  //  : public unpack_subevent_base
  // ---
// empty_subev  .tofd_empty
  //  : public unpack_subevent_base
  // ---
// DATA12 .master_ts.ts100.subsystem_id
// DATA16 .master_ts.ts100.t1
// DATA16 .master_ts.ts100.t2
// DATA16 .master_ts.ts100.t3
// DATA16 .master_ts.ts100.t4
// DATA16 .master_tpat.tpat.tpat[170]
// DATA12 .los.vftx2.time_fine[32][100]
// DATA16 .los.vftx2.time_coarse[32][100]
// DATA16 .los.vftx2.time_trigger
// DATA12 .tofd_vme.vftx2_1.time_fine[32][100]
// DATA16 .tofd_vme.vftx2_1.time_coarse[32][100]
// DATA16 .tofd_vme.vftx2_1.time_trigger
// DATA12 .tofd_vme.vftx2_3.time_fine[32][100]
// DATA16 .tofd_vme.vftx2_3.time_coarse[32][100]
// DATA16 .tofd_vme.vftx2_3.time_trigger
// DATA12 .tofd_vme.vftx2_2.time_fine[32][100]
// DATA16 .tofd_vme.vftx2_2.time_coarse[32][100]
// DATA16 .tofd_vme.vftx2_2.time_trigger
// DATA12 .tbm_ts.ts200.subsystem_id
// DATA16 .tbm_ts.ts200.t1
// DATA16 .tbm_ts.ts200.t2
// DATA16 .tbm_ts.ts200.t3
// DATA16 .tbm_ts.ts200.t4
// DATA16 .tbm_tpat.tpat.tpat[170]
// DATA16 .tofd_tamex.tamex_1.time_coarse[34][200]
// DATA12 .tofd_tamex.tamex_1.time_fine[34][200]
// DATA16 .tofd_tamex.tamex_2.time_coarse[34][200]
// DATA12 .tofd_tamex.tamex_2.time_fine[34][200]
// DATA16 .tofd_tamex.tamex_3.time_coarse[34][200]
// DATA12 .tofd_tamex.tamex_3.time_fine[34][200]
// DATA16 .tofd_tamex.tamex_4.time_coarse[34][200]
// DATA12 .tofd_tamex.tamex_4.time_fine[34][200]
// DATA12 .tracking_febex.febex_0[10].t[16][32]
// DATA12 .tracking_febex.febex_2[12].t[16][32]
// 
// size= 1  chunks=91618  mem=91618  line=183236  total=-392153336
// size= 5  chunks=91610  mem=458050  line=549660  total=-1180857672
// size=32  chunks=80698  mem=2582336  line=2663034  total=-831286860
// size=100  chunks=55354  mem=5535400  line=5590754  total=1112591748
// size=170  chunks=55016  mem=9352720  line=9407736  total=-1370469648
// size=200  chunks=888  mem=177600  line=178488  total=-827155600
// size=512  chunks=558  mem=285696  line=286254  total=456215196
// size=3200  chunks=310  mem=992000  line=992310  total=719144364
// size=5120  chunks=301  mem=1541120  line=1541421  total=-512011590
// size=6144  chunks=290  mem=1781760  line=1782050  total=59099652
// size=6401  chunks=282  mem=1805082  line=1805364  total=-2099885592
// size=6800  chunks= 18  mem=122400  line=122418  total=-1669209564
// size=11264  chunks= 17  mem=191488  line=191505  total=365435906
// size=13600  chunks= 13  mem=176800  line=176813  total=-980615750
// size=19203  chunks= 11  mem=211233  line=211244  total=-2121083688
// size=54400  chunks=  8  mem=435200  line=435208  total=1218180880
// size=91618  chunks=  1  mem=91618  line=91619  total=-195985050
// 
// corr structure: unpack_event
  // DATA12 .master_ts.ts100.subsystem_id
  // DATA16 .master_ts.ts100.t1
  // DATA16 .master_ts.ts100.t2
  // DATA16 .master_ts.ts100.t3
  // DATA16 .master_ts.ts100.t4
  // DATA16 .master_tpat.tpat.tpat[170]
  // DATA12 .los.vftx2.time_fine[32][100]
  // DATA16 .los.vftx2.time_coarse[32][100]
  // DATA16 .los.vftx2.time_trigger
  // DATA12 .tofd_vme.vftx2_1.time_fine[32][100]
  // DATA16 .tofd_vme.vftx2_1.time_coarse[32][100]
  // DATA16 .tofd_vme.vftx2_1.time_trigger
  // DATA12 .tofd_vme.vftx2_3.time_fine[32][100]
  // DATA16 .tofd_vme.vftx2_3.time_coarse[32][100]
  // DATA16 .tofd_vme.vftx2_3.time_trigger
  // DATA12 .tofd_vme.vftx2_2.time_fine[32][100]
  // DATA16 .tofd_vme.vftx2_2.time_coarse[32][100]
  // DATA16 .tofd_vme.vftx2_2.time_trigger
  // DATA12 .tbm_ts.ts200.subsystem_id
  // DATA16 .tbm_ts.ts200.t1
  // DATA16 .tbm_ts.ts200.t2
  // DATA16 .tbm_ts.ts200.t3
  // DATA16 .tbm_ts.ts200.t4
  // DATA16 .tbm_tpat.tpat.tpat[170]
  // DATA16 .tofd_tamex.tamex_1.time_coarse[34][200]
  // DATA12 .tofd_tamex.tamex_1.time_fine[34][200]
  // DATA16 .tofd_tamex.tamex_2.time_coarse[34][200]
  // DATA12 .tofd_tamex.tamex_2.time_fine[34][200]
  // DATA16 .tofd_tamex.tamex_3.time_coarse[34][200]
  // DATA12 .tofd_tamex.tamex_3.time_fine[34][200]
  // DATA16 .tofd_tamex.tamex_4.time_coarse[34][200]
  // DATA12 .tofd_tamex.tamex_4.time_fine[34][200]
  // DATA12 .tracking_febex.febex_0[10].t[16][32]
  // DATA12 .tracking_febex.febex_2[12].t[16][32]
// .unpack_event/91618/.master_ts/5/.ts100/5/.subsystem_id
                                          // .t1
                                          // .t2
                                          // .t3
                                          // .t4
                    // .master_tpat/170/.tpat/170/.tpat/170/[170]
                    // .los/6401/.vftx2/6401/.time_fine/3200/[32]/100/[100]
                                          // .time_coarse/3200/[32]/100/[100]
                                          // .time_trigger
                    // .tofd_vme/19203/.vftx2_1/6401/.time_fine/3200/[32]/100/[100]
                                                  // .time_coarse/3200/[32]/100/[100]
                                                  // .time_trigger
                                    // .vftx2_3/6401/.time_fine/3200/[32]/100/[100]
                                                  // .time_coarse/3200/[32]/100/[100]
                                                  // .time_trigger
                                    // .vftx2_2/6401/.time_fine/3200/[32]/100/[100]
                                                  // .time_coarse/3200/[32]/100/[100]
                                                  // .time_trigger
                    // .tbm_ts/5/.ts200/5/.subsystem_id
                                       // .t1
                                       // .t2
                                       // .t3
                                       // .t4
                    // .tbm_tpat/170/.tpat/170/.tpat/170/[170]
                    // .tofd_tamex/54400/.tamex_1/13600/.time_coarse/6800/[34]/200/[200]
                                                     // .time_fine/6800/[34]/200/[200]
                                      // .tamex_2/13600/.time_coarse/6800/[34]/200/[200]
                                                     // .time_fine/6800/[34]/200/[200]
                                      // .tamex_3/13600/.time_coarse/6800/[34]/200/[200]
                                                     // .time_fine/6800/[34]/200/[200]
                                      // .tamex_4/13600/.time_coarse/6800/[34]/200/[200]
                                                     // .time_fine/6800/[34]/200/[200]
                    // .tracking_febex/11264/.febex_0/5120/[10]/512/.t/512/[16]/32/[32]
                                          // .febex_2/6144/[12]/512/.t/512/[16]/32/[32]// 
// size= 1  chunks=11264  mem=11264  line=22528  total=253755392
// size=32  chunks=352  mem=11264  line=11616  total=130842624
// size=512  chunks= 22  mem=11264  line=11286  total=127125504
// size=5120  chunks= 13  mem=66560  line=66573  total=749878272
// size=6144  chunks=  2  mem=12288  line=12290  total=138434560
// size=11264  chunks=  1  mem=11264  line=11265  total=126888960
// 
// corr structure: unpack_event
  // DATA12 .tracking_febex.febex_0[10].t[16][32]
  // DATA12 .tracking_febex.febex_2[12].t[16][32]
// .unpack_event/11264/.tracking_febex/11264/.febex_0/5120/[10]/512/.t/512/[16]/32/[32]
                                          // .febex_2/6144/[12]/512/.t/512/[16]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event
// Corr struct for: unpack_sticky_event
//  : public unpack_sticky_event_base
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event

/** END_CORR_STRUCT ***************************************************/

