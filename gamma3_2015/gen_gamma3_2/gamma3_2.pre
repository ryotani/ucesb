# 1 "gamma3_2.spec"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "gamma3_2.spec"
# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 1
# 23 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec"
# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/camac_lecroy_4434.spec" 1
# 23 "/u/taniuchi/s467/upexps/../ucesb/spec/camac_lecroy_4434.spec"
CAMAC_LECROY_4434(channels)
{
  MEMBER(DATA24 data[32] ZERO_SUPPRESS);

  list(0<=index<channels)
    {
      UINT32 ch_data NOENCODE
 {
   0_23: value;
   24_31: 0;

   ENCODE(data[index],(value=value));
 }
    }
}
# 24 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 2
# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/camac_silena_4418.spec" 1
# 28 "/u/taniuchi/s467/upexps/../ucesb/spec/camac_silena_4418.spec"
CAMAC_SILENA_4418(channels,mark_channel_no)
{
  MEMBER(DATA12_OVERFLOW data[8] ZERO_SUPPRESS);

  list(0<=index<channels)
    {
      if (mark_channel_no) {
 UINT16 ch_data NOENCODE
   {
     0_11: value;
     12_14: channel = CHECK(index);
     15: overflow;

     ENCODE(data[index],(value=value,overflow=overflow));
   }
      } else {
 UINT16 ch_data NOENCODE
   {
     0_11: value;
     15: overflow;

     ENCODE(data[index],(value=value,overflow=overflow));
   }
      }
    }
}
# 25 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 2
# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/camac_phillips_7164.spec" 1
# 26 "/u/taniuchi/s467/upexps/../ucesb/spec/camac_phillips_7164.spec"
CAMAC_PHILLIPS_7164(channels,mark_channel_no)
{
  MEMBER(DATA12 data[16] ZERO_SUPPRESS);

  list(0<=index<channels)
    {
      if (mark_channel_no) {
 UINT16 ch_data NOENCODE
   {
     0_11: value;
     12_15: channel = CHECK(index);

     ENCODE(data[index],(value=value));
   }
      } else {
 UINT16 ch_data NOENCODE
   {
     0_11: value;

     ENCODE(data[index],(value=value));
   }
      }
    }
}
# 26 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 2

# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/fastbus.spec" 1
# 23 "/u/taniuchi/s467/upexps/../ucesb/spec/fastbus.spec"
FASTBUS_LECROY_1875(geom,channels)
{
  MEMBER(DATA12_RANGE data[64] ZERO_SUPPRESS);

  UINT32 ch_data NOENCODE
    {
      0_11: value;

      16_21: channel = RANGE(0,channels-1);

      23: range;
      24_26: n = 0;
      27_31: geom = MATCH(geom);

      ENCODE(data[channel],(value=value,range=range));
    }
}

FASTBUS_LECROY_1885(geom,channels)
{
  MEMBER(DATA12_RANGE data[96] ZERO_SUPPRESS);

  UINT32 ch_data NOENCODE
    {
      0_11: value;

      16_22: channel = RANGE(0,channels-1);
      23: range;
      24_26: n = 0;
      27_31: geom = MATCH(geom);

      ENCODE(data[channel],(value=value,range=range));
    }
}
# 28 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 2

# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v775.spec" 1
# 26 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v775.spec"
VME_CAEN_V775(geom,
       crate)
{
  MEMBER(DATA12_OVERFLOW data[32] ZERO_SUPPRESS);

  UINT32 header NOENCODE
    {

      8_13: count;
      16_23: crate = MATCH(crate);
      24_26: 0b010;
      27_31: geom = MATCH(geom);
    }

  list(0<=index<header.count)
    {
      UINT32 ch_data NOENCODE
 {
   0_11: value;

   12: overflow;
   13: underflow;
   14: valid;



   16_20: channel;

   24_26: 0b000;
   27_31: geom = CHECK(geom);

   ENCODE(data[channel],(value=value,overflow=overflow));
 }
    }

  UINT32 eob
    {
      0_23: event_number;
      24_26: 0b100;
      27_31: geom = CHECK(geom);

    }
}
# 30 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 2
# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v830.spec" 1
# 23 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v830.spec"
VME_CAEN_V830(geom)
{
  MEMBER(DATA32 data[32] ZERO_SUPPRESS);

  UINT32 header
    {
      0_15: event_number;
      16_17: ts;
      18_23: count;



      26: 1;
      27_31: geom = MATCH(geom);
    }

  list(0<=index<header.count)
    {
      UINT32 ch_data NOENCODE
 {
   0_25: value;
   26: 0;
   27_31: channel;

   ENCODE(data[channel],(value=value));
 }
    }
}
# 31 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 2
# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" 1
# 27 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec"
# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" 1
# 39 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec"
VME_CAEN_V1290_SUBTDC(tdc,event_id,data )
{

  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));

  MARK_COUNT(tdc_start);

  UINT32 header
    {
      0_11: bunch_id;
      12_23: event_id = CHECK(event_id);

      24_25: tdc = MATCH(tdc);
      27_31: 0b00001;
    }

  several UINT32 ch_data NOENCODE
    {

      0_20: value;
      21_23: channel_low;
      24_25: tdc = CHECK(tdc);







      26: trailing;

      27_31: 0b00000;


      ENCODE(data[(tdc << 3) | channel_low],
      (value=value ));





    }

  optional UINT32 error_flags
    {
      0_14: flags;

      24_25: tdc = CHECK(tdc);
      27_31: 0b00100;
    }

  MARK_COUNT(tdc_end);

  UINT32 trailer
    {
      0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
      12_23: event_id = CHECK(header.event_id);

      24_25: tdc = CHECK(tdc);
      27_31: 0b00011;
    }
}

VME_CAEN_V1290(geom)
{

  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));

  MARK_COUNT(v1190_start);

  UINT32 header
    {
      0_4: geom = MATCH(geom);
      5_26: event_number;
      27_31: 0b01000;
    }

  select several
    {
      tdc[0] = VME_CAEN_V1290_SUBTDC(tdc=0,event_id=(header.event_number&0xfff),data=data);
      tdc[1] = VME_CAEN_V1290_SUBTDC(tdc=1,event_id=(header.event_number&0xfff),data=data);
      tdc[2] = VME_CAEN_V1290_SUBTDC(tdc=2,event_id=(header.event_number&0xfff),data=data);
      tdc[3] = VME_CAEN_V1290_SUBTDC(tdc=3,event_id=(header.event_number&0xfff),data=data);
    }

  UINT32 trigger
    {
      0_26: time_tag;
      27_31: 0b10001;
    }

  MARK_COUNT(v1190_end);

  UINT32 trailer
    {
      0_4: geom = CHECK(geom);
      5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
      24: tdc_error;
      25: buffer_overflow;
      26: trigger_lost;
      27_31: 0b10000;
    }
}





VME_CAEN_V1290_SHORT_SUBTDC(tdc,event_id,data )
{

  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));

  UINT32 ch_data NOENCODE
    {

      0_20: value;
      21_23: channel_low;
      24_25: tdc = CHECK(tdc);







      26: trailing;

      27_31: 0b00000;


      ENCODE(data[(tdc << 3) | channel_low],
      (value=value ));





    }
}

VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc)
{
  UINT32 error_flags
    {
      0_14: flags;

      24_25: tdc = CHECK(tdc);
      27_31: 0b00100;
    }
}

VME_CAEN_V1290_SHORT(geom)
{

  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));

  MARK_COUNT(v1190_start);

  UINT32 header
    {
      0_4: geom = MATCH(geom);
      5_26: event_number;
      27_31: 0b01000;
    }

  select several
    {
      tdc[0] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=0,event_id=(header.event_number&0xfff),data=data);
      tdc[1] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=1,event_id=(header.event_number&0xfff),data=data);
      tdc[2] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=2,event_id=(header.event_number&0xfff),data=data);
      tdc[3] = VME_CAEN_V1290_SHORT_SUBTDC(tdc=3,event_id=(header.event_number&0xfff),data=data);

      norevisit err[0] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=0);
      norevisit err[1] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=1);
      norevisit err[2] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=2);
      norevisit err[3] = VME_CAEN_V1290_SHORT_SUBTDC_ERROR(tdc=3);
    }

  UINT32 trigger
    {
      0_26: time_tag;
      27_31: 0b10001;
    }

  MARK_COUNT(v1190_end);

  UINT32 trailer
    {
      0_4: geom = CHECK(geom);
      5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
      24: tdc_error;
      25: buffer_overflow;
      26: trigger_lost;
      27_31: 0b10000;
    }
}
# 28 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" 2





# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" 1
# 39 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec"
VME_CAEN_V1190_SUBTDC(tdc,event_id,data )
{

  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));

  MARK_COUNT(tdc_start);

  UINT32 header
    {
      0_11: bunch_id;
      12_23: event_id = CHECK(event_id);

      24_25: tdc = MATCH(tdc);
      27_31: 0b00001;
    }

  several UINT32 ch_data NOENCODE
    {






      0_18: value;
      19_23: channel_low;
      24_25: tdc = CHECK(tdc);


      26: trailing;

      27_31: 0b00000;






      ENCODE(data[(tdc << 5) | channel_low],
      (value=value ));

    }

  optional UINT32 error_flags
    {
      0_14: flags;

      24_25: tdc = CHECK(tdc);
      27_31: 0b00100;
    }

  MARK_COUNT(tdc_end);

  UINT32 trailer
    {
      0_11: word_count = CHECK_COUNT(tdc_start,tdc_end,4,4);
      12_23: event_id = CHECK(header.event_id);

      24_25: tdc = CHECK(tdc);
      27_31: 0b00011;
    }
}

VME_CAEN_V1190(geom)
{

  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));

  MARK_COUNT(v1190_start);

  UINT32 header
    {
      0_4: geom = MATCH(geom);
      5_26: event_number;
      27_31: 0b01000;
    }

  select several
    {
      tdc[0] = VME_CAEN_V1190_SUBTDC(tdc=0,event_id=(header.event_number&0xfff),data=data);
      tdc[1] = VME_CAEN_V1190_SUBTDC(tdc=1,event_id=(header.event_number&0xfff),data=data);
      tdc[2] = VME_CAEN_V1190_SUBTDC(tdc=2,event_id=(header.event_number&0xfff),data=data);
      tdc[3] = VME_CAEN_V1190_SUBTDC(tdc=3,event_id=(header.event_number&0xfff),data=data);
    }

  UINT32 trigger
    {
      0_26: time_tag;
      27_31: 0b10001;
    }

  MARK_COUNT(v1190_end);

  UINT32 trailer
    {
      0_4: geom = CHECK(geom);
      5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
      24: tdc_error;
      25: buffer_overflow;
      26: trigger_lost;
      27_31: 0b10000;
    }
}





VME_CAEN_V1190_SHORT_SUBTDC(tdc,event_id,data )
{

  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));

  UINT32 ch_data NOENCODE
    {






      0_18: value;
      19_23: channel_low;
      24_25: tdc = CHECK(tdc);


      26: trailing;

      27_31: 0b00000;






      ENCODE(data[(tdc << 5) | channel_low],
      (value=value ));

    }
}

VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc)
{
  UINT32 error_flags
    {
      0_14: flags;

      24_25: tdc = CHECK(tdc);
      27_31: 0b00100;
    }
}

VME_CAEN_V1190_SHORT(geom)
{

  MEMBER(DATA24 data[32] ZERO_SUPPRESS_MULTI(128));

  MARK_COUNT(v1190_start);

  UINT32 header
    {
      0_4: geom = MATCH(geom);
      5_26: event_number;
      27_31: 0b01000;
    }

  select several
    {
      tdc[0] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=0,event_id=(header.event_number&0xfff),data=data);
      tdc[1] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=1,event_id=(header.event_number&0xfff),data=data);
      tdc[2] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=2,event_id=(header.event_number&0xfff),data=data);
      tdc[3] = VME_CAEN_V1190_SHORT_SUBTDC(tdc=3,event_id=(header.event_number&0xfff),data=data);

      norevisit err[0] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=0);
      norevisit err[1] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=1);
      norevisit err[2] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=2);
      norevisit err[3] = VME_CAEN_V1190_SHORT_SUBTDC_ERROR(tdc=3);
    }

  UINT32 trigger
    {
      0_26: time_tag;
      27_31: 0b10001;
    }

  MARK_COUNT(v1190_end);

  UINT32 trailer
    {
      0_4: geom = CHECK(geom);
      5_19: word_count = CHECK_COUNT(v1190_start,v1190_end,4,4);
      24: tdc_error;
      25: buffer_overflow;
      26: trigger_lost;
      27_31: 0b10000;
    }
}
# 34 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_caen_v1290.spec" 2
# 32 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 2

# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_mesytec_madc32.spec" 1
# 23 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_mesytec_madc32.spec"
VME_MESYTEC_MADC32(geom)
{
  MEMBER(DATA14_OVERFLOW data[32] ZERO_SUPPRESS);

  MARK_COUNT(start);
  UINT32 header NOENCODE
  {
    0_11: word_number;
    12_14: adc_resol;
    15: out_form;
    16_23: geom = MATCH(geom);
    24_29: 0b000000;
    30_31: 0b01;
  }

  several UINT32 ch_data NOENCODE
  {
    0_12: value;
    14: outofrange;
    16_20: channel;
    21_29: 0b000100000;
    30_31: 0b00;

    ENCODE(data[channel], (value = value, overflow = outofrange));
  }


  optional UINT32 filler NOENCODE
  {
    0_31: 0x00000000;
  }

  UINT32 end_of_event
  {
    0_29: counter;
    30_31: 0b11;
  }

  MARK_COUNT(end);
  CHECK_COUNT(header.word_number,start,end,-4,4);
}
# 34 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 2
# 1 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_mesytec_mdpp16.spec" 1
# 35 "/u/taniuchi/s467/upexps/../ucesb/spec/vme_mesytec_mdpp16.spec"
VME_MESYTEC_MDPP16(geom)
{
  MEMBER(DATA16_OVERFLOW data[34] ZERO_SUPPRESS_MULTI(100));

  MARK_COUNT(start);
  UINT32 header NOENCODE
  {
    0_9: word_number;
    10_12: adc_res;
    13_15: tdc_res;
    16_23: geom = MATCH(geom);
    24_29: 0b000000;
    30_31: 0b01;
  }

  several UINT32 ch_data NOENCODE
  {
    0_15: value;
    16_21: channel;
    22: overflow;
    23: pileup;
    24_27: 0b0000;
    28_31: 0b0001;

    ENCODE(data[channel], (value = value, overflow = overflow, pileup = pileup));
  }

  several UINT32 fill_word NOENCODE
  {
    0_31: 0x0;
  }

  UINT32 end_of_event
  {
    0_29: counter;
    30_31: 0b11;
  }

  MARK_COUNT(end);
  CHECK_COUNT(header.word_number,start,end,-4,4);
}
# 35 "/u/taniuchi/s467/upexps/../ucesb/spec/spec.spec" 2
# 2 "gamma3_2.spec" 2
# 1 "vme_mesy_madc32.spec" 1


VME_MESY_MADC32_PADDING()
{
 UINT32 padding NOENCODE
 {
  0_31: value = MATCH(0x32323232);
 }
}

VME_MESY_MADC32(geom)
{
 MEMBER(DATA16 data[32] ZERO_SUPPRESS);

 UINT32 header NOENCODE
 {
  0_11: word_number;
  12_14: adc_resol;
  15: out_form;
  16_23: geom = MATCH(geom);
  24_29: 0b000000;
  30_31: 0b01;
 }

 list(0<=index<header.word_number-1)
 {
  UINT32 ch_data NOENCODE
  {
   0_12: value;
   14: outofrange;
   16_20: channel;
   21_29: 0b000100000;
   30_31: 0b00;

         ENCODE(data[channel],(value=value));
  }
 }

 UINT32 end_of_event NOENCODE
 {
  0_29: counter;
  30_31: 0b11;
 }
}
# 3 "gamma3_2.spec" 2
# 1 "trlo.spec" 1



# 1 "../land_common/whiterabbit.spec" 1
TIMESTAMP_WHITERABBIT(id)
{
 MEMBER(DATA12 subsystem_id);
 MEMBER(DATA16 t1);
 MEMBER(DATA16 t2);
 MEMBER(DATA16 t3);
 MEMBER(DATA16 t4);

 UINT32 header NOENCODE {
  0_11: id = MATCH(id);
  12_15: 0;
     16: error_bit;
  17_31: 0;
  ENCODE(subsystem_id, (value=id));
 };
 UINT32 d1 NOENCODE {
  0_15: t1;
  16_31: 0x03e1;
  ENCODE(t1, (value=t1));
 };
 UINT32 d2 NOENCODE {
  0_15: t2;
  16_31: 0x04e1;
  ENCODE(t2, (value=t2));
 };
 UINT32 d3 NOENCODE {
  0_15: t3;
  16_31: 0x05e1;
  ENCODE(t3, (value=t3));
 };
 UINT32 d4 NOENCODE {
  0_15: t4;
  16_31: 0x06e1;
  ENCODE(t4, (value=t4));
 };
}

WR_MULTI()
{
 MEMBER(DATA32 time_hi);
 MEMBER(DATA32 time_lo);

 UINT32 hi NOENCODE {
  0_31: time;
  ENCODE(time_hi, (value = time));
 }
 UINT32 lo NOENCODE {
  0_31: time;
  ENCODE(time_lo, (value = time));
 }
}
# 5 "trlo.spec" 2

SERIAL_TS()
{
  UINT32 header NOENCODE {
    0_31: multi_events;
  }

  list (0 <= i < header.multi_events) {
    multi event = SERIAL_TS_EVENT();
  }
}

SERIAL_TS_EVENT() {
  MEMBER(DATA32 ts_hi);
  MEMBER(DATA32 ts_lo);

  UINT32 ts_lsb NOENCODE {
    0_31: t_lsb;
    ENCODE(ts_lo, (value = t_lsb));
  };

  UINT32 ts_msb NOENCODE {
    0_30: t_msb;
    31: missed_event;
    ENCODE(ts_hi, (value = t_msb));
  };
}

TRIGBUF(multi_events)
{
  UINT32 header {
    0_11: entries;
    12_31: multi_events;
  }

  list (0 <= i < multi_events) {
    multi entry = TRIGBUF_ENTRY();
  }
}

TRIGBUF_ENTRY()
{
  MEMBER(DATA32 ts_hi);
  MEMBER(DATA32 ts_lo);
  MEMBER(DATA32 tpat);
  MEMBER(DATA8 trig);

  UINT32 ts_lsb NOENCODE {
    0_31: t_lsb;
    ENCODE(ts_lo, (value = t_lsb));
  };

  UINT32 ts_msb NOENCODE {
    0_30: t_msb;
    31: missed_event;
    ENCODE(ts_hi, (value = t_msb));
  };

  UINT32 info NOENCODE {
    0_23: tpat;
    24_27: trig;
    28_31: cnt;
    ENCODE(tpat, (value = tpat));
    ENCODE(trig, (value = trig));
  };
}

TRLO(id, multi_events)
{
  wr_ts = TIMESTAMP_WHITERABBIT(id = id);
  serial_ts = SERIAL_TS();
  trigbuf = TRIGBUF(multi_events = multi_events);
}
# 4 "gamma3_2.spec" 2
# 1 "trlo_data.spec" 1


TRLO_TRIG_SCALER(id)
{
  MEMBER(DATA32 before_lmu[16] ZERO_SUPPRESS);
  MEMBER(DATA32 before_lmu_mux[ 1] ZERO_SUPPRESS);
  MEMBER(DATA32 before_lmu_aux[ 4] ZERO_SUPPRESS);
  MEMBER(DATA32 before_deadtime[16] ZERO_SUPPRESS);
  MEMBER(DATA32 after_deadtime[16] ZERO_SUPPRESS);
  MEMBER(DATA32 after_reduction[16] ZERO_SUPPRESS);

  UINT32 header
    {
      0_5: before_lmu = RANGE(0,16);
      6_10: before_lmu_mux = RANGE(0,1);
      11_15: before_lmu_aux = RANGE(0,4);
      16_21: after_lmu = RANGE(0,16);
      24_31: id = MATCH(id);
    }
# 34 "trlo_data.spec"
  list(0 <= index < header.before_lmu) {
    UINT32 b_lmu NOENCODE {
    0_31: value;
      ENCODE(before_lmu[index],(value=value));
    }
  }
  list(0 <= index < header.before_lmu_mux) {
    UINT32 b_lmu_mux NOENCODE {
    0_31: value;
      ENCODE(before_lmu_mux[index],(value=value));
    }
  }
  list(0 <= index < header.before_lmu_aux) {
    UINT32 b_lmu_aux NOENCODE {
    0_31: value;
      ENCODE(before_lmu_aux[index],(value=value));
    }
  }

  list(0 <= index < header.after_lmu) {
    UINT32 b_deadtime NOENCODE {
    0_31: value;
      ENCODE(before_deadtime[index],(value=value));
    }
  }

  list(0 <= index < header.after_lmu) {
    UINT32 a_deadtime NOENCODE {
    0_31: value;
      ENCODE(after_deadtime[index],(value=value));
    }
  }

  list(0 <= index < header.after_lmu) {
    UINT32 a_reduction NOENCODE {
    0_31: value;
      ENCODE(after_reduction[index],(value=value));
    }
  }

  list(0 <= index < 16) {

    UINT32 val;
  }
}

TRLO_SAMPLER(id)
{
  MEMBER(DATA32 stamps[512] NO_INDEX_LIST);

  UINT32 header
    {
      0_9: count;
      10: missing_at_end;
      24_31: id = MATCH(id);
    }


  list(0 <= index < header.count)
    {
      UINT32 data NOENCODE
        {


          0_31: stamp;

          ENCODE(stamps APPEND_LIST,(value=stamp));
        }
    }
}

TRLO_EVENT_TRIGGER()
{
  UINT32 time_lo
  {
    0_31: val;
  }
  UINT32 time_hi
  {
    0_30: val;
    31: missed_event;
  }
  UINT32 status
  {
    0_23: tpat;
    24_27: trig;
    28_31: count;
  };
}
# 5 "gamma3_2.spec" 2
# 1 "caen_scaler_data.spec" 1


CAEN_V830_SCALER(id)
{
  MEMBER(DATA32 data[32] ZERO_SUPPRESS);

  UINT32 sc_header {
    0_6: count = RANGE(0,31);
    24_31: id = MATCH(id);
  }

  UINT32 header {
    0_15: event_number;
    16_17: ts;
    18_23: count;
    24_25: undefined;
    26: 1;
    27_31: geom;
  }

  list(0 <= index < header.count) {
    UINT32 sc NOENCODE {
      0_25: value;
      26: 0;
      27_31: channel;
      ENCODE(data[channel],(value=value));
    }
  }
}
# 6 "gamma3_2.spec" 2
# 1 "caen_v775.spec" 1





CAEN_V775(geom, crate)
{
  MEMBER(DATA12_OVERFLOW data[32] ZERO_SUPPRESS);

  UINT32 header NOENCODE
    {
      0_7: undefined;
      8_13: count;
      16_23: crate = MATCH(crate);
      24_26: 0b010;
      27_31: geom = MATCH(geom);
    }

  list(0<=index<header.count)
    {
      UINT32 ch_data NOENCODE
 {
   0_11: value;

   12: overflow;
   13: underflow;
   14: valid;



   16_20: channel;

   24_26: 0b000;
   27_31: geom = CHECK(geom);

   ENCODE(data[channel],(value=value,overflow=overflow));
 }
    }

  UINT32 eob
    {
      0_23: event_number;
      24_26: 0b100;
      27_31: geom = CHECK(geom);

    }
}
# 7 "gamma3_2.spec" 2
# 1 "vme_struck_sis3316.spec" 1




VME_STRUCK_SIS3316(id)
{
  MEMBER(DATA8 n_ch);

  UINT32 header NOENCODE
 {
  16_31: module = MATCH(0x3316);
  8_15: nofCH;
  0_7: id = MATCH(id);
    ENCODE(n_ch, (value = nofCH));
 }

  select several
  {
    channel[0] = VME_STRUCK_SIS3316_CHANNEL(ch=0, id=id);
    channel[1] = VME_STRUCK_SIS3316_CHANNEL(ch=1, id=id);
    channel[2] = VME_STRUCK_SIS3316_CHANNEL(ch=2, id=id);
    channel[3] = VME_STRUCK_SIS3316_CHANNEL(ch=3, id=id);
    channel[4] = VME_STRUCK_SIS3316_CHANNEL(ch=4, id=id);
    channel[5] = VME_STRUCK_SIS3316_CHANNEL(ch=5, id=id);
    channel[6] = VME_STRUCK_SIS3316_CHANNEL(ch=6, id=id);
    channel[7] = VME_STRUCK_SIS3316_CHANNEL(ch=7, id=id);
    channel[8] = VME_STRUCK_SIS3316_CHANNEL(ch=8, id=id);
    channel[9] = VME_STRUCK_SIS3316_CHANNEL(ch=9, id=id);
    channel[10] = VME_STRUCK_SIS3316_CHANNEL(ch=10, id=id);
    channel[11] = VME_STRUCK_SIS3316_CHANNEL(ch=11, id=id);
    channel[12] = VME_STRUCK_SIS3316_CHANNEL(ch=12, id=id);
    channel[13] = VME_STRUCK_SIS3316_CHANNEL(ch=13, id=id);
    channel[14] = VME_STRUCK_SIS3316_CHANNEL(ch=14, id=id);
    channel[15] = VME_STRUCK_SIS3316_CHANNEL(ch=15, id=id);
  }
}

VME_STRUCK_SIS3316_CHANNEL(id, ch)
{
  UINT32 channel_header NOENCODE
  {
    16_31: module = MATCH(0x3316);
    12_15: padding_words;
    8_11: ch = MATCH(ch);
    0_7: id = MATCH(id);
  }

  list (0 <= n < channel_header.padding_words)
  {
    UINT32 padding NOENCODE
    {
      16_31: module = MATCH(0x3316);
      8_15: ch = MATCH(ch);
      0_7: id = MATCH(id);
    }
  }

  select several {
    multi data = VME_STRUCK_SIS3316_CHANNEL_DATA(id=id, ch=ch);
  }
}

VME_STRUCK_SIS3316_CHANNEL_DATA(id, ch)
{
 MEMBER(DATA32 ts[2] ZERO_SUPPRESS);
 MEMBER(DATA32 gate[8] ZERO_SUPPRESS);
 MEMBER(DATA32 maw[3] ZERO_SUPPRESS);
 MEMBER(DATA32 maxe[2] ZERO_SUPPRESS);




  UINT32 header0
  {
    0: has_acc6;
    1: has_acc2;
    2: has_maw;
    3: has_e;
    4_7: chanNo = MATCH(ch);
    8_15: id = MATCH(id);
    16_31: timeS;
    ENCODE(ts[0],(value=timeS));
  }

  UINT32 header2
  {
    0_31: timeS;
    ENCODE(ts[1],(value=timeS));
  }

  if (header0.has_acc6) {
    UINT32 peak NOENCODE
    {
      0_15: peakValue;
      16_31: peakIndex;
    }


    UINT32 gate_group_1
    {
      0_23: sum;
      24_27: reserved;
      28: has_pileup;
      29: has_repileup;
      30: has_underflow;
      31: has_overflow;
      ENCODE(gate[0],(value=sum));
    }


    list (1<=i<6)
    {
      UINT32 gate_group_2_6
      {
          0_27: sum;
          28_31: 0;
          ENCODE(gate[i],(value=sum));
      }
    }
  }

  if (header0.has_acc2) {

    list (6<=i<8)
    {
      UINT32 gate_group_7_8
      {
        0_27: sum;
        28_31: 0;
        ENCODE(gate[i],(value=sum));
      }
    }
  }

  if (header0.has_maw) {
    UINT32 maw1
    {
      0_31: max;
      ENCODE(maw[0],(value=max));
    }

    UINT32 maw2
    {
      0_31: after;
      ENCODE(maw[1],(value=after));
    }

    UINT32 maw3
    {
      0_31: before;
      ENCODE(maw[2],(value=before));
    }
  }

  if (header0.has_e) {
    UINT32 maxe1
    {
      0_31: start;
      ENCODE(maxe[0],(value=start+0x08000000));
    }

    UINT32 maxe2
    {
      0_31: max;
      ENCODE(maxe[1],(value=max+0x08000000));
    }
  }

  UINT32 header3
  {
    0_25: sampleLength;
    26: pileup;
    27: mawFlag;
    28_31: 0xE;
  }
# 191 "vme_struck_sis3316.spec"
}
# 8 "gamma3_2.spec" 2

LAND_STD_VME()
{
  MEMBER(DATA32 timestamp);
  UINT32 failure
  {
    0: fail_general;
    1: fail_data_corrupt;
    2: fail_data_missing;
    3: fail_data_too_much;
    4: fail_event_counter_mismatch;
    5: fail_readout_error_driver;
    6: fail_unexpected_trigger;

    26: has_scaler_data;
    27: has_no_zero_suppression;
    28: has_multi_adctdc_counter0;
    29: has_multi_scaler_counter0;
    30: has_multi_event;
    31: has_time_stamp;
  }

  if (failure.has_time_stamp) {
    UINT32 time_stamp {
      0_31: value;
      ENCODE(timestamp,(value=value));
    }
  }

  if (failure.has_multi_event) {
    UINT32 multi_events;
  }

  if (failure.has_multi_scaler_counter0) {
    UINT32 multi_scaler_counter0;
  }

  if (failure.has_multi_adctdc_counter0) {
    UINT32 multi_adctdc_counter0;
  }

}

SUBEVENT(SCALERS)
{
  select several {
    trlo = TRLO_TRIG_SCALER(id = 0x12);
    caen_scaler = VME_CAEN_V830(geom=0x1f);
  }
}

SUBEVENT(TS)
{

  trlo = TRLO(id = 2, multi_events = 29);
}

SUBEVENT(VME)
{
  header = LAND_STD_VME();

  select several {
    sis3316[0] = VME_STRUCK_SIS3316(id=3);
    sis3316[1] = VME_STRUCK_SIS3316(id=4);
    sis3316[2] = VME_STRUCK_SIS3316(id=5);
    multi tdc = CAEN_V775(geom=0x1f, crate=0x0);
    mesy_padding = VME_MESY_MADC32_PADDING();




    multi adc = VME_MESY_MADC32(geom=0x5);

  }
}

EVENT
{
  ts = TS(type = 10, subtype = 1, control = 5, subcrate = 1);
  vme = VME(type = 88, subtype = 8800, control = 5, subcrate = 1);
  scalers = SCALERS(type = 12, subtype = 3456, control = 5, subcrate = 1);
  ignore_unknown_subevent;
}

# 1 "mapping.h" 1



SIGNAL(TS_HI, ts.trlo.trigbuf.entry.ts_hi, DATA32);
SIGNAL(TS_LO, ts.trlo.trigbuf.entry.ts_lo, DATA32);
SIGNAL(TPAT, ts.trlo.trigbuf.entry.tpat, DATA32);
SIGNAL(TRIG, ts.trlo.trigbuf.entry.trig, DATA8);


SIGNAL(TRLORAW_1, scalers.trlo.before_lmu[0],
       TRLORAW_16, scalers.trlo.before_lmu[15], DATA32);
SIGNAL(TRLOBDT_1, scalers.trlo.before_deadtime[0],
       TRLOBDT_16, scalers.trlo.before_deadtime[15], DATA32);
SIGNAL(TRLOADT_1, scalers.trlo.after_deadtime[0],
       TRLOADT_16, scalers.trlo.after_deadtime[15], DATA32);
SIGNAL(TRLOARD_1, scalers.trlo.after_reduction[0],
       TRLOARD_16, scalers.trlo.after_reduction[15], DATA32);
# 73 "mapping.h"
SIGNAL(ADC_1_N, vme.sis3316[0].n_ch, DATA8);
SIGNAL(ADC_1_TS_1_H, vme.sis3316[0].channel[0].data.ts[0],
       ADC_1_TS_16_H, vme.sis3316[0].channel[15].data.ts[0], DATA32);
SIGNAL(ADC_1_TS_1_L, vme.sis3316[0].channel[0].data.ts[1],
       ADC_1_TS_16_L, vme.sis3316[0].channel[15].data.ts[1], DATA32);
# 97 "mapping.h"
SIGNAL(ADC_1_CH_1_MAXE_1, vme.sis3316[0].channel[0].data.maxe[0], ADC_1_CH_1_MAXE_2, vme.sis3316[0].channel[0].data.maxe[1], DATA32); SIGNAL(ADC_1_CH_1_T1, vme.sis3316[0].channel[0].data.maw[0], ADC_1_CH_1_T3, vme.sis3316[0].channel[0].data.maw[2], DATA32);



SIGNAL(ADC_1_CH_5_MAXE_1, vme.sis3316[0].channel[4].data.maxe[0], ADC_1_CH_5_MAXE_2, vme.sis3316[0].channel[4].data.maxe[1], DATA32); SIGNAL(ADC_1_CH_5_T1, vme.sis3316[0].channel[4].data.maw[0], ADC_1_CH_5_T3, vme.sis3316[0].channel[4].data.maw[2], DATA32);



SIGNAL(ADC_1_CH_9_MAXE_1, vme.sis3316[0].channel[8].data.maxe[0], ADC_1_CH_9_MAXE_2, vme.sis3316[0].channel[8].data.maxe[1], DATA32); SIGNAL(ADC_1_CH_9_T1, vme.sis3316[0].channel[8].data.maw[0], ADC_1_CH_9_T3, vme.sis3316[0].channel[8].data.maw[2], DATA32);



SIGNAL(ADC_1_CH_13_MAXE_1, vme.sis3316[0].channel[12].data.maxe[0], ADC_1_CH_13_MAXE_2, vme.sis3316[0].channel[12].data.maxe[1], DATA32); SIGNAL(ADC_1_CH_13_T1, vme.sis3316[0].channel[12].data.maw[0], ADC_1_CH_13_T3, vme.sis3316[0].channel[12].data.maw[2], DATA32);






SIGNAL(ADC_2_N, vme.sis3316[1].n_ch, DATA8);
SIGNAL(ADC_2_TS_1_H, vme.sis3316[1].channel[0].data.ts[0],
       ADC_2_TS_16_H, vme.sis3316[1].channel[15].data.ts[0], DATA32);
SIGNAL(ADC_2_TS_1_L, vme.sis3316[1].channel[0].data.ts[1],
       ADC_2_TS_16_L, vme.sis3316[1].channel[15].data.ts[1], DATA32);
# 140 "mapping.h"
SIGNAL(ADC_2_CH_1_GATE1, vme.sis3316[1].channel[0].data.gate[0], ADC_2_CH_1_GATE8, vme.sis3316[1].channel[0].data.gate[7], DATA32); SIGNAL(ADC_2_CH_1_MAXE_1, vme.sis3316[1].channel[0].data.maxe[0], ADC_2_CH_1_MAXE_2, vme.sis3316[1].channel[0].data.maxe[1], DATA32); SIGNAL(ADC_2_CH_1_T1, vme.sis3316[1].channel[0].data.maw[0], ADC_2_CH_1_T3, vme.sis3316[1].channel[0].data.maw[2], DATA32);
SIGNAL(ADC_2_CH_2_GATE1, vme.sis3316[1].channel[1].data.gate[0], ADC_2_CH_2_GATE8, vme.sis3316[1].channel[1].data.gate[7], DATA32); SIGNAL(ADC_2_CH_2_MAXE_1, vme.sis3316[1].channel[1].data.maxe[0], ADC_2_CH_2_MAXE_2, vme.sis3316[1].channel[1].data.maxe[1], DATA32); SIGNAL(ADC_2_CH_2_T1, vme.sis3316[1].channel[1].data.maw[0], ADC_2_CH_2_T3, vme.sis3316[1].channel[1].data.maw[2], DATA32);


SIGNAL(ADC_2_CH_5_GATE1, vme.sis3316[1].channel[4].data.gate[0], ADC_2_CH_5_GATE8, vme.sis3316[1].channel[4].data.gate[7], DATA32); SIGNAL(ADC_2_CH_5_MAXE_1, vme.sis3316[1].channel[4].data.maxe[0], ADC_2_CH_5_MAXE_2, vme.sis3316[1].channel[4].data.maxe[1], DATA32); SIGNAL(ADC_2_CH_5_T1, vme.sis3316[1].channel[4].data.maw[0], ADC_2_CH_5_T3, vme.sis3316[1].channel[4].data.maw[2], DATA32);
SIGNAL(ADC_2_CH_6_GATE1, vme.sis3316[1].channel[5].data.gate[0], ADC_2_CH_6_GATE8, vme.sis3316[1].channel[5].data.gate[7], DATA32); SIGNAL(ADC_2_CH_6_MAXE_1, vme.sis3316[1].channel[5].data.maxe[0], ADC_2_CH_6_MAXE_2, vme.sis3316[1].channel[5].data.maxe[1], DATA32); SIGNAL(ADC_2_CH_6_T1, vme.sis3316[1].channel[5].data.maw[0], ADC_2_CH_6_T3, vme.sis3316[1].channel[5].data.maw[2], DATA32);


SIGNAL(ADC_2_CH_9_GATE1, vme.sis3316[1].channel[8].data.gate[0], ADC_2_CH_9_GATE8, vme.sis3316[1].channel[8].data.gate[7], DATA32); SIGNAL(ADC_2_CH_9_MAXE_1, vme.sis3316[1].channel[8].data.maxe[0], ADC_2_CH_9_MAXE_2, vme.sis3316[1].channel[8].data.maxe[1], DATA32); SIGNAL(ADC_2_CH_9_T1, vme.sis3316[1].channel[8].data.maw[0], ADC_2_CH_9_T3, vme.sis3316[1].channel[8].data.maw[2], DATA32);
SIGNAL(ADC_2_CH_10_GATE1, vme.sis3316[1].channel[9].data.gate[0], ADC_2_CH_10_GATE8, vme.sis3316[1].channel[9].data.gate[7], DATA32); SIGNAL(ADC_2_CH_10_MAXE_1, vme.sis3316[1].channel[9].data.maxe[0], ADC_2_CH_10_MAXE_2, vme.sis3316[1].channel[9].data.maxe[1], DATA32); SIGNAL(ADC_2_CH_10_T1, vme.sis3316[1].channel[9].data.maw[0], ADC_2_CH_10_T3, vme.sis3316[1].channel[9].data.maw[2], DATA32);


SIGNAL(ADC_2_CH_13_GATE1, vme.sis3316[1].channel[12].data.gate[0], ADC_2_CH_13_GATE8, vme.sis3316[1].channel[12].data.gate[7], DATA32); SIGNAL(ADC_2_CH_13_MAXE_1, vme.sis3316[1].channel[12].data.maxe[0], ADC_2_CH_13_MAXE_2, vme.sis3316[1].channel[12].data.maxe[1], DATA32); SIGNAL(ADC_2_CH_13_T1, vme.sis3316[1].channel[12].data.maw[0], ADC_2_CH_13_T3, vme.sis3316[1].channel[12].data.maw[2], DATA32);
SIGNAL(ADC_2_CH_14_GATE1, vme.sis3316[1].channel[13].data.gate[0], ADC_2_CH_14_GATE8, vme.sis3316[1].channel[13].data.gate[7], DATA32); SIGNAL(ADC_2_CH_14_MAXE_1, vme.sis3316[1].channel[13].data.maxe[0], ADC_2_CH_14_MAXE_2, vme.sis3316[1].channel[13].data.maxe[1], DATA32); SIGNAL(ADC_2_CH_14_T1, vme.sis3316[1].channel[13].data.maw[0], ADC_2_CH_14_T3, vme.sis3316[1].channel[13].data.maw[2], DATA32);





SIGNAL(ADC_3_N, vme.sis3316[2].n_ch, DATA8);
SIGNAL(ADC_3_TS_1_H, vme.sis3316[2].channel[0].data.ts[0],
       ADC_3_TS_16_H, vme.sis3316[2].channel[15].data.ts[0], DATA32);
SIGNAL(ADC_3_TS_1_L, vme.sis3316[2].channel[0].data.ts[1],
       ADC_3_TS_16_L, vme.sis3316[2].channel[15].data.ts[1], DATA32);
# 183 "mapping.h"
SIGNAL(ADC_3_CH_1_MAXE_1, vme.sis3316[2].channel[0].data.maxe[0], ADC_3_CH_1_MAXE_2, vme.sis3316[2].channel[0].data.maxe[1], DATA32); SIGNAL(ADC_3_CH_1_T1, vme.sis3316[2].channel[0].data.maw[0], ADC_3_CH_1_T3, vme.sis3316[2].channel[0].data.maw[2], DATA32);



SIGNAL(ADC_3_CH_5_MAXE_1, vme.sis3316[2].channel[4].data.maxe[0], ADC_3_CH_5_MAXE_2, vme.sis3316[2].channel[4].data.maxe[1], DATA32); SIGNAL(ADC_3_CH_5_T1, vme.sis3316[2].channel[4].data.maw[0], ADC_3_CH_5_T3, vme.sis3316[2].channel[4].data.maw[2], DATA32);



SIGNAL(ADC_3_CH_9_MAXE_1, vme.sis3316[2].channel[8].data.maxe[0], ADC_3_CH_9_MAXE_2, vme.sis3316[2].channel[8].data.maxe[1], DATA32); SIGNAL(ADC_3_CH_9_T1, vme.sis3316[2].channel[8].data.maw[0], ADC_3_CH_9_T3, vme.sis3316[2].channel[8].data.maw[2], DATA32);



SIGNAL(ADC_3_CH_13_MAXE_1, vme.sis3316[2].channel[12].data.maxe[0], ADC_3_CH_13_MAXE_2, vme.sis3316[2].channel[12].data.maxe[1], DATA32); SIGNAL(ADC_3_CH_13_T1, vme.sis3316[2].channel[12].data.maw[0], ADC_3_CH_13_T3, vme.sis3316[2].channel[12].data.maw[2], DATA32);
# 204 "mapping.h"
SIGNAL(LABRL_1T,vme.tdc.data[ 0],DATA12);
SIGNAL(LABRL_2T,vme.tdc.data[ 1],DATA12);
SIGNAL(LABRL_3T,vme.tdc.data[ 2],DATA12);
SIGNAL(LABRL_4T,vme.tdc.data[ 3],DATA12);


SIGNAL(HPGEL_1T,vme.tdc.data[ 4],DATA12);
SIGNAL(HPGEL_2T,vme.tdc.data[ 5],DATA12);
SIGNAL(HPGEL_3T,vme.tdc.data[ 6],DATA12);
SIGNAL(HPGEL_4T,vme.tdc.data[ 7],DATA12);


SIGNAL(N_1T,vme.tdc.data[ 8],DATA12);
SIGNAL(N_2T,vme.tdc.data[ 9],DATA12);
SIGNAL(N_3T,vme.tdc.data[10],DATA12);
SIGNAL(N_4T,vme.tdc.data[11],DATA12);

SIGNAL(N_5T,vme.tdc.data[12],DATA12);
SIGNAL(N_6T,vme.tdc.data[13],DATA12);
SIGNAL(N_7T,vme.tdc.data[14],DATA12);
SIGNAL(N_8T,vme.tdc.data[15],DATA12);


SIGNAL(TRIGT_1,vme.tdc.data[16],DATA12);
SIGNAL(TRIGT_2,vme.tdc.data[17],DATA12);
SIGNAL(TRIGT_3,vme.tdc.data[18],DATA12);
SIGNAL(TRIGT_4,vme.tdc.data[19],DATA12);

SIGNAL(TRIGT_5,vme.tdc.data[20],DATA12);
SIGNAL(TRIGT_6,vme.tdc.data[21],DATA12);
SIGNAL(TRIGT_7,vme.tdc.data[22],DATA12);
SIGNAL(TRIGT_8,vme.tdc.data[23],DATA12);

SIGNAL(TRIGT_9,vme.tdc.data[24],DATA12);
SIGNAL(TRIGT_10,vme.tdc.data[25],DATA12);
SIGNAL(TRIGT_11,vme.tdc.data[26],DATA12);
SIGNAL(TRIGT_12,vme.tdc.data[27],DATA12);







SIGNAL(LABRL_1S,scalers.caen_scaler.data[ 0],DATA32);
SIGNAL(LABRL_2S,scalers.caen_scaler.data[ 1],DATA32);
SIGNAL(LABRL_3S,scalers.caen_scaler.data[ 2],DATA32);
SIGNAL(LABRL_4S,scalers.caen_scaler.data[ 3],DATA32);

SIGNAL(LABR_1S,scalers.caen_scaler.data[ 4],DATA32);
SIGNAL(LABR_2S,scalers.caen_scaler.data[ 5],DATA32);
SIGNAL(LABR_3S,scalers.caen_scaler.data[ 6],DATA32);
SIGNAL(LABR_4S,scalers.caen_scaler.data[ 7],DATA32);


SIGNAL(HPGEL_1S,scalers.caen_scaler.data[ 8],DATA32);
SIGNAL(HPGEL_2S,scalers.caen_scaler.data[ 9],DATA32);
SIGNAL(HPGEL_3S,scalers.caen_scaler.data[10],DATA32);
SIGNAL(HPGEL_4S,scalers.caen_scaler.data[11],DATA32);

SIGNAL(HPGE_1S,scalers.caen_scaler.data[12],DATA32);
SIGNAL(HPGE_2S,scalers.caen_scaler.data[13],DATA32);
SIGNAL(HPGE_3S,scalers.caen_scaler.data[14],DATA32);
SIGNAL(HPGE_4S,scalers.caen_scaler.data[15],DATA32);


SIGNAL(CRM_1,scalers.caen_scaler.data[16],DATA32);
SIGNAL(CRM_2,scalers.caen_scaler.data[17],DATA32);
SIGNAL(CRM_3,scalers.caen_scaler.data[18],DATA32);
SIGNAL(CRM_4,scalers.caen_scaler.data[19],DATA32);

SIGNAL(CRM_5,scalers.caen_scaler.data[20],DATA32);
SIGNAL(CRM_6,scalers.caen_scaler.data[21],DATA32);
SIGNAL(CRM_7,scalers.caen_scaler.data[22],DATA32);
SIGNAL(CRM_8,scalers.caen_scaler.data[23],DATA32);


SIGNAL(N_1S,scalers.caen_scaler.data[24],DATA32);
SIGNAL(N_2S,scalers.caen_scaler.data[25],DATA32);
SIGNAL(N_3S,scalers.caen_scaler.data[26],DATA32);
SIGNAL(N_4S,scalers.caen_scaler.data[27],DATA32);

SIGNAL(N_5S,scalers.caen_scaler.data[28],DATA32);
SIGNAL(N_6S,scalers.caen_scaler.data[29],DATA32);
SIGNAL(N_7S,scalers.caen_scaler.data[30],DATA32);
SIGNAL(N_8S,scalers.caen_scaler.data[31],DATA32);





SIGNAL(N_1E,vme.adc.data[ 0],DATA16);
SIGNAL(N_1P,vme.adc.data[ 1],DATA16);
SIGNAL(N_2E,vme.adc.data[ 2],DATA16);
SIGNAL(N_2P,vme.adc.data[ 3],DATA16);
SIGNAL(N_3E,vme.adc.data[ 4],DATA16);
SIGNAL(N_3P,vme.adc.data[ 5],DATA16);
SIGNAL(N_4E,vme.adc.data[ 6],DATA16);
SIGNAL(N_4P,vme.adc.data[ 7],DATA16);
SIGNAL(N_5E,vme.adc.data[16],DATA16);
SIGNAL(N_5P,vme.adc.data[17],DATA16);
SIGNAL(N_6E,vme.adc.data[18],DATA16);
SIGNAL(N_6P,vme.adc.data[19],DATA16);
SIGNAL(N_7E,vme.adc.data[20],DATA16);
SIGNAL(N_7P,vme.adc.data[21],DATA16);
SIGNAL(N_8E,vme.adc.data[22],DATA16);
SIGNAL(N_8P,vme.adc.data[23],DATA16);
# 92 "gamma3_2.spec" 2
