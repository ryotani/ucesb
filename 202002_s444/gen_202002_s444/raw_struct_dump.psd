
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

class raw_event_SCITWO
{
  raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
} ;
class raw_event_SCIEIGHT
{
  raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
} ;
class raw_event_NN_WR
{
  DATA12 ID;
  DATA16 T[4];
} ;
class raw_event_NN_P_tcl_T
{
  raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
} ;
class raw_event_NN_P_tcl
{
  raw_event_NN_P_tcl_T T[2];
} ;
class raw_event_NN_P_tfl_T
{
  raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
} ;
class raw_event_NN_P_tfl
{
  raw_event_NN_P_tfl_T T[2];
} ;
class raw_event_NN_P_tct_T
{
  raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
} ;
class raw_event_NN_P_tct
{
  raw_event_NN_P_tct_T T[2];
} ;
class raw_event_NN_P_tft_T
{
  raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
} ;
class raw_event_NN_P_tft
{
  raw_event_NN_P_tft_T T[2];
} ;
class raw_event_NN_P
{
  raw_event_NN_P_tcl tcl;
  raw_event_NN_P_tfl tfl;
  raw_event_NN_P_tct tct;
  raw_event_NN_P_tft tft;
} ;
class raw_event_NN
{
  raw_event_NN_WR WR;
  raw_event_NN_P P[16];
} ;
class raw_event_MUSIC
{
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,8,100> E;
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,8,100> T;
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,100> TREF;
} ;
class raw_event_SOFSCI
{
  raw_array_multi_zero_suppress<DATA12,DATA12,3,10> TF;
  raw_array_multi_zero_suppress<DATA16,DATA16,3,10> TC;
} ;
class raw_event_SOFTWIM_S
{
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,16,100> E;
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,16,100> T;
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,100> TREF;
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,100> TRIG;
} ;
class raw_event_SOFTWIM
{
  raw_event_SOFTWIM_S S[1];
} ;
class raw_event_SOFTOFW_P
{
  raw_array_multi_zero_suppress<DATA12,DATA12,2,10> TF;
  raw_array_multi_zero_suppress<DATA16,DATA16,2,10> TC;
  DATA14 E[2];
} ;
class raw_event_SOFTOFW
{
  raw_event_SOFTOFW_P P[28];
} ;
class raw_event_SOFMWPC_Plane
{
  raw_array_zero_suppress<DATA12,DATA12,288> Q;
} ;
class raw_event_SOFMWPC
{
  raw_event_SOFMWPC_Plane Plane[3];
} ;
class raw_event_SOFSCALERS
{
  DATA32 UPSTREAM[7];
  DATA32 TOFW[56];
} ;
class raw_event_CALIFA
{
  raw_array_zero_suppress<DATA16,DATA16,4861> ENE;
  raw_array_zero_suppress<DATA16,DATA16,4861> TOT;
  raw_array_zero_suppress<DATA32,DATA32,4861> TSLSB;
  raw_array_zero_suppress<DATA32,DATA32,4861> TSMSB;
  raw_array_zero_suppress<DATA16,DATA16,4861> NF;
  raw_array_zero_suppress<DATA16,DATA16,4861> NS;
} ;
class raw_event_TIMESTAMP_SCITWO_WR
{
  DATA16 T[4];
} ;
class raw_event_TIMESTAMP_SCITWO
{
  DATA12 ID;
  raw_event_TIMESTAMP_SCITWO_WR WR;
} ;
class raw_event_TIMESTAMP_SCIEIGHT_WR
{
  DATA16 T[4];
} ;
class raw_event_TIMESTAMP_SCIEIGHT
{
  DATA12 ID;
  raw_event_TIMESTAMP_SCIEIGHT_WR WR;
} ;
class raw_event_TIMESTAMP_CALIFA_WR
{
  DATA16 T[4];
} ;
class raw_event_TIMESTAMP_CALIFA
{
  DATA12 ID;
  raw_event_TIMESTAMP_CALIFA_WR WR;
} ;
class raw_event_TIMESTAMP_MASTER_WR
{
  DATA16 T[4];
} ;
class raw_event_TIMESTAMP_MASTER
{
  DATA12 ID;
  raw_event_TIMESTAMP_MASTER_WR WR;
} ;
class raw_event_TIMESTAMP_SOFIA_WR
{
  DATA16 T[4];
} ;
class raw_event_TIMESTAMP_SOFIA
{
  DATA12 ID;
  raw_event_TIMESTAMP_SOFIA_WR WR;
} ;
class raw_event_TIMESTAMP
{
  raw_event_TIMESTAMP_SCITWO SCITWO;
  raw_event_TIMESTAMP_SCIEIGHT SCIEIGHT;
  raw_event_TIMESTAMP_CALIFA CALIFA[2];
  raw_event_TIMESTAMP_MASTER MASTER;
  raw_event_TIMESTAMP_SOFIA SOFIA;
} ;
class raw_event : public raw_event_base
{
  raw_event_SCITWO SCITWO;
  raw_event_SCIEIGHT SCIEIGHT;
  raw_event_NN NN;
  raw_array_zero_suppress<DATA32,DATA32,512> SAMP;
  raw_event_MUSIC MUSIC;
  raw_event_SOFSCI SOFSCI[1];
  raw_event_SOFTWIM SOFTWIM;
  raw_event_SOFTOFW SOFTOFW;
  raw_event_SOFMWPC SOFMWPC[4];
  raw_event_SOFSCALERS SOFSCALERS;
  raw_event_CALIFA CALIFA;
  raw_event_TIMESTAMP TIMESTAMP;
  raw_list_ii_zero_suppress<DATA16,DATA16,170> TPAT;
} ;
class raw_sticky : public raw_sticky_base
{
  ;
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_raw_event_SCITWO
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SCITWO)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(VTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),8,32> STRUCT_MIRROR_NAME(VTF);
  STRUCT_MIRROR_ITEM_CTRL(VTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),8,32> STRUCT_MIRROR_NAME(VTC);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SCITWO);
};
#endif//USER_DEF_raw_event_SCITWO

#ifndef USER_DEF_raw_event_SCIEIGHT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SCIEIGHT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(VTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),8,32> STRUCT_MIRROR_NAME(VTF);
  STRUCT_MIRROR_ITEM_CTRL(VTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),8,32> STRUCT_MIRROR_NAME(VTC);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SCIEIGHT);
};
#endif//USER_DEF_raw_event_SCIEIGHT

#ifndef USER_DEF_raw_event_NN_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_WR);
};
#endif//USER_DEF_raw_event_NN_WR

#ifndef USER_DEF_raw_event_NN_P_tcl_T
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tcl_T)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(B);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),50,200> STRUCT_MIRROR_NAME(B);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tcl_T);
};
#endif//USER_DEF_raw_event_NN_P_tcl_T

#ifndef USER_DEF_raw_event_NN_P_tcl
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tcl)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tcl_T) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tcl);
};
#endif//USER_DEF_raw_event_NN_P_tcl

#ifndef USER_DEF_raw_event_NN_P_tfl_T
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tfl_T)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(B);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),50,200> STRUCT_MIRROR_NAME(B);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tfl_T);
};
#endif//USER_DEF_raw_event_NN_P_tfl_T

#ifndef USER_DEF_raw_event_NN_P_tfl
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tfl)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tfl_T) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tfl);
};
#endif//USER_DEF_raw_event_NN_P_tfl

#ifndef USER_DEF_raw_event_NN_P_tct_T
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tct_T)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(B);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),50,200> STRUCT_MIRROR_NAME(B);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tct_T);
};
#endif//USER_DEF_raw_event_NN_P_tct_T

#ifndef USER_DEF_raw_event_NN_P_tct
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tct)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tct_T) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tct);
};
#endif//USER_DEF_raw_event_NN_P_tct

#ifndef USER_DEF_raw_event_NN_P_tft_T
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tft_T)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(B);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),50,200> STRUCT_MIRROR_NAME(B);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tft_T);
};
#endif//USER_DEF_raw_event_NN_P_tft_T

#ifndef USER_DEF_raw_event_NN_P_tft
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tft)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tft_T) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tft);
};
#endif//USER_DEF_raw_event_NN_P_tft

#ifndef USER_DEF_raw_event_NN_P
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(tcl);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tcl) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tcl);
  STRUCT_MIRROR_ITEM_CTRL(tfl);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tfl) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tfl);
  STRUCT_MIRROR_ITEM_CTRL(tct);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tct) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tct);
  STRUCT_MIRROR_ITEM_CTRL(tft);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tft) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tft);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P);
};
#endif//USER_DEF_raw_event_NN_P

#ifndef USER_DEF_raw_event_NN
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_NN_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_ITEM_CTRL(P);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(P__i0,,16);
  STRUCT_MIRROR_TYPE(raw_event_NN_P) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(P[16]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN);
};
#endif//USER_DEF_raw_event_NN

#ifndef USER_DEF_raw_event_MUSIC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_MUSIC)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(E);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),8,100> STRUCT_MIRROR_NAME(E);
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),8,100> STRUCT_MIRROR_NAME(T);
  STRUCT_MIRROR_ITEM_CTRL(TREF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),2,100> STRUCT_MIRROR_NAME(TREF);
  STRUCT_MIRROR_FCNS_DECL(raw_event_MUSIC);
};
#endif//USER_DEF_raw_event_MUSIC

#ifndef USER_DEF_raw_event_SOFSCI
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFSCI)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(TF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),3,10> STRUCT_MIRROR_NAME(TF);
  STRUCT_MIRROR_ITEM_CTRL(TC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),3,10> STRUCT_MIRROR_NAME(TC);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFSCI);
};
#endif//USER_DEF_raw_event_SOFSCI

#ifndef USER_DEF_raw_event_SOFTWIM_S
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFTWIM_S)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(E);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),16,100> STRUCT_MIRROR_NAME(E);
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),16,100> STRUCT_MIRROR_NAME(T);
  STRUCT_MIRROR_ITEM_CTRL(TREF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),2,100> STRUCT_MIRROR_NAME(TREF);
  STRUCT_MIRROR_ITEM_CTRL(TRIG);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),2,100> STRUCT_MIRROR_NAME(TRIG);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFTWIM_S);
};
#endif//USER_DEF_raw_event_SOFTWIM_S

#ifndef USER_DEF_raw_event_SOFTWIM
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFTWIM)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(S);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(S__i0,,1);
  STRUCT_MIRROR_TYPE(raw_event_SOFTWIM_S) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(S[1]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFTWIM);
};
#endif//USER_DEF_raw_event_SOFTWIM

#ifndef USER_DEF_raw_event_SOFTOFW_P
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFTOFW_P)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(TF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),2,10> STRUCT_MIRROR_NAME(TF);
  STRUCT_MIRROR_ITEM_CTRL(TC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),2,10> STRUCT_MIRROR_NAME(TC);
  STRUCT_MIRROR_ITEM_CTRL(E);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(E__i0,,2);
  STRUCT_MIRROR_TYPE(DATA14) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(E[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFTOFW_P);
};
#endif//USER_DEF_raw_event_SOFTOFW_P

#ifndef USER_DEF_raw_event_SOFTOFW
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFTOFW)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(P);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(P__i0,,28);
  STRUCT_MIRROR_TYPE(raw_event_SOFTOFW_P) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(P[28]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFTOFW);
};
#endif//USER_DEF_raw_event_SOFTOFW

#ifndef USER_DEF_raw_event_SOFMWPC_Plane
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFMWPC_Plane)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(Q);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),288> STRUCT_MIRROR_NAME(Q);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFMWPC_Plane);
};
#endif//USER_DEF_raw_event_SOFMWPC_Plane

#ifndef USER_DEF_raw_event_SOFMWPC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFMWPC)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(Plane);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(Plane__i0,,3);
  STRUCT_MIRROR_TYPE(raw_event_SOFMWPC_Plane) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(Plane[3]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFMWPC);
};
#endif//USER_DEF_raw_event_SOFMWPC

#ifndef USER_DEF_raw_event_SOFSCALERS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFSCALERS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(UPSTREAM);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(UPSTREAM__i0,,7);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(UPSTREAM[7]);
  STRUCT_MIRROR_ITEM_CTRL(TOFW);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(TOFW__i0,,56);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(TOFW[56]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFSCALERS);
};
#endif//USER_DEF_raw_event_SOFSCALERS

#ifndef USER_DEF_raw_event_CALIFA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_CALIFA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ENE);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),4861> STRUCT_MIRROR_NAME(ENE);
  STRUCT_MIRROR_ITEM_CTRL(TOT);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),4861> STRUCT_MIRROR_NAME(TOT);
  STRUCT_MIRROR_ITEM_CTRL(TSLSB);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),4861> STRUCT_MIRROR_NAME(TSLSB);
  STRUCT_MIRROR_ITEM_CTRL(TSMSB);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),4861> STRUCT_MIRROR_NAME(TSMSB);
  STRUCT_MIRROR_ITEM_CTRL(NF);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),4861> STRUCT_MIRROR_NAME(NF);
  STRUCT_MIRROR_ITEM_CTRL(NS);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),4861> STRUCT_MIRROR_NAME(NS);
  STRUCT_MIRROR_FCNS_DECL(raw_event_CALIFA);
};
#endif//USER_DEF_raw_event_CALIFA

#ifndef USER_DEF_raw_event_TIMESTAMP_SCITWO_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCITWO_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SCITWO_WR);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SCITWO_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SCITWO
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCITWO)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SCITWO_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SCITWO);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SCITWO

#ifndef USER_DEF_raw_event_TIMESTAMP_SCIEIGHT_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCIEIGHT_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SCIEIGHT_WR);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SCIEIGHT_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SCIEIGHT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCIEIGHT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SCIEIGHT_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SCIEIGHT);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SCIEIGHT

#ifndef USER_DEF_raw_event_TIMESTAMP_CALIFA_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_CALIFA_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_CALIFA_WR);
};
#endif//USER_DEF_raw_event_TIMESTAMP_CALIFA_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_CALIFA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_CALIFA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_CALIFA_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_CALIFA);
};
#endif//USER_DEF_raw_event_TIMESTAMP_CALIFA

#ifndef USER_DEF_raw_event_TIMESTAMP_MASTER_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_MASTER_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_MASTER_WR);
};
#endif//USER_DEF_raw_event_TIMESTAMP_MASTER_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_MASTER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_MASTER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_MASTER_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_MASTER);
};
#endif//USER_DEF_raw_event_TIMESTAMP_MASTER

#ifndef USER_DEF_raw_event_TIMESTAMP_SOFIA_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SOFIA_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SOFIA_WR);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SOFIA_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SOFIA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SOFIA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SOFIA_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SOFIA);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SOFIA

#ifndef USER_DEF_raw_event_TIMESTAMP
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(SCITWO);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SCITWO) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SCITWO);
  STRUCT_MIRROR_ITEM_CTRL(SCIEIGHT);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SCIEIGHT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SCIEIGHT);
  STRUCT_MIRROR_ITEM_CTRL(CALIFA);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(CALIFA__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_CALIFA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(CALIFA[2]);
  STRUCT_MIRROR_ITEM_CTRL(MASTER);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_MASTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(MASTER);
  STRUCT_MIRROR_ITEM_CTRL(SOFIA);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SOFIA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFIA);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP);
};
#endif//USER_DEF_raw_event_TIMESTAMP

#ifndef USER_DEF_raw_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event) : public STRUCT_MIRROR_BASE(raw_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(raw_event_base);
  STRUCT_MIRROR_ITEM_CTRL(SCITWO);
  STRUCT_MIRROR_TYPE(raw_event_SCITWO) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SCITWO);
  STRUCT_MIRROR_ITEM_CTRL(SCIEIGHT);
  STRUCT_MIRROR_TYPE(raw_event_SCIEIGHT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SCIEIGHT);
  STRUCT_MIRROR_ITEM_CTRL(NN);
  STRUCT_MIRROR_TYPE(raw_event_NN) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(NN);
  STRUCT_MIRROR_ITEM_CTRL(SAMP);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),512> STRUCT_MIRROR_NAME(SAMP);
  STRUCT_MIRROR_ITEM_CTRL(MUSIC);
  STRUCT_MIRROR_TYPE(raw_event_MUSIC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(MUSIC);
  STRUCT_MIRROR_ITEM_CTRL(SOFSCI);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(SOFSCI__i0,,1);
  STRUCT_MIRROR_TYPE(raw_event_SOFSCI) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFSCI[1]);
  STRUCT_MIRROR_ITEM_CTRL(SOFTWIM);
  STRUCT_MIRROR_TYPE(raw_event_SOFTWIM) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFTWIM);
  STRUCT_MIRROR_ITEM_CTRL(SOFTOFW);
  STRUCT_MIRROR_TYPE(raw_event_SOFTOFW) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFTOFW);
  STRUCT_MIRROR_ITEM_CTRL(SOFMWPC);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(SOFMWPC__i0,,4);
  STRUCT_MIRROR_TYPE(raw_event_SOFMWPC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFMWPC[4]);
  STRUCT_MIRROR_ITEM_CTRL(SOFSCALERS);
  STRUCT_MIRROR_TYPE(raw_event_SOFSCALERS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFSCALERS);
  STRUCT_MIRROR_ITEM_CTRL(CALIFA);
  STRUCT_MIRROR_TYPE(raw_event_CALIFA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(CALIFA);
  STRUCT_MIRROR_ITEM_CTRL(TIMESTAMP);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(TIMESTAMP);
  STRUCT_MIRROR_ITEM_CTRL(TPAT);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),170> STRUCT_MIRROR_NAME(TPAT);
  STRUCT_MIRROR_FCNS_DECL(raw_event);
};
#endif//USER_DEF_raw_event

#ifndef USER_DEF_raw_sticky
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_sticky) : public STRUCT_MIRROR_BASE(raw_sticky_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(raw_sticky_base);
  STRUCT_MIRROR_FCNS_DECL(raw_sticky);
};
#endif//USER_DEF_raw_sticky

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SCITWO);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SCIEIGHT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tcl_T);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tcl);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tfl_T);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tfl);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tct_T);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tct);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tft_T);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tft);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_MUSIC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFSCI);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFTWIM_S);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFTWIM);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFTOFW_P);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFTOFW);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFMWPC_Plane);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFMWPC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFSCALERS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_CALIFA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCITWO_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCITWO);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCIEIGHT_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCIEIGHT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_CALIFA_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_CALIFA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_MASTER_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_MASTER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SOFIA_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SOFIA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_sticky);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_raw_event_SCITWO
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SCITWO)::FCNCALL_NAME(raw_event_SCITWO)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  {
  FCNCALL_SUBNAME("VTF");
  { FCNCALL_CALL_CTRL_WRAP(VTF,VTF.FCNCALL_CALL(VTF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
  {
  FCNCALL_SUBNAME("VTC");
  { FCNCALL_CALL_CTRL_WRAP(VTC,VTC.FCNCALL_CALL(VTC)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SCITWO

#ifndef USER_DEF_raw_event_SCIEIGHT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SCIEIGHT)::FCNCALL_NAME(raw_event_SCIEIGHT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  {
  FCNCALL_SUBNAME("VTF");
  { FCNCALL_CALL_CTRL_WRAP(VTF,VTF.FCNCALL_CALL(VTF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
  {
  FCNCALL_SUBNAME("VTC");
  { FCNCALL_CALL_CTRL_WRAP(VTC,VTC.FCNCALL_CALL(VTC)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SCIEIGHT

#ifndef USER_DEF_raw_event_NN_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_WR)::FCNCALL_NAME(raw_event_NN_WR)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_WR

#ifndef USER_DEF_raw_event_NN_P_tcl_T
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tcl_T)::FCNCALL_NAME(raw_event_NN_P_tcl_T)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
  {
  FCNCALL_SUBNAME("B");
  { FCNCALL_CALL_CTRL_WRAP(B,B.FCNCALL_CALL(B)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tcl_T

#ifndef USER_DEF_raw_event_NN_P_tcl
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tcl)::FCNCALL_NAME(raw_event_NN_P_tcl)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tcl_T T[2];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tcl

#ifndef USER_DEF_raw_event_NN_P_tfl_T
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tfl_T)::FCNCALL_NAME(raw_event_NN_P_tfl_T)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
  {
  FCNCALL_SUBNAME("B");
  { FCNCALL_CALL_CTRL_WRAP(B,B.FCNCALL_CALL(B)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tfl_T

#ifndef USER_DEF_raw_event_NN_P_tfl
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tfl)::FCNCALL_NAME(raw_event_NN_P_tfl)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tfl_T T[2];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tfl

#ifndef USER_DEF_raw_event_NN_P_tct_T
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tct_T)::FCNCALL_NAME(raw_event_NN_P_tct_T)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
  {
  FCNCALL_SUBNAME("B");
  { FCNCALL_CALL_CTRL_WRAP(B,B.FCNCALL_CALL(B)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tct_T

#ifndef USER_DEF_raw_event_NN_P_tct
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tct)::FCNCALL_NAME(raw_event_NN_P_tct)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tct_T T[2];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tct

#ifndef USER_DEF_raw_event_NN_P_tft_T
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tft_T)::FCNCALL_NAME(raw_event_NN_P_tft_T)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
  {
  FCNCALL_SUBNAME("B");
  { FCNCALL_CALL_CTRL_WRAP(B,B.FCNCALL_CALL(B)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tft_T

#ifndef USER_DEF_raw_event_NN_P_tft
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tft)::FCNCALL_NAME(raw_event_NN_P_tft)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tft_T T[2];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tft

#ifndef USER_DEF_raw_event_NN_P
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P)::FCNCALL_NAME(raw_event_NN_P)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tcl tcl;
  {
  FCNCALL_SUBNAME("tcl");
  { FCNCALL_CALL_CTRL_WRAP(tcl,tcl.FCNCALL_CALL(tcl)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN_P_tfl tfl;
  {
  FCNCALL_SUBNAME("tfl");
  { FCNCALL_CALL_CTRL_WRAP(tfl,tfl.FCNCALL_CALL(tfl)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN_P_tct tct;
  {
  FCNCALL_SUBNAME("tct");
  { FCNCALL_CALL_CTRL_WRAP(tct,tct.FCNCALL_CALL(tct)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN_P_tft tft;
  {
  FCNCALL_SUBNAME("tft");
  { FCNCALL_CALL_CTRL_WRAP(tft,tft.FCNCALL_CALL(tft)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P

#ifndef USER_DEF_raw_event_NN
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN)::FCNCALL_NAME(raw_event_NN)
{
  FCNCALL_INIT;
  // raw_event_NN_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN_P P[16];
  {
  FCNCALL_SUBNAME("P");
  FCNCALL_FOR(__i0,16)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(P__i0,,__i0,P[__i0].FCNCALL_CALL(P[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN

#ifndef USER_DEF_raw_event_MUSIC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_MUSIC)::FCNCALL_NAME(raw_event_MUSIC)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,8,100> E;
  {
  FCNCALL_SUBNAME("E");
  { FCNCALL_CALL_CTRL_WRAP(E,E.FCNCALL_CALL(E)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,8,100> T;
  {
  FCNCALL_SUBNAME("T");
  { FCNCALL_CALL_CTRL_WRAP(T,T.FCNCALL_CALL(T)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,100> TREF;
  {
  FCNCALL_SUBNAME("TREF");
  { FCNCALL_CALL_CTRL_WRAP(TREF,TREF.FCNCALL_CALL(TREF)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_MUSIC

#ifndef USER_DEF_raw_event_SOFSCI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFSCI)::FCNCALL_NAME(raw_event_SOFSCI)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,3,10> TF;
  {
  FCNCALL_SUBNAME("TF");
  { FCNCALL_CALL_CTRL_WRAP(TF,TF.FCNCALL_CALL(TF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,3,10> TC;
  {
  FCNCALL_SUBNAME("TC");
  { FCNCALL_CALL_CTRL_WRAP(TC,TC.FCNCALL_CALL(TC)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFSCI

#ifndef USER_DEF_raw_event_SOFTWIM_S
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFTWIM_S)::FCNCALL_NAME(raw_event_SOFTWIM_S)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,16,100> E;
  {
  FCNCALL_SUBNAME("E");
  { FCNCALL_CALL_CTRL_WRAP(E,E.FCNCALL_CALL(E)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,16,100> T;
  {
  FCNCALL_SUBNAME("T");
  { FCNCALL_CALL_CTRL_WRAP(T,T.FCNCALL_CALL(T)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,100> TREF;
  {
  FCNCALL_SUBNAME("TREF");
  { FCNCALL_CALL_CTRL_WRAP(TREF,TREF.FCNCALL_CALL(TREF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,100> TRIG;
  {
  FCNCALL_SUBNAME("TRIG");
  { FCNCALL_CALL_CTRL_WRAP(TRIG,TRIG.FCNCALL_CALL(TRIG)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFTWIM_S

#ifndef USER_DEF_raw_event_SOFTWIM
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFTWIM)::FCNCALL_NAME(raw_event_SOFTWIM)
{
  FCNCALL_INIT;
  // raw_event_SOFTWIM_S S[1];
  {
  FCNCALL_SUBNAME("S");
  FCNCALL_FOR(__i0,1)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(S__i0,,__i0,S[__i0].FCNCALL_CALL(S[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFTWIM

#ifndef USER_DEF_raw_event_SOFTOFW_P
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFTOFW_P)::FCNCALL_NAME(raw_event_SOFTOFW_P)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,2,10> TF;
  {
  FCNCALL_SUBNAME("TF");
  { FCNCALL_CALL_CTRL_WRAP(TF,TF.FCNCALL_CALL(TF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,2,10> TC;
  {
  FCNCALL_SUBNAME("TC");
  { FCNCALL_CALL_CTRL_WRAP(TC,TC.FCNCALL_CALL(TC)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA14 E[2];
  {
  FCNCALL_SUBNAME("E");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(E__i0,,__i0,E[__i0].FCNCALL_CALL(E[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFTOFW_P

#ifndef USER_DEF_raw_event_SOFTOFW
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFTOFW)::FCNCALL_NAME(raw_event_SOFTOFW)
{
  FCNCALL_INIT;
  // raw_event_SOFTOFW_P P[28];
  {
  FCNCALL_SUBNAME("P");
  FCNCALL_FOR(__i0,28)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(P__i0,,__i0,P[__i0].FCNCALL_CALL(P[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFTOFW

#ifndef USER_DEF_raw_event_SOFMWPC_Plane
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFMWPC_Plane)::FCNCALL_NAME(raw_event_SOFMWPC_Plane)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12,DATA12,288> Q;
  {
  FCNCALL_SUBNAME("Q");
  { FCNCALL_CALL_CTRL_WRAP(Q,Q.FCNCALL_CALL(Q)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFMWPC_Plane

#ifndef USER_DEF_raw_event_SOFMWPC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFMWPC)::FCNCALL_NAME(raw_event_SOFMWPC)
{
  FCNCALL_INIT;
  // raw_event_SOFMWPC_Plane Plane[3];
  {
  FCNCALL_SUBNAME("Plane");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(Plane__i0,,__i0,Plane[__i0].FCNCALL_CALL(Plane[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFMWPC

#ifndef USER_DEF_raw_event_SOFSCALERS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFSCALERS)::FCNCALL_NAME(raw_event_SOFSCALERS)
{
  FCNCALL_INIT;
  // DATA32 UPSTREAM[7];
  {
  FCNCALL_SUBNAME("UPSTREAM");
  FCNCALL_FOR(__i0,7)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(UPSTREAM__i0,,__i0,UPSTREAM[__i0].FCNCALL_CALL(UPSTREAM[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 TOFW[56];
  {
  FCNCALL_SUBNAME("TOFW");
  FCNCALL_FOR(__i0,56)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(TOFW__i0,,__i0,TOFW[__i0].FCNCALL_CALL(TOFW[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFSCALERS

#ifndef USER_DEF_raw_event_CALIFA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_CALIFA)::FCNCALL_NAME(raw_event_CALIFA)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA16,DATA16,4861> ENE;
  {
  FCNCALL_SUBNAME("ENE");
  { FCNCALL_CALL_CTRL_WRAP(ENE,ENE.FCNCALL_CALL(ENE)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,4861> TOT;
  {
  FCNCALL_SUBNAME("TOT");
  { FCNCALL_CALL_CTRL_WRAP(TOT,TOT.FCNCALL_CALL(TOT)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,4861> TSLSB;
  {
  FCNCALL_SUBNAME("TSLSB");
  { FCNCALL_CALL_CTRL_WRAP(TSLSB,TSLSB.FCNCALL_CALL(TSLSB)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,4861> TSMSB;
  {
  FCNCALL_SUBNAME("TSMSB");
  { FCNCALL_CALL_CTRL_WRAP(TSMSB,TSMSB.FCNCALL_CALL(TSMSB)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,4861> NF;
  {
  FCNCALL_SUBNAME("NF");
  { FCNCALL_CALL_CTRL_WRAP(NF,NF.FCNCALL_CALL(NF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,4861> NS;
  {
  FCNCALL_SUBNAME("NS");
  { FCNCALL_CALL_CTRL_WRAP(NS,NS.FCNCALL_CALL(NS)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_CALIFA

#ifndef USER_DEF_raw_event_TIMESTAMP_SCITWO_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SCITWO_WR)::FCNCALL_NAME(raw_event_TIMESTAMP_SCITWO_WR)
{
  FCNCALL_INIT;
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SCITWO_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SCITWO
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SCITWO)::FCNCALL_NAME(raw_event_TIMESTAMP_SCITWO)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_SCITWO_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SCITWO

#ifndef USER_DEF_raw_event_TIMESTAMP_SCIEIGHT_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SCIEIGHT_WR)::FCNCALL_NAME(raw_event_TIMESTAMP_SCIEIGHT_WR)
{
  FCNCALL_INIT;
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SCIEIGHT_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SCIEIGHT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SCIEIGHT)::FCNCALL_NAME(raw_event_TIMESTAMP_SCIEIGHT)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_SCIEIGHT_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SCIEIGHT

#ifndef USER_DEF_raw_event_TIMESTAMP_CALIFA_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_CALIFA_WR)::FCNCALL_NAME(raw_event_TIMESTAMP_CALIFA_WR)
{
  FCNCALL_INIT;
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_CALIFA_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_CALIFA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_CALIFA)::FCNCALL_NAME(raw_event_TIMESTAMP_CALIFA)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_CALIFA_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_CALIFA

#ifndef USER_DEF_raw_event_TIMESTAMP_MASTER_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_MASTER_WR)::FCNCALL_NAME(raw_event_TIMESTAMP_MASTER_WR)
{
  FCNCALL_INIT;
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_MASTER_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_MASTER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_MASTER)::FCNCALL_NAME(raw_event_TIMESTAMP_MASTER)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_MASTER_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_MASTER

#ifndef USER_DEF_raw_event_TIMESTAMP_SOFIA_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SOFIA_WR)::FCNCALL_NAME(raw_event_TIMESTAMP_SOFIA_WR)
{
  FCNCALL_INIT;
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SOFIA_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SOFIA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SOFIA)::FCNCALL_NAME(raw_event_TIMESTAMP_SOFIA)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_SOFIA_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SOFIA

#ifndef USER_DEF_raw_event_TIMESTAMP
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP)::FCNCALL_NAME(raw_event_TIMESTAMP)
{
  FCNCALL_INIT;
  // raw_event_TIMESTAMP_SCITWO SCITWO;
  {
  FCNCALL_SUBNAME("SCITWO");
  { FCNCALL_CALL_CTRL_WRAP(SCITWO,SCITWO.FCNCALL_CALL(SCITWO)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_SCIEIGHT SCIEIGHT;
  {
  FCNCALL_SUBNAME("SCIEIGHT");
  { FCNCALL_CALL_CTRL_WRAP(SCIEIGHT,SCIEIGHT.FCNCALL_CALL(SCIEIGHT)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_CALIFA CALIFA[2];
  {
  FCNCALL_SUBNAME("CALIFA");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(CALIFA__i0,,__i0,CALIFA[__i0].FCNCALL_CALL(CALIFA[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_MASTER MASTER;
  {
  FCNCALL_SUBNAME("MASTER");
  { FCNCALL_CALL_CTRL_WRAP(MASTER,MASTER.FCNCALL_CALL(MASTER)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_SOFIA SOFIA;
  {
  FCNCALL_SUBNAME("SOFIA");
  { FCNCALL_CALL_CTRL_WRAP(SOFIA,SOFIA.FCNCALL_CALL(SOFIA)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP

#ifndef USER_DEF_raw_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event)::FCNCALL_NAME(raw_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(raw_event_base,FCNCALL_CLASS_NAME(raw_event_base)::FCNCALL_CALL_BASE());
  // raw_event_SCITWO SCITWO;
  {
  FCNCALL_SUBNAME("SCITWO");
  { FCNCALL_CALL_CTRL_WRAP(SCITWO,SCITWO.FCNCALL_CALL(SCITWO)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SCIEIGHT SCIEIGHT;
  {
  FCNCALL_SUBNAME("SCIEIGHT");
  { FCNCALL_CALL_CTRL_WRAP(SCIEIGHT,SCIEIGHT.FCNCALL_CALL(SCIEIGHT)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN NN;
  {
  FCNCALL_SUBNAME("NN");
  { FCNCALL_CALL_CTRL_WRAP(NN,NN.FCNCALL_CALL(NN)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,512> SAMP;
  {
  FCNCALL_SUBNAME("SAMP");
  { FCNCALL_CALL_CTRL_WRAP(SAMP,SAMP.FCNCALL_CALL(SAMP)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_MUSIC MUSIC;
  {
  FCNCALL_SUBNAME("MUSIC");
  { FCNCALL_CALL_CTRL_WRAP(MUSIC,MUSIC.FCNCALL_CALL(MUSIC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SOFSCI SOFSCI[1];
  {
  FCNCALL_SUBNAME("SOFSCI");
  FCNCALL_FOR(__i0,1)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(SOFSCI__i0,,__i0,SOFSCI[__i0].FCNCALL_CALL(SOFSCI[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SOFTWIM SOFTWIM;
  {
  FCNCALL_SUBNAME("SOFTWIM");
  { FCNCALL_CALL_CTRL_WRAP(SOFTWIM,SOFTWIM.FCNCALL_CALL(SOFTWIM)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SOFTOFW SOFTOFW;
  {
  FCNCALL_SUBNAME("SOFTOFW");
  { FCNCALL_CALL_CTRL_WRAP(SOFTOFW,SOFTOFW.FCNCALL_CALL(SOFTOFW)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SOFMWPC SOFMWPC[4];
  {
  FCNCALL_SUBNAME("SOFMWPC");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(SOFMWPC__i0,,__i0,SOFMWPC[__i0].FCNCALL_CALL(SOFMWPC[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SOFSCALERS SOFSCALERS;
  {
  FCNCALL_SUBNAME("SOFSCALERS");
  { FCNCALL_CALL_CTRL_WRAP(SOFSCALERS,SOFSCALERS.FCNCALL_CALL(SOFSCALERS)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_CALIFA CALIFA;
  {
  FCNCALL_SUBNAME("CALIFA");
  { FCNCALL_CALL_CTRL_WRAP(CALIFA,CALIFA.FCNCALL_CALL(CALIFA)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP TIMESTAMP;
  {
  FCNCALL_SUBNAME("TIMESTAMP");
  { FCNCALL_CALL_CTRL_WRAP(TIMESTAMP,TIMESTAMP.FCNCALL_CALL(TIMESTAMP)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA16,DATA16,170> TPAT;
  {
  FCNCALL_SUBNAME("TPAT");
  { FCNCALL_CALL_CTRL_WRAP(TPAT,TPAT.FCNCALL_CALL(TPAT)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event

#ifndef USER_DEF_raw_sticky
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_sticky)::FCNCALL_NAME(raw_sticky)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(raw_sticky_base,FCNCALL_CLASS_NAME(raw_sticky_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_raw_sticky

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: raw_event_SCITWO
// raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
// raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
// DATA12 .VTF[8][32]
// DATA16 .VTC[8][32]
// 
// size= 1  chunks=512  mem= 512  line=1024  total=524288
// size=32  chunks= 16  mem= 512  line=528  total=270336
// size=256  chunks=  2  mem= 512  line=514  total=263168
// size=512  chunks=  1  mem= 512  line=513  total=262656
// 
// corr structure: raw_event_SCITWO
  // DATA12 .VTF[8][32]
  // DATA16 .VTC[8][32]
// .raw_event_SCITWO/512/.VTF/256/[8]/32/[32]
                      // .VTC/256/[8]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SCITWO
// .raw_event_SCITWO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SCITWO
// .raw_event_SCITWO
// Corr struct for: raw_event_SCIEIGHT
// raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
// raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
// DATA12 .VTF[8][32]
// DATA16 .VTC[8][32]
// 
// size= 1  chunks=512  mem= 512  line=1024  total=524288
// size=32  chunks= 16  mem= 512  line=528  total=270336
// size=256  chunks=  2  mem= 512  line=514  total=263168
// size=512  chunks=  1  mem= 512  line=513  total=262656
// 
// corr structure: raw_event_SCIEIGHT
  // DATA12 .VTF[8][32]
  // DATA16 .VTC[8][32]
// .raw_event_SCIEIGHT/512/.VTF/256/[8]/32/[32]
                        // .VTC/256/[8]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SCIEIGHT
// .raw_event_SCIEIGHT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SCIEIGHT
// .raw_event_SCIEIGHT
// Corr struct for: raw_event_NN_WR
// DATA12  .ID
// DATA16  .T[4]
// DATA12 .ID
// DATA16 .T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_NN_WR
  // DATA12 .ID
  // DATA16 .T[4]
// .raw_event_NN_WR/5/.ID
                   // .T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_NN_WR
  // DATA16 .T[4]
// .raw_event_NN_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_WR
// .raw_event_NN_WR
// Corr struct for: raw_event_NN_P_tcl_T
// raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .B[50][200]
// 
// size= 1  chunks=10000  mem=10000  line=20000  total=200000000
// size=200  chunks= 50  mem=10000  line=10050  total=100500000
// size=10000  chunks=  1  mem=10000  line=10001  total=100010000
// 
// corr structure: raw_event_NN_P_tcl_T
  // DATA12 .B[50][200]
// .raw_event_NN_P_tcl_T/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tcl_T
// .raw_event_NN_P_tcl_T// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tcl_T
// .raw_event_NN_P_tcl_T
// Corr struct for: raw_event_NN_P_tcl
// raw_event_NN_P_tcl_T  .T[2]
  // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .T[2].B[50][200]
// 
// size= 1  chunks=20000  mem=20000  line=40000  total=800000000
// size=200  chunks=100  mem=20000  line=20100  total=402000000
// size=10000  chunks=  2  mem=20000  line=20002  total=400040000
// size=20000  chunks=  1  mem=20000  line=20001  total=400020000
// 
// corr structure: raw_event_NN_P_tcl
  // DATA12 .T[2].B[50][200]
// .raw_event_NN_P_tcl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tcl
// .raw_event_NN_P_tcl// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tcl
// .raw_event_NN_P_tcl
// Corr struct for: raw_event_NN_P_tfl_T
// raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .B[50][200]
// 
// size= 1  chunks=10000  mem=10000  line=20000  total=200000000
// size=200  chunks= 50  mem=10000  line=10050  total=100500000
// size=10000  chunks=  1  mem=10000  line=10001  total=100010000
// 
// corr structure: raw_event_NN_P_tfl_T
  // DATA12 .B[50][200]
// .raw_event_NN_P_tfl_T/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tfl_T
// .raw_event_NN_P_tfl_T// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tfl_T
// .raw_event_NN_P_tfl_T
// Corr struct for: raw_event_NN_P_tfl
// raw_event_NN_P_tfl_T  .T[2]
  // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .T[2].B[50][200]
// 
// size= 1  chunks=20000  mem=20000  line=40000  total=800000000
// size=200  chunks=100  mem=20000  line=20100  total=402000000
// size=10000  chunks=  2  mem=20000  line=20002  total=400040000
// size=20000  chunks=  1  mem=20000  line=20001  total=400020000
// 
// corr structure: raw_event_NN_P_tfl
  // DATA12 .T[2].B[50][200]
// .raw_event_NN_P_tfl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tfl
// .raw_event_NN_P_tfl// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tfl
// .raw_event_NN_P_tfl
// Corr struct for: raw_event_NN_P_tct_T
// raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .B[50][200]
// 
// size= 1  chunks=10000  mem=10000  line=20000  total=200000000
// size=200  chunks= 50  mem=10000  line=10050  total=100500000
// size=10000  chunks=  1  mem=10000  line=10001  total=100010000
// 
// corr structure: raw_event_NN_P_tct_T
  // DATA12 .B[50][200]
// .raw_event_NN_P_tct_T/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tct_T
// .raw_event_NN_P_tct_T// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tct_T
// .raw_event_NN_P_tct_T
// Corr struct for: raw_event_NN_P_tct
// raw_event_NN_P_tct_T  .T[2]
  // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .T[2].B[50][200]
// 
// size= 1  chunks=20000  mem=20000  line=40000  total=800000000
// size=200  chunks=100  mem=20000  line=20100  total=402000000
// size=10000  chunks=  2  mem=20000  line=20002  total=400040000
// size=20000  chunks=  1  mem=20000  line=20001  total=400020000
// 
// corr structure: raw_event_NN_P_tct
  // DATA12 .T[2].B[50][200]
// .raw_event_NN_P_tct/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tct
// .raw_event_NN_P_tct// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tct
// .raw_event_NN_P_tct
// Corr struct for: raw_event_NN_P_tft_T
// raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .B[50][200]
// 
// size= 1  chunks=10000  mem=10000  line=20000  total=200000000
// size=200  chunks= 50  mem=10000  line=10050  total=100500000
// size=10000  chunks=  1  mem=10000  line=10001  total=100010000
// 
// corr structure: raw_event_NN_P_tft_T
  // DATA12 .B[50][200]
// .raw_event_NN_P_tft_T/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tft_T
// .raw_event_NN_P_tft_T// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tft_T
// .raw_event_NN_P_tft_T
// Corr struct for: raw_event_NN_P_tft
// raw_event_NN_P_tft_T  .T[2]
  // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .T[2].B[50][200]
// 
// size= 1  chunks=20000  mem=20000  line=40000  total=800000000
// size=200  chunks=100  mem=20000  line=20100  total=402000000
// size=10000  chunks=  2  mem=20000  line=20002  total=400040000
// size=20000  chunks=  1  mem=20000  line=20001  total=400020000
// 
// corr structure: raw_event_NN_P_tft
  // DATA12 .T[2].B[50][200]
// .raw_event_NN_P_tft/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tft
// .raw_event_NN_P_tft// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tft
// .raw_event_NN_P_tft
// Corr struct for: raw_event_NN_P
// raw_event_NN_P_tcl  .tcl
  // raw_event_NN_P_tcl_T  .T[2]
    // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// raw_event_NN_P_tfl  .tfl
  // raw_event_NN_P_tfl_T  .T[2]
    // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// raw_event_NN_P_tct  .tct
  // raw_event_NN_P_tct_T  .T[2]
    // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// raw_event_NN_P_tft  .tft
  // raw_event_NN_P_tft_T  .T[2]
    // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .tcl.T[2].B[50][200]
// DATA12 .tfl.T[2].B[50][200]
// DATA12 .tct.T[2].B[50][200]
// DATA12 .tft.T[2].B[50][200]
// 
// size= 1  chunks=80000  mem=80000  line=160000  total=-84901888
// size=200  chunks=400  mem=80000  line=80400  total=2137032704
// size=10000  chunks=  8  mem=80000  line=80008  total=2105672704
// size=20000  chunks=  4  mem=80000  line=80004  total=2105352704
// size=80000  chunks=  1  mem=80000  line=80001  total=2105112704
// 
// corr structure: raw_event_NN_P
  // DATA12 .tcl.T[2].B[50][200]
  // DATA12 .tfl.T[2].B[50][200]
  // DATA12 .tct.T[2].B[50][200]
  // DATA12 .tft.T[2].B[50][200]
// .raw_event_NN_P/80000/.tcl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                      // .tfl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                      // .tct/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                      // .tft/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P
// .raw_event_NN_P// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P
// .raw_event_NN_P
// Corr struct for: raw_event_NN
// raw_event_NN_WR  .WR
  // DATA12  .ID
  // DATA16  .T[4]
// raw_event_NN_P  .P[16]
  // raw_event_NN_P_tcl  .tcl
    // raw_event_NN_P_tcl_T  .T[2]
      // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
  // raw_event_NN_P_tfl  .tfl
    // raw_event_NN_P_tfl_T  .T[2]
      // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
  // raw_event_NN_P_tct  .tct
    // raw_event_NN_P_tct_T  .T[2]
      // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
  // raw_event_NN_P_tft  .tft
    // raw_event_NN_P_tft_T  .T[2]
      // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .WR.ID
// DATA16 .WR.T[4]
// DATA12 .P[16].tcl.T[2].B[50][200]
// DATA12 .P[16].tfl.T[2].B[50][200]
// DATA12 .P[16].tct.T[2].B[50][200]
// DATA12 .P[16].tft.T[2].B[50][200]
// 
// size= 1  chunks=1280005  mem=1280005  line=2560010  total=-234446798
// size= 4  chunks=1280002  mem=5120008  line=6400010  total=1542166578
// size= 5  chunks=1280001  mem=6400005  line=7680006  total=-734060514
// size=200  chunks=6401  mem=1280200  line=1286601  total=1883238637
// size=10000  chunks=129  mem=1290000  line=1290129  total=2104128981
// size=20000  chunks= 65  mem=1300000  line=1300065  total=1937356773
// size=80000  chunks= 17  mem=1360000  line=1360017  total=1366805205
// size=1280000  chunks=  2  mem=2560000  line=2560002  total=-244686838
// size=1280005  chunks=  1  mem=1280005  line=1280006  total=2031540254
// 
// corr structure: raw_event_NN
  // DATA12 .WR.ID
  // DATA16 .WR.T[4]
  // DATA12 .P[16].tcl.T[2].B[50][200]
  // DATA12 .P[16].tfl.T[2].B[50][200]
  // DATA12 .P[16].tct.T[2].B[50][200]
  // DATA12 .P[16].tft.T[2].B[50][200]
// .raw_event_NN/1280005/.WR/5/.ID
                            // .T/4/[4]
                      // .P/1280000/[16]/80000/.tcl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                            // .tfl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                            // .tct/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                            // .tft/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_NN
  // DATA16 .WR.T[4]
// .raw_event_NN/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN
// .raw_event_NN
// Corr struct for: raw_event_MUSIC
// raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[8][100]
// raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[8][100]
// raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][100]
// DATA16_OVERFLOW .E[8][100]
// DATA16_OVERFLOW .T[8][100]
// DATA16_OVERFLOW .TREF[2][100]
// 
// size= 1  chunks=1800  mem=1800  line=3600  total=6480000
// size=100  chunks= 18  mem=1800  line=1818  total=3272400
// size=200  chunks= 17  mem=3400  line=3417  total=6150600
// size=800  chunks=  3  mem=2400  line=2403  total=4325400
// size=1800  chunks=  1  mem=1800  line=1801  total=3241800
// 
// corr structure: raw_event_MUSIC
  // DATA16_OVERFLOW .E[8][100]
  // DATA16_OVERFLOW .T[8][100]
  // DATA16_OVERFLOW .TREF[2][100]
// .raw_event_MUSIC/1800/.E/800/[8]/100/[100]
                      // .T/800/[8]/100/[100]
                      // .TREF/200/[2]/100/[100]// 
// size= 1  chunks=800  mem= 800  line=1600  total=1280000
// size=100  chunks=  8  mem= 800  line=808  total=646400
// size=800  chunks=  1  mem= 800  line=801  total=640800
// 
// corr structure: raw_event_MUSIC
  // DATA16_OVERFLOW .T[8][100]
// .raw_event_MUSIC/800/.T/800/[8]/100/[100]// 
// size= 1  chunks=800  mem= 800  line=1600  total=1280000
// size=100  chunks=  8  mem= 800  line=808  total=646400
// size=800  chunks=  1  mem= 800  line=801  total=640800
// 
// corr structure: raw_event_MUSIC
  // DATA16_OVERFLOW .E[8][100]
// .raw_event_MUSIC/800/.E/800/[8]/100/[100]
// Corr struct for: raw_event_SOFSCI
// raw_array_multi_zero_suppress  .TF(DATA12)[3][10]
// raw_array_multi_zero_suppress  .TC(DATA16)[3][10]
// DATA12 .TF[3][10]
// DATA16 .TC[3][10]
// 
// size= 1  chunks= 60  mem=  60  line=120  total=7200
// size=10  chunks=  6  mem=  60  line=66  total=3960
// size=30  chunks=  2  mem=  60  line=62  total=3720
// size=60  chunks=  1  mem=  60  line=61  total=3660
// 
// corr structure: raw_event_SOFSCI
  // DATA12 .TF[3][10]
  // DATA16 .TC[3][10]
// .raw_event_SOFSCI/60/.TF/30/[3]/10/[10]
                     // .TC/30/[3]/10/[10]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFSCI
// .raw_event_SOFSCI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFSCI
// .raw_event_SOFSCI
// Corr struct for: raw_event_SOFTWIM_S
// raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[16][100]
// raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[16][100]
// raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][100]
// raw_array_multi_zero_suppress  .TRIG(DATA16_OVERFLOW)[2][100]
// DATA16_OVERFLOW .E[16][100]
// DATA16_OVERFLOW .T[16][100]
// DATA16_OVERFLOW .TREF[2][100]
// DATA16_OVERFLOW .TRIG[2][100]
// 
// size= 1  chunks=3600  mem=3600  line=7200  total=25920000
// size=100  chunks= 36  mem=3600  line=3636  total=13089600
// size=200  chunks= 34  mem=6800  line=6834  total=24602400
// size=1600  chunks=  4  mem=6400  line=6404  total=23054400
// size=3600  chunks=  1  mem=3600  line=3601  total=12963600
// 
// corr structure: raw_event_SOFTWIM_S
  // DATA16_OVERFLOW .E[16][100]
  // DATA16_OVERFLOW .T[16][100]
  // DATA16_OVERFLOW .TREF[2][100]
  // DATA16_OVERFLOW .TRIG[2][100]
// .raw_event_SOFTWIM_S/3600/.E/1600/[16]/100/[100]
                          // .T/1600/[16]/100/[100]
                          // .TREF/200/[2]/100/[100]
                          // .TRIG/200/[2]/100/[100]// 
// size= 1  chunks=1600  mem=1600  line=3200  total=5120000
// size=100  chunks= 16  mem=1600  line=1616  total=2585600
// size=1600  chunks=  1  mem=1600  line=1601  total=2561600
// 
// corr structure: raw_event_SOFTWIM_S
  // DATA16_OVERFLOW .T[16][100]
// .raw_event_SOFTWIM_S/1600/.T/1600/[16]/100/[100]// 
// size= 1  chunks=1600  mem=1600  line=3200  total=5120000
// size=100  chunks= 16  mem=1600  line=1616  total=2585600
// size=1600  chunks=  1  mem=1600  line=1601  total=2561600
// 
// corr structure: raw_event_SOFTWIM_S
  // DATA16_OVERFLOW .E[16][100]
// .raw_event_SOFTWIM_S/1600/.E/1600/[16]/100/[100]
// Corr struct for: raw_event_SOFTWIM
// raw_event_SOFTWIM_S  .S[1]
  // raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[16][100]
  // raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[16][100]
  // raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][100]
  // raw_array_multi_zero_suppress  .TRIG(DATA16_OVERFLOW)[2][100]
// DATA16_OVERFLOW .S[1].E[16][100]
// DATA16_OVERFLOW .S[1].T[16][100]
// DATA16_OVERFLOW .S[1].TREF[2][100]
// DATA16_OVERFLOW .S[1].TRIG[2][100]
// 
// size= 1  chunks=3600  mem=3600  line=7200  total=25920000
// size=100  chunks= 36  mem=3600  line=3636  total=13089600
// size=200  chunks= 34  mem=6800  line=6834  total=24602400
// size=1600  chunks=  4  mem=6400  line=6404  total=23054400
// size=3600  chunks=  1  mem=3600  line=3601  total=12963600
// 
// corr structure: raw_event_SOFTWIM
  // DATA16_OVERFLOW .S[1].E[16][100]
  // DATA16_OVERFLOW .S[1].T[16][100]
  // DATA16_OVERFLOW .S[1].TREF[2][100]
  // DATA16_OVERFLOW .S[1].TRIG[2][100]
// .raw_event_SOFTWIM/3600/.S/3600/[1]/3600/.E/1600/[16]/100/[100]
                                         // .T/1600/[16]/100/[100]
                                         // .TREF/200/[2]/100/[100]
                                         // .TRIG/200/[2]/100/[100]// 
// size= 1  chunks=1600  mem=1600  line=3200  total=5120000
// size=100  chunks= 16  mem=1600  line=1616  total=2585600
// size=1600  chunks=  1  mem=1600  line=1601  total=2561600
// 
// corr structure: raw_event_SOFTWIM
  // DATA16_OVERFLOW .S[1].T[16][100]
// .raw_event_SOFTWIM/1600/.S/1600/[1]/1600/.T/1600/[16]/100/[100]// 
// size= 1  chunks=1600  mem=1600  line=3200  total=5120000
// size=100  chunks= 16  mem=1600  line=1616  total=2585600
// size=1600  chunks=  1  mem=1600  line=1601  total=2561600
// 
// corr structure: raw_event_SOFTWIM
  // DATA16_OVERFLOW .S[1].E[16][100]
// .raw_event_SOFTWIM/1600/.S/1600/[1]/1600/.E/1600/[16]/100/[100]
// Corr struct for: raw_event_SOFTOFW_P
// raw_array_multi_zero_suppress  .TF(DATA12)[2][10]
// raw_array_multi_zero_suppress  .TC(DATA16)[2][10]
// DATA14  .E[2]
// DATA12 .TF[2][10]
// DATA16 .TC[2][10]
// DATA14 .E[2]
// 
// size= 1  chunks= 42  mem=  42  line=84  total=3528
// size= 2  chunks= 41  mem=  82  line=123  total=5166
// size=10  chunks=  5  mem=  50  line=55  total=2310
// size=20  chunks=  3  mem=  60  line=63  total=2646
// size=42  chunks=  1  mem=  42  line=43  total=1806
// 
// corr structure: raw_event_SOFTOFW_P
  // DATA12 .TF[2][10]
  // DATA16 .TC[2][10]
  // DATA14 .E[2]
// .raw_event_SOFTOFW_P/42/.TF/20/[2]/10/[10]
                        // .TC/20/[2]/10/[10]
                        // .E/2/[2]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFTOFW_P
// .raw_event_SOFTOFW_P// 
// size= 1  chunks=  2  mem=   2  line=4  total=8
// size= 2  chunks=  1  mem=   2  line=3  total=6
// 
// corr structure: raw_event_SOFTOFW_P
  // DATA14 .E[2]
// .raw_event_SOFTOFW_P/2/.E/2/[2]
// Corr struct for: raw_event_SOFTOFW
// raw_event_SOFTOFW_P  .P[28]
  // raw_array_multi_zero_suppress  .TF(DATA12)[2][10]
  // raw_array_multi_zero_suppress  .TC(DATA16)[2][10]
  // DATA14  .E[2]
// DATA12 .P[28].TF[2][10]
// DATA16 .P[28].TC[2][10]
// DATA14 .P[28].E[2]
// 
// size= 1  chunks=1176  mem=1176  line=2352  total=2765952
// size= 2  chunks=1148  mem=2296  line=3444  total=4050144
// size=10  chunks=140  mem=1400  line=1540  total=1811040
// size=20  chunks= 84  mem=1680  line=1764  total=2074464
// size=42  chunks= 28  mem=1176  line=1204  total=1415904
// size=1176  chunks=  1  mem=1176  line=1177  total=1384152
// 
// corr structure: raw_event_SOFTOFW
  // DATA12 .P[28].TF[2][10]
  // DATA16 .P[28].TC[2][10]
  // DATA14 .P[28].E[2]
// .raw_event_SOFTOFW/1176/.P/1176/[28]/42/.TF/20/[2]/10/[10]
                                        // .TC/20/[2]/10/[10]
                                        // .E/2/[2]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFTOFW
// .raw_event_SOFTOFW// 
// size= 1  chunks= 56  mem=  56  line=112  total=6272
// size= 2  chunks= 28  mem=  56  line=84  total=4704
// size=56  chunks=  1  mem=  56  line=57  total=3192
// 
// corr structure: raw_event_SOFTOFW
  // DATA14 .P[28].E[2]
// .raw_event_SOFTOFW/56/.P/56/[28]/2/.E/2/[2]
// Corr struct for: raw_event_SOFMWPC_Plane
// raw_array_zero_suppress  .Q(DATA12)[288]
// DATA12 .Q[288]
// 
// size= 1  chunks=288  mem= 288  line=576  total=165888
// size=288  chunks=  1  mem= 288  line=289  total=83232
// 
// corr structure: raw_event_SOFMWPC_Plane
  // DATA12 .Q[288]
// .raw_event_SOFMWPC_Plane/288/.Q/288/[288]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFMWPC_Plane
// .raw_event_SOFMWPC_Plane// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFMWPC_Plane
// .raw_event_SOFMWPC_Plane
// Corr struct for: raw_event_SOFMWPC
// raw_event_SOFMWPC_Plane  .Plane[3]
  // raw_array_zero_suppress  .Q(DATA12)[288]
// DATA12 .Plane[3].Q[288]
// 
// size= 1  chunks=864  mem= 864  line=1728  total=1492992
// size=288  chunks=  3  mem= 864  line=867  total=749088
// size=864  chunks=  1  mem= 864  line=865  total=747360
// 
// corr structure: raw_event_SOFMWPC
  // DATA12 .Plane[3].Q[288]
// .raw_event_SOFMWPC/864/.Plane/864/[3]/288/.Q/288/[288]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFMWPC
// .raw_event_SOFMWPC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFMWPC
// .raw_event_SOFMWPC
// Corr struct for: raw_event_SOFSCALERS
// DATA32  .UPSTREAM[7]
  // ---
// DATA32  .TOFW[56]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFSCALERS
// .raw_event_SOFSCALERS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFSCALERS
// .raw_event_SOFSCALERS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFSCALERS
// .raw_event_SOFSCALERS
// Corr struct for: raw_event_CALIFA
// raw_array_zero_suppress  .ENE(DATA16)[4861]
// raw_array_zero_suppress  .TOT(DATA16)[4861]
// raw_array_zero_suppress  .TSLSB(DATA32)[4861]
  // ---
// raw_array_zero_suppress  .TSMSB(DATA32)[4861]
  // ---
// raw_array_zero_suppress  .NF(DATA16)[4861]
// raw_array_zero_suppress  .NS(DATA16)[4861]
// DATA16 .ENE[4861]
// DATA16 .TOT[4861]
// DATA16 .NF[4861]
// DATA16 .NS[4861]
// 
// size= 1  chunks=19444  mem=19444  line=38888  total=756138272
// size=4861  chunks=  4  mem=19444  line=19448  total=378146912
// size=19444  chunks=  1  mem=19444  line=19445  total=378088580
// 
// corr structure: raw_event_CALIFA
  // DATA16 .ENE[4861]
  // DATA16 .TOT[4861]
  // DATA16 .NF[4861]
  // DATA16 .NS[4861]
// .raw_event_CALIFA/19444/.ENE/4861/[4861]
                        // .TOT/4861/[4861]
                        // .NF/4861/[4861]
                        // .NS/4861/[4861]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_CALIFA
// .raw_event_CALIFA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_CALIFA
// .raw_event_CALIFA
// Corr struct for: raw_event_TIMESTAMP_SCITWO_WR
// DATA16  .T[4]
// DATA16 .T[4]
// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCITWO_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SCITWO_WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCITWO_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SCITWO_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SCITWO_WR
// .raw_event_TIMESTAMP_SCITWO_WR
// Corr struct for: raw_event_TIMESTAMP_SCITWO
// DATA12  .ID
// raw_event_TIMESTAMP_SCITWO_WR  .WR
  // DATA16  .T[4]
// DATA12 .ID
// DATA16 .WR.T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_TIMESTAMP_SCITWO
  // DATA12 .ID
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SCITWO/5/.ID
                              // .WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCITWO
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SCITWO/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SCITWO
// .raw_event_TIMESTAMP_SCITWO
// Corr struct for: raw_event_TIMESTAMP_SCIEIGHT_WR
// DATA16  .T[4]
// DATA16 .T[4]
// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SCIEIGHT_WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SCIEIGHT_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT_WR
// .raw_event_TIMESTAMP_SCIEIGHT_WR
// Corr struct for: raw_event_TIMESTAMP_SCIEIGHT
// DATA12  .ID
// raw_event_TIMESTAMP_SCIEIGHT_WR  .WR
  // DATA16  .T[4]
// DATA12 .ID
// DATA16 .WR.T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT
  // DATA12 .ID
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SCIEIGHT/5/.ID
                                // .WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SCIEIGHT/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT
// .raw_event_TIMESTAMP_SCIEIGHT
// Corr struct for: raw_event_TIMESTAMP_CALIFA_WR
// DATA16  .T[4]
// DATA16 .T[4]
// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_CALIFA_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_CALIFA_WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_CALIFA_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_CALIFA_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_CALIFA_WR
// .raw_event_TIMESTAMP_CALIFA_WR
// Corr struct for: raw_event_TIMESTAMP_CALIFA
// DATA12  .ID
// raw_event_TIMESTAMP_CALIFA_WR  .WR
  // DATA16  .T[4]
// DATA12 .ID
// DATA16 .WR.T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_TIMESTAMP_CALIFA
  // DATA12 .ID
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_CALIFA/5/.ID
                              // .WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_CALIFA
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_CALIFA/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_CALIFA
// .raw_event_TIMESTAMP_CALIFA
// Corr struct for: raw_event_TIMESTAMP_MASTER_WR
// DATA16  .T[4]
// DATA16 .T[4]
// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_MASTER_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_MASTER_WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_MASTER_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_MASTER_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_MASTER_WR
// .raw_event_TIMESTAMP_MASTER_WR
// Corr struct for: raw_event_TIMESTAMP_MASTER
// DATA12  .ID
// raw_event_TIMESTAMP_MASTER_WR  .WR
  // DATA16  .T[4]
// DATA12 .ID
// DATA16 .WR.T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_TIMESTAMP_MASTER
  // DATA12 .ID
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_MASTER/5/.ID
                              // .WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_MASTER
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_MASTER/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_MASTER
// .raw_event_TIMESTAMP_MASTER
// Corr struct for: raw_event_TIMESTAMP_SOFIA_WR
// DATA16  .T[4]
// DATA16 .T[4]
// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SOFIA_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SOFIA_WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SOFIA_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SOFIA_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SOFIA_WR
// .raw_event_TIMESTAMP_SOFIA_WR
// Corr struct for: raw_event_TIMESTAMP_SOFIA
// DATA12  .ID
// raw_event_TIMESTAMP_SOFIA_WR  .WR
  // DATA16  .T[4]
// DATA12 .ID
// DATA16 .WR.T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_TIMESTAMP_SOFIA
  // DATA12 .ID
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SOFIA/5/.ID
                             // .WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SOFIA
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SOFIA/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SOFIA
// .raw_event_TIMESTAMP_SOFIA
// Corr struct for: raw_event_TIMESTAMP
// raw_event_TIMESTAMP_SCITWO  .SCITWO
  // DATA12  .ID
  // raw_event_TIMESTAMP_SCITWO_WR  .WR
    // DATA16  .T[4]
// raw_event_TIMESTAMP_SCIEIGHT  .SCIEIGHT
  // DATA12  .ID
  // raw_event_TIMESTAMP_SCIEIGHT_WR  .WR
    // DATA16  .T[4]
// raw_event_TIMESTAMP_CALIFA  .CALIFA[2]
  // DATA12  .ID
  // raw_event_TIMESTAMP_CALIFA_WR  .WR
    // DATA16  .T[4]
// raw_event_TIMESTAMP_MASTER  .MASTER
  // DATA12  .ID
  // raw_event_TIMESTAMP_MASTER_WR  .WR
    // DATA16  .T[4]
// raw_event_TIMESTAMP_SOFIA  .SOFIA
  // DATA12  .ID
  // raw_event_TIMESTAMP_SOFIA_WR  .WR
    // DATA16  .T[4]
// DATA12 .SCITWO.ID
// DATA16 .SCITWO.WR.T[4]
// DATA12 .SCIEIGHT.ID
// DATA16 .SCIEIGHT.WR.T[4]
// DATA12 .CALIFA[2].ID
// DATA16 .CALIFA[2].WR.T[4]
// DATA12 .MASTER.ID
// DATA16 .MASTER.WR.T[4]
// DATA12 .SOFIA.ID
// DATA16 .SOFIA.WR.T[4]
// 
// size= 1  chunks= 30  mem=  30  line=60  total=1800
// size= 4  chunks= 12  mem=  48  line=60  total=1800
// size= 5  chunks=  6  mem=  30  line=36  total=1080
// size=10  chunks=  5  mem=  50  line=55  total=1650
// size=30  chunks=  1  mem=  30  line=31  total=930
// 
// corr structure: raw_event_TIMESTAMP
  // DATA12 .SCITWO.ID
  // DATA16 .SCITWO.WR.T[4]
  // DATA12 .SCIEIGHT.ID
  // DATA16 .SCIEIGHT.WR.T[4]
  // DATA12 .CALIFA[2].ID
  // DATA16 .CALIFA[2].WR.T[4]
  // DATA12 .MASTER.ID
  // DATA16 .MASTER.WR.T[4]
  // DATA12 .SOFIA.ID
  // DATA16 .SOFIA.WR.T[4]
// .raw_event_TIMESTAMP/30/.SCITWO/5/.ID
                                  // .WR/4/.T/4/[4]
                        // .SCIEIGHT/5/.ID
                                    // .WR/4/.T/4/[4]
                        // .CALIFA/10/[2]/5/.ID
                                         // .WR/4/.T/4/[4]
                        // .MASTER/5/.ID
                                  // .WR/4/.T/4/[4]
                        // .SOFIA/5/.ID
                                 // .WR/4/.T/4/[4]// 
// size= 1  chunks= 24  mem=  24  line=48  total=1152
// size= 4  chunks=  6  mem=  24  line=30  total=720
// size= 8  chunks=  5  mem=  40  line=45  total=1080
// size=24  chunks=  1  mem=  24  line=25  total=600
// 
// corr structure: raw_event_TIMESTAMP
  // DATA16 .SCITWO.WR.T[4]
  // DATA16 .SCIEIGHT.WR.T[4]
  // DATA16 .CALIFA[2].WR.T[4]
  // DATA16 .MASTER.WR.T[4]
  // DATA16 .SOFIA.WR.T[4]
// .raw_event_TIMESTAMP/24/.SCITWO/4/.WR/4/.T/4/[4]
                        // .SCIEIGHT/4/.WR/4/.T/4/[4]
                        // .CALIFA/8/[2]/4/.WR/4/.T/4/[4]
                        // .MASTER/4/.WR/4/.T/4/[4]
                        // .SOFIA/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP
// .raw_event_TIMESTAMP
// Corr struct for: raw_event
//  : public raw_event_base
// ---
// raw_event_SCITWO  .SCITWO
  // raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
  // raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
// raw_event_SCIEIGHT  .SCIEIGHT
  // raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
  // raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
// raw_event_NN  .NN
  // raw_event_NN_WR  .WR
    // DATA12  .ID
    // DATA16  .T[4]
  // raw_event_NN_P  .P[16]
    // raw_event_NN_P_tcl  .tcl
      // raw_event_NN_P_tcl_T  .T[2]
        // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
    // raw_event_NN_P_tfl  .tfl
      // raw_event_NN_P_tfl_T  .T[2]
        // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
    // raw_event_NN_P_tct  .tct
      // raw_event_NN_P_tct_T  .T[2]
        // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
    // raw_event_NN_P_tft  .tft
      // raw_event_NN_P_tft_T  .T[2]
        // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// raw_array_zero_suppress  .SAMP(DATA32)[512]
  // ---
// raw_event_MUSIC  .MUSIC
  // raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[8][100]
  // raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[8][100]
  // raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][100]
// raw_event_SOFSCI  .SOFSCI[1]
  // raw_array_multi_zero_suppress  .TF(DATA12)[3][10]
  // raw_array_multi_zero_suppress  .TC(DATA16)[3][10]
// raw_event_SOFTWIM  .SOFTWIM
  // raw_event_SOFTWIM_S  .S[1]
    // raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[16][100]
    // raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[16][100]
    // raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][100]
    // raw_array_multi_zero_suppress  .TRIG(DATA16_OVERFLOW)[2][100]
// raw_event_SOFTOFW  .SOFTOFW
  // raw_event_SOFTOFW_P  .P[28]
    // raw_array_multi_zero_suppress  .TF(DATA12)[2][10]
    // raw_array_multi_zero_suppress  .TC(DATA16)[2][10]
    // DATA14  .E[2]
// raw_event_SOFMWPC  .SOFMWPC[4]
  // raw_event_SOFMWPC_Plane  .Plane[3]
    // raw_array_zero_suppress  .Q(DATA12)[288]
// raw_event_SOFSCALERS  .SOFSCALERS
  // DATA32  .UPSTREAM[7]
    // ---
  // DATA32  .TOFW[56]
    // ---
// raw_event_CALIFA  .CALIFA
  // raw_array_zero_suppress  .ENE(DATA16)[4861]
  // raw_array_zero_suppress  .TOT(DATA16)[4861]
  // raw_array_zero_suppress  .TSLSB(DATA32)[4861]
    // ---
  // raw_array_zero_suppress  .TSMSB(DATA32)[4861]
    // ---
  // raw_array_zero_suppress  .NF(DATA16)[4861]
  // raw_array_zero_suppress  .NS(DATA16)[4861]
// raw_event_TIMESTAMP  .TIMESTAMP
  // raw_event_TIMESTAMP_SCITWO  .SCITWO
    // DATA12  .ID
    // raw_event_TIMESTAMP_SCITWO_WR  .WR
      // DATA16  .T[4]
  // raw_event_TIMESTAMP_SCIEIGHT  .SCIEIGHT
    // DATA12  .ID
    // raw_event_TIMESTAMP_SCIEIGHT_WR  .WR
      // DATA16  .T[4]
  // raw_event_TIMESTAMP_CALIFA  .CALIFA[2]
    // DATA12  .ID
    // raw_event_TIMESTAMP_CALIFA_WR  .WR
      // DATA16  .T[4]
  // raw_event_TIMESTAMP_MASTER  .MASTER
    // DATA12  .ID
    // raw_event_TIMESTAMP_MASTER_WR  .WR
      // DATA16  .T[4]
  // raw_event_TIMESTAMP_SOFIA  .SOFIA
    // DATA12  .ID
    // raw_event_TIMESTAMP_SOFIA_WR  .WR
      // DATA16  .T[4]
// raw_list_ii_zero_suppress  .TPAT(DATA16)[170]
// DATA12 .SCITWO.VTF[8][32]
// DATA16 .SCITWO.VTC[8][32]
// DATA12 .SCIEIGHT.VTF[8][32]
// DATA16 .SCIEIGHT.VTC[8][32]
// DATA12 .NN.WR.ID
// DATA16 .NN.WR.T[4]
// DATA12 .NN.P[16].tcl.T[2].B[50][200]
// DATA12 .NN.P[16].tfl.T[2].B[50][200]
// DATA12 .NN.P[16].tct.T[2].B[50][200]
// DATA12 .NN.P[16].tft.T[2].B[50][200]
// DATA16_OVERFLOW .MUSIC.E[8][100]
// DATA16_OVERFLOW .MUSIC.T[8][100]
// DATA16_OVERFLOW .MUSIC.TREF[2][100]
// DATA12 .SOFSCI[1].TF[3][10]
// DATA16 .SOFSCI[1].TC[3][10]
// DATA16_OVERFLOW .SOFTWIM.S[1].E[16][100]
// DATA16_OVERFLOW .SOFTWIM.S[1].T[16][100]
// DATA16_OVERFLOW .SOFTWIM.S[1].TREF[2][100]
// DATA16_OVERFLOW .SOFTWIM.S[1].TRIG[2][100]
// DATA12 .SOFTOFW.P[28].TF[2][10]
// DATA16 .SOFTOFW.P[28].TC[2][10]
// DATA14 .SOFTOFW.P[28].E[2]
// DATA12 .SOFMWPC[4].Plane[3].Q[288]
// DATA16 .CALIFA.ENE[4861]
// DATA16 .CALIFA.TOT[4861]
// DATA16 .CALIFA.NF[4861]
// DATA16 .CALIFA.NS[4861]
// DATA12 .TIMESTAMP.SCITWO.ID
// DATA16 .TIMESTAMP.SCITWO.WR.T[4]
// DATA12 .TIMESTAMP.SCIEIGHT.ID
// DATA16 .TIMESTAMP.SCIEIGHT.WR.T[4]
// DATA12 .TIMESTAMP.CALIFA[2].ID
// DATA16 .TIMESTAMP.CALIFA[2].WR.T[4]
// DATA12 .TIMESTAMP.MASTER.ID
// DATA16 .TIMESTAMP.MASTER.WR.T[4]
// DATA12 .TIMESTAMP.SOFIA.ID
// DATA16 .TIMESTAMP.SOFIA.WR.T[4]
// DATA16 .TPAT[170]
// 
// size= 1  chunks=1310765  mem=1310765  line=2621530  total=235933650
// size= 2  chunks=1310737  mem=2621474  line=3932211  total=243796215
// size= 4  chunks=1310716  mem=5242864  line=6553580  total=268696700
// size= 5  chunks=1310709  mem=6553545  line=7864254  total=267383910
// size=10  chunks=1309646  mem=13096460  line=14406106  total=-1951669422
// size=20  chunks=1309590  mem=26191800  line=27501390  total=198948022
// size=30  chunks=1309582  mem=39287460  line=40597042  total=-1463040310
// size=32  chunks=1308590  mem=41874880  line=43183470  total=7060566
// size=42  chunks=1308534  mem=54958428  line=56266962  total=-413960982
// size=60  chunks=1308533  mem=78511980  line=79820513  total=531391885
// size=100  chunks=1303187  mem=130318700  line=131621887  total=821400531
// size=170  chunks=1303018  mem=221513060  line=222816078  total=1740351670
// size=200  chunks=29415  mem=5883000  line=5912415  total=1665645491
// size=256  chunks=29387  mem=7523072  line=7552459  total=-400696145
// size=288  chunks=25943  mem=7471584  line=7497527  total=610804907
// size=512  chunks=25941  mem=13281792  line=13307733  total=1448456689
// size=800  chunks=25927  mem=20741600  line=20767527  total=-155193893
// size=864  chunks=25919  mem=22394016  line=22419935  total=1099861043
// size=1176  chunks=25892  mem=30448992  line=30474884  total=-2079493836
// size=1600  chunks=25862  mem=41379200  line=41405062  total=1099340174
// size=1800  chunks=25860  mem=46548000  line=46573860  total=-1279542444
// size=3456  chunks=25857  mem=89361792  line=89387649  total=-506093395
// size=3600  chunks=25854  mem=93074400  line=93100254  total=-351346938
// size=4861  chunks=6414  mem=31178454  line=31184868  total=829747988
// size=10000  chunks=142  mem=1420000  line=1420142  total=1751589462
// size=19444  chunks=139  mem=2702716  line=2702855  total=-540285125
// size=20000  chunks= 75  mem=1500000  line=1500075  total=-849214193
// size=80000  chunks= 27  mem=2160000  line=2160027  total=904342591
// size=1280000  chunks= 12  mem=15360000  line=15360012  total=-1440554468
// size=1280005  chunks= 11  mem=14080055  line=14080066  total=183239578
// size=1310765  chunks=  1  mem=1310765  line=1310766  total=119277590
// 
// corr structure: raw_event
  // DATA12 .SCITWO.VTF[8][32]
  // DATA16 .SCITWO.VTC[8][32]
  // DATA12 .SCIEIGHT.VTF[8][32]
  // DATA16 .SCIEIGHT.VTC[8][32]
  // DATA12 .NN.WR.ID
  // DATA16 .NN.WR.T[4]
  // DATA12 .NN.P[16].tcl.T[2].B[50][200]
  // DATA12 .NN.P[16].tfl.T[2].B[50][200]
  // DATA12 .NN.P[16].tct.T[2].B[50][200]
  // DATA12 .NN.P[16].tft.T[2].B[50][200]
  // DATA16_OVERFLOW .MUSIC.E[8][100]
  // DATA16_OVERFLOW .MUSIC.T[8][100]
  // DATA16_OVERFLOW .MUSIC.TREF[2][100]
  // DATA12 .SOFSCI[1].TF[3][10]
  // DATA16 .SOFSCI[1].TC[3][10]
  // DATA16_OVERFLOW .SOFTWIM.S[1].E[16][100]
  // DATA16_OVERFLOW .SOFTWIM.S[1].T[16][100]
  // DATA16_OVERFLOW .SOFTWIM.S[1].TREF[2][100]
  // DATA16_OVERFLOW .SOFTWIM.S[1].TRIG[2][100]
  // DATA12 .SOFTOFW.P[28].TF[2][10]
  // DATA16 .SOFTOFW.P[28].TC[2][10]
  // DATA14 .SOFTOFW.P[28].E[2]
  // DATA12 .SOFMWPC[4].Plane[3].Q[288]
  // DATA16 .CALIFA.ENE[4861]
  // DATA16 .CALIFA.TOT[4861]
  // DATA16 .CALIFA.NF[4861]
  // DATA16 .CALIFA.NS[4861]
  // DATA12 .TIMESTAMP.SCITWO.ID
  // DATA16 .TIMESTAMP.SCITWO.WR.T[4]
  // DATA12 .TIMESTAMP.SCIEIGHT.ID
  // DATA16 .TIMESTAMP.SCIEIGHT.WR.T[4]
  // DATA12 .TIMESTAMP.CALIFA[2].ID
  // DATA16 .TIMESTAMP.CALIFA[2].WR.T[4]
  // DATA12 .TIMESTAMP.MASTER.ID
  // DATA16 .TIMESTAMP.MASTER.WR.T[4]
  // DATA12 .TIMESTAMP.SOFIA.ID
  // DATA16 .TIMESTAMP.SOFIA.WR.T[4]
  // DATA16 .TPAT[170]
// .raw_event/1310765/.SCITWO/512/.VTF/256/[8]/32/[32]
                               // .VTC/256/[8]/32/[32]
                   // .SCIEIGHT/512/.VTF/256/[8]/32/[32]
                                 // .VTC/256/[8]/32/[32]
                   // .NN/1280005/.WR/5/.ID
                                     // .T/4/[4]
                               // .P/1280000/[16]/80000/.tcl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                                     // .tfl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                                     // .tct/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                                     // .tft/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                   // .MUSIC/1800/.E/800/[8]/100/[100]
                               // .T/800/[8]/100/[100]
                               // .TREF/200/[2]/100/[100]
                   // .SOFSCI/60/[1]/60/.TF/30/[3]/10/[10]
                                     // .TC/30/[3]/10/[10]
                   // .SOFTWIM/3600/.S/3600/[1]/3600/.E/1600/[16]/100/[100]
                                                  // .T/1600/[16]/100/[100]
                                                  // .TREF/200/[2]/100/[100]
                                                  // .TRIG/200/[2]/100/[100]
                   // .SOFTOFW/1176/.P/1176/[28]/42/.TF/20/[2]/10/[10]
                                                 // .TC/20/[2]/10/[10]
                                                 // .E/2/[2]
                   // .SOFMWPC/3456/[4]/864/.Plane/864/[3]/288/.Q/288/[288]
                   // .CALIFA/19444/.ENE/4861/[4861]
                                 // .TOT/4861/[4861]
                                 // .NF/4861/[4861]
                                 // .NS/4861/[4861]
                   // .TIMESTAMP/30/.SCITWO/5/.ID
                                           // .WR/4/.T/4/[4]
                                 // .SCIEIGHT/5/.ID
                                             // .WR/4/.T/4/[4]
                                 // .CALIFA/10/[2]/5/.ID
                                                  // .WR/4/.T/4/[4]
                                 // .MASTER/5/.ID
                                           // .WR/4/.T/4/[4]
                                 // .SOFIA/5/.ID
                                          // .WR/4/.T/4/[4]
                   // .TPAT/170/[170]// 
// size= 1  chunks=2428  mem=2428  line=4856  total=11790368
// size= 4  chunks=2407  mem=9628  line=12035  total=29220980
// size= 8  chunks=2406  mem=19248  line=21654  total=52575912
// size=24  chunks=2402  mem=57648  line=60050  total=145801400
// size=100  chunks= 26  mem=2600  line=2626  total=6375928
// size=800  chunks= 19  mem=15200  line=15219  total=36951732
// size=1600  chunks=  4  mem=6400  line=6404  total=15548912
// size=2428  chunks=  1  mem=2428  line=2429  total=5897612
// 
// corr structure: raw_event
  // DATA16 .NN.WR.T[4]
  // DATA16_OVERFLOW .MUSIC.T[8][100]
  // DATA16_OVERFLOW .SOFTWIM.S[1].T[16][100]
  // DATA16 .TIMESTAMP.SCITWO.WR.T[4]
  // DATA16 .TIMESTAMP.SCIEIGHT.WR.T[4]
  // DATA16 .TIMESTAMP.CALIFA[2].WR.T[4]
  // DATA16 .TIMESTAMP.MASTER.WR.T[4]
  // DATA16 .TIMESTAMP.SOFIA.WR.T[4]
// .raw_event/2428/.NN/4/.WR/4/.T/4/[4]
                // .MUSIC/800/.T/800/[8]/100/[100]
                // .SOFTWIM/1600/.S/1600/[1]/1600/.T/1600/[16]/100/[100]
                // .TIMESTAMP/24/.SCITWO/4/.WR/4/.T/4/[4]
                              // .SCIEIGHT/4/.WR/4/.T/4/[4]
                              // .CALIFA/8/[2]/4/.WR/4/.T/4/[4]
                              // .MASTER/4/.WR/4/.T/4/[4]
                              // .SOFIA/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=2456  mem=2456  line=4912  total=12063872
// size= 2  chunks=2428  mem=4856  line=7284  total=17889504
// size=56  chunks=2401  mem=134456  line=136857  total=336120792
// size=100  chunks= 25  mem=2500  line=2525  total=6201400
// size=800  chunks= 18  mem=14400  line=14418  total=35410608
// size=1600  chunks=  3  mem=4800  line=4803  total=11796168
// size=2456  chunks=  1  mem=2456  line=2457  total=6034392
// 
// corr structure: raw_event
  // DATA16_OVERFLOW .MUSIC.E[8][100]
  // DATA16_OVERFLOW .SOFTWIM.S[1].E[16][100]
  // DATA14 .SOFTOFW.P[28].E[2]
// .raw_event/2456/.MUSIC/800/.E/800/[8]/100/[100]
                // .SOFTWIM/1600/.S/1600/[1]/1600/.E/1600/[16]/100/[100]
                // .SOFTOFW/56/.P/56/[28]/2/.E/2/[2]
// Corr struct for: raw_sticky
//  : public raw_sticky_base
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_sticky
// .raw_sticky// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_sticky
// .raw_sticky// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_sticky
// .raw_sticky

/** END_CORR_STRUCT ***************************************************/

