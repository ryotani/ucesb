
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

class CAMAC_LECROY_4434
{
  raw_array_zero_suppress<DATA24,DATA24,32> data;
} ;
class CAMAC_PHILLIPS_7164
{
  raw_array_zero_suppress<DATA12,DATA12,16> data;
} ;
class CAMAC_SILENA_4418
{
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,8> data;
} ;
class DUMMY_WORD
{
  uint32 dummy_word;
} ;
class FASTBUS_LECROY_1875
{
  raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,64> data;
} ;
class FASTBUS_LECROY_1885
{
  raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,96> data;
} ;
class VME_CAEN_V775
{
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  union 
  {
    struct 
    {
      uint32 event_number : 24;
      uint32 unnamed_24_26 : 3;
      uint32 geom : 5;
    } ;
    uint32 u32;
  } eob;
} ;
class LAND_STD_VME
{
  union 
  {
    struct 
    {
      uint32 fail_general : 1;
      uint32 fail_data_corrupt : 1;
      uint32 fail_data_missing : 1;
      uint32 fail_data_too_much : 1;
      uint32 fail_event_counter_mismatch : 1;
      uint32 fail_readout_error_driver : 1;
      uint32 fail_unexpected_trigger : 1;
      uint32 dummy_7_26 : 20;
      uint32 has_no_zero_suppression : 1;
      uint32 has_multi_adctdc_counter0 : 1;
      uint32 has_multi_scaler_counter0 : 1;
      uint32 has_multi_event : 1;
      uint32 has_time_stamp : 1;
    } ;
    uint32 u32;
  } failure;
  uint32 time_stamp;
  uint32 multi_events;
  uint32 multi_scaler_counter0;
  uint32 multi_adctdc_counter0;
  VME_CAEN_V775 tdc0;
} ;
class VME_CAEN_V1190_SUBTDC
{
  union 
  {
    struct 
    {
      uint32 bunch_id : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
  union 
  {
    struct 
    {
      uint32 word_count : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1190
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1190_SUBTDC tdc[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1190_SHORT_SUBTDC
{
  ;
} ;
class VME_CAEN_V1190_SHORT_SUBTDC_ERROR
{
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
} ;
class VME_CAEN_V1190_SHORT
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1190_SHORT_SUBTDC tdc[4];
  VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290_SUBTDC
{
  union 
  {
    struct 
    {
      uint32 bunch_id : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
  union 
  {
    struct 
    {
      uint32 word_count : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1290_SUBTDC tdc[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290_SHORT_SUBTDC
{
  ;
} ;
class VME_CAEN_V1290_SHORT_SUBTDC_ERROR
{
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
} ;
class VME_CAEN_V1290_SHORT
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1290_SHORT_SUBTDC tdc[4];
  VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V830
{
  raw_array_zero_suppress<DATA32,DATA32,32> data;
  union 
  {
    struct 
    {
      uint32 event_number : 16;
      uint32 ts : 2;
      uint32 count : 6;
      uint32 dummy_24_25 : 2;
      uint32 unnamed_26_26 : 1;
      uint32 geom : 5;
    } ;
    uint32 u32;
  } header;
} ;
class VME_MESYTEC_MADC32
{
  raw_array_zero_suppress<DATA14_OVERFLOW,DATA14_OVERFLOW,32> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class VME_MESYTEC_MDPP16
{
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,34,100> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class DUMMY_TDC : public unpack_subevent_base
{
  DUMMY_WORD d;
} ;
class LAND_CAMAC_CONVERTER : public unpack_subevent_base
{
  uint16 tpat;
  uint16 tprev;
  uint16 tnext;
  uint16 tprev2;
  CAMAC_SILENA_4418 qdc_SIA0429;
  CAMAC_SILENA_4418 qdc_SIA0458;
  CAMAC_SILENA_4418 tdc_SIA8035;
  CAMAC_SILENA_4418 qdc_SIA0416;
  CAMAC_SILENA_4418 tdc_SIA0426;
  CAMAC_SILENA_4418 tdc_SIA0400;
  CAMAC_SILENA_4418 tdc_SIA0401;
} ;
class LAND_CAMAC_SCALER : public unpack_subevent_base
{
  uint32 timestamp;
  union 
  {
    struct 
    {
      uint32 unnamed_0_31 : 32;
    } ;
    uint32 u32;
  } endianess;
  CAMAC_LECROY_4434 scaler0;
  CAMAC_LECROY_4434 scaler2;
  CAMAC_LECROY_4434 scaler1;
} ;
class LAND_CAMAC_TCAL_INFO : public unpack_subevent_base
{
  ;
} ;
class LAND_FASTBUS1 : public unpack_subevent_base
{
  FASTBUS_LECROY_1885 qdc_L_Q47342;
  FASTBUS_LECROY_1885 qdc_L_Q46848;
  FASTBUS_LECROY_1885 qdc_L_Q11111;
  FASTBUS_LECROY_1885 qdc_L_Q47315;
  FASTBUS_LECROY_1885 qdc_L_Q17320;
  FASTBUS_LECROY_1885 qdc_L_Q15372;
  FASTBUS_LECROY_1885 qdc_F_Q46962;
  FASTBUS_LECROY_1885 qdc_L_Q46993;
  FASTBUS_LECROY_1885 qdc_L_Q15358;
  FASTBUS_LECROY_1885 qdc_L_Q47264;
  FASTBUS_LECROY_1875 tdc_L_T81855;
  FASTBUS_LECROY_1875 tdc_L_T87044;
  FASTBUS_LECROY_1875 tdc_L_T87024;
  FASTBUS_LECROY_1875 tdc_L_T81800;
} ;
class LAND_FASTBUS2 : public unpack_subevent_base
{
  FASTBUS_LECROY_1875 tdc_L_T87047;
  FASTBUS_LECROY_1875 tdc_L_T81808;
  FASTBUS_LECROY_1875 tdc_L_T48854;
  FASTBUS_LECROY_1875 tdc_L_T81859;
  FASTBUS_LECROY_1875 tdc_L_T81795;
  FASTBUS_LECROY_1875 tdc_L_T81806;
  FASTBUS_LECROY_1875 tdc_L_T48834;
} ;
class LAND_FASTBUS_ERROR : public unpack_subevent_base
{
  union 
  {
    struct 
    {
      uint32 timeout_waiting_smi : 1;
      uint32 illegal_block_transfer : 1;
      uint32 fifa_address_overflow : 1;
      uint32 fifa_register_error : 1;
      uint32 dummy_4_15 : 12;
      uint32 init_error : 1;
      uint32 dummy_17_31 : 15;
    } ;
    uint32 u32;
  } error_code;
  uint32 error_num;
} ;
class LAND_VME : public unpack_subevent_base
{
  LAND_STD_VME vme;
} ;
class unpack_event : public unpack_event_base
{
  LAND_CAMAC_CONVERTER camac;
  LAND_CAMAC_TCAL_INFO camac_tcal_info;
  LAND_CAMAC_CONVERTER camac_tcal;
  LAND_CAMAC_SCALER camac_scalers;
  LAND_CAMAC_SCALER camac_scalers_tcal;
  LAND_FASTBUS_ERROR fastbus_error;
  LAND_FASTBUS1 fastbus_1;
  LAND_FASTBUS2 fastbus_2;
  DUMMY_TDC d1;
} ;
class unpack_sticky_event : public unpack_sticky_event_base
{
  ;
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_CAMAC_LECROY_4434
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CAMAC_LECROY_4434)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(CAMAC_LECROY_4434);
};
#endif//USER_DEF_CAMAC_LECROY_4434

#ifndef USER_DEF_CAMAC_PHILLIPS_7164
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CAMAC_PHILLIPS_7164)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),16> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(CAMAC_PHILLIPS_7164);
};
#endif//USER_DEF_CAMAC_PHILLIPS_7164

#ifndef USER_DEF_CAMAC_SILENA_4418
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CAMAC_SILENA_4418)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),8> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(CAMAC_SILENA_4418);
};
#endif//USER_DEF_CAMAC_SILENA_4418

#ifndef USER_DEF_DUMMY_WORD
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(DUMMY_WORD)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(dummy_word);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_word);
  STRUCT_MIRROR_FCNS_DECL(DUMMY_WORD);
};
#endif//USER_DEF_DUMMY_WORD

#ifndef USER_DEF_FASTBUS_LECROY_1875
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1875)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),64> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(FASTBUS_LECROY_1875);
};
#endif//USER_DEF_FASTBUS_LECROY_1875

#ifndef USER_DEF_FASTBUS_LECROY_1885
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1885)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),96> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(FASTBUS_LECROY_1885);
};
#endif//USER_DEF_FASTBUS_LECROY_1885

#ifndef USER_DEF_VME_CAEN_V775
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V775)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_26);
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(eob);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V775);
};
#endif//USER_DEF_VME_CAEN_V775

#ifndef USER_DEF_LAND_STD_VME
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_STD_VME)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(fail_general);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_general);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_corrupt);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_corrupt);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_missing);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_missing);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_too_much);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_too_much);
      STRUCT_MIRROR_ITEM_CTRL(fail_event_counter_mismatch);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_event_counter_mismatch);
      STRUCT_MIRROR_ITEM_CTRL(fail_readout_error_driver);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_readout_error_driver);
      STRUCT_MIRROR_ITEM_CTRL(fail_unexpected_trigger);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_unexpected_trigger);
      STRUCT_MIRROR_ITEM_CTRL(dummy_7_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_7_26);
      STRUCT_MIRROR_ITEM_CTRL(has_no_zero_suppression);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_no_zero_suppression);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_adctdc_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_adctdc_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_scaler_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_scaler_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_event);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_event);
      STRUCT_MIRROR_ITEM_CTRL(has_time_stamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_time_stamp);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(failure);
  STRUCT_MIRROR_ITEM_CTRL(time_stamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_stamp);
  STRUCT_MIRROR_ITEM_CTRL(multi_events);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_events);
  STRUCT_MIRROR_ITEM_CTRL(multi_scaler_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_scaler_counter0);
  STRUCT_MIRROR_ITEM_CTRL(multi_adctdc_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_adctdc_counter0);
  STRUCT_MIRROR_ITEM_CTRL(tdc0);
  STRUCT_MIRROR_TYPE(VME_CAEN_V775) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc0);
  STRUCT_MIRROR_FCNS_DECL(LAND_STD_VME);
};
#endif//USER_DEF_LAND_STD_VME

#ifndef USER_DEF_VME_CAEN_V1190_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SUBTDC)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(bunch_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bunch_id);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1190_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190);
};
#endif//USER_DEF_VME_CAEN_V1190

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC)
{
public:
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SHORT_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC_ERROR)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SHORT_SUBTDC_ERROR);
};
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1190_SHORT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_SHORT_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(err);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(err__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_SHORT_SUBTDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(err[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SHORT);
};
#endif//USER_DEF_VME_CAEN_V1190_SHORT

#ifndef USER_DEF_VME_CAEN_V1290_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SUBTDC)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(bunch_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bunch_id);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1290_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290);
};
#endif//USER_DEF_VME_CAEN_V1290

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC)
{
public:
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SHORT_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC_ERROR)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SHORT_SUBTDC_ERROR);
};
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1290_SHORT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_SHORT_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(err);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(err__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_SHORT_SUBTDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(err[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SHORT);
};
#endif//USER_DEF_VME_CAEN_V1290_SHORT

#ifndef USER_DEF_VME_CAEN_V830
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V830)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(ts);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_25);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_25);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_26_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_26_26);
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V830);
};
#endif//USER_DEF_VME_CAEN_V830

#ifndef USER_DEF_VME_MESYTEC_MADC32
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_MADC32)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA14_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA14_OVERFLOW),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_MADC32);
};
#endif//USER_DEF_VME_MESYTEC_MADC32

#ifndef USER_DEF_VME_MESYTEC_MDPP16
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_MDPP16)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),34,100> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_MDPP16);
};
#endif//USER_DEF_VME_MESYTEC_MDPP16

#ifndef USER_DEF_DUMMY_TDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(DUMMY_TDC) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(d);
  STRUCT_MIRROR_TYPE(DUMMY_WORD) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(d);
  STRUCT_MIRROR_FCNS_DECL(DUMMY_TDC);
};
#endif//USER_DEF_DUMMY_TDC

#ifndef USER_DEF_LAND_CAMAC_CONVERTER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_CAMAC_CONVERTER) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(tpat);
  STRUCT_MIRROR_TYPE(uint16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tpat);
  STRUCT_MIRROR_ITEM_CTRL(tprev);
  STRUCT_MIRROR_TYPE(uint16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tprev);
  STRUCT_MIRROR_ITEM_CTRL(tnext);
  STRUCT_MIRROR_TYPE(uint16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tnext);
  STRUCT_MIRROR_ITEM_CTRL(tprev2);
  STRUCT_MIRROR_TYPE(uint16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tprev2);
  STRUCT_MIRROR_ITEM_CTRL(qdc_SIA0429);
  STRUCT_MIRROR_TYPE(CAMAC_SILENA_4418) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_SIA0429);
  STRUCT_MIRROR_ITEM_CTRL(qdc_SIA0458);
  STRUCT_MIRROR_TYPE(CAMAC_SILENA_4418) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_SIA0458);
  STRUCT_MIRROR_ITEM_CTRL(tdc_SIA8035);
  STRUCT_MIRROR_TYPE(CAMAC_SILENA_4418) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_SIA8035);
  STRUCT_MIRROR_ITEM_CTRL(qdc_SIA0416);
  STRUCT_MIRROR_TYPE(CAMAC_SILENA_4418) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_SIA0416);
  STRUCT_MIRROR_ITEM_CTRL(tdc_SIA0426);
  STRUCT_MIRROR_TYPE(CAMAC_SILENA_4418) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_SIA0426);
  STRUCT_MIRROR_ITEM_CTRL(tdc_SIA0400);
  STRUCT_MIRROR_TYPE(CAMAC_SILENA_4418) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_SIA0400);
  STRUCT_MIRROR_ITEM_CTRL(tdc_SIA0401);
  STRUCT_MIRROR_TYPE(CAMAC_SILENA_4418) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_SIA0401);
  STRUCT_MIRROR_FCNS_DECL(LAND_CAMAC_CONVERTER);
};
#endif//USER_DEF_LAND_CAMAC_CONVERTER

#ifndef USER_DEF_LAND_CAMAC_SCALER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_CAMAC_SCALER) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(timestamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(timestamp);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(endianess);
  STRUCT_MIRROR_ITEM_CTRL(scaler0);
  STRUCT_MIRROR_TYPE(CAMAC_LECROY_4434) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler0);
  STRUCT_MIRROR_ITEM_CTRL(scaler2);
  STRUCT_MIRROR_TYPE(CAMAC_LECROY_4434) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler2);
  STRUCT_MIRROR_ITEM_CTRL(scaler1);
  STRUCT_MIRROR_TYPE(CAMAC_LECROY_4434) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scaler1);
  STRUCT_MIRROR_FCNS_DECL(LAND_CAMAC_SCALER);
};
#endif//USER_DEF_LAND_CAMAC_SCALER

#ifndef USER_DEF_LAND_CAMAC_TCAL_INFO
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_CAMAC_TCAL_INFO) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_FCNS_DECL(LAND_CAMAC_TCAL_INFO);
};
#endif//USER_DEF_LAND_CAMAC_TCAL_INFO

#ifndef USER_DEF_LAND_FASTBUS1
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_FASTBUS1) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(qdc_L_Q47342);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_L_Q47342);
  STRUCT_MIRROR_ITEM_CTRL(qdc_L_Q46848);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_L_Q46848);
  STRUCT_MIRROR_ITEM_CTRL(qdc_L_Q11111);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_L_Q11111);
  STRUCT_MIRROR_ITEM_CTRL(qdc_L_Q47315);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_L_Q47315);
  STRUCT_MIRROR_ITEM_CTRL(qdc_L_Q17320);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_L_Q17320);
  STRUCT_MIRROR_ITEM_CTRL(qdc_L_Q15372);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_L_Q15372);
  STRUCT_MIRROR_ITEM_CTRL(qdc_F_Q46962);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_F_Q46962);
  STRUCT_MIRROR_ITEM_CTRL(qdc_L_Q46993);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_L_Q46993);
  STRUCT_MIRROR_ITEM_CTRL(qdc_L_Q15358);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_L_Q15358);
  STRUCT_MIRROR_ITEM_CTRL(qdc_L_Q47264);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1885) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc_L_Q47264);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T81855);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T81855);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T87044);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T87044);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T87024);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T87024);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T81800);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T81800);
  STRUCT_MIRROR_FCNS_DECL(LAND_FASTBUS1);
};
#endif//USER_DEF_LAND_FASTBUS1

#ifndef USER_DEF_LAND_FASTBUS2
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_FASTBUS2) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T87047);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T87047);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T81808);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T81808);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T48854);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T48854);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T81859);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T81859);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T81795);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T81795);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T81806);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T81806);
  STRUCT_MIRROR_ITEM_CTRL(tdc_L_T48834);
  STRUCT_MIRROR_TYPE(FASTBUS_LECROY_1875) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_L_T48834);
  STRUCT_MIRROR_FCNS_DECL(LAND_FASTBUS2);
};
#endif//USER_DEF_LAND_FASTBUS2

#ifndef USER_DEF_LAND_FASTBUS_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_FASTBUS_ERROR) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(timeout_waiting_smi);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(timeout_waiting_smi);
      STRUCT_MIRROR_ITEM_CTRL(illegal_block_transfer);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(illegal_block_transfer);
      STRUCT_MIRROR_ITEM_CTRL(fifa_address_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fifa_address_overflow);
      STRUCT_MIRROR_ITEM_CTRL(fifa_register_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fifa_register_error);
      STRUCT_MIRROR_ITEM_CTRL(dummy_4_15);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_4_15);
      STRUCT_MIRROR_ITEM_CTRL(init_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(init_error);
      STRUCT_MIRROR_ITEM_CTRL(dummy_17_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_17_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_code);
  STRUCT_MIRROR_ITEM_CTRL(error_num);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(error_num);
  STRUCT_MIRROR_FCNS_DECL(LAND_FASTBUS_ERROR);
};
#endif//USER_DEF_LAND_FASTBUS_ERROR

#ifndef USER_DEF_LAND_VME
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_VME) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vme);
  STRUCT_MIRROR_FCNS_DECL(LAND_VME);
};
#endif//USER_DEF_LAND_VME

#ifndef USER_DEF_unpack_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_event) : public STRUCT_MIRROR_BASE(unpack_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_event_base);
  STRUCT_MIRROR_ITEM_CTRL(camac);
  STRUCT_MIRROR_TYPE(LAND_CAMAC_CONVERTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(camac);
  STRUCT_MIRROR_ITEM_CTRL(camac_tcal_info);
  STRUCT_MIRROR_TYPE(LAND_CAMAC_TCAL_INFO) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(camac_tcal_info);
  STRUCT_MIRROR_ITEM_CTRL(camac_tcal);
  STRUCT_MIRROR_TYPE(LAND_CAMAC_CONVERTER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(camac_tcal);
  STRUCT_MIRROR_ITEM_CTRL(camac_scalers);
  STRUCT_MIRROR_TYPE(LAND_CAMAC_SCALER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(camac_scalers);
  STRUCT_MIRROR_ITEM_CTRL(camac_scalers_tcal);
  STRUCT_MIRROR_TYPE(LAND_CAMAC_SCALER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(camac_scalers_tcal);
  STRUCT_MIRROR_ITEM_CTRL(fastbus_error);
  STRUCT_MIRROR_TYPE(LAND_FASTBUS_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fastbus_error);
  STRUCT_MIRROR_ITEM_CTRL(fastbus_1);
  STRUCT_MIRROR_TYPE(LAND_FASTBUS1) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fastbus_1);
  STRUCT_MIRROR_ITEM_CTRL(fastbus_2);
  STRUCT_MIRROR_TYPE(LAND_FASTBUS2) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fastbus_2);
  STRUCT_MIRROR_ITEM_CTRL(d1);
  STRUCT_MIRROR_TYPE(DUMMY_TDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(d1);
  STRUCT_MIRROR_FCNS_DECL(unpack_event);
};
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_sticky_event) : public STRUCT_MIRROR_BASE(unpack_sticky_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_sticky_event_base);
  STRUCT_MIRROR_FCNS_DECL(unpack_sticky_event);
};
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CAMAC_LECROY_4434);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CAMAC_PHILLIPS_7164);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CAMAC_SILENA_4418);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(DUMMY_WORD);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1875);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1885);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V775);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_STD_VME);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V830);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_MADC32);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_MDPP16);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(DUMMY_TDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_CAMAC_CONVERTER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_CAMAC_SCALER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_CAMAC_TCAL_INFO);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_FASTBUS1);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_FASTBUS2);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_FASTBUS_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_VME);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_event);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_sticky_event);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_CAMAC_LECROY_4434
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CAMAC_LECROY_4434)::FCNCALL_NAME(CAMAC_LECROY_4434)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA24,DATA24,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CAMAC_LECROY_4434

#ifndef USER_DEF_CAMAC_PHILLIPS_7164
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CAMAC_PHILLIPS_7164)::FCNCALL_NAME(CAMAC_PHILLIPS_7164)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12,DATA12,16> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CAMAC_PHILLIPS_7164

#ifndef USER_DEF_CAMAC_SILENA_4418
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CAMAC_SILENA_4418)::FCNCALL_NAME(CAMAC_SILENA_4418)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,8> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CAMAC_SILENA_4418

#ifndef USER_DEF_DUMMY_WORD
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(DUMMY_WORD)::FCNCALL_NAME(DUMMY_WORD)
{
  FCNCALL_INIT;
  // uint32 dummy_word;
  {
  FCNCALL_SUBNAME("dummy_word");
  { FCNCALL_CALL_CTRL_WRAP(dummy_word,FCNCALL_CALL_TYPE(uint32,dummy_word)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_DUMMY_WORD

#ifndef USER_DEF_FASTBUS_LECROY_1875
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FASTBUS_LECROY_1875)::FCNCALL_NAME(FASTBUS_LECROY_1875)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,64> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FASTBUS_LECROY_1875

#ifndef USER_DEF_FASTBUS_LECROY_1885
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FASTBUS_LECROY_1885)::FCNCALL_NAME(FASTBUS_LECROY_1885)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,96> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FASTBUS_LECROY_1885

#ifndef USER_DEF_VME_CAEN_V775
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V775)::FCNCALL_NAME(VME_CAEN_V775)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 event_number : 24;
      // uint32 unnamed_24_26 : 3;
      // uint32 geom : 5;
    // } ;
    // uint32 u32;
  // } eob;
  {
  FCNCALL_SUBNAME("eob");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 event_number : 24;
    // uint32 unnamed_24_26 : 3;
    // uint32 geom : 5;
  // } ;
  // uint32 event_number : 24;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(eob.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,eob.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_26 : 3;
  {
  FCNCALL_SUBNAME("unnamed_24_26");
  { FCNCALL_CALL_CTRL_WRAP(eob.unnamed_24_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,eob.unnamed_24_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(eob.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,eob.geom)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(eob.u32,FCNCALL_CALL_TYPE(uint32,eob.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V775

#ifndef USER_DEF_LAND_STD_VME
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_STD_VME)::FCNCALL_NAME(LAND_STD_VME)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 fail_general : 1;
      // uint32 fail_data_corrupt : 1;
      // uint32 fail_data_missing : 1;
      // uint32 fail_data_too_much : 1;
      // uint32 fail_event_counter_mismatch : 1;
      // uint32 fail_readout_error_driver : 1;
      // uint32 fail_unexpected_trigger : 1;
      // uint32 dummy_7_26 : 20;
      // uint32 has_no_zero_suppression : 1;
      // uint32 has_multi_adctdc_counter0 : 1;
      // uint32 has_multi_scaler_counter0 : 1;
      // uint32 has_multi_event : 1;
      // uint32 has_time_stamp : 1;
    // } ;
    // uint32 u32;
  // } failure;
  {
  FCNCALL_SUBNAME("failure");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 fail_general : 1;
    // uint32 fail_data_corrupt : 1;
    // uint32 fail_data_missing : 1;
    // uint32 fail_data_too_much : 1;
    // uint32 fail_event_counter_mismatch : 1;
    // uint32 fail_readout_error_driver : 1;
    // uint32 fail_unexpected_trigger : 1;
    // uint32 dummy_7_26 : 20;
    // uint32 has_no_zero_suppression : 1;
    // uint32 has_multi_adctdc_counter0 : 1;
    // uint32 has_multi_scaler_counter0 : 1;
    // uint32 has_multi_event : 1;
    // uint32 has_time_stamp : 1;
  // } ;
  // uint32 fail_general : 1;
  {
  FCNCALL_SUBNAME("fail_general");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_general,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_general)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_corrupt : 1;
  {
  FCNCALL_SUBNAME("fail_data_corrupt");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_corrupt,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_corrupt)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_missing : 1;
  {
  FCNCALL_SUBNAME("fail_data_missing");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_missing,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_missing)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_too_much : 1;
  {
  FCNCALL_SUBNAME("fail_data_too_much");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_too_much,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_too_much)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_event_counter_mismatch : 1;
  {
  FCNCALL_SUBNAME("fail_event_counter_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_event_counter_mismatch,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_event_counter_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_readout_error_driver : 1;
  {
  FCNCALL_SUBNAME("fail_readout_error_driver");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_readout_error_driver,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_readout_error_driver)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_unexpected_trigger : 1;
  {
  FCNCALL_SUBNAME("fail_unexpected_trigger");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_unexpected_trigger,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_unexpected_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_7_26 : 20;
  {
  FCNCALL_SUBNAME("dummy_7_26");
  { FCNCALL_CALL_CTRL_WRAP(failure.dummy_7_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.dummy_7_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_no_zero_suppression : 1;
  {
  FCNCALL_SUBNAME("has_no_zero_suppression");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_no_zero_suppression,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_no_zero_suppression)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_adctdc_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_adctdc_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_adctdc_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_adctdc_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_scaler_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_scaler_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_scaler_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_scaler_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_event : 1;
  {
  FCNCALL_SUBNAME("has_multi_event");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_event,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_event)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_time_stamp : 1;
  {
  FCNCALL_SUBNAME("has_time_stamp");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_time_stamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_time_stamp)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(failure.u32,FCNCALL_CALL_TYPE(uint32,failure.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_stamp;
  {
  FCNCALL_SUBNAME("time_stamp");
  { FCNCALL_CALL_CTRL_WRAP(time_stamp,FCNCALL_CALL_TYPE(uint32,time_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_events;
  {
  FCNCALL_SUBNAME("multi_events");
  { FCNCALL_CALL_CTRL_WRAP(multi_events,FCNCALL_CALL_TYPE(uint32,multi_events)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_scaler_counter0;
  {
  FCNCALL_SUBNAME("multi_scaler_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_scaler_counter0,FCNCALL_CALL_TYPE(uint32,multi_scaler_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_adctdc_counter0;
  {
  FCNCALL_SUBNAME("multi_adctdc_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_adctdc_counter0,FCNCALL_CALL_TYPE(uint32,multi_adctdc_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V775 tdc0;
  {
  FCNCALL_SUBNAME("tdc0");
  { FCNCALL_CALL_CTRL_WRAP(tdc0,tdc0.FCNCALL_CALL(tdc0)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_STD_VME

#ifndef USER_DEF_VME_CAEN_V1190_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1190_SUBTDC)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 bunch_id : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 bunch_id : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 bunch_id : 12;
  {
  FCNCALL_SUBNAME("bunch_id");
  { FCNCALL_CALL_CTRL_WRAP(header.bunch_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.bunch_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(header.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 word_count : 12;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(trailer.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190)::FCNCALL_NAME(VME_CAEN_V1190)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SHORT_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1190_SHORT_SUBTDC)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SHORT_SUBTDC_ERROR)::FCNCALL_NAME(VME_CAEN_V1190_SHORT_SUBTDC_ERROR)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1190_SHORT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SHORT)::FCNCALL_NAME(VME_CAEN_V1190_SHORT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_SHORT_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[4];
  {
  FCNCALL_SUBNAME("err");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(err__i0,,__i0,err[__i0].FCNCALL_CALL(err[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SHORT

#ifndef USER_DEF_VME_CAEN_V1290_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1290_SUBTDC)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 bunch_id : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 bunch_id : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 bunch_id : 12;
  {
  FCNCALL_SUBNAME("bunch_id");
  { FCNCALL_CALL_CTRL_WRAP(header.bunch_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.bunch_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(header.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 word_count : 12;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(trailer.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290)::FCNCALL_NAME(VME_CAEN_V1290)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SHORT_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1290_SHORT_SUBTDC)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SHORT_SUBTDC_ERROR)::FCNCALL_NAME(VME_CAEN_V1290_SHORT_SUBTDC_ERROR)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1290_SHORT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SHORT)::FCNCALL_NAME(VME_CAEN_V1290_SHORT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_SHORT_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[4];
  {
  FCNCALL_SUBNAME("err");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(err__i0,,__i0,err[__i0].FCNCALL_CALL(err[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SHORT

#ifndef USER_DEF_VME_CAEN_V830
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V830)::FCNCALL_NAME(VME_CAEN_V830)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 event_number : 16;
      // uint32 ts : 2;
      // uint32 count : 6;
      // uint32 dummy_24_25 : 2;
      // uint32 unnamed_26_26 : 1;
      // uint32 geom : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 event_number : 16;
    // uint32 ts : 2;
    // uint32 count : 6;
    // uint32 dummy_24_25 : 2;
    // uint32 unnamed_26_26 : 1;
    // uint32 geom : 5;
  // } ;
  // uint32 event_number : 16;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ts : 2;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(header.ts,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.ts)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 6;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_25 : 2;
  {
  FCNCALL_SUBNAME("dummy_24_25");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_24_25,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_24_25)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_26_26 : 1;
  {
  FCNCALL_SUBNAME("unnamed_26_26");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_26_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_26_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V830

#ifndef USER_DEF_VME_MESYTEC_MADC32
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_MADC32)::FCNCALL_NAME(VME_MESYTEC_MADC32)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA14_OVERFLOW,DATA14_OVERFLOW,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_MADC32

#ifndef USER_DEF_VME_MESYTEC_MDPP16
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_MDPP16)::FCNCALL_NAME(VME_MESYTEC_MDPP16)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,34,100> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_MDPP16

#ifndef USER_DEF_DUMMY_TDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(DUMMY_TDC)::FCNCALL_NAME(DUMMY_TDC)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // DUMMY_WORD d;
  {
  FCNCALL_SUBNAME("d");
  { FCNCALL_CALL_CTRL_WRAP(d,d.FCNCALL_CALL(d)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_DUMMY_TDC

#ifndef USER_DEF_LAND_CAMAC_CONVERTER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_CAMAC_CONVERTER)::FCNCALL_NAME(LAND_CAMAC_CONVERTER)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // uint16 tpat;
  {
  FCNCALL_SUBNAME("tpat");
  { FCNCALL_CALL_CTRL_WRAP(tpat,FCNCALL_CALL_TYPE(uint16,tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // uint16 tprev;
  {
  FCNCALL_SUBNAME("tprev");
  { FCNCALL_CALL_CTRL_WRAP(tprev,FCNCALL_CALL_TYPE(uint16,tprev)); }
  FCNCALL_SUBNAME_END;
  }
  // uint16 tnext;
  {
  FCNCALL_SUBNAME("tnext");
  { FCNCALL_CALL_CTRL_WRAP(tnext,FCNCALL_CALL_TYPE(uint16,tnext)); }
  FCNCALL_SUBNAME_END;
  }
  // uint16 tprev2;
  {
  FCNCALL_SUBNAME("tprev2");
  { FCNCALL_CALL_CTRL_WRAP(tprev2,FCNCALL_CALL_TYPE(uint16,tprev2)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_SILENA_4418 qdc_SIA0429;
  {
  FCNCALL_SUBNAME("qdc_SIA0429");
  { FCNCALL_CALL_CTRL_WRAP(qdc_SIA0429,qdc_SIA0429.FCNCALL_CALL(qdc_SIA0429)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_SILENA_4418 qdc_SIA0458;
  {
  FCNCALL_SUBNAME("qdc_SIA0458");
  { FCNCALL_CALL_CTRL_WRAP(qdc_SIA0458,qdc_SIA0458.FCNCALL_CALL(qdc_SIA0458)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_SILENA_4418 tdc_SIA8035;
  {
  FCNCALL_SUBNAME("tdc_SIA8035");
  { FCNCALL_CALL_CTRL_WRAP(tdc_SIA8035,tdc_SIA8035.FCNCALL_CALL(tdc_SIA8035)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_SILENA_4418 qdc_SIA0416;
  {
  FCNCALL_SUBNAME("qdc_SIA0416");
  { FCNCALL_CALL_CTRL_WRAP(qdc_SIA0416,qdc_SIA0416.FCNCALL_CALL(qdc_SIA0416)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_SILENA_4418 tdc_SIA0426;
  {
  FCNCALL_SUBNAME("tdc_SIA0426");
  { FCNCALL_CALL_CTRL_WRAP(tdc_SIA0426,tdc_SIA0426.FCNCALL_CALL(tdc_SIA0426)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_SILENA_4418 tdc_SIA0400;
  {
  FCNCALL_SUBNAME("tdc_SIA0400");
  { FCNCALL_CALL_CTRL_WRAP(tdc_SIA0400,tdc_SIA0400.FCNCALL_CALL(tdc_SIA0400)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_SILENA_4418 tdc_SIA0401;
  {
  FCNCALL_SUBNAME("tdc_SIA0401");
  { FCNCALL_CALL_CTRL_WRAP(tdc_SIA0401,tdc_SIA0401.FCNCALL_CALL(tdc_SIA0401)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_CAMAC_CONVERTER

#ifndef USER_DEF_LAND_CAMAC_SCALER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_CAMAC_SCALER)::FCNCALL_NAME(LAND_CAMAC_SCALER)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // uint32 timestamp;
  {
  FCNCALL_SUBNAME("timestamp");
  { FCNCALL_CALL_CTRL_WRAP(timestamp,FCNCALL_CALL_TYPE(uint32,timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_31 : 32;
    // } ;
    // uint32 u32;
  // } endianess;
  {
  FCNCALL_SUBNAME("endianess");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_31 : 32;
  // } ;
  // uint32 unnamed_0_31 : 32;
  {
  FCNCALL_SUBNAME("unnamed_0_31");
  { FCNCALL_CALL_CTRL_WRAP(endianess.unnamed_0_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,endianess.unnamed_0_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(endianess.u32,FCNCALL_CALL_TYPE(uint32,endianess.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_LECROY_4434 scaler0;
  {
  FCNCALL_SUBNAME("scaler0");
  { FCNCALL_CALL_CTRL_WRAP(scaler0,scaler0.FCNCALL_CALL(scaler0)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_LECROY_4434 scaler2;
  {
  FCNCALL_SUBNAME("scaler2");
  { FCNCALL_CALL_CTRL_WRAP(scaler2,scaler2.FCNCALL_CALL(scaler2)); }
  FCNCALL_SUBNAME_END;
  }
  // CAMAC_LECROY_4434 scaler1;
  {
  FCNCALL_SUBNAME("scaler1");
  { FCNCALL_CALL_CTRL_WRAP(scaler1,scaler1.FCNCALL_CALL(scaler1)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_CAMAC_SCALER

#ifndef USER_DEF_LAND_CAMAC_TCAL_INFO
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_CAMAC_TCAL_INFO)::FCNCALL_NAME(LAND_CAMAC_TCAL_INFO)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_CAMAC_TCAL_INFO

#ifndef USER_DEF_LAND_FASTBUS1
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_FASTBUS1)::FCNCALL_NAME(LAND_FASTBUS1)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // FASTBUS_LECROY_1885 qdc_L_Q47342;
  {
  FCNCALL_SUBNAME("qdc_L_Q47342");
  { FCNCALL_CALL_CTRL_WRAP(qdc_L_Q47342,qdc_L_Q47342.FCNCALL_CALL(qdc_L_Q47342)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1885 qdc_L_Q46848;
  {
  FCNCALL_SUBNAME("qdc_L_Q46848");
  { FCNCALL_CALL_CTRL_WRAP(qdc_L_Q46848,qdc_L_Q46848.FCNCALL_CALL(qdc_L_Q46848)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1885 qdc_L_Q11111;
  {
  FCNCALL_SUBNAME("qdc_L_Q11111");
  { FCNCALL_CALL_CTRL_WRAP(qdc_L_Q11111,qdc_L_Q11111.FCNCALL_CALL(qdc_L_Q11111)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1885 qdc_L_Q47315;
  {
  FCNCALL_SUBNAME("qdc_L_Q47315");
  { FCNCALL_CALL_CTRL_WRAP(qdc_L_Q47315,qdc_L_Q47315.FCNCALL_CALL(qdc_L_Q47315)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1885 qdc_L_Q17320;
  {
  FCNCALL_SUBNAME("qdc_L_Q17320");
  { FCNCALL_CALL_CTRL_WRAP(qdc_L_Q17320,qdc_L_Q17320.FCNCALL_CALL(qdc_L_Q17320)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1885 qdc_L_Q15372;
  {
  FCNCALL_SUBNAME("qdc_L_Q15372");
  { FCNCALL_CALL_CTRL_WRAP(qdc_L_Q15372,qdc_L_Q15372.FCNCALL_CALL(qdc_L_Q15372)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1885 qdc_F_Q46962;
  {
  FCNCALL_SUBNAME("qdc_F_Q46962");
  { FCNCALL_CALL_CTRL_WRAP(qdc_F_Q46962,qdc_F_Q46962.FCNCALL_CALL(qdc_F_Q46962)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1885 qdc_L_Q46993;
  {
  FCNCALL_SUBNAME("qdc_L_Q46993");
  { FCNCALL_CALL_CTRL_WRAP(qdc_L_Q46993,qdc_L_Q46993.FCNCALL_CALL(qdc_L_Q46993)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1885 qdc_L_Q15358;
  {
  FCNCALL_SUBNAME("qdc_L_Q15358");
  { FCNCALL_CALL_CTRL_WRAP(qdc_L_Q15358,qdc_L_Q15358.FCNCALL_CALL(qdc_L_Q15358)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1885 qdc_L_Q47264;
  {
  FCNCALL_SUBNAME("qdc_L_Q47264");
  { FCNCALL_CALL_CTRL_WRAP(qdc_L_Q47264,qdc_L_Q47264.FCNCALL_CALL(qdc_L_Q47264)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T81855;
  {
  FCNCALL_SUBNAME("tdc_L_T81855");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T81855,tdc_L_T81855.FCNCALL_CALL(tdc_L_T81855)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T87044;
  {
  FCNCALL_SUBNAME("tdc_L_T87044");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T87044,tdc_L_T87044.FCNCALL_CALL(tdc_L_T87044)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T87024;
  {
  FCNCALL_SUBNAME("tdc_L_T87024");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T87024,tdc_L_T87024.FCNCALL_CALL(tdc_L_T87024)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T81800;
  {
  FCNCALL_SUBNAME("tdc_L_T81800");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T81800,tdc_L_T81800.FCNCALL_CALL(tdc_L_T81800)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_FASTBUS1

#ifndef USER_DEF_LAND_FASTBUS2
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_FASTBUS2)::FCNCALL_NAME(LAND_FASTBUS2)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // FASTBUS_LECROY_1875 tdc_L_T87047;
  {
  FCNCALL_SUBNAME("tdc_L_T87047");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T87047,tdc_L_T87047.FCNCALL_CALL(tdc_L_T87047)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T81808;
  {
  FCNCALL_SUBNAME("tdc_L_T81808");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T81808,tdc_L_T81808.FCNCALL_CALL(tdc_L_T81808)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T48854;
  {
  FCNCALL_SUBNAME("tdc_L_T48854");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T48854,tdc_L_T48854.FCNCALL_CALL(tdc_L_T48854)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T81859;
  {
  FCNCALL_SUBNAME("tdc_L_T81859");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T81859,tdc_L_T81859.FCNCALL_CALL(tdc_L_T81859)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T81795;
  {
  FCNCALL_SUBNAME("tdc_L_T81795");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T81795,tdc_L_T81795.FCNCALL_CALL(tdc_L_T81795)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T81806;
  {
  FCNCALL_SUBNAME("tdc_L_T81806");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T81806,tdc_L_T81806.FCNCALL_CALL(tdc_L_T81806)); }
  FCNCALL_SUBNAME_END;
  }
  // FASTBUS_LECROY_1875 tdc_L_T48834;
  {
  FCNCALL_SUBNAME("tdc_L_T48834");
  { FCNCALL_CALL_CTRL_WRAP(tdc_L_T48834,tdc_L_T48834.FCNCALL_CALL(tdc_L_T48834)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_FASTBUS2

#ifndef USER_DEF_LAND_FASTBUS_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_FASTBUS_ERROR)::FCNCALL_NAME(LAND_FASTBUS_ERROR)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // union 
  // {
    // struct 
    // {
      // uint32 timeout_waiting_smi : 1;
      // uint32 illegal_block_transfer : 1;
      // uint32 fifa_address_overflow : 1;
      // uint32 fifa_register_error : 1;
      // uint32 dummy_4_15 : 12;
      // uint32 init_error : 1;
      // uint32 dummy_17_31 : 15;
    // } ;
    // uint32 u32;
  // } error_code;
  {
  FCNCALL_SUBNAME("error_code");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 timeout_waiting_smi : 1;
    // uint32 illegal_block_transfer : 1;
    // uint32 fifa_address_overflow : 1;
    // uint32 fifa_register_error : 1;
    // uint32 dummy_4_15 : 12;
    // uint32 init_error : 1;
    // uint32 dummy_17_31 : 15;
  // } ;
  // uint32 timeout_waiting_smi : 1;
  {
  FCNCALL_SUBNAME("timeout_waiting_smi");
  { FCNCALL_CALL_CTRL_WRAP(error_code.timeout_waiting_smi,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_code.timeout_waiting_smi)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 illegal_block_transfer : 1;
  {
  FCNCALL_SUBNAME("illegal_block_transfer");
  { FCNCALL_CALL_CTRL_WRAP(error_code.illegal_block_transfer,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_code.illegal_block_transfer)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fifa_address_overflow : 1;
  {
  FCNCALL_SUBNAME("fifa_address_overflow");
  { FCNCALL_CALL_CTRL_WRAP(error_code.fifa_address_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_code.fifa_address_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fifa_register_error : 1;
  {
  FCNCALL_SUBNAME("fifa_register_error");
  { FCNCALL_CALL_CTRL_WRAP(error_code.fifa_register_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_code.fifa_register_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_4_15 : 12;
  {
  FCNCALL_SUBNAME("dummy_4_15");
  { FCNCALL_CALL_CTRL_WRAP(error_code.dummy_4_15,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_code.dummy_4_15)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 init_error : 1;
  {
  FCNCALL_SUBNAME("init_error");
  { FCNCALL_CALL_CTRL_WRAP(error_code.init_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_code.init_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_17_31 : 15;
  {
  FCNCALL_SUBNAME("dummy_17_31");
  { FCNCALL_CALL_CTRL_WRAP(error_code.dummy_17_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_code.dummy_17_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_code.u32,FCNCALL_CALL_TYPE(uint32,error_code.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 error_num;
  {
  FCNCALL_SUBNAME("error_num");
  { FCNCALL_CALL_CTRL_WRAP(error_num,FCNCALL_CALL_TYPE(uint32,error_num)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_FASTBUS_ERROR

#ifndef USER_DEF_LAND_VME
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_VME)::FCNCALL_NAME(LAND_VME)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // LAND_STD_VME vme;
  {
  FCNCALL_SUBNAME("vme");
  { FCNCALL_CALL_CTRL_WRAP(vme,vme.FCNCALL_CALL(vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_VME

#ifndef USER_DEF_unpack_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_event)::FCNCALL_NAME(unpack_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_event_base,FCNCALL_CLASS_NAME(unpack_event_base)::FCNCALL_CALL_BASE());
  // LAND_CAMAC_CONVERTER camac;
  {
  FCNCALL_SUBNAME("camac");
  { FCNCALL_CALL_CTRL_WRAP(camac,camac.FCNCALL_CALL(camac)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_CAMAC_TCAL_INFO camac_tcal_info;
  {
  FCNCALL_SUBNAME("camac_tcal_info");
  { FCNCALL_CALL_CTRL_WRAP(camac_tcal_info,camac_tcal_info.FCNCALL_CALL(camac_tcal_info)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_CAMAC_CONVERTER camac_tcal;
  {
  FCNCALL_SUBNAME("camac_tcal");
  { FCNCALL_CALL_CTRL_WRAP(camac_tcal,camac_tcal.FCNCALL_CALL(camac_tcal)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_CAMAC_SCALER camac_scalers;
  {
  FCNCALL_SUBNAME("camac_scalers");
  { FCNCALL_CALL_CTRL_WRAP(camac_scalers,camac_scalers.FCNCALL_CALL(camac_scalers)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_CAMAC_SCALER camac_scalers_tcal;
  {
  FCNCALL_SUBNAME("camac_scalers_tcal");
  { FCNCALL_CALL_CTRL_WRAP(camac_scalers_tcal,camac_scalers_tcal.FCNCALL_CALL(camac_scalers_tcal)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_FASTBUS_ERROR fastbus_error;
  {
  FCNCALL_SUBNAME("fastbus_error");
  { FCNCALL_CALL_CTRL_WRAP(fastbus_error,fastbus_error.FCNCALL_CALL(fastbus_error)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_FASTBUS1 fastbus_1;
  {
  FCNCALL_SUBNAME("fastbus_1");
  { FCNCALL_CALL_CTRL_WRAP(fastbus_1,fastbus_1.FCNCALL_CALL(fastbus_1)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_FASTBUS2 fastbus_2;
  {
  FCNCALL_SUBNAME("fastbus_2");
  { FCNCALL_CALL_CTRL_WRAP(fastbus_2,fastbus_2.FCNCALL_CALL(fastbus_2)); }
  FCNCALL_SUBNAME_END;
  }
  // DUMMY_TDC d1;
  {
  FCNCALL_SUBNAME("d1");
  { FCNCALL_CALL_CTRL_WRAP(d1,d1.FCNCALL_CALL(d1)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_sticky_event)::FCNCALL_NAME(unpack_sticky_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_sticky_event_base,FCNCALL_CLASS_NAME(unpack_sticky_event_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: CAMAC_LECROY_4434
// raw_array_zero_suppress  .data(DATA24)[32]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_LECROY_4434
// .CAMAC_LECROY_4434// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_LECROY_4434
// .CAMAC_LECROY_4434// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_LECROY_4434
// .CAMAC_LECROY_4434
// Corr struct for: CAMAC_PHILLIPS_7164
// raw_array_zero_suppress  .data(DATA12)[16]
// DATA12 .data[16]
// 
// size= 1  chunks= 16  mem=  16  line=32  total=512
// size=16  chunks=  1  mem=  16  line=17  total=272
// 
// corr structure: CAMAC_PHILLIPS_7164
  // DATA12 .data[16]
// .CAMAC_PHILLIPS_7164/16/.data/16/[16]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_PHILLIPS_7164
// .CAMAC_PHILLIPS_7164// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_PHILLIPS_7164
// .CAMAC_PHILLIPS_7164
// Corr struct for: CAMAC_SILENA_4418
// raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// DATA12_OVERFLOW .data[8]
// 
// size= 1  chunks=  8  mem=   8  line=16  total=128
// size= 8  chunks=  1  mem=   8  line=9  total=72
// 
// corr structure: CAMAC_SILENA_4418
  // DATA12_OVERFLOW .data[8]
// .CAMAC_SILENA_4418/8/.data/8/[8]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_SILENA_4418
// .CAMAC_SILENA_4418// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_SILENA_4418
// .CAMAC_SILENA_4418
// Corr struct for: DUMMY_WORD
// uint32  .dummy_word
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY_WORD
// .DUMMY_WORD// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY_WORD
// .DUMMY_WORD// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY_WORD
// .DUMMY_WORD
// Corr struct for: FASTBUS_LECROY_1875
// raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// DATA12_RANGE .data[64]
// 
// size= 1  chunks= 64  mem=  64  line=128  total=8192
// size=64  chunks=  1  mem=  64  line=65  total=4160
// 
// corr structure: FASTBUS_LECROY_1875
  // DATA12_RANGE .data[64]
// .FASTBUS_LECROY_1875/64/.data/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1875
// .FASTBUS_LECROY_1875// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1875
// .FASTBUS_LECROY_1875
// Corr struct for: FASTBUS_LECROY_1885
// raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// DATA12_RANGE .data[96]
// 
// size= 1  chunks= 96  mem=  96  line=192  total=18432
// size=96  chunks=  1  mem=  96  line=97  total=9312
// 
// corr structure: FASTBUS_LECROY_1885
  // DATA12_RANGE .data[96]
// .FASTBUS_LECROY_1885/96/.data/96/[96]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1885
// .FASTBUS_LECROY_1885// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1885
// .FASTBUS_LECROY_1885
// Corr struct for: VME_CAEN_V775
// raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
// uint32  .event_number
  // ---
// uint32  .unnamed_24_26
  // ---
// uint32  .geom
  // ---
// uint32  .u32
  // ---
// DATA12_OVERFLOW .data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: VME_CAEN_V775
  // DATA12_OVERFLOW .data[32]
// .VME_CAEN_V775/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V775
// .VME_CAEN_V775// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V775
// .VME_CAEN_V775
// Corr struct for: LAND_STD_VME
// uint32  .fail_general
  // ---
// uint32  .fail_data_corrupt
  // ---
// uint32  .fail_data_missing
  // ---
// uint32  .fail_data_too_much
  // ---
// uint32  .fail_event_counter_mismatch
  // ---
// uint32  .fail_readout_error_driver
  // ---
// uint32  .fail_unexpected_trigger
  // ---
// uint32  .dummy_7_26
  // ---
// uint32  .has_no_zero_suppression
  // ---
// uint32  .has_multi_adctdc_counter0
  // ---
// uint32  .has_multi_scaler_counter0
  // ---
// uint32  .has_multi_event
  // ---
// uint32  .has_time_stamp
  // ---
// uint32  .u32
  // ---
// uint32  .time_stamp
  // ---
// uint32  .multi_events
  // ---
// uint32  .multi_scaler_counter0
  // ---
// uint32  .multi_adctdc_counter0
  // ---
// VME_CAEN_V775  .tdc0
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
  // uint32  .event_number
    // ---
  // uint32  .unnamed_24_26
    // ---
  // uint32  .geom
    // ---
  // uint32  .u32
    // ---
// DATA12_OVERFLOW .tdc0.data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: LAND_STD_VME
  // DATA12_OVERFLOW .tdc0.data[32]
// .LAND_STD_VME/32/.tdc0/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME
// Corr struct for: VME_CAEN_V1190_SUBTDC
// uint32  .bunch_id
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .word_count
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SUBTDC
// .VME_CAEN_V1190_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SUBTDC
// .VME_CAEN_V1190_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SUBTDC
// .VME_CAEN_V1190_SUBTDC
// Corr struct for: VME_CAEN_V1190
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1190_SUBTDC  .tdc[4]
  // uint32  .bunch_id
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .word_count
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190
// .VME_CAEN_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190
// .VME_CAEN_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190
// .VME_CAEN_V1190
// Corr struct for: VME_CAEN_V1190_SHORT_SUBTDC
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC
// .VME_CAEN_V1190_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC
// .VME_CAEN_V1190_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC
// .VME_CAEN_V1190_SHORT_SUBTDC
// Corr struct for: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// Corr struct for: VME_CAEN_V1190_SHORT
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1190_SHORT_SUBTDC  .tdc[4]
// VME_CAEN_V1190_SHORT_SUBTDC_ERROR  .err[4]
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT
// .VME_CAEN_V1190_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT
// .VME_CAEN_V1190_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT
// .VME_CAEN_V1190_SHORT
// Corr struct for: VME_CAEN_V1290_SUBTDC
// uint32  .bunch_id
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .word_count
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SUBTDC
// .VME_CAEN_V1290_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SUBTDC
// .VME_CAEN_V1290_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SUBTDC
// .VME_CAEN_V1290_SUBTDC
// Corr struct for: VME_CAEN_V1290
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1290_SUBTDC  .tdc[4]
  // uint32  .bunch_id
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .word_count
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290
// .VME_CAEN_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290
// .VME_CAEN_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290
// .VME_CAEN_V1290
// Corr struct for: VME_CAEN_V1290_SHORT_SUBTDC
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC
// .VME_CAEN_V1290_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC
// .VME_CAEN_V1290_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC
// .VME_CAEN_V1290_SHORT_SUBTDC
// Corr struct for: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// Corr struct for: VME_CAEN_V1290_SHORT
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1290_SHORT_SUBTDC  .tdc[4]
// VME_CAEN_V1290_SHORT_SUBTDC_ERROR  .err[4]
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT
// .VME_CAEN_V1290_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT
// .VME_CAEN_V1290_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT
// .VME_CAEN_V1290_SHORT
// Corr struct for: VME_CAEN_V830
// raw_array_zero_suppress  .data(DATA32)[32]
  // ---
// uint32  .event_number
  // ---
// uint32  .ts
  // ---
// uint32  .count
  // ---
// uint32  .dummy_24_25
  // ---
// uint32  .unnamed_26_26
  // ---
// uint32  .geom
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830
// Corr struct for: VME_MESYTEC_MADC32
// raw_array_zero_suppress  .data(DATA14_OVERFLOW)[32]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA14_OVERFLOW .data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: VME_MESYTEC_MADC32
  // DATA14_OVERFLOW .data[32]
// .VME_MESYTEC_MADC32/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MADC32
// .VME_MESYTEC_MADC32// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MADC32
// .VME_MESYTEC_MADC32
// Corr struct for: VME_MESYTEC_MDPP16
// raw_array_multi_zero_suppress  .data(DATA16_OVERFLOW)[34][100]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA16_OVERFLOW .data[34][100]
// 
// size= 1  chunks=3400  mem=3400  line=6800  total=23120000
// size=100  chunks= 34  mem=3400  line=3434  total=11675600
// size=3400  chunks=  1  mem=3400  line=3401  total=11563400
// 
// corr structure: VME_MESYTEC_MDPP16
  // DATA16_OVERFLOW .data[34][100]
// .VME_MESYTEC_MDPP16/3400/.data/3400/[34]/100/[100]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MDPP16
// .VME_MESYTEC_MDPP16// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MDPP16
// .VME_MESYTEC_MDPP16
// Corr struct for: DUMMY_TDC
//  : public unpack_subevent_base
// ---
// DUMMY_WORD  .d
  // uint32  .dummy_word
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY_TDC
// .DUMMY_TDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY_TDC
// .DUMMY_TDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY_TDC
// .DUMMY_TDC
// Corr struct for: LAND_CAMAC_CONVERTER
//  : public unpack_subevent_base
// ---
// uint16  .tpat
  // ---
// uint16  .tprev
  // ---
// uint16  .tnext
  // ---
// uint16  .tprev2
  // ---
// CAMAC_SILENA_4418  .qdc_SIA0429
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// CAMAC_SILENA_4418  .qdc_SIA0458
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// CAMAC_SILENA_4418  .tdc_SIA8035
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// CAMAC_SILENA_4418  .qdc_SIA0416
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// CAMAC_SILENA_4418  .tdc_SIA0426
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// CAMAC_SILENA_4418  .tdc_SIA0400
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// CAMAC_SILENA_4418  .tdc_SIA0401
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// DATA12_OVERFLOW .qdc_SIA0429.data[8]
// DATA12_OVERFLOW .qdc_SIA0458.data[8]
// DATA12_OVERFLOW .tdc_SIA8035.data[8]
// DATA12_OVERFLOW .qdc_SIA0416.data[8]
// DATA12_OVERFLOW .tdc_SIA0426.data[8]
// DATA12_OVERFLOW .tdc_SIA0400.data[8]
// DATA12_OVERFLOW .tdc_SIA0401.data[8]
// 
// size= 1  chunks= 56  mem=  56  line=112  total=6272
// size= 8  chunks=  7  mem=  56  line=63  total=3528
// size=56  chunks=  1  mem=  56  line=57  total=3192
// 
// corr structure: LAND_CAMAC_CONVERTER
  // DATA12_OVERFLOW .qdc_SIA0429.data[8]
  // DATA12_OVERFLOW .qdc_SIA0458.data[8]
  // DATA12_OVERFLOW .tdc_SIA8035.data[8]
  // DATA12_OVERFLOW .qdc_SIA0416.data[8]
  // DATA12_OVERFLOW .tdc_SIA0426.data[8]
  // DATA12_OVERFLOW .tdc_SIA0400.data[8]
  // DATA12_OVERFLOW .tdc_SIA0401.data[8]
// .LAND_CAMAC_CONVERTER/56/.qdc_SIA0429/8/.data/8/[8]
                         // .qdc_SIA0458/8/.data/8/[8]
                         // .tdc_SIA8035/8/.data/8/[8]
                         // .qdc_SIA0416/8/.data/8/[8]
                         // .tdc_SIA0426/8/.data/8/[8]
                         // .tdc_SIA0400/8/.data/8/[8]
                         // .tdc_SIA0401/8/.data/8/[8]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_CONVERTER
// .LAND_CAMAC_CONVERTER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_CONVERTER
// .LAND_CAMAC_CONVERTER
// Corr struct for: LAND_CAMAC_SCALER
//  : public unpack_subevent_base
// ---
// uint32  .timestamp
  // ---
// uint32  .unnamed_0_31
  // ---
// uint32  .u32
  // ---
// CAMAC_LECROY_4434  .scaler0
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// CAMAC_LECROY_4434  .scaler2
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// CAMAC_LECROY_4434  .scaler1
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_SCALER
// .LAND_CAMAC_SCALER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_SCALER
// .LAND_CAMAC_SCALER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_SCALER
// .LAND_CAMAC_SCALER
// Corr struct for: LAND_CAMAC_TCAL_INFO
//  : public unpack_subevent_base
// ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_TCAL_INFO
// .LAND_CAMAC_TCAL_INFO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_TCAL_INFO
// .LAND_CAMAC_TCAL_INFO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_CAMAC_TCAL_INFO
// .LAND_CAMAC_TCAL_INFO
// Corr struct for: LAND_FASTBUS1
//  : public unpack_subevent_base
// ---
// FASTBUS_LECROY_1885  .qdc_L_Q47342
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1885  .qdc_L_Q46848
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1885  .qdc_L_Q11111
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1885  .qdc_L_Q47315
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1885  .qdc_L_Q17320
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1885  .qdc_L_Q15372
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1885  .qdc_F_Q46962
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1885  .qdc_L_Q46993
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1885  .qdc_L_Q15358
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1885  .qdc_L_Q47264
  // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// FASTBUS_LECROY_1875  .tdc_L_T81855
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// FASTBUS_LECROY_1875  .tdc_L_T87044
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// FASTBUS_LECROY_1875  .tdc_L_T87024
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// FASTBUS_LECROY_1875  .tdc_L_T81800
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// DATA12_RANGE .qdc_L_Q47342.data[96]
// DATA12_RANGE .qdc_L_Q46848.data[96]
// DATA12_RANGE .qdc_L_Q11111.data[96]
// DATA12_RANGE .qdc_L_Q47315.data[96]
// DATA12_RANGE .qdc_L_Q17320.data[96]
// DATA12_RANGE .qdc_L_Q15372.data[96]
// DATA12_RANGE .qdc_F_Q46962.data[96]
// DATA12_RANGE .qdc_L_Q46993.data[96]
// DATA12_RANGE .qdc_L_Q15358.data[96]
// DATA12_RANGE .qdc_L_Q47264.data[96]
// DATA12_RANGE .tdc_L_T81855.data[64]
// DATA12_RANGE .tdc_L_T87044.data[64]
// DATA12_RANGE .tdc_L_T87024.data[64]
// DATA12_RANGE .tdc_L_T81800.data[64]
// 
// size= 1  chunks=1216  mem=1216  line=2432  total=2957312
// size=64  chunks=964  mem=61696  line=62660  total=76194560
// size=96  chunks= 14  mem=1344  line=1358  total=1651328
// size=1216  chunks=  1  mem=1216  line=1217  total=1479872
// 
// corr structure: LAND_FASTBUS1
  // DATA12_RANGE .qdc_L_Q47342.data[96]
  // DATA12_RANGE .qdc_L_Q46848.data[96]
  // DATA12_RANGE .qdc_L_Q11111.data[96]
  // DATA12_RANGE .qdc_L_Q47315.data[96]
  // DATA12_RANGE .qdc_L_Q17320.data[96]
  // DATA12_RANGE .qdc_L_Q15372.data[96]
  // DATA12_RANGE .qdc_F_Q46962.data[96]
  // DATA12_RANGE .qdc_L_Q46993.data[96]
  // DATA12_RANGE .qdc_L_Q15358.data[96]
  // DATA12_RANGE .qdc_L_Q47264.data[96]
  // DATA12_RANGE .tdc_L_T81855.data[64]
  // DATA12_RANGE .tdc_L_T87044.data[64]
  // DATA12_RANGE .tdc_L_T87024.data[64]
  // DATA12_RANGE .tdc_L_T81800.data[64]
// .LAND_FASTBUS1/1216/.qdc_L_Q47342/96/.data/96/[96]
                    // .qdc_L_Q46848/96/.data/96/[96]
                    // .qdc_L_Q11111/96/.data/96/[96]
                    // .qdc_L_Q47315/96/.data/96/[96]
                    // .qdc_L_Q17320/96/.data/96/[96]
                    // .qdc_L_Q15372/96/.data/96/[96]
                    // .qdc_F_Q46962/96/.data/96/[96]
                    // .qdc_L_Q46993/96/.data/96/[96]
                    // .qdc_L_Q15358/96/.data/96/[96]
                    // .qdc_L_Q47264/96/.data/96/[96]
                    // .tdc_L_T81855/64/.data/64/[64]
                    // .tdc_L_T87044/64/.data/64/[64]
                    // .tdc_L_T87024/64/.data/64/[64]
                    // .tdc_L_T81800/64/.data/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_FASTBUS1
// .LAND_FASTBUS1// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_FASTBUS1
// .LAND_FASTBUS1
// Corr struct for: LAND_FASTBUS2
//  : public unpack_subevent_base
// ---
// FASTBUS_LECROY_1875  .tdc_L_T87047
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// FASTBUS_LECROY_1875  .tdc_L_T81808
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// FASTBUS_LECROY_1875  .tdc_L_T48854
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// FASTBUS_LECROY_1875  .tdc_L_T81859
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// FASTBUS_LECROY_1875  .tdc_L_T81795
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// FASTBUS_LECROY_1875  .tdc_L_T81806
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// FASTBUS_LECROY_1875  .tdc_L_T48834
  // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// DATA12_RANGE .tdc_L_T87047.data[64]
// DATA12_RANGE .tdc_L_T81808.data[64]
// DATA12_RANGE .tdc_L_T48854.data[64]
// DATA12_RANGE .tdc_L_T81859.data[64]
// DATA12_RANGE .tdc_L_T81795.data[64]
// DATA12_RANGE .tdc_L_T81806.data[64]
// DATA12_RANGE .tdc_L_T48834.data[64]
// 
// size= 1  chunks=448  mem= 448  line=896  total=401408
// size=64  chunks=  7  mem= 448  line=455  total=203840
// size=448  chunks=  1  mem= 448  line=449  total=201152
// 
// corr structure: LAND_FASTBUS2
  // DATA12_RANGE .tdc_L_T87047.data[64]
  // DATA12_RANGE .tdc_L_T81808.data[64]
  // DATA12_RANGE .tdc_L_T48854.data[64]
  // DATA12_RANGE .tdc_L_T81859.data[64]
  // DATA12_RANGE .tdc_L_T81795.data[64]
  // DATA12_RANGE .tdc_L_T81806.data[64]
  // DATA12_RANGE .tdc_L_T48834.data[64]
// .LAND_FASTBUS2/448/.tdc_L_T87047/64/.data/64/[64]
                   // .tdc_L_T81808/64/.data/64/[64]
                   // .tdc_L_T48854/64/.data/64/[64]
                   // .tdc_L_T81859/64/.data/64/[64]
                   // .tdc_L_T81795/64/.data/64/[64]
                   // .tdc_L_T81806/64/.data/64/[64]
                   // .tdc_L_T48834/64/.data/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_FASTBUS2
// .LAND_FASTBUS2// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_FASTBUS2
// .LAND_FASTBUS2
// Corr struct for: LAND_FASTBUS_ERROR
//  : public unpack_subevent_base
// ---
// uint32  .timeout_waiting_smi
  // ---
// uint32  .illegal_block_transfer
  // ---
// uint32  .fifa_address_overflow
  // ---
// uint32  .fifa_register_error
  // ---
// uint32  .dummy_4_15
  // ---
// uint32  .init_error
  // ---
// uint32  .dummy_17_31
  // ---
// uint32  .u32
  // ---
// uint32  .error_num
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_FASTBUS_ERROR
// .LAND_FASTBUS_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_FASTBUS_ERROR
// .LAND_FASTBUS_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_FASTBUS_ERROR
// .LAND_FASTBUS_ERROR
// Corr struct for: LAND_VME
//  : public unpack_subevent_base
// ---
// LAND_STD_VME  .vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .dummy_7_26
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
  // VME_CAEN_V775  .tdc0
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
    // uint32  .event_number
      // ---
    // uint32  .unnamed_24_26
      // ---
    // uint32  .geom
      // ---
    // uint32  .u32
      // ---
// DATA12_OVERFLOW .vme.tdc0.data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: LAND_VME
  // DATA12_OVERFLOW .vme.tdc0.data[32]
// .LAND_VME/32/.vme/32/.tdc0/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_VME
// .LAND_VME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_VME
// .LAND_VME
// Corr struct for: unpack_event
//  : public unpack_event_base
// ---
// LAND_CAMAC_CONVERTER  .camac
  //  : public unpack_subevent_base
  // ---
  // uint16  .tpat
    // ---
  // uint16  .tprev
    // ---
  // uint16  .tnext
    // ---
  // uint16  .tprev2
    // ---
  // CAMAC_SILENA_4418  .qdc_SIA0429
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .qdc_SIA0458
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .tdc_SIA8035
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .qdc_SIA0416
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .tdc_SIA0426
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .tdc_SIA0400
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .tdc_SIA0401
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// LAND_CAMAC_TCAL_INFO  .camac_tcal_info
  //  : public unpack_subevent_base
  // ---
// LAND_CAMAC_CONVERTER  .camac_tcal
  //  : public unpack_subevent_base
  // ---
  // uint16  .tpat
    // ---
  // uint16  .tprev
    // ---
  // uint16  .tnext
    // ---
  // uint16  .tprev2
    // ---
  // CAMAC_SILENA_4418  .qdc_SIA0429
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .qdc_SIA0458
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .tdc_SIA8035
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .qdc_SIA0416
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .tdc_SIA0426
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .tdc_SIA0400
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
  // CAMAC_SILENA_4418  .tdc_SIA0401
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// LAND_CAMAC_SCALER  .camac_scalers
  //  : public unpack_subevent_base
  // ---
  // uint32  .timestamp
    // ---
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
  // CAMAC_LECROY_4434  .scaler0
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // CAMAC_LECROY_4434  .scaler2
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // CAMAC_LECROY_4434  .scaler1
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
// LAND_CAMAC_SCALER  .camac_scalers_tcal
  //  : public unpack_subevent_base
  // ---
  // uint32  .timestamp
    // ---
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
  // CAMAC_LECROY_4434  .scaler0
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // CAMAC_LECROY_4434  .scaler2
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // CAMAC_LECROY_4434  .scaler1
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
// LAND_FASTBUS_ERROR  .fastbus_error
  //  : public unpack_subevent_base
  // ---
  // uint32  .timeout_waiting_smi
    // ---
  // uint32  .illegal_block_transfer
    // ---
  // uint32  .fifa_address_overflow
    // ---
  // uint32  .fifa_register_error
    // ---
  // uint32  .dummy_4_15
    // ---
  // uint32  .init_error
    // ---
  // uint32  .dummy_17_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .error_num
    // ---
// LAND_FASTBUS1  .fastbus_1
  //  : public unpack_subevent_base
  // ---
  // FASTBUS_LECROY_1885  .qdc_L_Q47342
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1885  .qdc_L_Q46848
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1885  .qdc_L_Q11111
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1885  .qdc_L_Q47315
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1885  .qdc_L_Q17320
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1885  .qdc_L_Q15372
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1885  .qdc_F_Q46962
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1885  .qdc_L_Q46993
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1885  .qdc_L_Q15358
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1885  .qdc_L_Q47264
    // raw_array_zero_suppress  .data(DATA12_RANGE)[96]
  // FASTBUS_LECROY_1875  .tdc_L_T81855
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
  // FASTBUS_LECROY_1875  .tdc_L_T87044
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
  // FASTBUS_LECROY_1875  .tdc_L_T87024
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
  // FASTBUS_LECROY_1875  .tdc_L_T81800
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// LAND_FASTBUS2  .fastbus_2
  //  : public unpack_subevent_base
  // ---
  // FASTBUS_LECROY_1875  .tdc_L_T87047
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
  // FASTBUS_LECROY_1875  .tdc_L_T81808
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
  // FASTBUS_LECROY_1875  .tdc_L_T48854
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
  // FASTBUS_LECROY_1875  .tdc_L_T81859
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
  // FASTBUS_LECROY_1875  .tdc_L_T81795
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
  // FASTBUS_LECROY_1875  .tdc_L_T81806
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
  // FASTBUS_LECROY_1875  .tdc_L_T48834
    // raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// DUMMY_TDC  .d1
  //  : public unpack_subevent_base
  // ---
  // DUMMY_WORD  .d
    // uint32  .dummy_word
      // ---
// DATA12_OVERFLOW .camac.qdc_SIA0429.data[8]
// DATA12_OVERFLOW .camac.qdc_SIA0458.data[8]
// DATA12_OVERFLOW .camac.tdc_SIA8035.data[8]
// DATA12_OVERFLOW .camac.qdc_SIA0416.data[8]
// DATA12_OVERFLOW .camac.tdc_SIA0426.data[8]
// DATA12_OVERFLOW .camac.tdc_SIA0400.data[8]
// DATA12_OVERFLOW .camac.tdc_SIA0401.data[8]
// DATA12_OVERFLOW .camac_tcal.qdc_SIA0429.data[8]
// DATA12_OVERFLOW .camac_tcal.qdc_SIA0458.data[8]
// DATA12_OVERFLOW .camac_tcal.tdc_SIA8035.data[8]
// DATA12_OVERFLOW .camac_tcal.qdc_SIA0416.data[8]
// DATA12_OVERFLOW .camac_tcal.tdc_SIA0426.data[8]
// DATA12_OVERFLOW .camac_tcal.tdc_SIA0400.data[8]
// DATA12_OVERFLOW .camac_tcal.tdc_SIA0401.data[8]
// DATA12_RANGE .fastbus_1.qdc_L_Q47342.data[96]
// DATA12_RANGE .fastbus_1.qdc_L_Q46848.data[96]
// DATA12_RANGE .fastbus_1.qdc_L_Q11111.data[96]
// DATA12_RANGE .fastbus_1.qdc_L_Q47315.data[96]
// DATA12_RANGE .fastbus_1.qdc_L_Q17320.data[96]
// DATA12_RANGE .fastbus_1.qdc_L_Q15372.data[96]
// DATA12_RANGE .fastbus_1.qdc_F_Q46962.data[96]
// DATA12_RANGE .fastbus_1.qdc_L_Q46993.data[96]
// DATA12_RANGE .fastbus_1.qdc_L_Q15358.data[96]
// DATA12_RANGE .fastbus_1.qdc_L_Q47264.data[96]
// DATA12_RANGE .fastbus_1.tdc_L_T81855.data[64]
// DATA12_RANGE .fastbus_1.tdc_L_T87044.data[64]
// DATA12_RANGE .fastbus_1.tdc_L_T87024.data[64]
// DATA12_RANGE .fastbus_1.tdc_L_T81800.data[64]
// DATA12_RANGE .fastbus_2.tdc_L_T87047.data[64]
// DATA12_RANGE .fastbus_2.tdc_L_T81808.data[64]
// DATA12_RANGE .fastbus_2.tdc_L_T48854.data[64]
// DATA12_RANGE .fastbus_2.tdc_L_T81859.data[64]
// DATA12_RANGE .fastbus_2.tdc_L_T81795.data[64]
// DATA12_RANGE .fastbus_2.tdc_L_T81806.data[64]
// DATA12_RANGE .fastbus_2.tdc_L_T48834.data[64]
// 
// size= 1  chunks=1776  mem=1776  line=3552  total=6308352
// size= 8  chunks=1678  mem=13424  line=15102  total=26821152
// size=56  chunks=1666  mem=93296  line=94962  total=168652512
// size=64  chunks=973  mem=62272  line=63245  total=112323120
// size=96  chunks= 23  mem=2208  line=2231  total=3962256
// size=448  chunks= 17  mem=7616  line=7633  total=13556208
// size=1216  chunks=  4  mem=4864  line=4868  total=8645568
// size=1776  chunks=  1  mem=1776  line=1777  total=3155952
// 
// corr structure: unpack_event
  // DATA12_OVERFLOW .camac.qdc_SIA0429.data[8]
  // DATA12_OVERFLOW .camac.qdc_SIA0458.data[8]
  // DATA12_OVERFLOW .camac.tdc_SIA8035.data[8]
  // DATA12_OVERFLOW .camac.qdc_SIA0416.data[8]
  // DATA12_OVERFLOW .camac.tdc_SIA0426.data[8]
  // DATA12_OVERFLOW .camac.tdc_SIA0400.data[8]
  // DATA12_OVERFLOW .camac.tdc_SIA0401.data[8]
  // DATA12_OVERFLOW .camac_tcal.qdc_SIA0429.data[8]
  // DATA12_OVERFLOW .camac_tcal.qdc_SIA0458.data[8]
  // DATA12_OVERFLOW .camac_tcal.tdc_SIA8035.data[8]
  // DATA12_OVERFLOW .camac_tcal.qdc_SIA0416.data[8]
  // DATA12_OVERFLOW .camac_tcal.tdc_SIA0426.data[8]
  // DATA12_OVERFLOW .camac_tcal.tdc_SIA0400.data[8]
  // DATA12_OVERFLOW .camac_tcal.tdc_SIA0401.data[8]
  // DATA12_RANGE .fastbus_1.qdc_L_Q47342.data[96]
  // DATA12_RANGE .fastbus_1.qdc_L_Q46848.data[96]
  // DATA12_RANGE .fastbus_1.qdc_L_Q11111.data[96]
  // DATA12_RANGE .fastbus_1.qdc_L_Q47315.data[96]
  // DATA12_RANGE .fastbus_1.qdc_L_Q17320.data[96]
  // DATA12_RANGE .fastbus_1.qdc_L_Q15372.data[96]
  // DATA12_RANGE .fastbus_1.qdc_F_Q46962.data[96]
  // DATA12_RANGE .fastbus_1.qdc_L_Q46993.data[96]
  // DATA12_RANGE .fastbus_1.qdc_L_Q15358.data[96]
  // DATA12_RANGE .fastbus_1.qdc_L_Q47264.data[96]
  // DATA12_RANGE .fastbus_1.tdc_L_T81855.data[64]
  // DATA12_RANGE .fastbus_1.tdc_L_T87044.data[64]
  // DATA12_RANGE .fastbus_1.tdc_L_T87024.data[64]
  // DATA12_RANGE .fastbus_1.tdc_L_T81800.data[64]
  // DATA12_RANGE .fastbus_2.tdc_L_T87047.data[64]
  // DATA12_RANGE .fastbus_2.tdc_L_T81808.data[64]
  // DATA12_RANGE .fastbus_2.tdc_L_T48854.data[64]
  // DATA12_RANGE .fastbus_2.tdc_L_T81859.data[64]
  // DATA12_RANGE .fastbus_2.tdc_L_T81795.data[64]
  // DATA12_RANGE .fastbus_2.tdc_L_T81806.data[64]
  // DATA12_RANGE .fastbus_2.tdc_L_T48834.data[64]
// .unpack_event/1776/.camac/56/.qdc_SIA0429/8/.data/8/[8]
                             // .qdc_SIA0458/8/.data/8/[8]
                             // .tdc_SIA8035/8/.data/8/[8]
                             // .qdc_SIA0416/8/.data/8/[8]
                             // .tdc_SIA0426/8/.data/8/[8]
                             // .tdc_SIA0400/8/.data/8/[8]
                             // .tdc_SIA0401/8/.data/8/[8]
                   // .camac_tcal/56/.qdc_SIA0429/8/.data/8/[8]
                                  // .qdc_SIA0458/8/.data/8/[8]
                                  // .tdc_SIA8035/8/.data/8/[8]
                                  // .qdc_SIA0416/8/.data/8/[8]
                                  // .tdc_SIA0426/8/.data/8/[8]
                                  // .tdc_SIA0400/8/.data/8/[8]
                                  // .tdc_SIA0401/8/.data/8/[8]
                   // .fastbus_1/1216/.qdc_L_Q47342/96/.data/96/[96]
                                   // .qdc_L_Q46848/96/.data/96/[96]
                                   // .qdc_L_Q11111/96/.data/96/[96]
                                   // .qdc_L_Q47315/96/.data/96/[96]
                                   // .qdc_L_Q17320/96/.data/96/[96]
                                   // .qdc_L_Q15372/96/.data/96/[96]
                                   // .qdc_F_Q46962/96/.data/96/[96]
                                   // .qdc_L_Q46993/96/.data/96/[96]
                                   // .qdc_L_Q15358/96/.data/96/[96]
                                   // .qdc_L_Q47264/96/.data/96/[96]
                                   // .tdc_L_T81855/64/.data/64/[64]
                                   // .tdc_L_T87044/64/.data/64/[64]
                                   // .tdc_L_T87024/64/.data/64/[64]
                                   // .tdc_L_T81800/64/.data/64/[64]
                   // .fastbus_2/448/.tdc_L_T87047/64/.data/64/[64]
                                  // .tdc_L_T81808/64/.data/64/[64]
                                  // .tdc_L_T48854/64/.data/64/[64]
                                  // .tdc_L_T81859/64/.data/64/[64]
                                  // .tdc_L_T81795/64/.data/64/[64]
                                  // .tdc_L_T81806/64/.data/64/[64]
                                  // .tdc_L_T48834/64/.data/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event
// Corr struct for: unpack_sticky_event
//  : public unpack_sticky_event_base
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event

/** END_CORR_STRUCT ***************************************************/

