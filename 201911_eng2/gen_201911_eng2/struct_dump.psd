
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

class BARRIER
{
  union 
  {
    struct 
    {
      uint32 unnamed_0_31 : 32;
    } ;
    uint32 u32;
  } barrier;
} ;
class CAMAC_LECROY_4434
{
  raw_array_zero_suppress<DATA24,DATA24,32> data;
} ;
class CAMAC_PHILLIPS_7164
{
  raw_array_zero_suppress<DATA12,DATA12,16> data;
} ;
class CAMAC_SILENA_4418
{
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,8> data;
} ;
class FASTBUS_LECROY_1875
{
  raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,64> data;
} ;
class FASTBUS_LECROY_1885
{
  raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,96> data;
} ;
class FEBEX3_CALIFA_BASE
{
  raw_array_zero_suppress<DATA16,DATA16,2048> energy;
  raw_array_zero_suppress<DATA32,DATA32,2048> ts_lsb;
  raw_array_zero_suppress<DATA32,DATA32,2048> ts_msb;
  raw_array_zero_suppress<DATA16,DATA16,2048> n_f;
  raw_array_zero_suppress<DATA16,DATA16,2048> n_s;
} ;
class FEBEX_BAD_EVENTHEADER
{
  union 
  {
    struct 
    {
      uint32 unnamed_0_31 : 32;
    } ;
    uint32 u32;
  } badbad;
} ;
class FEBEX_GOOD_EVENTHEADER
{
  union 
  {
    struct 
    {
      uint32 n_febex_sfp0 : 8;
      uint32 n_febex_sfp1 : 8;
      uint32 n_febex_sfp2 : 8;
      uint32 n_febex_sfp3 : 8;
    } ;
    uint32 u32;
  } febexcards;
  union 
  {
    struct 
    {
      uint32 trace_length : 16;
      uint32 trigger_delay : 16;
    } ;
    uint32 u32;
  } trig_length;
  union 
  {
    struct 
    {
      uint32 sum_b : 11;
      uint32 gap : 10;
      uint32 sum_a : 11;
    } ;
    uint32 u32;
  } energy_filter;
  union 
  {
    struct 
    {
      uint32 pola : 32;
    } ;
    uint32 u32;
  } polarity1;
  union 
  {
    struct 
    {
      uint32 pola : 32;
    } ;
    uint32 u32;
  } polarity2;
  union 
  {
    struct 
    {
      uint32 pola : 32;
    } ;
    uint32 u32;
  } polarity3;
  union 
  {
    struct 
    {
      uint32 pola : 32;
    } ;
    uint32 u32;
  } polarity4;
} ;
class FEBEX_EVENTHEADER
{
  FEBEX_GOOD_EVENTHEADER good;
  FEBEX_BAD_EVENTHEADER bad;
} ;
class FEBEX_NOTRACE
{
  raw_array<DATA8,DATA8,16> n_hit;
  raw_array_multi_zero_suppress<DATA12,DATA12,16,32> t;
  raw_array_multi_zero_suppress<DATA32,DATA32,16,32> e;
} ;
class FEBEX_PADDING
{
  ;
} ;
class FEBEX_TRACE
{
  raw_array_zero_suppress<DATA32,DATA32,16> trace_length;
  raw_array_zero_suppress<DATA16,DATA16,1000> trace[16];
  raw_array_zero_suppress<DATA32,DATA32,1000> filter[16];
} ;
class GSI_CLOCKTDC_16PH_ITEM
{
  DATA32 event_counter_lo32;
  DATA32 event_counter_hi16;
  DATA32 trigger_coarse_lo22;
  DATA32 trigger_coarse_hi24;
  raw_array_multi_zero_suppress<DATA12,DATA12,258,80> time_coarse;
  raw_array_multi_zero_suppress<DATA12,DATA12,258,80> time_fine;
  union 
  {
    struct 
    {
      uint32 _0x34 : 8;
      uint32 trigger_type : 4;
      uint32 sfp_id : 4;
      uint32 tdc_id : 8;
      uint32 channel_id : 8;
    } ;
    uint32 u32;
  } header;
  uint32 channel_num;
  union 
  {
    struct 
    {
      uint32 _0x34 : 8;
      uint32 trigger_type : 4;
      uint32 sfp_id : 4;
      uint32 tdc_id : 8;
      uint32 channel_id : 8;
    } ;
    uint32 u32;
  } channel_header;
  uint32 data_byte_num;
  union 
  {
    struct 
    {
      uint32 time_fine : 5;
      uint32 time_coarse : 12;
      uint32 time_coarse_ext : 1;
      uint32 edge : 1;
      uint32 ws : 1;
      uint32 time_coarse_overflow : 1;
      uint32 rb_overflow : 1;
      uint32 dummy : 1;
      uint32 is_data : 1;
      uint32 channel : 8;
    } ;
    uint32 u32;
  } data;
} ;
class GSI_CLOCKTDC_BAD00BAD
{
  ;
} ;
class GSI_CLOCKTDC_FUSER
{
  union 
  {
    struct 
    {
      uint32 sfp0_num : 8;
      uint32 sfp1_num : 8;
      uint32 sfp2_num : 8;
      uint32 sfp3_num : 8;
    } ;
    uint32 u32;
  } slave_num;
  uint32 trig_window;
  union 
  {
    struct 
    {
      uint32 num : 32;
    } ;
    uint32 u32;
  } channel_num;
} ;
class GSI_CLOCKTDC_ITEM
{
  DATA32 event_counter_lo32;
  DATA32 event_counter_hi16;
  DATA32 trigger_coarse_lo22;
  DATA32 trigger_coarse_hi24;
  raw_array_multi_zero_suppress<DATA12,DATA12,258,80> time_coarse;
  raw_array_multi_zero_suppress<DATA12,DATA12,258,80> time_fine;
  union 
  {
    struct 
    {
      uint32 _0x34 : 8;
      uint32 trigger_type : 4;
      uint32 sfp_id : 4;
      uint32 tdc_id : 8;
      uint32 channel_id : 8;
    } ;
    uint32 u32;
  } header;
  uint32 channel_num;
  union 
  {
    struct 
    {
      uint32 _0x34 : 8;
      uint32 trigger_type : 4;
      uint32 sfp_id : 4;
      uint32 tdc_id : 8;
      uint32 channel_id : 8;
    } ;
    uint32 u32;
  } channel_header;
  uint32 data_byte_num;
  union 
  {
    struct 
    {
      uint32 time_fine : 4;
      uint32 time_coarse : 12;
      uint32 time_coarse_ext : 1;
      uint32 edge : 1;
      uint32 ws : 1;
      uint32 time_coarse_overflow : 1;
      uint32 rb_overflow : 1;
      uint32 status : 3;
      uint32 channel : 8;
    } ;
    uint32 u32;
  } data;
} ;
class GSI_CLOCKTDC_PADDING
{
  ;
} ;
class GSI_SAM_PADDING
{
  ;
} ;
class LAND_STD_VME
{
  union 
  {
    struct 
    {
      uint32 fail_general : 1;
      uint32 fail_data_corrupt : 1;
      uint32 fail_data_missing : 1;
      uint32 fail_data_too_much : 1;
      uint32 fail_event_counter_mismatch : 1;
      uint32 fail_readout_error_driver : 1;
      uint32 fail_unexpected_trigger : 1;
      uint32 fail_firmware_mismatch : 1;
      uint32 dummy_8_21 : 14;
      uint32 has_multi_trlo_ii_counter0 : 1;
      uint32 has_clock_counter_stamp : 1;
      uint32 has_continous_event_counter : 1;
      uint32 has_update_qdc_iped_value : 1;
      uint32 spurious_start_before_tcal : 1;
      uint32 has_no_zero_suppression : 1;
      uint32 has_multi_adctdc_counter0 : 1;
      uint32 has_multi_scaler_counter0 : 1;
      uint32 has_multi_event : 1;
      uint32 has_time_stamp : 1;
    } ;
    uint32 u32;
  } failure;
  uint32 continous_event_counter;
  uint32 time_stamp;
  uint32 clock_counter_stamp;
  uint32 iped;
  uint32 multi_events;
  uint32 multi_trlo_ii_counter0;
  uint32 multi_scaler_counter0;
  uint32 multi_adctdc_counter0;
} ;
class MEGA_PULSER
{
  uint32 mega;
} ;
class TAMEX3_FH_DATA
{
  raw_array_multi_zero_suppress<DATA12,DATA12,34,256> time_coarse;
  raw_array_multi_zero_suppress<DATA12,DATA12,34,256> time_fine;
} ;
class TAMEX3_FH_SFP
{
  TAMEX3_FH_DATA data;
} ;
class TAMEX3_PADDING
{
  ;
} ;
class TAMEX3_SFP
{
  raw_array_multi_zero_suppress<DATA12,DATA12,34,256> time_coarse;
  raw_array_multi_zero_suppress<DATA12,DATA12,34,256> time_fine;
} ;
class TAMEX3_WINDOW
{
  union 
  {
    struct 
    {
      uint32 post_trig_ns : 16;
      uint32 pre_trig_ns : 16;
    } ;
    uint32 u32;
  } trigger_window;
} ;
class TIMESTAMP_WHITERABBIT
{
  DATA12 subsystem_id;
  DATA16 t1;
  DATA16 t2;
  DATA16 t3;
  DATA16 t4;
} ;
class TRLOII_LMU_SCALERS
{
  raw_array_zero_suppress<DATA32,DATA32,63> before_lmu;
  raw_array_zero_suppress<DATA32,DATA32,31> before_lmu_mux;
  raw_array_zero_suppress<DATA32,DATA32,31> before_lmu_aux;
  raw_array_zero_suppress<DATA32,DATA32,127> before_dt;
  raw_array_zero_suppress<DATA32,DATA32,127> after_dt;
  raw_array_zero_suppress<DATA32,DATA32,127> after_reduction;
  union 
  {
    struct 
    {
      uint32 before_lmu : 6;
      uint32 before_lmu_mux : 5;
      uint32 before_lmu_aux : 5;
      uint32 after_lmu : 8;
      uint32 id : 8;
    } ;
    uint32 u32;
  } header;
} ;
class TRLOII_SAMPLER
{
  raw_array_zero_suppress<DATA32,DATA32,512> sampler;
  union 
  {
    struct 
    {
      uint32 word_num : 10;
      uint32 overflow : 1;
      uint32 dummy_11_15 : 5;
      uint32 mark : 16;
    } ;
    uint32 u32;
  } header;
} ;
class TRLOII_SAMPLER_TWO
{
  raw_array_zero_suppress<DATA32,DATA32,512> sampler_hi;
  raw_array_zero_suppress<DATA32,DATA32,512> sampler_lo;
  union 
  {
    struct 
    {
      uint32 word_num : 10;
      uint32 overflow : 1;
      uint32 dummy_11_15 : 5;
      uint32 mark : 16;
    } ;
    uint32 u32;
  } header;
} ;
class TRLOII_TPAT
{
  DATA32 n;
  raw_list_ii_zero_suppress<DATA16,DATA16,170> tpat;
  raw_list_ii_zero_suppress<DATA8,DATA8,170> trig;
  raw_list_ii_zero_suppress<DATA32,DATA32,170> ts_lo;
  raw_list_ii_zero_suppress<DATA32,DATA32,170> ts_hi;
} ;
class VME_CAEN_V1190_SUBTDC
{
  union 
  {
    struct 
    {
      uint32 bunch_id : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
  union 
  {
    struct 
    {
      uint32 word_count : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1190
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1190_SUBTDC tdc[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1190_SHORT_SUBTDC
{
  ;
} ;
class VME_CAEN_V1190_SHORT_SUBTDC_ERROR
{
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
} ;
class VME_CAEN_V1190_SHORT
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1190_SHORT_SUBTDC tdc[4];
  VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290_SUBTDC
{
  union 
  {
    struct 
    {
      uint32 bunch_id : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
  union 
  {
    struct 
    {
      uint32 word_count : 12;
      uint32 event_id : 12;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1290_SUBTDC tdc[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V1290_SHORT_SUBTDC
{
  ;
} ;
class VME_CAEN_V1290_SHORT_SUBTDC_ERROR
{
  union 
  {
    struct 
    {
      uint32 flags : 15;
      uint32 dummy_15_23 : 9;
      uint32 tdc : 2;
      uint32 dummy_26 : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } error_flags;
} ;
class VME_CAEN_V1290_SHORT
{
  raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 event_number : 22;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } header;
  VME_CAEN_V1290_SHORT_SUBTDC tdc[4];
  VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[4];
  union 
  {
    struct 
    {
      uint32 time_tag : 27;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trigger;
  union 
  {
    struct 
    {
      uint32 geom : 5;
      uint32 word_count : 15;
      uint32 dummy_20_23 : 4;
      uint32 tdc_error : 1;
      uint32 buffer_overflow : 1;
      uint32 trigger_lost : 1;
      uint32 unnamed_27_31 : 5;
    } ;
    uint32 u32;
  } trailer;
} ;
class VME_CAEN_V775
{
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  union 
  {
    struct 
    {
      uint32 event_number : 24;
      uint32 unnamed_24_26 : 3;
      uint32 geom : 5;
    } ;
    uint32 u32;
  } eob;
} ;
class VME_CAEN_V830
{
  raw_array_zero_suppress<DATA32,DATA32,32> data;
  union 
  {
    struct 
    {
      uint32 event_number : 16;
      uint32 ts : 2;
      uint32 count : 6;
      uint32 dummy_24_25 : 2;
      uint32 unnamed_26_26 : 1;
      uint32 geom : 5;
    } ;
    uint32 u32;
  } header;
} ;
class VME_GSI_VFTX2
{
  raw_array_multi_zero_suppress<DATA12,DATA12,32,32> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,32,32> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 id : 5;
      uint32 internal_status : 4;
      uint32 count : 9;
      uint32 dummy_18_23 : 6;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 unnamed_0_7 : 8;
      uint32 dummy_8_10 : 3;
      uint32 trigger_timestamp : 13;
      uint32 dummy_24_28 : 5;
      uint32 unnamed_29_30 : 2;
      uint32 unnamed_31_31 : 1;
    } ;
    uint32 u32;
  } event_header;
} ;
class VME_GSI_VFTX2_7PS
{
  raw_array_multi_zero_suppress<DATA12,DATA12,32,32> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,32,32> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 id : 5;
      uint32 internal_status : 4;
      uint32 count : 9;
      uint32 dummy_18_23 : 6;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
} ;
class VME_GSI_VFTX2_LT
{
  raw_array_multi_zero_suppress<DATA12,DATA12,64,32> time_fine;
  raw_array_multi_zero_suppress<DATA16,DATA16,64,32> time_coarse;
  DATA16 time_trigger;
  union 
  {
    struct 
    {
      uint32 id : 5;
      uint32 internal_status : 4;
      uint32 count : 9;
      uint32 dummy_18_23 : 6;
      uint32 unnamed_24_31 : 8;
    } ;
    uint32 u32;
  } custom_header;
  union 
  {
    struct 
    {
      uint32 unnamed_0_7 : 8;
      uint32 dummy_8_10 : 3;
      uint32 trigger_timestamp : 13;
      uint32 dummy_24_28 : 5;
      uint32 unnamed_29_30 : 2;
      uint32 unnamed_31_31 : 1;
    } ;
    uint32 u32;
  } event_header;
} ;
class VME_MESYTEC_MADC32
{
  raw_array_zero_suppress<DATA14_OVERFLOW,DATA14_OVERFLOW,32> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class VME_MESYTEC_MDPP16
{
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,34,100> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class VME_MESYTEC_MQDC32
{
  raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class VME_MESYTEC_MTDC32
{
  raw_array_zero_suppress<DATA16,DATA16,34> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class VME_MESYTEC_VMMR8
{
  raw_array_multi_zero_suppress<DATA12,DATA12,512,20> data;
  union 
  {
    struct 
    {
      uint32 counter : 30;
      uint32 unnamed_30_31 : 2;
    } ;
    uint32 u32;
  } end_of_event;
} ;
class WR_MULTI
{
  DATA32 time_hi;
  DATA32 time_lo;
} ;
class fib1a_data
{
  GSI_CLOCKTDC_16PH_ITEM ctdc[4];
  TAMEX3_SFP tamex[2];
  BARRIER barrier;
  LAND_STD_VME land_vme;
} ;
class fibsipm_data
{
  GSI_CLOCKTDC_ITEM ctdc[4];
  LAND_STD_VME land_vme;
} ;
class los_tamex_data
{
  TAMEX3_PADDING padding;
  TAMEX3_SFP tamex;
  LAND_STD_VME land_vme;
} ;
class los_vme_subev_data
{
  VME_GSI_VFTX2_7PS vftx21;
  VME_MESYTEC_MTDC32 mtdc32;
  VME_GSI_VFTX2_7PS vftx22;
  LAND_STD_VME land_vme;
} ;
class neuland_sfp
{
  TAMEX3_FH_SFP card[35];
} ;
class neuland_tamex_subev_data
{
  TAMEX3_PADDING padding0;
  neuland_sfp sfp[1];
  LAND_STD_VME land_vme;
} ;
class s2_vme_subev_data
{
  WR_MULTI ts;
  LAND_STD_VME land_vme;
  VME_GSI_VFTX2_7PS vftx21;
  BARRIER b1;
  BARRIER b2;
  VME_MESYTEC_MQDC32 mqdc;
} ;
class s8_vme_subev_data
{
  VME_GSI_VFTX2_7PS vftx21;
  LAND_STD_VME land_vme;
} ;
class sofia_mwpc_subev_data
{
  VME_MESYTEC_VMMR8 vmmr8;
  VME_MESYTEC_MADC32 madc32[2];
  LAND_STD_VME land_vme;
} ;
class sofia_tof_subev_data
{
  VME_GSI_VFTX2_7PS vftx2[4];
  LAND_STD_VME land_vme;
} ;
class sofia_trim_subev_data
{
  VME_MESYTEC_VMMR8 vmmr8;
  VME_MESYTEC_MDPP16 mdpp;
  LAND_STD_VME land_vme;
} ;
class sofia_twim_subev_data
{
  VME_MESYTEC_MDPP16 mdpp16[2];
  LAND_STD_VME land_vme;
} ;
class CALIFA : public unpack_subevent_base
{
  FEBEX3_CALIFA_BASE febex3;
  TIMESTAMP_WHITERABBIT ts400;
} ;
class ams_siderem1_subev : public unpack_subevent_base
{
  GSI_SAM_PADDING padd;
  EXT_SST sst[3];
  LAND_STD_VME land_vme;
} ;
class ams_siderem2_subev : public unpack_subevent_base
{
  GSI_SAM_PADDING padd;
  EXT_SST sst[3];
  LAND_STD_VME land_vme;
} ;
class ams_wr : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
} ;
class fib1ab_subev : public unpack_subevent_base
{
  fib1a_data data;
} ;
class fibsipm_subev : public unpack_subevent_base
{
  fibsipm_data data;
} ;
class lmu_subev : public unpack_subevent_base
{
  TRLOII_LMU_SCALERS scalers;
  MEGA_PULSER pulser;
} ;
class los_sampler_subev : public unpack_subevent_base
{
  TRLOII_SAMPLER los;
  TRLOII_SAMPLER ms;
  LAND_STD_VME land_vme;
} ;
class los_tamex_subev : public unpack_subevent_base
{
  los_tamex_data data;
} ;
class los_vme_subev : public unpack_subevent_base
{
  los_vme_subev_data data;
} ;
class los_wr : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
} ;
class neuland_tamex_subev : public unpack_subevent_base
{
  neuland_tamex_subev_data data;
} ;
class s2_vme_subev : public unpack_subevent_base
{
  s2_vme_subev_data data;
} ;
class s8_tpat_subev : public unpack_subevent_base
{
  TRLOII_TPAT tpat;
  LAND_STD_VME land_vme;
} ;
class s8_vme_subev : public unpack_subevent_base
{
  s8_vme_subev_data data;
} ;
class s8_wr : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
} ;
class sofia_mwpc_subev : public unpack_subevent_base
{
  sofia_mwpc_subev_data data;
} ;
class sofia_tof_subev : public unpack_subevent_base
{
  sofia_tof_subev_data data;
} ;
class sofia_trim_subev : public unpack_subevent_base
{
  sofia_trim_subev_data data;
} ;
class sofia_twim_subev : public unpack_subevent_base
{
  sofia_twim_subev_data data;
} ;
class wr_neuland : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
} ;
class wr_s2 : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
} ;
class wr_sofia : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
} ;
class unpack_event : public unpack_event_base
{
  los_wr los_ts;
  los_vme_subev los_vme;
  lmu_subev los_lmu;
  los_tamex_subev los_tamex;
  los_sampler_subev los_sampler;
  fib1ab_subev fib1ab;
  wr_neuland neuland_ts;
  neuland_tamex_subev neuland_tamex_1;
  neuland_tamex_subev neuland_tamex_2;
  neuland_tamex_subev neuland_tamex_3;
  neuland_tamex_subev neuland_tamex_4;
  CALIFA califa;
  ams_wr ams_ts;
  ams_siderem1_subev ams_siderem_1;
  ams_siderem2_subev ams_siderem_2;
  sofia_tof_subev sofia_tof;
  sofia_mwpc_subev sofia_mwpc;
  sofia_twim_subev sofia_twim;
  sofia_trim_subev sofia_trim;
  fibsipm_subev fibsipm;
  wr_s2 s2_ts;
  s2_vme_subev s2_vme;
  s8_wr s8_ts;
  s8_tpat_subev s8_tpat;
  s8_vme_subev s8_vme;
} ;
class unpack_sticky_event : public unpack_sticky_event_base
{
  ;
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_BARRIER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(BARRIER)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(barrier);
  STRUCT_MIRROR_FCNS_DECL(BARRIER);
};
#endif//USER_DEF_BARRIER

#ifndef USER_DEF_CAMAC_LECROY_4434
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CAMAC_LECROY_4434)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(CAMAC_LECROY_4434);
};
#endif//USER_DEF_CAMAC_LECROY_4434

#ifndef USER_DEF_CAMAC_PHILLIPS_7164
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CAMAC_PHILLIPS_7164)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),16> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(CAMAC_PHILLIPS_7164);
};
#endif//USER_DEF_CAMAC_PHILLIPS_7164

#ifndef USER_DEF_CAMAC_SILENA_4418
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CAMAC_SILENA_4418)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),8> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(CAMAC_SILENA_4418);
};
#endif//USER_DEF_CAMAC_SILENA_4418

#ifndef USER_DEF_FASTBUS_LECROY_1875
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1875)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),64> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(FASTBUS_LECROY_1875);
};
#endif//USER_DEF_FASTBUS_LECROY_1875

#ifndef USER_DEF_FASTBUS_LECROY_1885
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1885)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_RANGE),96> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(FASTBUS_LECROY_1885);
};
#endif//USER_DEF_FASTBUS_LECROY_1885

#ifndef USER_DEF_FEBEX3_CALIFA_BASE
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX3_CALIFA_BASE)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(energy);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),2048> STRUCT_MIRROR_NAME(energy);
  STRUCT_MIRROR_ITEM_CTRL(ts_lsb);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),2048> STRUCT_MIRROR_NAME(ts_lsb);
  STRUCT_MIRROR_ITEM_CTRL(ts_msb);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),2048> STRUCT_MIRROR_NAME(ts_msb);
  STRUCT_MIRROR_ITEM_CTRL(n_f);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),2048> STRUCT_MIRROR_NAME(n_f);
  STRUCT_MIRROR_ITEM_CTRL(n_s);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),2048> STRUCT_MIRROR_NAME(n_s);
  STRUCT_MIRROR_FCNS_DECL(FEBEX3_CALIFA_BASE);
};
#endif//USER_DEF_FEBEX3_CALIFA_BASE

#ifndef USER_DEF_FEBEX_BAD_EVENTHEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_BAD_EVENTHEADER)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(badbad);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_BAD_EVENTHEADER);
};
#endif//USER_DEF_FEBEX_BAD_EVENTHEADER

#ifndef USER_DEF_FEBEX_GOOD_EVENTHEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_GOOD_EVENTHEADER)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(n_febex_sfp0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n_febex_sfp0);
      STRUCT_MIRROR_ITEM_CTRL(n_febex_sfp1);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n_febex_sfp1);
      STRUCT_MIRROR_ITEM_CTRL(n_febex_sfp2);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n_febex_sfp2);
      STRUCT_MIRROR_ITEM_CTRL(n_febex_sfp3);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n_febex_sfp3);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(febexcards);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(trace_length);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trace_length);
      STRUCT_MIRROR_ITEM_CTRL(trigger_delay);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_delay);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trig_length);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(sum_b);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sum_b);
      STRUCT_MIRROR_ITEM_CTRL(gap);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(gap);
      STRUCT_MIRROR_ITEM_CTRL(sum_a);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sum_a);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(energy_filter);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(pola);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pola);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(polarity1);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(pola);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pola);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(polarity2);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(pola);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pola);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(polarity3);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(pola);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pola);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(polarity4);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_GOOD_EVENTHEADER);
};
#endif//USER_DEF_FEBEX_GOOD_EVENTHEADER

#ifndef USER_DEF_FEBEX_EVENTHEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_EVENTHEADER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(good);
  STRUCT_MIRROR_TYPE(FEBEX_GOOD_EVENTHEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(good);
  STRUCT_MIRROR_ITEM_CTRL(bad);
  STRUCT_MIRROR_TYPE(FEBEX_BAD_EVENTHEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bad);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_EVENTHEADER);
};
#endif//USER_DEF_FEBEX_EVENTHEADER

#ifndef USER_DEF_FEBEX_NOTRACE
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_NOTRACE)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(n_hit);
  STRUCT_MIRROR_TYPE(raw_array) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(n_hit);
  STRUCT_MIRROR_ITEM_CTRL(t);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),16,32> STRUCT_MIRROR_NAME(t);
  STRUCT_MIRROR_ITEM_CTRL(e);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16,32> STRUCT_MIRROR_NAME(e);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_NOTRACE);
};
#endif//USER_DEF_FEBEX_NOTRACE

#ifndef USER_DEF_FEBEX_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(FEBEX_PADDING);
};
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_FEBEX_TRACE
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_TRACE)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(trace_length);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(trace_length);
  STRUCT_MIRROR_ITEM_CTRL(trace);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(trace__i0,,16);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),1000> STRUCT_MIRROR_NAME(trace[16]);
  STRUCT_MIRROR_ITEM_CTRL(filter);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(filter__i0,,16);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),1000> STRUCT_MIRROR_NAME(filter[16]);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_TRACE);
};
#endif//USER_DEF_FEBEX_TRACE

#ifndef USER_DEF_GSI_CLOCKTDC_16PH_ITEM
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_16PH_ITEM)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(event_counter_lo32);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_counter_lo32);
  STRUCT_MIRROR_ITEM_CTRL(event_counter_hi16);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_counter_hi16);
  STRUCT_MIRROR_ITEM_CTRL(trigger_coarse_lo22);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_coarse_lo22);
  STRUCT_MIRROR_ITEM_CTRL(trigger_coarse_hi24);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_coarse_hi24);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),258,80> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),258,80> STRUCT_MIRROR_NAME(time_fine);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(_0x34);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(_0x34);
      STRUCT_MIRROR_ITEM_CTRL(trigger_type);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_type);
      STRUCT_MIRROR_ITEM_CTRL(sfp_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_id);
      STRUCT_MIRROR_ITEM_CTRL(channel_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_id);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(channel_num);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_num);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(_0x34);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(_0x34);
      STRUCT_MIRROR_ITEM_CTRL(trigger_type);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_type);
      STRUCT_MIRROR_ITEM_CTRL(sfp_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_id);
      STRUCT_MIRROR_ITEM_CTRL(channel_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_id);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(channel_header);
  STRUCT_MIRROR_ITEM_CTRL(data_byte_num);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_byte_num);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_fine);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_fine);
      STRUCT_MIRROR_ITEM_CTRL(time_coarse);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_coarse);
      STRUCT_MIRROR_ITEM_CTRL(time_coarse_ext);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_coarse_ext);
      STRUCT_MIRROR_ITEM_CTRL(edge);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(edge);
      STRUCT_MIRROR_ITEM_CTRL(ws);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ws);
      STRUCT_MIRROR_ITEM_CTRL(time_coarse_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_coarse_overflow);
      STRUCT_MIRROR_ITEM_CTRL(rb_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(rb_overflow);
      STRUCT_MIRROR_ITEM_CTRL(dummy);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy);
      STRUCT_MIRROR_ITEM_CTRL(is_data);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(is_data);
      STRUCT_MIRROR_ITEM_CTRL(channel);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(GSI_CLOCKTDC_16PH_ITEM);
};
#endif//USER_DEF_GSI_CLOCKTDC_16PH_ITEM

#ifndef USER_DEF_GSI_CLOCKTDC_BAD00BAD
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_BAD00BAD)
{
public:
  STRUCT_MIRROR_FCNS_DECL(GSI_CLOCKTDC_BAD00BAD);
};
#endif//USER_DEF_GSI_CLOCKTDC_BAD00BAD

#ifndef USER_DEF_GSI_CLOCKTDC_FUSER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_FUSER)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(sfp0_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp0_num);
      STRUCT_MIRROR_ITEM_CTRL(sfp1_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp1_num);
      STRUCT_MIRROR_ITEM_CTRL(sfp2_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp2_num);
      STRUCT_MIRROR_ITEM_CTRL(sfp3_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp3_num);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(slave_num);
  STRUCT_MIRROR_ITEM_CTRL(trig_window);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig_window);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(num);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(channel_num);
  STRUCT_MIRROR_FCNS_DECL(GSI_CLOCKTDC_FUSER);
};
#endif//USER_DEF_GSI_CLOCKTDC_FUSER

#ifndef USER_DEF_GSI_CLOCKTDC_ITEM
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_ITEM)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(event_counter_lo32);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_counter_lo32);
  STRUCT_MIRROR_ITEM_CTRL(event_counter_hi16);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_counter_hi16);
  STRUCT_MIRROR_ITEM_CTRL(trigger_coarse_lo22);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_coarse_lo22);
  STRUCT_MIRROR_ITEM_CTRL(trigger_coarse_hi24);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_coarse_hi24);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),258,80> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),258,80> STRUCT_MIRROR_NAME(time_fine);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(_0x34);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(_0x34);
      STRUCT_MIRROR_ITEM_CTRL(trigger_type);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_type);
      STRUCT_MIRROR_ITEM_CTRL(sfp_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_id);
      STRUCT_MIRROR_ITEM_CTRL(channel_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_id);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(channel_num);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_num);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(_0x34);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(_0x34);
      STRUCT_MIRROR_ITEM_CTRL(trigger_type);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_type);
      STRUCT_MIRROR_ITEM_CTRL(sfp_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_id);
      STRUCT_MIRROR_ITEM_CTRL(channel_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel_id);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(channel_header);
  STRUCT_MIRROR_ITEM_CTRL(data_byte_num);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data_byte_num);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_fine);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_fine);
      STRUCT_MIRROR_ITEM_CTRL(time_coarse);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_coarse);
      STRUCT_MIRROR_ITEM_CTRL(time_coarse_ext);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_coarse_ext);
      STRUCT_MIRROR_ITEM_CTRL(edge);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(edge);
      STRUCT_MIRROR_ITEM_CTRL(ws);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ws);
      STRUCT_MIRROR_ITEM_CTRL(time_coarse_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_coarse_overflow);
      STRUCT_MIRROR_ITEM_CTRL(rb_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(rb_overflow);
      STRUCT_MIRROR_ITEM_CTRL(status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(status);
      STRUCT_MIRROR_ITEM_CTRL(channel);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channel);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(GSI_CLOCKTDC_ITEM);
};
#endif//USER_DEF_GSI_CLOCKTDC_ITEM

#ifndef USER_DEF_GSI_CLOCKTDC_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(GSI_CLOCKTDC_PADDING);
};
#endif//USER_DEF_GSI_CLOCKTDC_PADDING

#ifndef USER_DEF_GSI_SAM_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(GSI_SAM_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(GSI_SAM_PADDING);
};
#endif//USER_DEF_GSI_SAM_PADDING

#ifndef USER_DEF_LAND_STD_VME
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(LAND_STD_VME)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(fail_general);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_general);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_corrupt);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_corrupt);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_missing);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_missing);
      STRUCT_MIRROR_ITEM_CTRL(fail_data_too_much);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_data_too_much);
      STRUCT_MIRROR_ITEM_CTRL(fail_event_counter_mismatch);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_event_counter_mismatch);
      STRUCT_MIRROR_ITEM_CTRL(fail_readout_error_driver);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_readout_error_driver);
      STRUCT_MIRROR_ITEM_CTRL(fail_unexpected_trigger);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_unexpected_trigger);
      STRUCT_MIRROR_ITEM_CTRL(fail_firmware_mismatch);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fail_firmware_mismatch);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_21);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_21);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_trlo_ii_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_trlo_ii_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_clock_counter_stamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_clock_counter_stamp);
      STRUCT_MIRROR_ITEM_CTRL(has_continous_event_counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_continous_event_counter);
      STRUCT_MIRROR_ITEM_CTRL(has_update_qdc_iped_value);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_update_qdc_iped_value);
      STRUCT_MIRROR_ITEM_CTRL(spurious_start_before_tcal);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spurious_start_before_tcal);
      STRUCT_MIRROR_ITEM_CTRL(has_no_zero_suppression);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_no_zero_suppression);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_adctdc_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_adctdc_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_scaler_counter0);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_scaler_counter0);
      STRUCT_MIRROR_ITEM_CTRL(has_multi_event);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_multi_event);
      STRUCT_MIRROR_ITEM_CTRL(has_time_stamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(has_time_stamp);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(failure);
  STRUCT_MIRROR_ITEM_CTRL(continous_event_counter);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(continous_event_counter);
  STRUCT_MIRROR_ITEM_CTRL(time_stamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_stamp);
  STRUCT_MIRROR_ITEM_CTRL(clock_counter_stamp);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(clock_counter_stamp);
  STRUCT_MIRROR_ITEM_CTRL(iped);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(iped);
  STRUCT_MIRROR_ITEM_CTRL(multi_events);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_events);
  STRUCT_MIRROR_ITEM_CTRL(multi_trlo_ii_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_trlo_ii_counter0);
  STRUCT_MIRROR_ITEM_CTRL(multi_scaler_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_scaler_counter0);
  STRUCT_MIRROR_ITEM_CTRL(multi_adctdc_counter0);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(multi_adctdc_counter0);
  STRUCT_MIRROR_FCNS_DECL(LAND_STD_VME);
};
#endif//USER_DEF_LAND_STD_VME

#ifndef USER_DEF_MEGA_PULSER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(MEGA_PULSER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(mega);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mega);
  STRUCT_MIRROR_FCNS_DECL(MEGA_PULSER);
};
#endif//USER_DEF_MEGA_PULSER

#ifndef USER_DEF_TAMEX3_FH_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX3_FH_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),34,256> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),34,256> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_FCNS_DECL(TAMEX3_FH_DATA);
};
#endif//USER_DEF_TAMEX3_FH_DATA

#ifndef USER_DEF_TAMEX3_FH_SFP
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX3_FH_SFP)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(TAMEX3_FH_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(TAMEX3_FH_SFP);
};
#endif//USER_DEF_TAMEX3_FH_SFP

#ifndef USER_DEF_TAMEX3_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX3_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TAMEX3_PADDING);
};
#endif//USER_DEF_TAMEX3_PADDING

#ifndef USER_DEF_TAMEX3_SFP
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX3_SFP)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),34,256> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),34,256> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_FCNS_DECL(TAMEX3_SFP);
};
#endif//USER_DEF_TAMEX3_SFP

#ifndef USER_DEF_TAMEX3_WINDOW
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX3_WINDOW)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(post_trig_ns);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(post_trig_ns);
      STRUCT_MIRROR_ITEM_CTRL(pre_trig_ns);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pre_trig_ns);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger_window);
  STRUCT_MIRROR_FCNS_DECL(TAMEX3_WINDOW);
};
#endif//USER_DEF_TAMEX3_WINDOW

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(subsystem_id);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(subsystem_id);
  STRUCT_MIRROR_ITEM_CTRL(t1);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t1);
  STRUCT_MIRROR_ITEM_CTRL(t2);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t2);
  STRUCT_MIRROR_ITEM_CTRL(t3);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t3);
  STRUCT_MIRROR_ITEM_CTRL(t4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t4);
  STRUCT_MIRROR_FCNS_DECL(TIMESTAMP_WHITERABBIT);
};
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TRLOII_LMU_SCALERS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLOII_LMU_SCALERS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(before_lmu);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),63> STRUCT_MIRROR_NAME(before_lmu);
  STRUCT_MIRROR_ITEM_CTRL(before_lmu_mux);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),31> STRUCT_MIRROR_NAME(before_lmu_mux);
  STRUCT_MIRROR_ITEM_CTRL(before_lmu_aux);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),31> STRUCT_MIRROR_NAME(before_lmu_aux);
  STRUCT_MIRROR_ITEM_CTRL(before_dt);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),127> STRUCT_MIRROR_NAME(before_dt);
  STRUCT_MIRROR_ITEM_CTRL(after_dt);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),127> STRUCT_MIRROR_NAME(after_dt);
  STRUCT_MIRROR_ITEM_CTRL(after_reduction);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),127> STRUCT_MIRROR_NAME(after_reduction);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(before_lmu);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(before_lmu);
      STRUCT_MIRROR_ITEM_CTRL(before_lmu_mux);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(before_lmu_mux);
      STRUCT_MIRROR_ITEM_CTRL(before_lmu_aux);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(before_lmu_aux);
      STRUCT_MIRROR_ITEM_CTRL(after_lmu);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(after_lmu);
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TRLOII_LMU_SCALERS);
};
#endif//USER_DEF_TRLOII_LMU_SCALERS

#ifndef USER_DEF_TRLOII_SAMPLER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLOII_SAMPLER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(sampler);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),512> STRUCT_MIRROR_NAME(sampler);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_num);
      STRUCT_MIRROR_ITEM_CTRL(overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(overflow);
      STRUCT_MIRROR_ITEM_CTRL(dummy_11_15);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_11_15);
      STRUCT_MIRROR_ITEM_CTRL(mark);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mark);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TRLOII_SAMPLER);
};
#endif//USER_DEF_TRLOII_SAMPLER

#ifndef USER_DEF_TRLOII_SAMPLER_TWO
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLOII_SAMPLER_TWO)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(sampler_hi);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),512> STRUCT_MIRROR_NAME(sampler_hi);
  STRUCT_MIRROR_ITEM_CTRL(sampler_lo);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),512> STRUCT_MIRROR_NAME(sampler_lo);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_num);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_num);
      STRUCT_MIRROR_ITEM_CTRL(overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(overflow);
      STRUCT_MIRROR_ITEM_CTRL(dummy_11_15);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_11_15);
      STRUCT_MIRROR_ITEM_CTRL(mark);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mark);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(TRLOII_SAMPLER_TWO);
};
#endif//USER_DEF_TRLOII_SAMPLER_TWO

#ifndef USER_DEF_TRLOII_TPAT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRLOII_TPAT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(n);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(n);
  STRUCT_MIRROR_ITEM_CTRL(tpat);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),170> STRUCT_MIRROR_NAME(tpat);
  STRUCT_MIRROR_ITEM_CTRL(trig);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),170> STRUCT_MIRROR_NAME(trig);
  STRUCT_MIRROR_ITEM_CTRL(ts_lo);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),170> STRUCT_MIRROR_NAME(ts_lo);
  STRUCT_MIRROR_ITEM_CTRL(ts_hi);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),170> STRUCT_MIRROR_NAME(ts_hi);
  STRUCT_MIRROR_FCNS_DECL(TRLOII_TPAT);
};
#endif//USER_DEF_TRLOII_TPAT

#ifndef USER_DEF_VME_CAEN_V1190_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SUBTDC)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(bunch_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bunch_id);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1190_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190);
};
#endif//USER_DEF_VME_CAEN_V1190

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC)
{
public:
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SHORT_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC_ERROR)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SHORT_SUBTDC_ERROR);
};
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1190_SHORT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_SHORT_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(err);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(err__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_SHORT_SUBTDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(err[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_SHORT);
};
#endif//USER_DEF_VME_CAEN_V1190_SHORT

#ifndef USER_DEF_VME_CAEN_V1290_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SUBTDC)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(bunch_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bunch_id);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(event_id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_id);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1290_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290);
};
#endif//USER_DEF_VME_CAEN_V1290

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC)
{
public:
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SHORT_SUBTDC);
};
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC_ERROR)
{
public:
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(flags);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(flags);
      STRUCT_MIRROR_ITEM_CTRL(dummy_15_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_15_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc);
      STRUCT_MIRROR_ITEM_CTRL(dummy_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_26);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(error_flags);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SHORT_SUBTDC_ERROR);
};
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1290_SHORT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32,128> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_ITEM_CTRL(tdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tdc__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_SHORT_SUBTDC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(err);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(err__i0,,4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_SHORT_SUBTDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(err[4]);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(time_tag);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_tag);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
      STRUCT_MIRROR_ITEM_CTRL(word_count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(word_count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_20_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_20_23);
      STRUCT_MIRROR_ITEM_CTRL(tdc_error);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
      STRUCT_MIRROR_ITEM_CTRL(buffer_overflow);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(buffer_overflow);
      STRUCT_MIRROR_ITEM_CTRL(trigger_lost);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_lost);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_27_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_27_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_SHORT);
};
#endif//USER_DEF_VME_CAEN_V1290_SHORT

#ifndef USER_DEF_VME_CAEN_V775
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V775)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_26);
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(eob);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V775);
};
#endif//USER_DEF_VME_CAEN_V775

#ifndef USER_DEF_VME_CAEN_V830
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V830)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(ts);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_25);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_25);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_26_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_26_26);
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V830);
};
#endif//USER_DEF_VME_CAEN_V830

#ifndef USER_DEF_VME_GSI_VFTX2
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),32,32> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),32,32> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(internal_status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal_status);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_18_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_18_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_7);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_7);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_10);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_10);
      STRUCT_MIRROR_ITEM_CTRL(trigger_timestamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_timestamp);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_28);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_28);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_29_30);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_29_30);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_31_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_31_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(event_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2);
};
#endif//USER_DEF_VME_GSI_VFTX2

#ifndef USER_DEF_VME_GSI_VFTX2_7PS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_7PS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),32,32> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),32,32> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(internal_status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal_status);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_18_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_18_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2_7PS);
};
#endif//USER_DEF_VME_GSI_VFTX2_7PS

#ifndef USER_DEF_VME_GSI_VFTX2_LT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_LT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),64,32> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),64,32> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_trigger);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_trigger);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(id);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(id);
      STRUCT_MIRROR_ITEM_CTRL(internal_status);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(internal_status);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(dummy_18_23);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_18_23);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_24_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_24_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(custom_header);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(unnamed_0_7);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_0_7);
      STRUCT_MIRROR_ITEM_CTRL(dummy_8_10);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_8_10);
      STRUCT_MIRROR_ITEM_CTRL(trigger_timestamp);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_timestamp);
      STRUCT_MIRROR_ITEM_CTRL(dummy_24_28);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(dummy_24_28);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_29_30);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_29_30);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_31_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_31_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(event_header);
  STRUCT_MIRROR_FCNS_DECL(VME_GSI_VFTX2_LT);
};
#endif//USER_DEF_VME_GSI_VFTX2_LT

#ifndef USER_DEF_VME_MESYTEC_MADC32
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_MADC32)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA14_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA14_OVERFLOW),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_MADC32);
};
#endif//USER_DEF_VME_MESYTEC_MADC32

#ifndef USER_DEF_VME_MESYTEC_MDPP16
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_MDPP16)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),34,100> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_MDPP16);
};
#endif//USER_DEF_VME_MESYTEC_MDPP16

#ifndef USER_DEF_VME_MESYTEC_MQDC32
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_MQDC32)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA12_OVERFLOW),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_MQDC32);
};
#endif//USER_DEF_VME_MESYTEC_MQDC32

#ifndef USER_DEF_VME_MESYTEC_MTDC32
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_MTDC32)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),34> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_MTDC32);
};
#endif//USER_DEF_VME_MESYTEC_MTDC32

#ifndef USER_DEF_VME_MESYTEC_VMMR8
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_MESYTEC_VMMR8)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),512,20> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(counter);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(counter);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_30_31);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_30_31);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(end_of_event);
  STRUCT_MIRROR_FCNS_DECL(VME_MESYTEC_VMMR8);
};
#endif//USER_DEF_VME_MESYTEC_VMMR8

#ifndef USER_DEF_WR_MULTI
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(WR_MULTI)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_hi);
  STRUCT_MIRROR_ITEM_CTRL(time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_lo);
  STRUCT_MIRROR_FCNS_DECL(WR_MULTI);
};
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_fib1a_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(fib1a_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ctdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(ctdc__i0,,4);
  STRUCT_MIRROR_TYPE(GSI_CLOCKTDC_16PH_ITEM) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ctdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(tamex);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tamex__i0,,2);
  STRUCT_MIRROR_TYPE(TAMEX3_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex[2]);
  STRUCT_MIRROR_ITEM_CTRL(barrier);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(fib1a_data);
};
#endif//USER_DEF_fib1a_data

#ifndef USER_DEF_fibsipm_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(fibsipm_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ctdc);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(ctdc__i0,,4);
  STRUCT_MIRROR_TYPE(GSI_CLOCKTDC_ITEM) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ctdc[4]);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(fibsipm_data);
};
#endif//USER_DEF_fibsipm_data

#ifndef USER_DEF_los_tamex_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_tamex_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(TAMEX3_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(tamex);
  STRUCT_MIRROR_TYPE(TAMEX3_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(los_tamex_data);
};
#endif//USER_DEF_los_tamex_data

#ifndef USER_DEF_los_vme_subev_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_vme_subev_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(vftx21);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx21);
  STRUCT_MIRROR_ITEM_CTRL(mtdc32);
  STRUCT_MIRROR_TYPE(VME_MESYTEC_MTDC32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mtdc32);
  STRUCT_MIRROR_ITEM_CTRL(vftx22);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx22);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(los_vme_subev_data);
};
#endif//USER_DEF_los_vme_subev_data

#ifndef USER_DEF_neuland_sfp
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(neuland_sfp)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(card);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(card__i0,,35);
  STRUCT_MIRROR_TYPE(TAMEX3_FH_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(card[35]);
  STRUCT_MIRROR_FCNS_DECL(neuland_sfp);
};
#endif//USER_DEF_neuland_sfp

#ifndef USER_DEF_neuland_tamex_subev_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(neuland_tamex_subev_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(padding0);
  STRUCT_MIRROR_TYPE(TAMEX3_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding0);
  STRUCT_MIRROR_ITEM_CTRL(sfp);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(sfp__i0,,1);
  STRUCT_MIRROR_TYPE(neuland_sfp) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sfp[1]);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(neuland_tamex_subev_data);
};
#endif//USER_DEF_neuland_tamex_subev_data

#ifndef USER_DEF_s2_vme_subev_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(s2_vme_subev_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(WR_MULTI) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_ITEM_CTRL(vftx21);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx21);
  STRUCT_MIRROR_ITEM_CTRL(b1);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(b1);
  STRUCT_MIRROR_ITEM_CTRL(b2);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(b2);
  STRUCT_MIRROR_ITEM_CTRL(mqdc);
  STRUCT_MIRROR_TYPE(VME_MESYTEC_MQDC32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mqdc);
  STRUCT_MIRROR_FCNS_DECL(s2_vme_subev_data);
};
#endif//USER_DEF_s2_vme_subev_data

#ifndef USER_DEF_s8_vme_subev_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(s8_vme_subev_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(vftx21);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx21);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(s8_vme_subev_data);
};
#endif//USER_DEF_s8_vme_subev_data

#ifndef USER_DEF_sofia_mwpc_subev_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(sofia_mwpc_subev_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(vmmr8);
  STRUCT_MIRROR_TYPE(VME_MESYTEC_VMMR8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vmmr8);
  STRUCT_MIRROR_ITEM_CTRL(madc32);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(madc32__i0,,2);
  STRUCT_MIRROR_TYPE(VME_MESYTEC_MADC32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(madc32[2]);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(sofia_mwpc_subev_data);
};
#endif//USER_DEF_sofia_mwpc_subev_data

#ifndef USER_DEF_sofia_tof_subev_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(sofia_tof_subev_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(vftx2);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(vftx2__i0,,4);
  STRUCT_MIRROR_TYPE(VME_GSI_VFTX2_7PS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vftx2[4]);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(sofia_tof_subev_data);
};
#endif//USER_DEF_sofia_tof_subev_data

#ifndef USER_DEF_sofia_trim_subev_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(sofia_trim_subev_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(vmmr8);
  STRUCT_MIRROR_TYPE(VME_MESYTEC_VMMR8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(vmmr8);
  STRUCT_MIRROR_ITEM_CTRL(mdpp);
  STRUCT_MIRROR_TYPE(VME_MESYTEC_MDPP16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mdpp);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(sofia_trim_subev_data);
};
#endif//USER_DEF_sofia_trim_subev_data

#ifndef USER_DEF_sofia_twim_subev_data
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(sofia_twim_subev_data)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(mdpp16);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(mdpp16__i0,,2);
  STRUCT_MIRROR_TYPE(VME_MESYTEC_MDPP16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(mdpp16[2]);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(sofia_twim_subev_data);
};
#endif//USER_DEF_sofia_twim_subev_data

#ifndef USER_DEF_CALIFA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(CALIFA) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(febex3);
  STRUCT_MIRROR_TYPE(FEBEX3_CALIFA_BASE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(febex3);
  STRUCT_MIRROR_ITEM_CTRL(ts400);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts400);
  STRUCT_MIRROR_FCNS_DECL(CALIFA);
};
#endif//USER_DEF_CALIFA

#ifndef USER_DEF_ams_siderem1_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(ams_siderem1_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(padd);
  STRUCT_MIRROR_TYPE(GSI_SAM_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padd);
  STRUCT_MIRROR_ITEM_CTRL(sst);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(sst__i0,,3);
  STRUCT_MIRROR_TYPE(EXT_SST) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sst[3]);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(ams_siderem1_subev);
};
#endif//USER_DEF_ams_siderem1_subev

#ifndef USER_DEF_ams_siderem2_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(ams_siderem2_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(padd);
  STRUCT_MIRROR_TYPE(GSI_SAM_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padd);
  STRUCT_MIRROR_ITEM_CTRL(sst);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(sst__i0,,3);
  STRUCT_MIRROR_TYPE(EXT_SST) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sst[3]);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(ams_siderem2_subev);
};
#endif//USER_DEF_ams_siderem2_subev

#ifndef USER_DEF_ams_wr
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(ams_wr) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(ams_wr);
};
#endif//USER_DEF_ams_wr

#ifndef USER_DEF_fib1ab_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(fib1ab_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(fib1a_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(fib1ab_subev);
};
#endif//USER_DEF_fib1ab_subev

#ifndef USER_DEF_fibsipm_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(fibsipm_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(fibsipm_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(fibsipm_subev);
};
#endif//USER_DEF_fibsipm_subev

#ifndef USER_DEF_lmu_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(lmu_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(scalers);
  STRUCT_MIRROR_TYPE(TRLOII_LMU_SCALERS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scalers);
  STRUCT_MIRROR_ITEM_CTRL(pulser);
  STRUCT_MIRROR_TYPE(MEGA_PULSER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pulser);
  STRUCT_MIRROR_FCNS_DECL(lmu_subev);
};
#endif//USER_DEF_lmu_subev

#ifndef USER_DEF_los_sampler_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_sampler_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(los);
  STRUCT_MIRROR_TYPE(TRLOII_SAMPLER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los);
  STRUCT_MIRROR_ITEM_CTRL(ms);
  STRUCT_MIRROR_TYPE(TRLOII_SAMPLER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ms);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(los_sampler_subev);
};
#endif//USER_DEF_los_sampler_subev

#ifndef USER_DEF_los_tamex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_tamex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(los_tamex_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(los_tamex_subev);
};
#endif//USER_DEF_los_tamex_subev

#ifndef USER_DEF_los_vme_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_vme_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(los_vme_subev_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(los_vme_subev);
};
#endif//USER_DEF_los_vme_subev

#ifndef USER_DEF_los_wr
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(los_wr) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(los_wr);
};
#endif//USER_DEF_los_wr

#ifndef USER_DEF_neuland_tamex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(neuland_tamex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(neuland_tamex_subev_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(neuland_tamex_subev);
};
#endif//USER_DEF_neuland_tamex_subev

#ifndef USER_DEF_s2_vme_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(s2_vme_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(s2_vme_subev_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(s2_vme_subev);
};
#endif//USER_DEF_s2_vme_subev

#ifndef USER_DEF_s8_tpat_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(s8_tpat_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(tpat);
  STRUCT_MIRROR_TYPE(TRLOII_TPAT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tpat);
  STRUCT_MIRROR_ITEM_CTRL(land_vme);
  STRUCT_MIRROR_TYPE(LAND_STD_VME) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(land_vme);
  STRUCT_MIRROR_FCNS_DECL(s8_tpat_subev);
};
#endif//USER_DEF_s8_tpat_subev

#ifndef USER_DEF_s8_vme_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(s8_vme_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(s8_vme_subev_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(s8_vme_subev);
};
#endif//USER_DEF_s8_vme_subev

#ifndef USER_DEF_s8_wr
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(s8_wr) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(s8_wr);
};
#endif//USER_DEF_s8_wr

#ifndef USER_DEF_sofia_mwpc_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(sofia_mwpc_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(sofia_mwpc_subev_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(sofia_mwpc_subev);
};
#endif//USER_DEF_sofia_mwpc_subev

#ifndef USER_DEF_sofia_tof_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(sofia_tof_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(sofia_tof_subev_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(sofia_tof_subev);
};
#endif//USER_DEF_sofia_tof_subev

#ifndef USER_DEF_sofia_trim_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(sofia_trim_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(sofia_trim_subev_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(sofia_trim_subev);
};
#endif//USER_DEF_sofia_trim_subev

#ifndef USER_DEF_sofia_twim_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(sofia_twim_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(sofia_twim_subev_data) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(sofia_twim_subev);
};
#endif//USER_DEF_sofia_twim_subev

#ifndef USER_DEF_wr_neuland
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(wr_neuland) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(wr_neuland);
};
#endif//USER_DEF_wr_neuland

#ifndef USER_DEF_wr_s2
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(wr_s2) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(wr_s2);
};
#endif//USER_DEF_wr_s2

#ifndef USER_DEF_wr_sofia
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(wr_sofia) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(wr_sofia);
};
#endif//USER_DEF_wr_sofia

#ifndef USER_DEF_unpack_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_event) : public STRUCT_MIRROR_BASE(unpack_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_event_base);
  STRUCT_MIRROR_ITEM_CTRL(los_ts);
  STRUCT_MIRROR_TYPE(los_wr) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_ts);
  STRUCT_MIRROR_ITEM_CTRL(los_vme);
  STRUCT_MIRROR_TYPE(los_vme_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_vme);
  STRUCT_MIRROR_ITEM_CTRL(los_lmu);
  STRUCT_MIRROR_TYPE(lmu_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_lmu);
  STRUCT_MIRROR_ITEM_CTRL(los_tamex);
  STRUCT_MIRROR_TYPE(los_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_tamex);
  STRUCT_MIRROR_ITEM_CTRL(los_sampler);
  STRUCT_MIRROR_TYPE(los_sampler_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(los_sampler);
  STRUCT_MIRROR_ITEM_CTRL(fib1ab);
  STRUCT_MIRROR_TYPE(fib1ab_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fib1ab);
  STRUCT_MIRROR_ITEM_CTRL(neuland_ts);
  STRUCT_MIRROR_TYPE(wr_neuland) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(neuland_ts);
  STRUCT_MIRROR_ITEM_CTRL(neuland_tamex_1);
  STRUCT_MIRROR_TYPE(neuland_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(neuland_tamex_1);
  STRUCT_MIRROR_ITEM_CTRL(neuland_tamex_2);
  STRUCT_MIRROR_TYPE(neuland_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(neuland_tamex_2);
  STRUCT_MIRROR_ITEM_CTRL(neuland_tamex_3);
  STRUCT_MIRROR_TYPE(neuland_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(neuland_tamex_3);
  STRUCT_MIRROR_ITEM_CTRL(neuland_tamex_4);
  STRUCT_MIRROR_TYPE(neuland_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(neuland_tamex_4);
  STRUCT_MIRROR_ITEM_CTRL(califa);
  STRUCT_MIRROR_TYPE(CALIFA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(califa);
  STRUCT_MIRROR_ITEM_CTRL(ams_ts);
  STRUCT_MIRROR_TYPE(ams_wr) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ams_ts);
  STRUCT_MIRROR_ITEM_CTRL(ams_siderem_1);
  STRUCT_MIRROR_TYPE(ams_siderem1_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ams_siderem_1);
  STRUCT_MIRROR_ITEM_CTRL(ams_siderem_2);
  STRUCT_MIRROR_TYPE(ams_siderem2_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ams_siderem_2);
  STRUCT_MIRROR_ITEM_CTRL(sofia_tof);
  STRUCT_MIRROR_TYPE(sofia_tof_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sofia_tof);
  STRUCT_MIRROR_ITEM_CTRL(sofia_mwpc);
  STRUCT_MIRROR_TYPE(sofia_mwpc_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sofia_mwpc);
  STRUCT_MIRROR_ITEM_CTRL(sofia_twim);
  STRUCT_MIRROR_TYPE(sofia_twim_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sofia_twim);
  STRUCT_MIRROR_ITEM_CTRL(sofia_trim);
  STRUCT_MIRROR_TYPE(sofia_trim_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(sofia_trim);
  STRUCT_MIRROR_ITEM_CTRL(fibsipm);
  STRUCT_MIRROR_TYPE(fibsipm_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fibsipm);
  STRUCT_MIRROR_ITEM_CTRL(s2_ts);
  STRUCT_MIRROR_TYPE(wr_s2) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(s2_ts);
  STRUCT_MIRROR_ITEM_CTRL(s2_vme);
  STRUCT_MIRROR_TYPE(s2_vme_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(s2_vme);
  STRUCT_MIRROR_ITEM_CTRL(s8_ts);
  STRUCT_MIRROR_TYPE(s8_wr) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(s8_ts);
  STRUCT_MIRROR_ITEM_CTRL(s8_tpat);
  STRUCT_MIRROR_TYPE(s8_tpat_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(s8_tpat);
  STRUCT_MIRROR_ITEM_CTRL(s8_vme);
  STRUCT_MIRROR_TYPE(s8_vme_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(s8_vme);
  STRUCT_MIRROR_FCNS_DECL(unpack_event);
};
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_sticky_event) : public STRUCT_MIRROR_BASE(unpack_sticky_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_sticky_event_base);
  STRUCT_MIRROR_FCNS_DECL(unpack_sticky_event);
};
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(BARRIER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CAMAC_LECROY_4434);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CAMAC_PHILLIPS_7164);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CAMAC_SILENA_4418);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1875);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FASTBUS_LECROY_1885);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX3_CALIFA_BASE);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_BAD_EVENTHEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_GOOD_EVENTHEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_EVENTHEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_NOTRACE);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_TRACE);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_16PH_ITEM);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_BAD00BAD);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_FUSER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_ITEM);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(GSI_CLOCKTDC_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(GSI_SAM_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(LAND_STD_VME);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(MEGA_PULSER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX3_FH_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX3_FH_SFP);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX3_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX3_SFP);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX3_WINDOW);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLOII_LMU_SCALERS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLOII_SAMPLER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLOII_SAMPLER_TWO);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRLOII_TPAT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT_SUBTDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_SHORT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT_SUBTDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_SHORT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V775);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V830);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_7PS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_GSI_VFTX2_LT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_MADC32);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_MDPP16);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_MQDC32);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_MTDC32);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_MESYTEC_VMMR8);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(WR_MULTI);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(fib1a_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(fibsipm_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_tamex_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_vme_subev_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(neuland_sfp);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(neuland_tamex_subev_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(s2_vme_subev_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(s8_vme_subev_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(sofia_mwpc_subev_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(sofia_tof_subev_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(sofia_trim_subev_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(sofia_twim_subev_data);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(CALIFA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(ams_siderem1_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(ams_siderem2_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(ams_wr);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(fib1ab_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(fibsipm_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(lmu_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_sampler_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_tamex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_vme_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(los_wr);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(neuland_tamex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(s2_vme_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(s8_tpat_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(s8_vme_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(s8_wr);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(sofia_mwpc_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(sofia_tof_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(sofia_trim_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(sofia_twim_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(wr_neuland);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(wr_s2);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(wr_sofia);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_event);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_sticky_event);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_BARRIER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(BARRIER)::FCNCALL_NAME(BARRIER)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_31 : 32;
    // } ;
    // uint32 u32;
  // } barrier;
  {
  FCNCALL_SUBNAME("barrier");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_31 : 32;
  // } ;
  // uint32 unnamed_0_31 : 32;
  {
  FCNCALL_SUBNAME("unnamed_0_31");
  { FCNCALL_CALL_CTRL_WRAP(barrier.unnamed_0_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,barrier.unnamed_0_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(barrier.u32,FCNCALL_CALL_TYPE(uint32,barrier.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_BARRIER

#ifndef USER_DEF_CAMAC_LECROY_4434
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CAMAC_LECROY_4434)::FCNCALL_NAME(CAMAC_LECROY_4434)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA24,DATA24,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CAMAC_LECROY_4434

#ifndef USER_DEF_CAMAC_PHILLIPS_7164
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CAMAC_PHILLIPS_7164)::FCNCALL_NAME(CAMAC_PHILLIPS_7164)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12,DATA12,16> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CAMAC_PHILLIPS_7164

#ifndef USER_DEF_CAMAC_SILENA_4418
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CAMAC_SILENA_4418)::FCNCALL_NAME(CAMAC_SILENA_4418)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,8> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CAMAC_SILENA_4418

#ifndef USER_DEF_FASTBUS_LECROY_1875
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FASTBUS_LECROY_1875)::FCNCALL_NAME(FASTBUS_LECROY_1875)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,64> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FASTBUS_LECROY_1875

#ifndef USER_DEF_FASTBUS_LECROY_1885
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FASTBUS_LECROY_1885)::FCNCALL_NAME(FASTBUS_LECROY_1885)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_RANGE,DATA12_RANGE,96> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FASTBUS_LECROY_1885

#ifndef USER_DEF_FEBEX3_CALIFA_BASE
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX3_CALIFA_BASE)::FCNCALL_NAME(FEBEX3_CALIFA_BASE)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA16,DATA16,2048> energy;
  {
  FCNCALL_SUBNAME("energy");
  { FCNCALL_CALL_CTRL_WRAP(energy,energy.FCNCALL_CALL(energy)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,2048> ts_lsb;
  {
  FCNCALL_SUBNAME("ts_lsb");
  { FCNCALL_CALL_CTRL_WRAP(ts_lsb,ts_lsb.FCNCALL_CALL(ts_lsb)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,2048> ts_msb;
  {
  FCNCALL_SUBNAME("ts_msb");
  { FCNCALL_CALL_CTRL_WRAP(ts_msb,ts_msb.FCNCALL_CALL(ts_msb)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,2048> n_f;
  {
  FCNCALL_SUBNAME("n_f");
  { FCNCALL_CALL_CTRL_WRAP(n_f,n_f.FCNCALL_CALL(n_f)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,2048> n_s;
  {
  FCNCALL_SUBNAME("n_s");
  { FCNCALL_CALL_CTRL_WRAP(n_s,n_s.FCNCALL_CALL(n_s)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX3_CALIFA_BASE

#ifndef USER_DEF_FEBEX_BAD_EVENTHEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_BAD_EVENTHEADER)::FCNCALL_NAME(FEBEX_BAD_EVENTHEADER)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_31 : 32;
    // } ;
    // uint32 u32;
  // } badbad;
  {
  FCNCALL_SUBNAME("badbad");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_31 : 32;
  // } ;
  // uint32 unnamed_0_31 : 32;
  {
  FCNCALL_SUBNAME("unnamed_0_31");
  { FCNCALL_CALL_CTRL_WRAP(badbad.unnamed_0_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,badbad.unnamed_0_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(badbad.u32,FCNCALL_CALL_TYPE(uint32,badbad.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_BAD_EVENTHEADER

#ifndef USER_DEF_FEBEX_GOOD_EVENTHEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_GOOD_EVENTHEADER)::FCNCALL_NAME(FEBEX_GOOD_EVENTHEADER)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 n_febex_sfp0 : 8;
      // uint32 n_febex_sfp1 : 8;
      // uint32 n_febex_sfp2 : 8;
      // uint32 n_febex_sfp3 : 8;
    // } ;
    // uint32 u32;
  // } febexcards;
  {
  FCNCALL_SUBNAME("febexcards");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 n_febex_sfp0 : 8;
    // uint32 n_febex_sfp1 : 8;
    // uint32 n_febex_sfp2 : 8;
    // uint32 n_febex_sfp3 : 8;
  // } ;
  // uint32 n_febex_sfp0 : 8;
  {
  FCNCALL_SUBNAME("n_febex_sfp0");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.n_febex_sfp0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.n_febex_sfp0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 n_febex_sfp1 : 8;
  {
  FCNCALL_SUBNAME("n_febex_sfp1");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.n_febex_sfp1,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.n_febex_sfp1)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 n_febex_sfp2 : 8;
  {
  FCNCALL_SUBNAME("n_febex_sfp2");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.n_febex_sfp2,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.n_febex_sfp2)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 n_febex_sfp3 : 8;
  {
  FCNCALL_SUBNAME("n_febex_sfp3");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.n_febex_sfp3,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,febexcards.n_febex_sfp3)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(febexcards.u32,FCNCALL_CALL_TYPE(uint32,febexcards.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 trace_length : 16;
      // uint32 trigger_delay : 16;
    // } ;
    // uint32 u32;
  // } trig_length;
  {
  FCNCALL_SUBNAME("trig_length");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 trace_length : 16;
    // uint32 trigger_delay : 16;
  // } ;
  // uint32 trace_length : 16;
  {
  FCNCALL_SUBNAME("trace_length");
  { FCNCALL_CALL_CTRL_WRAP(trig_length.trace_length,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trig_length.trace_length)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_delay : 16;
  {
  FCNCALL_SUBNAME("trigger_delay");
  { FCNCALL_CALL_CTRL_WRAP(trig_length.trigger_delay,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trig_length.trigger_delay)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trig_length.u32,FCNCALL_CALL_TYPE(uint32,trig_length.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 sum_b : 11;
      // uint32 gap : 10;
      // uint32 sum_a : 11;
    // } ;
    // uint32 u32;
  // } energy_filter;
  {
  FCNCALL_SUBNAME("energy_filter");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 sum_b : 11;
    // uint32 gap : 10;
    // uint32 sum_a : 11;
  // } ;
  // uint32 sum_b : 11;
  {
  FCNCALL_SUBNAME("sum_b");
  { FCNCALL_CALL_CTRL_WRAP(energy_filter.sum_b,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,energy_filter.sum_b)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 gap : 10;
  {
  FCNCALL_SUBNAME("gap");
  { FCNCALL_CALL_CTRL_WRAP(energy_filter.gap,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,energy_filter.gap)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sum_a : 11;
  {
  FCNCALL_SUBNAME("sum_a");
  { FCNCALL_CALL_CTRL_WRAP(energy_filter.sum_a,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,energy_filter.sum_a)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(energy_filter.u32,FCNCALL_CALL_TYPE(uint32,energy_filter.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 pola : 32;
    // } ;
    // uint32 u32;
  // } polarity1;
  {
  FCNCALL_SUBNAME("polarity1");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 pola : 32;
  // } ;
  // uint32 pola : 32;
  {
  FCNCALL_SUBNAME("pola");
  { FCNCALL_CALL_CTRL_WRAP(polarity1.pola,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,polarity1.pola)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(polarity1.u32,FCNCALL_CALL_TYPE(uint32,polarity1.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 pola : 32;
    // } ;
    // uint32 u32;
  // } polarity2;
  {
  FCNCALL_SUBNAME("polarity2");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 pola : 32;
  // } ;
  // uint32 pola : 32;
  {
  FCNCALL_SUBNAME("pola");
  { FCNCALL_CALL_CTRL_WRAP(polarity2.pola,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,polarity2.pola)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(polarity2.u32,FCNCALL_CALL_TYPE(uint32,polarity2.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 pola : 32;
    // } ;
    // uint32 u32;
  // } polarity3;
  {
  FCNCALL_SUBNAME("polarity3");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 pola : 32;
  // } ;
  // uint32 pola : 32;
  {
  FCNCALL_SUBNAME("pola");
  { FCNCALL_CALL_CTRL_WRAP(polarity3.pola,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,polarity3.pola)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(polarity3.u32,FCNCALL_CALL_TYPE(uint32,polarity3.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 pola : 32;
    // } ;
    // uint32 u32;
  // } polarity4;
  {
  FCNCALL_SUBNAME("polarity4");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 pola : 32;
  // } ;
  // uint32 pola : 32;
  {
  FCNCALL_SUBNAME("pola");
  { FCNCALL_CALL_CTRL_WRAP(polarity4.pola,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,polarity4.pola)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(polarity4.u32,FCNCALL_CALL_TYPE(uint32,polarity4.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_GOOD_EVENTHEADER

#ifndef USER_DEF_FEBEX_EVENTHEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_EVENTHEADER)::FCNCALL_NAME(FEBEX_EVENTHEADER)
{
  FCNCALL_INIT;
  // FEBEX_GOOD_EVENTHEADER good;
  {
  FCNCALL_SUBNAME("good");
  { FCNCALL_CALL_CTRL_WRAP(good,good.FCNCALL_CALL(good)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_BAD_EVENTHEADER bad;
  {
  FCNCALL_SUBNAME("bad");
  { FCNCALL_CALL_CTRL_WRAP(bad,bad.FCNCALL_CALL(bad)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_EVENTHEADER

#ifndef USER_DEF_FEBEX_NOTRACE
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_NOTRACE)::FCNCALL_NAME(FEBEX_NOTRACE)
{
  FCNCALL_INIT;
  // raw_array<DATA8,DATA8,16> n_hit;
  {
  FCNCALL_SUBNAME("n_hit");
  { FCNCALL_CALL_CTRL_WRAP(n_hit,n_hit.FCNCALL_CALL(n_hit)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,16,32> t;
  {
  FCNCALL_SUBNAME("t");
  { FCNCALL_CALL_CTRL_WRAP(t,t.FCNCALL_CALL(t)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA32,DATA32,16,32> e;
  {
  FCNCALL_SUBNAME("e");
  { FCNCALL_CALL_CTRL_WRAP(e,e.FCNCALL_CALL(e)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_NOTRACE

#ifndef USER_DEF_FEBEX_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_PADDING)::FCNCALL_NAME(FEBEX_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_FEBEX_TRACE
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_TRACE)::FCNCALL_NAME(FEBEX_TRACE)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,16> trace_length;
  {
  FCNCALL_SUBNAME("trace_length");
  { FCNCALL_CALL_CTRL_WRAP(trace_length,trace_length.FCNCALL_CALL(trace_length)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,1000> trace[16];
  {
  FCNCALL_SUBNAME("trace");
  FCNCALL_FOR(__i0,16)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(trace__i0,,__i0,trace[__i0].FCNCALL_CALL(trace[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,1000> filter[16];
  {
  FCNCALL_SUBNAME("filter");
  FCNCALL_FOR(__i0,16)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(filter__i0,,__i0,filter[__i0].FCNCALL_CALL(filter[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_TRACE

#ifndef USER_DEF_GSI_CLOCKTDC_16PH_ITEM
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(GSI_CLOCKTDC_16PH_ITEM)::FCNCALL_NAME(GSI_CLOCKTDC_16PH_ITEM)
{
  FCNCALL_INIT;
  // DATA32 event_counter_lo32;
  {
  FCNCALL_SUBNAME("event_counter_lo32");
  { FCNCALL_CALL_CTRL_WRAP(event_counter_lo32,event_counter_lo32.FCNCALL_CALL(event_counter_lo32)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 event_counter_hi16;
  {
  FCNCALL_SUBNAME("event_counter_hi16");
  { FCNCALL_CALL_CTRL_WRAP(event_counter_hi16,event_counter_hi16.FCNCALL_CALL(event_counter_hi16)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 trigger_coarse_lo22;
  {
  FCNCALL_SUBNAME("trigger_coarse_lo22");
  { FCNCALL_CALL_CTRL_WRAP(trigger_coarse_lo22,trigger_coarse_lo22.FCNCALL_CALL(trigger_coarse_lo22)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 trigger_coarse_hi24;
  {
  FCNCALL_SUBNAME("trigger_coarse_hi24");
  { FCNCALL_CALL_CTRL_WRAP(trigger_coarse_hi24,trigger_coarse_hi24.FCNCALL_CALL(trigger_coarse_hi24)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,258,80> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,258,80> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 _0x34 : 8;
      // uint32 trigger_type : 4;
      // uint32 sfp_id : 4;
      // uint32 tdc_id : 8;
      // uint32 channel_id : 8;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 _0x34 : 8;
    // uint32 trigger_type : 4;
    // uint32 sfp_id : 4;
    // uint32 tdc_id : 8;
    // uint32 channel_id : 8;
  // } ;
  // uint32 _0x34 : 8;
  {
  FCNCALL_SUBNAME("_0x34");
  { FCNCALL_CALL_CTRL_WRAP(header._0x34,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header._0x34)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_type : 4;
  {
  FCNCALL_SUBNAME("trigger_type");
  { FCNCALL_CALL_CTRL_WRAP(header.trigger_type,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.trigger_type)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sfp_id : 4;
  {
  FCNCALL_SUBNAME("sfp_id");
  { FCNCALL_CALL_CTRL_WRAP(header.sfp_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.sfp_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_id : 8;
  {
  FCNCALL_SUBNAME("tdc_id");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_id : 8;
  {
  FCNCALL_SUBNAME("channel_id");
  { FCNCALL_CALL_CTRL_WRAP(header.channel_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.channel_id)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_num;
  {
  FCNCALL_SUBNAME("channel_num");
  { FCNCALL_CALL_CTRL_WRAP(channel_num,FCNCALL_CALL_TYPE(uint32,channel_num)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 _0x34 : 8;
      // uint32 trigger_type : 4;
      // uint32 sfp_id : 4;
      // uint32 tdc_id : 8;
      // uint32 channel_id : 8;
    // } ;
    // uint32 u32;
  // } channel_header;
  {
  FCNCALL_SUBNAME("channel_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 _0x34 : 8;
    // uint32 trigger_type : 4;
    // uint32 sfp_id : 4;
    // uint32 tdc_id : 8;
    // uint32 channel_id : 8;
  // } ;
  // uint32 _0x34 : 8;
  {
  FCNCALL_SUBNAME("_0x34");
  { FCNCALL_CALL_CTRL_WRAP(channel_header._0x34,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header._0x34)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_type : 4;
  {
  FCNCALL_SUBNAME("trigger_type");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.trigger_type,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header.trigger_type)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sfp_id : 4;
  {
  FCNCALL_SUBNAME("sfp_id");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.sfp_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header.sfp_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_id : 8;
  {
  FCNCALL_SUBNAME("tdc_id");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.tdc_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header.tdc_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_id : 8;
  {
  FCNCALL_SUBNAME("channel_id");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.channel_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header.channel_id)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.u32,FCNCALL_CALL_TYPE(uint32,channel_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 data_byte_num;
  {
  FCNCALL_SUBNAME("data_byte_num");
  { FCNCALL_CALL_CTRL_WRAP(data_byte_num,FCNCALL_CALL_TYPE(uint32,data_byte_num)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_fine : 5;
      // uint32 time_coarse : 12;
      // uint32 time_coarse_ext : 1;
      // uint32 edge : 1;
      // uint32 ws : 1;
      // uint32 time_coarse_overflow : 1;
      // uint32 rb_overflow : 1;
      // uint32 dummy : 1;
      // uint32 is_data : 1;
      // uint32 channel : 8;
    // } ;
    // uint32 u32;
  // } data;
  {
  FCNCALL_SUBNAME("data");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_fine : 5;
    // uint32 time_coarse : 12;
    // uint32 time_coarse_ext : 1;
    // uint32 edge : 1;
    // uint32 ws : 1;
    // uint32 time_coarse_overflow : 1;
    // uint32 rb_overflow : 1;
    // uint32 dummy : 1;
    // uint32 is_data : 1;
    // uint32 channel : 8;
  // } ;
  // uint32 time_fine : 5;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(data.time_fine,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_coarse : 12;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(data.time_coarse,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_coarse_ext : 1;
  {
  FCNCALL_SUBNAME("time_coarse_ext");
  { FCNCALL_CALL_CTRL_WRAP(data.time_coarse_ext,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.time_coarse_ext)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 edge : 1;
  {
  FCNCALL_SUBNAME("edge");
  { FCNCALL_CALL_CTRL_WRAP(data.edge,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.edge)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ws : 1;
  {
  FCNCALL_SUBNAME("ws");
  { FCNCALL_CALL_CTRL_WRAP(data.ws,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.ws)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_coarse_overflow : 1;
  {
  FCNCALL_SUBNAME("time_coarse_overflow");
  { FCNCALL_CALL_CTRL_WRAP(data.time_coarse_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.time_coarse_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 rb_overflow : 1;
  {
  FCNCALL_SUBNAME("rb_overflow");
  { FCNCALL_CALL_CTRL_WRAP(data.rb_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.rb_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy : 1;
  {
  FCNCALL_SUBNAME("dummy");
  { FCNCALL_CALL_CTRL_WRAP(data.dummy,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.dummy)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 is_data : 1;
  {
  FCNCALL_SUBNAME("is_data");
  { FCNCALL_CALL_CTRL_WRAP(data.is_data,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.is_data)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel : 8;
  {
  FCNCALL_SUBNAME("channel");
  { FCNCALL_CALL_CTRL_WRAP(data.channel,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.channel)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(data.u32,FCNCALL_CALL_TYPE(uint32,data.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_GSI_CLOCKTDC_16PH_ITEM

#ifndef USER_DEF_GSI_CLOCKTDC_BAD00BAD
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(GSI_CLOCKTDC_BAD00BAD)::FCNCALL_NAME(GSI_CLOCKTDC_BAD00BAD)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_GSI_CLOCKTDC_BAD00BAD

#ifndef USER_DEF_GSI_CLOCKTDC_FUSER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(GSI_CLOCKTDC_FUSER)::FCNCALL_NAME(GSI_CLOCKTDC_FUSER)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 sfp0_num : 8;
      // uint32 sfp1_num : 8;
      // uint32 sfp2_num : 8;
      // uint32 sfp3_num : 8;
    // } ;
    // uint32 u32;
  // } slave_num;
  {
  FCNCALL_SUBNAME("slave_num");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 sfp0_num : 8;
    // uint32 sfp1_num : 8;
    // uint32 sfp2_num : 8;
    // uint32 sfp3_num : 8;
  // } ;
  // uint32 sfp0_num : 8;
  {
  FCNCALL_SUBNAME("sfp0_num");
  { FCNCALL_CALL_CTRL_WRAP(slave_num.sfp0_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,slave_num.sfp0_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sfp1_num : 8;
  {
  FCNCALL_SUBNAME("sfp1_num");
  { FCNCALL_CALL_CTRL_WRAP(slave_num.sfp1_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,slave_num.sfp1_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sfp2_num : 8;
  {
  FCNCALL_SUBNAME("sfp2_num");
  { FCNCALL_CALL_CTRL_WRAP(slave_num.sfp2_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,slave_num.sfp2_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sfp3_num : 8;
  {
  FCNCALL_SUBNAME("sfp3_num");
  { FCNCALL_CALL_CTRL_WRAP(slave_num.sfp3_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,slave_num.sfp3_num)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(slave_num.u32,FCNCALL_CALL_TYPE(uint32,slave_num.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trig_window;
  {
  FCNCALL_SUBNAME("trig_window");
  { FCNCALL_CALL_CTRL_WRAP(trig_window,FCNCALL_CALL_TYPE(uint32,trig_window)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 num : 32;
    // } ;
    // uint32 u32;
  // } channel_num;
  {
  FCNCALL_SUBNAME("channel_num");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 num : 32;
  // } ;
  // uint32 num : 32;
  {
  FCNCALL_SUBNAME("num");
  { FCNCALL_CALL_CTRL_WRAP(channel_num.num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_num.num)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(channel_num.u32,FCNCALL_CALL_TYPE(uint32,channel_num.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_GSI_CLOCKTDC_FUSER

#ifndef USER_DEF_GSI_CLOCKTDC_ITEM
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(GSI_CLOCKTDC_ITEM)::FCNCALL_NAME(GSI_CLOCKTDC_ITEM)
{
  FCNCALL_INIT;
  // DATA32 event_counter_lo32;
  {
  FCNCALL_SUBNAME("event_counter_lo32");
  { FCNCALL_CALL_CTRL_WRAP(event_counter_lo32,event_counter_lo32.FCNCALL_CALL(event_counter_lo32)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 event_counter_hi16;
  {
  FCNCALL_SUBNAME("event_counter_hi16");
  { FCNCALL_CALL_CTRL_WRAP(event_counter_hi16,event_counter_hi16.FCNCALL_CALL(event_counter_hi16)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 trigger_coarse_lo22;
  {
  FCNCALL_SUBNAME("trigger_coarse_lo22");
  { FCNCALL_CALL_CTRL_WRAP(trigger_coarse_lo22,trigger_coarse_lo22.FCNCALL_CALL(trigger_coarse_lo22)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 trigger_coarse_hi24;
  {
  FCNCALL_SUBNAME("trigger_coarse_hi24");
  { FCNCALL_CALL_CTRL_WRAP(trigger_coarse_hi24,trigger_coarse_hi24.FCNCALL_CALL(trigger_coarse_hi24)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,258,80> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,258,80> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 _0x34 : 8;
      // uint32 trigger_type : 4;
      // uint32 sfp_id : 4;
      // uint32 tdc_id : 8;
      // uint32 channel_id : 8;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 _0x34 : 8;
    // uint32 trigger_type : 4;
    // uint32 sfp_id : 4;
    // uint32 tdc_id : 8;
    // uint32 channel_id : 8;
  // } ;
  // uint32 _0x34 : 8;
  {
  FCNCALL_SUBNAME("_0x34");
  { FCNCALL_CALL_CTRL_WRAP(header._0x34,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header._0x34)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_type : 4;
  {
  FCNCALL_SUBNAME("trigger_type");
  { FCNCALL_CALL_CTRL_WRAP(header.trigger_type,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.trigger_type)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sfp_id : 4;
  {
  FCNCALL_SUBNAME("sfp_id");
  { FCNCALL_CALL_CTRL_WRAP(header.sfp_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.sfp_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_id : 8;
  {
  FCNCALL_SUBNAME("tdc_id");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_id : 8;
  {
  FCNCALL_SUBNAME("channel_id");
  { FCNCALL_CALL_CTRL_WRAP(header.channel_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.channel_id)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_num;
  {
  FCNCALL_SUBNAME("channel_num");
  { FCNCALL_CALL_CTRL_WRAP(channel_num,FCNCALL_CALL_TYPE(uint32,channel_num)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 _0x34 : 8;
      // uint32 trigger_type : 4;
      // uint32 sfp_id : 4;
      // uint32 tdc_id : 8;
      // uint32 channel_id : 8;
    // } ;
    // uint32 u32;
  // } channel_header;
  {
  FCNCALL_SUBNAME("channel_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 _0x34 : 8;
    // uint32 trigger_type : 4;
    // uint32 sfp_id : 4;
    // uint32 tdc_id : 8;
    // uint32 channel_id : 8;
  // } ;
  // uint32 _0x34 : 8;
  {
  FCNCALL_SUBNAME("_0x34");
  { FCNCALL_CALL_CTRL_WRAP(channel_header._0x34,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header._0x34)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_type : 4;
  {
  FCNCALL_SUBNAME("trigger_type");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.trigger_type,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header.trigger_type)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 sfp_id : 4;
  {
  FCNCALL_SUBNAME("sfp_id");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.sfp_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header.sfp_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_id : 8;
  {
  FCNCALL_SUBNAME("tdc_id");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.tdc_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header.tdc_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel_id : 8;
  {
  FCNCALL_SUBNAME("channel_id");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.channel_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,channel_header.channel_id)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(channel_header.u32,FCNCALL_CALL_TYPE(uint32,channel_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 data_byte_num;
  {
  FCNCALL_SUBNAME("data_byte_num");
  { FCNCALL_CALL_CTRL_WRAP(data_byte_num,FCNCALL_CALL_TYPE(uint32,data_byte_num)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_fine : 4;
      // uint32 time_coarse : 12;
      // uint32 time_coarse_ext : 1;
      // uint32 edge : 1;
      // uint32 ws : 1;
      // uint32 time_coarse_overflow : 1;
      // uint32 rb_overflow : 1;
      // uint32 status : 3;
      // uint32 channel : 8;
    // } ;
    // uint32 u32;
  // } data;
  {
  FCNCALL_SUBNAME("data");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_fine : 4;
    // uint32 time_coarse : 12;
    // uint32 time_coarse_ext : 1;
    // uint32 edge : 1;
    // uint32 ws : 1;
    // uint32 time_coarse_overflow : 1;
    // uint32 rb_overflow : 1;
    // uint32 status : 3;
    // uint32 channel : 8;
  // } ;
  // uint32 time_fine : 4;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(data.time_fine,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_coarse : 12;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(data.time_coarse,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_coarse_ext : 1;
  {
  FCNCALL_SUBNAME("time_coarse_ext");
  { FCNCALL_CALL_CTRL_WRAP(data.time_coarse_ext,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.time_coarse_ext)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 edge : 1;
  {
  FCNCALL_SUBNAME("edge");
  { FCNCALL_CALL_CTRL_WRAP(data.edge,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.edge)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ws : 1;
  {
  FCNCALL_SUBNAME("ws");
  { FCNCALL_CALL_CTRL_WRAP(data.ws,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.ws)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_coarse_overflow : 1;
  {
  FCNCALL_SUBNAME("time_coarse_overflow");
  { FCNCALL_CALL_CTRL_WRAP(data.time_coarse_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.time_coarse_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 rb_overflow : 1;
  {
  FCNCALL_SUBNAME("rb_overflow");
  { FCNCALL_CALL_CTRL_WRAP(data.rb_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.rb_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 status : 3;
  {
  FCNCALL_SUBNAME("status");
  { FCNCALL_CALL_CTRL_WRAP(data.status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 channel : 8;
  {
  FCNCALL_SUBNAME("channel");
  { FCNCALL_CALL_CTRL_WRAP(data.channel,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,data.channel)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(data.u32,FCNCALL_CALL_TYPE(uint32,data.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_GSI_CLOCKTDC_ITEM

#ifndef USER_DEF_GSI_CLOCKTDC_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(GSI_CLOCKTDC_PADDING)::FCNCALL_NAME(GSI_CLOCKTDC_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_GSI_CLOCKTDC_PADDING

#ifndef USER_DEF_GSI_SAM_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(GSI_SAM_PADDING)::FCNCALL_NAME(GSI_SAM_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_GSI_SAM_PADDING

#ifndef USER_DEF_LAND_STD_VME
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(LAND_STD_VME)::FCNCALL_NAME(LAND_STD_VME)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 fail_general : 1;
      // uint32 fail_data_corrupt : 1;
      // uint32 fail_data_missing : 1;
      // uint32 fail_data_too_much : 1;
      // uint32 fail_event_counter_mismatch : 1;
      // uint32 fail_readout_error_driver : 1;
      // uint32 fail_unexpected_trigger : 1;
      // uint32 fail_firmware_mismatch : 1;
      // uint32 dummy_8_21 : 14;
      // uint32 has_multi_trlo_ii_counter0 : 1;
      // uint32 has_clock_counter_stamp : 1;
      // uint32 has_continous_event_counter : 1;
      // uint32 has_update_qdc_iped_value : 1;
      // uint32 spurious_start_before_tcal : 1;
      // uint32 has_no_zero_suppression : 1;
      // uint32 has_multi_adctdc_counter0 : 1;
      // uint32 has_multi_scaler_counter0 : 1;
      // uint32 has_multi_event : 1;
      // uint32 has_time_stamp : 1;
    // } ;
    // uint32 u32;
  // } failure;
  {
  FCNCALL_SUBNAME("failure");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 fail_general : 1;
    // uint32 fail_data_corrupt : 1;
    // uint32 fail_data_missing : 1;
    // uint32 fail_data_too_much : 1;
    // uint32 fail_event_counter_mismatch : 1;
    // uint32 fail_readout_error_driver : 1;
    // uint32 fail_unexpected_trigger : 1;
    // uint32 fail_firmware_mismatch : 1;
    // uint32 dummy_8_21 : 14;
    // uint32 has_multi_trlo_ii_counter0 : 1;
    // uint32 has_clock_counter_stamp : 1;
    // uint32 has_continous_event_counter : 1;
    // uint32 has_update_qdc_iped_value : 1;
    // uint32 spurious_start_before_tcal : 1;
    // uint32 has_no_zero_suppression : 1;
    // uint32 has_multi_adctdc_counter0 : 1;
    // uint32 has_multi_scaler_counter0 : 1;
    // uint32 has_multi_event : 1;
    // uint32 has_time_stamp : 1;
  // } ;
  // uint32 fail_general : 1;
  {
  FCNCALL_SUBNAME("fail_general");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_general,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_general)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_corrupt : 1;
  {
  FCNCALL_SUBNAME("fail_data_corrupt");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_corrupt,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_corrupt)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_missing : 1;
  {
  FCNCALL_SUBNAME("fail_data_missing");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_missing,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_missing)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_data_too_much : 1;
  {
  FCNCALL_SUBNAME("fail_data_too_much");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_data_too_much,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_data_too_much)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_event_counter_mismatch : 1;
  {
  FCNCALL_SUBNAME("fail_event_counter_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_event_counter_mismatch,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_event_counter_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_readout_error_driver : 1;
  {
  FCNCALL_SUBNAME("fail_readout_error_driver");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_readout_error_driver,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_readout_error_driver)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_unexpected_trigger : 1;
  {
  FCNCALL_SUBNAME("fail_unexpected_trigger");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_unexpected_trigger,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_unexpected_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 fail_firmware_mismatch : 1;
  {
  FCNCALL_SUBNAME("fail_firmware_mismatch");
  { FCNCALL_CALL_CTRL_WRAP(failure.fail_firmware_mismatch,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.fail_firmware_mismatch)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_21 : 14;
  {
  FCNCALL_SUBNAME("dummy_8_21");
  { FCNCALL_CALL_CTRL_WRAP(failure.dummy_8_21,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.dummy_8_21)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_trlo_ii_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_trlo_ii_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_trlo_ii_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_trlo_ii_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_clock_counter_stamp : 1;
  {
  FCNCALL_SUBNAME("has_clock_counter_stamp");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_clock_counter_stamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_clock_counter_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_continous_event_counter : 1;
  {
  FCNCALL_SUBNAME("has_continous_event_counter");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_continous_event_counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_continous_event_counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_update_qdc_iped_value : 1;
  {
  FCNCALL_SUBNAME("has_update_qdc_iped_value");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_update_qdc_iped_value,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_update_qdc_iped_value)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 spurious_start_before_tcal : 1;
  {
  FCNCALL_SUBNAME("spurious_start_before_tcal");
  { FCNCALL_CALL_CTRL_WRAP(failure.spurious_start_before_tcal,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.spurious_start_before_tcal)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_no_zero_suppression : 1;
  {
  FCNCALL_SUBNAME("has_no_zero_suppression");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_no_zero_suppression,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_no_zero_suppression)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_adctdc_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_adctdc_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_adctdc_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_adctdc_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_scaler_counter0 : 1;
  {
  FCNCALL_SUBNAME("has_multi_scaler_counter0");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_scaler_counter0,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_scaler_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_multi_event : 1;
  {
  FCNCALL_SUBNAME("has_multi_event");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_multi_event,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_multi_event)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 has_time_stamp : 1;
  {
  FCNCALL_SUBNAME("has_time_stamp");
  { FCNCALL_CALL_CTRL_WRAP(failure.has_time_stamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,failure.has_time_stamp)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(failure.u32,FCNCALL_CALL_TYPE(uint32,failure.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // uint32 continous_event_counter;
  {
  FCNCALL_SUBNAME("continous_event_counter");
  { FCNCALL_CALL_CTRL_WRAP(continous_event_counter,FCNCALL_CALL_TYPE(uint32,continous_event_counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 time_stamp;
  {
  FCNCALL_SUBNAME("time_stamp");
  { FCNCALL_CALL_CTRL_WRAP(time_stamp,FCNCALL_CALL_TYPE(uint32,time_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 clock_counter_stamp;
  {
  FCNCALL_SUBNAME("clock_counter_stamp");
  { FCNCALL_CALL_CTRL_WRAP(clock_counter_stamp,FCNCALL_CALL_TYPE(uint32,clock_counter_stamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 iped;
  {
  FCNCALL_SUBNAME("iped");
  { FCNCALL_CALL_CTRL_WRAP(iped,FCNCALL_CALL_TYPE(uint32,iped)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_events;
  {
  FCNCALL_SUBNAME("multi_events");
  { FCNCALL_CALL_CTRL_WRAP(multi_events,FCNCALL_CALL_TYPE(uint32,multi_events)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_trlo_ii_counter0;
  {
  FCNCALL_SUBNAME("multi_trlo_ii_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_trlo_ii_counter0,FCNCALL_CALL_TYPE(uint32,multi_trlo_ii_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_scaler_counter0;
  {
  FCNCALL_SUBNAME("multi_scaler_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_scaler_counter0,FCNCALL_CALL_TYPE(uint32,multi_scaler_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 multi_adctdc_counter0;
  {
  FCNCALL_SUBNAME("multi_adctdc_counter0");
  { FCNCALL_CALL_CTRL_WRAP(multi_adctdc_counter0,FCNCALL_CALL_TYPE(uint32,multi_adctdc_counter0)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_LAND_STD_VME

#ifndef USER_DEF_MEGA_PULSER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(MEGA_PULSER)::FCNCALL_NAME(MEGA_PULSER)
{
  FCNCALL_INIT;
  // uint32 mega;
  {
  FCNCALL_SUBNAME("mega");
  { FCNCALL_CALL_CTRL_WRAP(mega,FCNCALL_CALL_TYPE(uint32,mega)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_MEGA_PULSER

#ifndef USER_DEF_TAMEX3_FH_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX3_FH_DATA)::FCNCALL_NAME(TAMEX3_FH_DATA)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,34,256> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,34,256> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX3_FH_DATA

#ifndef USER_DEF_TAMEX3_FH_SFP
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX3_FH_SFP)::FCNCALL_NAME(TAMEX3_FH_SFP)
{
  FCNCALL_INIT;
  // TAMEX3_FH_DATA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX3_FH_SFP

#ifndef USER_DEF_TAMEX3_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX3_PADDING)::FCNCALL_NAME(TAMEX3_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX3_PADDING

#ifndef USER_DEF_TAMEX3_SFP
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX3_SFP)::FCNCALL_NAME(TAMEX3_SFP)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,34,256> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,34,256> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX3_SFP

#ifndef USER_DEF_TAMEX3_WINDOW
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX3_WINDOW)::FCNCALL_NAME(TAMEX3_WINDOW)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 post_trig_ns : 16;
      // uint32 pre_trig_ns : 16;
    // } ;
    // uint32 u32;
  // } trigger_window;
  {
  FCNCALL_SUBNAME("trigger_window");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 post_trig_ns : 16;
    // uint32 pre_trig_ns : 16;
  // } ;
  // uint32 post_trig_ns : 16;
  {
  FCNCALL_SUBNAME("post_trig_ns");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.post_trig_ns,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.post_trig_ns)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 pre_trig_ns : 16;
  {
  FCNCALL_SUBNAME("pre_trig_ns");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.pre_trig_ns,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_window.pre_trig_ns)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window.u32,FCNCALL_CALL_TYPE(uint32,trigger_window.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX3_WINDOW

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TIMESTAMP_WHITERABBIT)::FCNCALL_NAME(TIMESTAMP_WHITERABBIT)
{
  FCNCALL_INIT;
  // DATA12 subsystem_id;
  {
  FCNCALL_SUBNAME("subsystem_id");
  { FCNCALL_CALL_CTRL_WRAP(subsystem_id,subsystem_id.FCNCALL_CALL(subsystem_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t1;
  {
  FCNCALL_SUBNAME("t1");
  { FCNCALL_CALL_CTRL_WRAP(t1,t1.FCNCALL_CALL(t1)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t2;
  {
  FCNCALL_SUBNAME("t2");
  { FCNCALL_CALL_CTRL_WRAP(t2,t2.FCNCALL_CALL(t2)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t3;
  {
  FCNCALL_SUBNAME("t3");
  { FCNCALL_CALL_CTRL_WRAP(t3,t3.FCNCALL_CALL(t3)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t4;
  {
  FCNCALL_SUBNAME("t4");
  { FCNCALL_CALL_CTRL_WRAP(t4,t4.FCNCALL_CALL(t4)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TRLOII_LMU_SCALERS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLOII_LMU_SCALERS)::FCNCALL_NAME(TRLOII_LMU_SCALERS)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,63> before_lmu;
  {
  FCNCALL_SUBNAME("before_lmu");
  { FCNCALL_CALL_CTRL_WRAP(before_lmu,before_lmu.FCNCALL_CALL(before_lmu)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,31> before_lmu_mux;
  {
  FCNCALL_SUBNAME("before_lmu_mux");
  { FCNCALL_CALL_CTRL_WRAP(before_lmu_mux,before_lmu_mux.FCNCALL_CALL(before_lmu_mux)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,31> before_lmu_aux;
  {
  FCNCALL_SUBNAME("before_lmu_aux");
  { FCNCALL_CALL_CTRL_WRAP(before_lmu_aux,before_lmu_aux.FCNCALL_CALL(before_lmu_aux)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,127> before_dt;
  {
  FCNCALL_SUBNAME("before_dt");
  { FCNCALL_CALL_CTRL_WRAP(before_dt,before_dt.FCNCALL_CALL(before_dt)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,127> after_dt;
  {
  FCNCALL_SUBNAME("after_dt");
  { FCNCALL_CALL_CTRL_WRAP(after_dt,after_dt.FCNCALL_CALL(after_dt)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,127> after_reduction;
  {
  FCNCALL_SUBNAME("after_reduction");
  { FCNCALL_CALL_CTRL_WRAP(after_reduction,after_reduction.FCNCALL_CALL(after_reduction)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 before_lmu : 6;
      // uint32 before_lmu_mux : 5;
      // uint32 before_lmu_aux : 5;
      // uint32 after_lmu : 8;
      // uint32 id : 8;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 before_lmu : 6;
    // uint32 before_lmu_mux : 5;
    // uint32 before_lmu_aux : 5;
    // uint32 after_lmu : 8;
    // uint32 id : 8;
  // } ;
  // uint32 before_lmu : 6;
  {
  FCNCALL_SUBNAME("before_lmu");
  { FCNCALL_CALL_CTRL_WRAP(header.before_lmu,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.before_lmu)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 before_lmu_mux : 5;
  {
  FCNCALL_SUBNAME("before_lmu_mux");
  { FCNCALL_CALL_CTRL_WRAP(header.before_lmu_mux,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.before_lmu_mux)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 before_lmu_aux : 5;
  {
  FCNCALL_SUBNAME("before_lmu_aux");
  { FCNCALL_CALL_CTRL_WRAP(header.before_lmu_aux,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.before_lmu_aux)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 after_lmu : 8;
  {
  FCNCALL_SUBNAME("after_lmu");
  { FCNCALL_CALL_CTRL_WRAP(header.after_lmu,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.after_lmu)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 id : 8;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.id)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLOII_LMU_SCALERS

#ifndef USER_DEF_TRLOII_SAMPLER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLOII_SAMPLER)::FCNCALL_NAME(TRLOII_SAMPLER)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,512> sampler;
  {
  FCNCALL_SUBNAME("sampler");
  { FCNCALL_CALL_CTRL_WRAP(sampler,sampler.FCNCALL_CALL(sampler)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_num : 10;
      // uint32 overflow : 1;
      // uint32 dummy_11_15 : 5;
      // uint32 mark : 16;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_num : 10;
    // uint32 overflow : 1;
    // uint32 dummy_11_15 : 5;
    // uint32 mark : 16;
  // } ;
  // uint32 word_num : 10;
  {
  FCNCALL_SUBNAME("word_num");
  { FCNCALL_CALL_CTRL_WRAP(header.word_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.word_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 overflow : 1;
  {
  FCNCALL_SUBNAME("overflow");
  { FCNCALL_CALL_CTRL_WRAP(header.overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_11_15 : 5;
  {
  FCNCALL_SUBNAME("dummy_11_15");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_11_15,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_11_15)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 mark : 16;
  {
  FCNCALL_SUBNAME("mark");
  { FCNCALL_CALL_CTRL_WRAP(header.mark,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.mark)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLOII_SAMPLER

#ifndef USER_DEF_TRLOII_SAMPLER_TWO
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLOII_SAMPLER_TWO)::FCNCALL_NAME(TRLOII_SAMPLER_TWO)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,512> sampler_hi;
  {
  FCNCALL_SUBNAME("sampler_hi");
  { FCNCALL_CALL_CTRL_WRAP(sampler_hi,sampler_hi.FCNCALL_CALL(sampler_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,512> sampler_lo;
  {
  FCNCALL_SUBNAME("sampler_lo");
  { FCNCALL_CALL_CTRL_WRAP(sampler_lo,sampler_lo.FCNCALL_CALL(sampler_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_num : 10;
      // uint32 overflow : 1;
      // uint32 dummy_11_15 : 5;
      // uint32 mark : 16;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_num : 10;
    // uint32 overflow : 1;
    // uint32 dummy_11_15 : 5;
    // uint32 mark : 16;
  // } ;
  // uint32 word_num : 10;
  {
  FCNCALL_SUBNAME("word_num");
  { FCNCALL_CALL_CTRL_WRAP(header.word_num,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.word_num)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 overflow : 1;
  {
  FCNCALL_SUBNAME("overflow");
  { FCNCALL_CALL_CTRL_WRAP(header.overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_11_15 : 5;
  {
  FCNCALL_SUBNAME("dummy_11_15");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_11_15,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_11_15)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 mark : 16;
  {
  FCNCALL_SUBNAME("mark");
  { FCNCALL_CALL_CTRL_WRAP(header.mark,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.mark)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLOII_SAMPLER_TWO

#ifndef USER_DEF_TRLOII_TPAT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRLOII_TPAT)::FCNCALL_NAME(TRLOII_TPAT)
{
  FCNCALL_INIT;
  // DATA32 n;
  {
  FCNCALL_SUBNAME("n");
  { FCNCALL_CALL_CTRL_WRAP(n,n.FCNCALL_CALL(n)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA16,DATA16,170> tpat;
  {
  FCNCALL_SUBNAME("tpat");
  { FCNCALL_CALL_CTRL_WRAP(tpat,tpat.FCNCALL_CALL(tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA8,DATA8,170> trig;
  {
  FCNCALL_SUBNAME("trig");
  { FCNCALL_CALL_CTRL_WRAP(trig,trig.FCNCALL_CALL(trig)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA32,DATA32,170> ts_lo;
  {
  FCNCALL_SUBNAME("ts_lo");
  { FCNCALL_CALL_CTRL_WRAP(ts_lo,ts_lo.FCNCALL_CALL(ts_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA32,DATA32,170> ts_hi;
  {
  FCNCALL_SUBNAME("ts_hi");
  { FCNCALL_CALL_CTRL_WRAP(ts_hi,ts_hi.FCNCALL_CALL(ts_hi)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRLOII_TPAT

#ifndef USER_DEF_VME_CAEN_V1190_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1190_SUBTDC)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 bunch_id : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 bunch_id : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 bunch_id : 12;
  {
  FCNCALL_SUBNAME("bunch_id");
  { FCNCALL_CALL_CTRL_WRAP(header.bunch_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.bunch_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(header.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 word_count : 12;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(trailer.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190)::FCNCALL_NAME(VME_CAEN_V1190)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SHORT_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1190_SHORT_SUBTDC)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SHORT_SUBTDC_ERROR)::FCNCALL_NAME(VME_CAEN_V1190_SHORT_SUBTDC_ERROR)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1190_SHORT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_SHORT)::FCNCALL_NAME(VME_CAEN_V1190_SHORT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_SHORT_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_SHORT_SUBTDC_ERROR err[4];
  {
  FCNCALL_SUBNAME("err");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(err__i0,,__i0,err[__i0].FCNCALL_CALL(err[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_SHORT

#ifndef USER_DEF_VME_CAEN_V1290_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1290_SUBTDC)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 bunch_id : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 bunch_id : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 bunch_id : 12;
  {
  FCNCALL_SUBNAME("bunch_id");
  { FCNCALL_CALL_CTRL_WRAP(header.bunch_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.bunch_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(header.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(header.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 word_count : 12;
      // uint32 event_id : 12;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 word_count : 12;
    // uint32 event_id : 12;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 word_count : 12;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_id : 12;
  {
  FCNCALL_SUBNAME("event_id");
  { FCNCALL_CALL_CTRL_WRAP(trailer.event_id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.event_id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290)::FCNCALL_NAME(VME_CAEN_V1290)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SHORT_SUBTDC)::FCNCALL_NAME(VME_CAEN_V1290_SHORT_SUBTDC)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC

#ifndef USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SHORT_SUBTDC_ERROR)::FCNCALL_NAME(VME_CAEN_V1290_SHORT_SUBTDC_ERROR)
{
  FCNCALL_INIT;
  // union 
  // {
    // struct 
    // {
      // uint32 flags : 15;
      // uint32 dummy_15_23 : 9;
      // uint32 tdc : 2;
      // uint32 dummy_26 : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } error_flags;
  {
  FCNCALL_SUBNAME("error_flags");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 flags : 15;
    // uint32 dummy_15_23 : 9;
    // uint32 tdc : 2;
    // uint32 dummy_26 : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 flags : 15;
  {
  FCNCALL_SUBNAME("flags");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.flags,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.flags)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_15_23 : 9;
  {
  FCNCALL_SUBNAME("dummy_15_23");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_15_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_15_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc : 2;
  {
  FCNCALL_SUBNAME("tdc");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.tdc,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.tdc)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_26 : 1;
  {
  FCNCALL_SUBNAME("dummy_26");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.dummy_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.dummy_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,error_flags.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(error_flags.u32,FCNCALL_CALL_TYPE(uint32,error_flags.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SHORT_SUBTDC_ERROR

#ifndef USER_DEF_VME_CAEN_V1290_SHORT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_SHORT)::FCNCALL_NAME(VME_CAEN_V1290_SHORT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 event_number : 22;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 event_number : 22;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 event_number : 22;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_SHORT_SUBTDC tdc[4];
  {
  FCNCALL_SUBNAME("tdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tdc__i0,,__i0,tdc[__i0].FCNCALL_CALL(tdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_SHORT_SUBTDC_ERROR err[4];
  {
  FCNCALL_SUBNAME("err");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(err__i0,,__i0,err[__i0].FCNCALL_CALL(err[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 time_tag : 27;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trigger;
  {
  FCNCALL_SUBNAME("trigger");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 time_tag : 27;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 time_tag : 27;
  {
  FCNCALL_SUBNAME("time_tag");
  { FCNCALL_CALL_CTRL_WRAP(trigger.time_tag,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.time_tag)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trigger.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger.u32,FCNCALL_CALL_TYPE(uint32,trigger.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 geom : 5;
      // uint32 word_count : 15;
      // uint32 dummy_20_23 : 4;
      // uint32 tdc_error : 1;
      // uint32 buffer_overflow : 1;
      // uint32 trigger_lost : 1;
      // uint32 unnamed_27_31 : 5;
    // } ;
    // uint32 u32;
  // } trailer;
  {
  FCNCALL_SUBNAME("trailer");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 geom : 5;
    // uint32 word_count : 15;
    // uint32 dummy_20_23 : 4;
    // uint32 tdc_error : 1;
    // uint32 buffer_overflow : 1;
    // uint32 trigger_lost : 1;
    // uint32 unnamed_27_31 : 5;
  // } ;
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(trailer.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.geom)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 word_count : 15;
  {
  FCNCALL_SUBNAME("word_count");
  { FCNCALL_CALL_CTRL_WRAP(trailer.word_count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.word_count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_20_23 : 4;
  {
  FCNCALL_SUBNAME("dummy_20_23");
  { FCNCALL_CALL_CTRL_WRAP(trailer.dummy_20_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.dummy_20_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 tdc_error : 1;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(trailer.tdc_error,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 buffer_overflow : 1;
  {
  FCNCALL_SUBNAME("buffer_overflow");
  { FCNCALL_CALL_CTRL_WRAP(trailer.buffer_overflow,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.buffer_overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_lost : 1;
  {
  FCNCALL_SUBNAME("trigger_lost");
  { FCNCALL_CALL_CTRL_WRAP(trailer.trigger_lost,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.trigger_lost)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_27_31 : 5;
  {
  FCNCALL_SUBNAME("unnamed_27_31");
  { FCNCALL_CALL_CTRL_WRAP(trailer.unnamed_27_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trailer.unnamed_27_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trailer.u32,FCNCALL_CALL_TYPE(uint32,trailer.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_SHORT

#ifndef USER_DEF_VME_CAEN_V775
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V775)::FCNCALL_NAME(VME_CAEN_V775)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 event_number : 24;
      // uint32 unnamed_24_26 : 3;
      // uint32 geom : 5;
    // } ;
    // uint32 u32;
  // } eob;
  {
  FCNCALL_SUBNAME("eob");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 event_number : 24;
    // uint32 unnamed_24_26 : 3;
    // uint32 geom : 5;
  // } ;
  // uint32 event_number : 24;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(eob.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,eob.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_26 : 3;
  {
  FCNCALL_SUBNAME("unnamed_24_26");
  { FCNCALL_CALL_CTRL_WRAP(eob.unnamed_24_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,eob.unnamed_24_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(eob.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,eob.geom)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(eob.u32,FCNCALL_CALL_TYPE(uint32,eob.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V775

#ifndef USER_DEF_VME_CAEN_V830
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V830)::FCNCALL_NAME(VME_CAEN_V830)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 event_number : 16;
      // uint32 ts : 2;
      // uint32 count : 6;
      // uint32 dummy_24_25 : 2;
      // uint32 unnamed_26_26 : 1;
      // uint32 geom : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 event_number : 16;
    // uint32 ts : 2;
    // uint32 count : 6;
    // uint32 dummy_24_25 : 2;
    // uint32 unnamed_26_26 : 1;
    // uint32 geom : 5;
  // } ;
  // uint32 event_number : 16;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ts : 2;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(header.ts,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.ts)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 6;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_25 : 2;
  {
  FCNCALL_SUBNAME("dummy_24_25");
  { FCNCALL_CALL_CTRL_WRAP(header.dummy_24_25,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.dummy_24_25)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_26_26 : 1;
  {
  FCNCALL_SUBNAME("unnamed_26_26");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_26_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_26_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V830

#ifndef USER_DEF_VME_GSI_VFTX2
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2)::FCNCALL_NAME(VME_GSI_VFTX2)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,32,32> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,32,32> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 5;
      // uint32 internal_status : 4;
      // uint32 count : 9;
      // uint32 dummy_18_23 : 6;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 5;
    // uint32 internal_status : 4;
    // uint32 count : 9;
    // uint32 dummy_18_23 : 6;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 id : 5;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 internal_status : 4;
  {
  FCNCALL_SUBNAME("internal_status");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.internal_status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.internal_status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_18_23 : 6;
  {
  FCNCALL_SUBNAME("dummy_18_23");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.dummy_18_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.dummy_18_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_7 : 8;
      // uint32 dummy_8_10 : 3;
      // uint32 trigger_timestamp : 13;
      // uint32 dummy_24_28 : 5;
      // uint32 unnamed_29_30 : 2;
      // uint32 unnamed_31_31 : 1;
    // } ;
    // uint32 u32;
  // } event_header;
  {
  FCNCALL_SUBNAME("event_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_7 : 8;
    // uint32 dummy_8_10 : 3;
    // uint32 trigger_timestamp : 13;
    // uint32 dummy_24_28 : 5;
    // uint32 unnamed_29_30 : 2;
    // uint32 unnamed_31_31 : 1;
  // } ;
  // uint32 unnamed_0_7 : 8;
  {
  FCNCALL_SUBNAME("unnamed_0_7");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_0_7,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_0_7)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_10 : 3;
  {
  FCNCALL_SUBNAME("dummy_8_10");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_8_10,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_8_10)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_timestamp : 13;
  {
  FCNCALL_SUBNAME("trigger_timestamp");
  { FCNCALL_CALL_CTRL_WRAP(event_header.trigger_timestamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.trigger_timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_28 : 5;
  {
  FCNCALL_SUBNAME("dummy_24_28");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_24_28,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_24_28)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_29_30 : 2;
  {
  FCNCALL_SUBNAME("unnamed_29_30");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_29_30,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_29_30)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_31_31 : 1;
  {
  FCNCALL_SUBNAME("unnamed_31_31");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_31_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_31_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(event_header.u32,FCNCALL_CALL_TYPE(uint32,event_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2

#ifndef USER_DEF_VME_GSI_VFTX2_7PS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2_7PS)::FCNCALL_NAME(VME_GSI_VFTX2_7PS)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,32,32> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,32,32> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 5;
      // uint32 internal_status : 4;
      // uint32 count : 9;
      // uint32 dummy_18_23 : 6;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 5;
    // uint32 internal_status : 4;
    // uint32 count : 9;
    // uint32 dummy_18_23 : 6;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 id : 5;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 internal_status : 4;
  {
  FCNCALL_SUBNAME("internal_status");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.internal_status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.internal_status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_18_23 : 6;
  {
  FCNCALL_SUBNAME("dummy_18_23");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.dummy_18_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.dummy_18_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2_7PS

#ifndef USER_DEF_VME_GSI_VFTX2_LT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_GSI_VFTX2_LT)::FCNCALL_NAME(VME_GSI_VFTX2_LT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,64,32> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,64,32> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 time_trigger;
  {
  FCNCALL_SUBNAME("time_trigger");
  { FCNCALL_CALL_CTRL_WRAP(time_trigger,time_trigger.FCNCALL_CALL(time_trigger)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 id : 5;
      // uint32 internal_status : 4;
      // uint32 count : 9;
      // uint32 dummy_18_23 : 6;
      // uint32 unnamed_24_31 : 8;
    // } ;
    // uint32 u32;
  // } custom_header;
  {
  FCNCALL_SUBNAME("custom_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 id : 5;
    // uint32 internal_status : 4;
    // uint32 count : 9;
    // uint32 dummy_18_23 : 6;
    // uint32 unnamed_24_31 : 8;
  // } ;
  // uint32 id : 5;
  {
  FCNCALL_SUBNAME("id");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.id,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.id)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 internal_status : 4;
  {
  FCNCALL_SUBNAME("internal_status");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.internal_status,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.internal_status)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 9;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_18_23 : 6;
  {
  FCNCALL_SUBNAME("dummy_18_23");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.dummy_18_23,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.dummy_18_23)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_24_31 : 8;
  {
  FCNCALL_SUBNAME("unnamed_24_31");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.unnamed_24_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,custom_header.unnamed_24_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(custom_header.u32,FCNCALL_CALL_TYPE(uint32,custom_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 unnamed_0_7 : 8;
      // uint32 dummy_8_10 : 3;
      // uint32 trigger_timestamp : 13;
      // uint32 dummy_24_28 : 5;
      // uint32 unnamed_29_30 : 2;
      // uint32 unnamed_31_31 : 1;
    // } ;
    // uint32 u32;
  // } event_header;
  {
  FCNCALL_SUBNAME("event_header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 unnamed_0_7 : 8;
    // uint32 dummy_8_10 : 3;
    // uint32 trigger_timestamp : 13;
    // uint32 dummy_24_28 : 5;
    // uint32 unnamed_29_30 : 2;
    // uint32 unnamed_31_31 : 1;
  // } ;
  // uint32 unnamed_0_7 : 8;
  {
  FCNCALL_SUBNAME("unnamed_0_7");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_0_7,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_0_7)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_8_10 : 3;
  {
  FCNCALL_SUBNAME("dummy_8_10");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_8_10,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_8_10)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 trigger_timestamp : 13;
  {
  FCNCALL_SUBNAME("trigger_timestamp");
  { FCNCALL_CALL_CTRL_WRAP(event_header.trigger_timestamp,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.trigger_timestamp)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 dummy_24_28 : 5;
  {
  FCNCALL_SUBNAME("dummy_24_28");
  { FCNCALL_CALL_CTRL_WRAP(event_header.dummy_24_28,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.dummy_24_28)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_29_30 : 2;
  {
  FCNCALL_SUBNAME("unnamed_29_30");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_29_30,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_29_30)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_31_31 : 1;
  {
  FCNCALL_SUBNAME("unnamed_31_31");
  { FCNCALL_CALL_CTRL_WRAP(event_header.unnamed_31_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,event_header.unnamed_31_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(event_header.u32,FCNCALL_CALL_TYPE(uint32,event_header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_GSI_VFTX2_LT

#ifndef USER_DEF_VME_MESYTEC_MADC32
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_MADC32)::FCNCALL_NAME(VME_MESYTEC_MADC32)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA14_OVERFLOW,DATA14_OVERFLOW,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_MADC32

#ifndef USER_DEF_VME_MESYTEC_MDPP16
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_MDPP16)::FCNCALL_NAME(VME_MESYTEC_MDPP16)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,34,100> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_MDPP16

#ifndef USER_DEF_VME_MESYTEC_MQDC32
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_MQDC32)::FCNCALL_NAME(VME_MESYTEC_MQDC32)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12_OVERFLOW,DATA12_OVERFLOW,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_MQDC32

#ifndef USER_DEF_VME_MESYTEC_MTDC32
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_MTDC32)::FCNCALL_NAME(VME_MESYTEC_MTDC32)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA16,DATA16,34> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_MTDC32

#ifndef USER_DEF_VME_MESYTEC_VMMR8
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_MESYTEC_VMMR8)::FCNCALL_NAME(VME_MESYTEC_VMMR8)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,512,20> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 counter : 30;
      // uint32 unnamed_30_31 : 2;
    // } ;
    // uint32 u32;
  // } end_of_event;
  {
  FCNCALL_SUBNAME("end_of_event");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 counter : 30;
    // uint32 unnamed_30_31 : 2;
  // } ;
  // uint32 counter : 30;
  {
  FCNCALL_SUBNAME("counter");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.counter,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.counter)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_30_31 : 2;
  {
  FCNCALL_SUBNAME("unnamed_30_31");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.unnamed_30_31,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,end_of_event.unnamed_30_31)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(end_of_event.u32,FCNCALL_CALL_TYPE(uint32,end_of_event.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_MESYTEC_VMMR8

#ifndef USER_DEF_WR_MULTI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(WR_MULTI)::FCNCALL_NAME(WR_MULTI)
{
  FCNCALL_INIT;
  // DATA32 time_hi;
  {
  FCNCALL_SUBNAME("time_hi");
  { FCNCALL_CALL_CTRL_WRAP(time_hi,time_hi.FCNCALL_CALL(time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 time_lo;
  {
  FCNCALL_SUBNAME("time_lo");
  { FCNCALL_CALL_CTRL_WRAP(time_lo,time_lo.FCNCALL_CALL(time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_fib1a_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(fib1a_data)::FCNCALL_NAME(fib1a_data)
{
  FCNCALL_INIT;
  // GSI_CLOCKTDC_16PH_ITEM ctdc[4];
  {
  FCNCALL_SUBNAME("ctdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(ctdc__i0,,__i0,ctdc[__i0].FCNCALL_CALL(ctdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX3_SFP tamex[2];
  {
  FCNCALL_SUBNAME("tamex");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tamex__i0,,__i0,tamex[__i0].FCNCALL_CALL(tamex[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER barrier;
  {
  FCNCALL_SUBNAME("barrier");
  { FCNCALL_CALL_CTRL_WRAP(barrier,barrier.FCNCALL_CALL(barrier)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_fib1a_data

#ifndef USER_DEF_fibsipm_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(fibsipm_data)::FCNCALL_NAME(fibsipm_data)
{
  FCNCALL_INIT;
  // GSI_CLOCKTDC_ITEM ctdc[4];
  {
  FCNCALL_SUBNAME("ctdc");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(ctdc__i0,,__i0,ctdc[__i0].FCNCALL_CALL(ctdc[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_fibsipm_data

#ifndef USER_DEF_los_tamex_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_tamex_data)::FCNCALL_NAME(los_tamex_data)
{
  FCNCALL_INIT;
  // TAMEX3_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX3_SFP tamex;
  {
  FCNCALL_SUBNAME("tamex");
  { FCNCALL_CALL_CTRL_WRAP(tamex,tamex.FCNCALL_CALL(tamex)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_tamex_data

#ifndef USER_DEF_los_vme_subev_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_vme_subev_data)::FCNCALL_NAME(los_vme_subev_data)
{
  FCNCALL_INIT;
  // VME_GSI_VFTX2_7PS vftx21;
  {
  FCNCALL_SUBNAME("vftx21");
  { FCNCALL_CALL_CTRL_WRAP(vftx21,vftx21.FCNCALL_CALL(vftx21)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_MESYTEC_MTDC32 mtdc32;
  {
  FCNCALL_SUBNAME("mtdc32");
  { FCNCALL_CALL_CTRL_WRAP(mtdc32,mtdc32.FCNCALL_CALL(mtdc32)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_GSI_VFTX2_7PS vftx22;
  {
  FCNCALL_SUBNAME("vftx22");
  { FCNCALL_CALL_CTRL_WRAP(vftx22,vftx22.FCNCALL_CALL(vftx22)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_vme_subev_data

#ifndef USER_DEF_neuland_sfp
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(neuland_sfp)::FCNCALL_NAME(neuland_sfp)
{
  FCNCALL_INIT;
  // TAMEX3_FH_SFP card[35];
  {
  FCNCALL_SUBNAME("card");
  FCNCALL_FOR(__i0,35)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(card__i0,,__i0,card[__i0].FCNCALL_CALL(card[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_neuland_sfp

#ifndef USER_DEF_neuland_tamex_subev_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(neuland_tamex_subev_data)::FCNCALL_NAME(neuland_tamex_subev_data)
{
  FCNCALL_INIT;
  // TAMEX3_PADDING padding0;
  {
  FCNCALL_SUBNAME("padding0");
  { FCNCALL_CALL_CTRL_WRAP(padding0,padding0.FCNCALL_CALL(padding0)); }
  FCNCALL_SUBNAME_END;
  }
  // neuland_sfp sfp[1];
  {
  FCNCALL_SUBNAME("sfp");
  FCNCALL_FOR(__i0,1)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(sfp__i0,,__i0,sfp[__i0].FCNCALL_CALL(sfp[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_neuland_tamex_subev_data

#ifndef USER_DEF_s2_vme_subev_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(s2_vme_subev_data)::FCNCALL_NAME(s2_vme_subev_data)
{
  FCNCALL_INIT;
  // WR_MULTI ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_GSI_VFTX2_7PS vftx21;
  {
  FCNCALL_SUBNAME("vftx21");
  { FCNCALL_CALL_CTRL_WRAP(vftx21,vftx21.FCNCALL_CALL(vftx21)); }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER b1;
  {
  FCNCALL_SUBNAME("b1");
  { FCNCALL_CALL_CTRL_WRAP(b1,b1.FCNCALL_CALL(b1)); }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER b2;
  {
  FCNCALL_SUBNAME("b2");
  { FCNCALL_CALL_CTRL_WRAP(b2,b2.FCNCALL_CALL(b2)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_MESYTEC_MQDC32 mqdc;
  {
  FCNCALL_SUBNAME("mqdc");
  { FCNCALL_CALL_CTRL_WRAP(mqdc,mqdc.FCNCALL_CALL(mqdc)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_s2_vme_subev_data

#ifndef USER_DEF_s8_vme_subev_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(s8_vme_subev_data)::FCNCALL_NAME(s8_vme_subev_data)
{
  FCNCALL_INIT;
  // VME_GSI_VFTX2_7PS vftx21;
  {
  FCNCALL_SUBNAME("vftx21");
  { FCNCALL_CALL_CTRL_WRAP(vftx21,vftx21.FCNCALL_CALL(vftx21)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_s8_vme_subev_data

#ifndef USER_DEF_sofia_mwpc_subev_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(sofia_mwpc_subev_data)::FCNCALL_NAME(sofia_mwpc_subev_data)
{
  FCNCALL_INIT;
  // VME_MESYTEC_VMMR8 vmmr8;
  {
  FCNCALL_SUBNAME("vmmr8");
  { FCNCALL_CALL_CTRL_WRAP(vmmr8,vmmr8.FCNCALL_CALL(vmmr8)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_MESYTEC_MADC32 madc32[2];
  {
  FCNCALL_SUBNAME("madc32");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(madc32__i0,,__i0,madc32[__i0].FCNCALL_CALL(madc32[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_sofia_mwpc_subev_data

#ifndef USER_DEF_sofia_tof_subev_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(sofia_tof_subev_data)::FCNCALL_NAME(sofia_tof_subev_data)
{
  FCNCALL_INIT;
  // VME_GSI_VFTX2_7PS vftx2[4];
  {
  FCNCALL_SUBNAME("vftx2");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(vftx2__i0,,__i0,vftx2[__i0].FCNCALL_CALL(vftx2[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_sofia_tof_subev_data

#ifndef USER_DEF_sofia_trim_subev_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(sofia_trim_subev_data)::FCNCALL_NAME(sofia_trim_subev_data)
{
  FCNCALL_INIT;
  // VME_MESYTEC_VMMR8 vmmr8;
  {
  FCNCALL_SUBNAME("vmmr8");
  { FCNCALL_CALL_CTRL_WRAP(vmmr8,vmmr8.FCNCALL_CALL(vmmr8)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_MESYTEC_MDPP16 mdpp;
  {
  FCNCALL_SUBNAME("mdpp");
  { FCNCALL_CALL_CTRL_WRAP(mdpp,mdpp.FCNCALL_CALL(mdpp)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_sofia_trim_subev_data

#ifndef USER_DEF_sofia_twim_subev_data
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(sofia_twim_subev_data)::FCNCALL_NAME(sofia_twim_subev_data)
{
  FCNCALL_INIT;
  // VME_MESYTEC_MDPP16 mdpp16[2];
  {
  FCNCALL_SUBNAME("mdpp16");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(mdpp16__i0,,__i0,mdpp16[__i0].FCNCALL_CALL(mdpp16[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_sofia_twim_subev_data

#ifndef USER_DEF_CALIFA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(CALIFA)::FCNCALL_NAME(CALIFA)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // FEBEX3_CALIFA_BASE febex3;
  {
  FCNCALL_SUBNAME("febex3");
  { FCNCALL_CALL_CTRL_WRAP(febex3,febex3.FCNCALL_CALL(febex3)); }
  FCNCALL_SUBNAME_END;
  }
  // TIMESTAMP_WHITERABBIT ts400;
  {
  FCNCALL_SUBNAME("ts400");
  { FCNCALL_CALL_CTRL_WRAP(ts400,ts400.FCNCALL_CALL(ts400)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_CALIFA

#ifndef USER_DEF_ams_siderem1_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(ams_siderem1_subev)::FCNCALL_NAME(ams_siderem1_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // GSI_SAM_PADDING padd;
  {
  FCNCALL_SUBNAME("padd");
  { FCNCALL_CALL_CTRL_WRAP(padd,padd.FCNCALL_CALL(padd)); }
  FCNCALL_SUBNAME_END;
  }
  // EXT_SST sst[3];
  {
  FCNCALL_SUBNAME("sst");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(sst__i0,,__i0,sst[__i0].FCNCALL_CALL(sst[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_ams_siderem1_subev

#ifndef USER_DEF_ams_siderem2_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(ams_siderem2_subev)::FCNCALL_NAME(ams_siderem2_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // GSI_SAM_PADDING padd;
  {
  FCNCALL_SUBNAME("padd");
  { FCNCALL_CALL_CTRL_WRAP(padd,padd.FCNCALL_CALL(padd)); }
  FCNCALL_SUBNAME_END;
  }
  // EXT_SST sst[3];
  {
  FCNCALL_SUBNAME("sst");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(sst__i0,,__i0,sst[__i0].FCNCALL_CALL(sst[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_ams_siderem2_subev

#ifndef USER_DEF_ams_wr
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(ams_wr)::FCNCALL_NAME(ams_wr)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_ams_wr

#ifndef USER_DEF_fib1ab_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(fib1ab_subev)::FCNCALL_NAME(fib1ab_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // fib1a_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_fib1ab_subev

#ifndef USER_DEF_fibsipm_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(fibsipm_subev)::FCNCALL_NAME(fibsipm_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // fibsipm_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_fibsipm_subev

#ifndef USER_DEF_lmu_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(lmu_subev)::FCNCALL_NAME(lmu_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRLOII_LMU_SCALERS scalers;
  {
  FCNCALL_SUBNAME("scalers");
  { FCNCALL_CALL_CTRL_WRAP(scalers,scalers.FCNCALL_CALL(scalers)); }
  FCNCALL_SUBNAME_END;
  }
  // MEGA_PULSER pulser;
  {
  FCNCALL_SUBNAME("pulser");
  { FCNCALL_CALL_CTRL_WRAP(pulser,pulser.FCNCALL_CALL(pulser)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_lmu_subev

#ifndef USER_DEF_los_sampler_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_sampler_subev)::FCNCALL_NAME(los_sampler_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRLOII_SAMPLER los;
  {
  FCNCALL_SUBNAME("los");
  { FCNCALL_CALL_CTRL_WRAP(los,los.FCNCALL_CALL(los)); }
  FCNCALL_SUBNAME_END;
  }
  // TRLOII_SAMPLER ms;
  {
  FCNCALL_SUBNAME("ms");
  { FCNCALL_CALL_CTRL_WRAP(ms,ms.FCNCALL_CALL(ms)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_sampler_subev

#ifndef USER_DEF_los_tamex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_tamex_subev)::FCNCALL_NAME(los_tamex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // los_tamex_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_tamex_subev

#ifndef USER_DEF_los_vme_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_vme_subev)::FCNCALL_NAME(los_vme_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // los_vme_subev_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_vme_subev

#ifndef USER_DEF_los_wr
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(los_wr)::FCNCALL_NAME(los_wr)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_los_wr

#ifndef USER_DEF_neuland_tamex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(neuland_tamex_subev)::FCNCALL_NAME(neuland_tamex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // neuland_tamex_subev_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_neuland_tamex_subev

#ifndef USER_DEF_s2_vme_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(s2_vme_subev)::FCNCALL_NAME(s2_vme_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // s2_vme_subev_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_s2_vme_subev

#ifndef USER_DEF_s8_tpat_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(s8_tpat_subev)::FCNCALL_NAME(s8_tpat_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRLOII_TPAT tpat;
  {
  FCNCALL_SUBNAME("tpat");
  { FCNCALL_CALL_CTRL_WRAP(tpat,tpat.FCNCALL_CALL(tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // LAND_STD_VME land_vme;
  {
  FCNCALL_SUBNAME("land_vme");
  { FCNCALL_CALL_CTRL_WRAP(land_vme,land_vme.FCNCALL_CALL(land_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_s8_tpat_subev

#ifndef USER_DEF_s8_vme_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(s8_vme_subev)::FCNCALL_NAME(s8_vme_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // s8_vme_subev_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_s8_vme_subev

#ifndef USER_DEF_s8_wr
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(s8_wr)::FCNCALL_NAME(s8_wr)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_s8_wr

#ifndef USER_DEF_sofia_mwpc_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(sofia_mwpc_subev)::FCNCALL_NAME(sofia_mwpc_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // sofia_mwpc_subev_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_sofia_mwpc_subev

#ifndef USER_DEF_sofia_tof_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(sofia_tof_subev)::FCNCALL_NAME(sofia_tof_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // sofia_tof_subev_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_sofia_tof_subev

#ifndef USER_DEF_sofia_trim_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(sofia_trim_subev)::FCNCALL_NAME(sofia_trim_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // sofia_trim_subev_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_sofia_trim_subev

#ifndef USER_DEF_sofia_twim_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(sofia_twim_subev)::FCNCALL_NAME(sofia_twim_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // sofia_twim_subev_data data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_sofia_twim_subev

#ifndef USER_DEF_wr_neuland
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(wr_neuland)::FCNCALL_NAME(wr_neuland)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_wr_neuland

#ifndef USER_DEF_wr_s2
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(wr_s2)::FCNCALL_NAME(wr_s2)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_wr_s2

#ifndef USER_DEF_wr_sofia
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(wr_sofia)::FCNCALL_NAME(wr_sofia)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_wr_sofia

#ifndef USER_DEF_unpack_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_event)::FCNCALL_NAME(unpack_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_event_base,FCNCALL_CLASS_NAME(unpack_event_base)::FCNCALL_CALL_BASE());
  // los_wr los_ts;
  {
  FCNCALL_SUBNAME("los_ts");
  { FCNCALL_CALL_CTRL_WRAP(los_ts,los_ts.FCNCALL_CALL(los_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // los_vme_subev los_vme;
  {
  FCNCALL_SUBNAME("los_vme");
  { FCNCALL_CALL_CTRL_WRAP(los_vme,los_vme.FCNCALL_CALL(los_vme)); }
  FCNCALL_SUBNAME_END;
  }
  // lmu_subev los_lmu;
  {
  FCNCALL_SUBNAME("los_lmu");
  { FCNCALL_CALL_CTRL_WRAP(los_lmu,los_lmu.FCNCALL_CALL(los_lmu)); }
  FCNCALL_SUBNAME_END;
  }
  // los_tamex_subev los_tamex;
  {
  FCNCALL_SUBNAME("los_tamex");
  { FCNCALL_CALL_CTRL_WRAP(los_tamex,los_tamex.FCNCALL_CALL(los_tamex)); }
  FCNCALL_SUBNAME_END;
  }
  // los_sampler_subev los_sampler;
  {
  FCNCALL_SUBNAME("los_sampler");
  { FCNCALL_CALL_CTRL_WRAP(los_sampler,los_sampler.FCNCALL_CALL(los_sampler)); }
  FCNCALL_SUBNAME_END;
  }
  // fib1ab_subev fib1ab;
  {
  FCNCALL_SUBNAME("fib1ab");
  { FCNCALL_CALL_CTRL_WRAP(fib1ab,fib1ab.FCNCALL_CALL(fib1ab)); }
  FCNCALL_SUBNAME_END;
  }
  // wr_neuland neuland_ts;
  {
  FCNCALL_SUBNAME("neuland_ts");
  { FCNCALL_CALL_CTRL_WRAP(neuland_ts,neuland_ts.FCNCALL_CALL(neuland_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // neuland_tamex_subev neuland_tamex_1;
  {
  FCNCALL_SUBNAME("neuland_tamex_1");
  { FCNCALL_CALL_CTRL_WRAP(neuland_tamex_1,neuland_tamex_1.FCNCALL_CALL(neuland_tamex_1)); }
  FCNCALL_SUBNAME_END;
  }
  // neuland_tamex_subev neuland_tamex_2;
  {
  FCNCALL_SUBNAME("neuland_tamex_2");
  { FCNCALL_CALL_CTRL_WRAP(neuland_tamex_2,neuland_tamex_2.FCNCALL_CALL(neuland_tamex_2)); }
  FCNCALL_SUBNAME_END;
  }
  // neuland_tamex_subev neuland_tamex_3;
  {
  FCNCALL_SUBNAME("neuland_tamex_3");
  { FCNCALL_CALL_CTRL_WRAP(neuland_tamex_3,neuland_tamex_3.FCNCALL_CALL(neuland_tamex_3)); }
  FCNCALL_SUBNAME_END;
  }
  // neuland_tamex_subev neuland_tamex_4;
  {
  FCNCALL_SUBNAME("neuland_tamex_4");
  { FCNCALL_CALL_CTRL_WRAP(neuland_tamex_4,neuland_tamex_4.FCNCALL_CALL(neuland_tamex_4)); }
  FCNCALL_SUBNAME_END;
  }
  // CALIFA califa;
  {
  FCNCALL_SUBNAME("califa");
  { FCNCALL_CALL_CTRL_WRAP(califa,califa.FCNCALL_CALL(califa)); }
  FCNCALL_SUBNAME_END;
  }
  // ams_wr ams_ts;
  {
  FCNCALL_SUBNAME("ams_ts");
  { FCNCALL_CALL_CTRL_WRAP(ams_ts,ams_ts.FCNCALL_CALL(ams_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // ams_siderem1_subev ams_siderem_1;
  {
  FCNCALL_SUBNAME("ams_siderem_1");
  { FCNCALL_CALL_CTRL_WRAP(ams_siderem_1,ams_siderem_1.FCNCALL_CALL(ams_siderem_1)); }
  FCNCALL_SUBNAME_END;
  }
  // ams_siderem2_subev ams_siderem_2;
  {
  FCNCALL_SUBNAME("ams_siderem_2");
  { FCNCALL_CALL_CTRL_WRAP(ams_siderem_2,ams_siderem_2.FCNCALL_CALL(ams_siderem_2)); }
  FCNCALL_SUBNAME_END;
  }
  // sofia_tof_subev sofia_tof;
  {
  FCNCALL_SUBNAME("sofia_tof");
  { FCNCALL_CALL_CTRL_WRAP(sofia_tof,sofia_tof.FCNCALL_CALL(sofia_tof)); }
  FCNCALL_SUBNAME_END;
  }
  // sofia_mwpc_subev sofia_mwpc;
  {
  FCNCALL_SUBNAME("sofia_mwpc");
  { FCNCALL_CALL_CTRL_WRAP(sofia_mwpc,sofia_mwpc.FCNCALL_CALL(sofia_mwpc)); }
  FCNCALL_SUBNAME_END;
  }
  // sofia_twim_subev sofia_twim;
  {
  FCNCALL_SUBNAME("sofia_twim");
  { FCNCALL_CALL_CTRL_WRAP(sofia_twim,sofia_twim.FCNCALL_CALL(sofia_twim)); }
  FCNCALL_SUBNAME_END;
  }
  // sofia_trim_subev sofia_trim;
  {
  FCNCALL_SUBNAME("sofia_trim");
  { FCNCALL_CALL_CTRL_WRAP(sofia_trim,sofia_trim.FCNCALL_CALL(sofia_trim)); }
  FCNCALL_SUBNAME_END;
  }
  // fibsipm_subev fibsipm;
  {
  FCNCALL_SUBNAME("fibsipm");
  { FCNCALL_CALL_CTRL_WRAP(fibsipm,fibsipm.FCNCALL_CALL(fibsipm)); }
  FCNCALL_SUBNAME_END;
  }
  // wr_s2 s2_ts;
  {
  FCNCALL_SUBNAME("s2_ts");
  { FCNCALL_CALL_CTRL_WRAP(s2_ts,s2_ts.FCNCALL_CALL(s2_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // s2_vme_subev s2_vme;
  {
  FCNCALL_SUBNAME("s2_vme");
  { FCNCALL_CALL_CTRL_WRAP(s2_vme,s2_vme.FCNCALL_CALL(s2_vme)); }
  FCNCALL_SUBNAME_END;
  }
  // s8_wr s8_ts;
  {
  FCNCALL_SUBNAME("s8_ts");
  { FCNCALL_CALL_CTRL_WRAP(s8_ts,s8_ts.FCNCALL_CALL(s8_ts)); }
  FCNCALL_SUBNAME_END;
  }
  // s8_tpat_subev s8_tpat;
  {
  FCNCALL_SUBNAME("s8_tpat");
  { FCNCALL_CALL_CTRL_WRAP(s8_tpat,s8_tpat.FCNCALL_CALL(s8_tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // s8_vme_subev s8_vme;
  {
  FCNCALL_SUBNAME("s8_vme");
  { FCNCALL_CALL_CTRL_WRAP(s8_vme,s8_vme.FCNCALL_CALL(s8_vme)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_sticky_event)::FCNCALL_NAME(unpack_sticky_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_sticky_event_base,FCNCALL_CLASS_NAME(unpack_sticky_event_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: BARRIER
// uint32  .unnamed_0_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER
// Corr struct for: CAMAC_LECROY_4434
// raw_array_zero_suppress  .data(DATA24)[32]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_LECROY_4434
// .CAMAC_LECROY_4434// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_LECROY_4434
// .CAMAC_LECROY_4434// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_LECROY_4434
// .CAMAC_LECROY_4434
// Corr struct for: CAMAC_PHILLIPS_7164
// raw_array_zero_suppress  .data(DATA12)[16]
// DATA12 .data[16]
// 
// size= 1  chunks= 16  mem=  16  line=32  total=512
// size=16  chunks=  1  mem=  16  line=17  total=272
// 
// corr structure: CAMAC_PHILLIPS_7164
  // DATA12 .data[16]
// .CAMAC_PHILLIPS_7164/16/.data/16/[16]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_PHILLIPS_7164
// .CAMAC_PHILLIPS_7164// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_PHILLIPS_7164
// .CAMAC_PHILLIPS_7164
// Corr struct for: CAMAC_SILENA_4418
// raw_array_zero_suppress  .data(DATA12_OVERFLOW)[8]
// DATA12_OVERFLOW .data[8]
// 
// size= 1  chunks=  8  mem=   8  line=16  total=128
// size= 8  chunks=  1  mem=   8  line=9  total=72
// 
// corr structure: CAMAC_SILENA_4418
  // DATA12_OVERFLOW .data[8]
// .CAMAC_SILENA_4418/8/.data/8/[8]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_SILENA_4418
// .CAMAC_SILENA_4418// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CAMAC_SILENA_4418
// .CAMAC_SILENA_4418
// Corr struct for: FASTBUS_LECROY_1875
// raw_array_zero_suppress  .data(DATA12_RANGE)[64]
// DATA12_RANGE .data[64]
// 
// size= 1  chunks= 64  mem=  64  line=128  total=8192
// size=64  chunks=  1  mem=  64  line=65  total=4160
// 
// corr structure: FASTBUS_LECROY_1875
  // DATA12_RANGE .data[64]
// .FASTBUS_LECROY_1875/64/.data/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1875
// .FASTBUS_LECROY_1875// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1875
// .FASTBUS_LECROY_1875
// Corr struct for: FASTBUS_LECROY_1885
// raw_array_zero_suppress  .data(DATA12_RANGE)[96]
// DATA12_RANGE .data[96]
// 
// size= 1  chunks= 96  mem=  96  line=192  total=18432
// size=96  chunks=  1  mem=  96  line=97  total=9312
// 
// corr structure: FASTBUS_LECROY_1885
  // DATA12_RANGE .data[96]
// .FASTBUS_LECROY_1885/96/.data/96/[96]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1885
// .FASTBUS_LECROY_1885// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FASTBUS_LECROY_1885
// .FASTBUS_LECROY_1885
// Corr struct for: FEBEX3_CALIFA_BASE
// raw_array_zero_suppress  .energy(DATA16)[2048]
// raw_array_zero_suppress  .ts_lsb(DATA32)[2048]
  // ---
// raw_array_zero_suppress  .ts_msb(DATA32)[2048]
  // ---
// raw_array_zero_suppress  .n_f(DATA16)[2048]
// raw_array_zero_suppress  .n_s(DATA16)[2048]
// DATA16 .energy[2048]
// DATA16 .n_f[2048]
// DATA16 .n_s[2048]
// 
// size= 1  chunks=6144  mem=6144  line=12288  total=75497472
// size=2048  chunks=  3  mem=6144  line=6147  total=37767168
// size=6144  chunks=  1  mem=6144  line=6145  total=37754880
// 
// corr structure: FEBEX3_CALIFA_BASE
  // DATA16 .energy[2048]
  // DATA16 .n_f[2048]
  // DATA16 .n_s[2048]
// .FEBEX3_CALIFA_BASE/6144/.energy/2048/[2048]
                         // .n_f/2048/[2048]
                         // .n_s/2048/[2048]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX3_CALIFA_BASE
// .FEBEX3_CALIFA_BASE// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX3_CALIFA_BASE
// .FEBEX3_CALIFA_BASE
// Corr struct for: FEBEX_BAD_EVENTHEADER
// uint32  .unnamed_0_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_BAD_EVENTHEADER
// .FEBEX_BAD_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_BAD_EVENTHEADER
// .FEBEX_BAD_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_BAD_EVENTHEADER
// .FEBEX_BAD_EVENTHEADER
// Corr struct for: FEBEX_GOOD_EVENTHEADER
// uint32  .n_febex_sfp0
  // ---
// uint32  .n_febex_sfp1
  // ---
// uint32  .n_febex_sfp2
  // ---
// uint32  .n_febex_sfp3
  // ---
// uint32  .u32
  // ---
// uint32  .trace_length
  // ---
// uint32  .trigger_delay
  // ---
// uint32  .u32
  // ---
// uint32  .sum_b
  // ---
// uint32  .gap
  // ---
// uint32  .sum_a
  // ---
// uint32  .u32
  // ---
// uint32  .pola
  // ---
// uint32  .u32
  // ---
// uint32  .pola
  // ---
// uint32  .u32
  // ---
// uint32  .pola
  // ---
// uint32  .u32
  // ---
// uint32  .pola
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_GOOD_EVENTHEADER
// .FEBEX_GOOD_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_GOOD_EVENTHEADER
// .FEBEX_GOOD_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_GOOD_EVENTHEADER
// .FEBEX_GOOD_EVENTHEADER
// Corr struct for: FEBEX_EVENTHEADER
// FEBEX_GOOD_EVENTHEADER  .good
  // uint32  .n_febex_sfp0
    // ---
  // uint32  .n_febex_sfp1
    // ---
  // uint32  .n_febex_sfp2
    // ---
  // uint32  .n_febex_sfp3
    // ---
  // uint32  .u32
    // ---
  // uint32  .trace_length
    // ---
  // uint32  .trigger_delay
    // ---
  // uint32  .u32
    // ---
  // uint32  .sum_b
    // ---
  // uint32  .gap
    // ---
  // uint32  .sum_a
    // ---
  // uint32  .u32
    // ---
  // uint32  .pola
    // ---
  // uint32  .u32
    // ---
  // uint32  .pola
    // ---
  // uint32  .u32
    // ---
  // uint32  .pola
    // ---
  // uint32  .u32
    // ---
  // uint32  .pola
    // ---
  // uint32  .u32
    // ---
// FEBEX_BAD_EVENTHEADER  .bad
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENTHEADER
// .FEBEX_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENTHEADER
// .FEBEX_EVENTHEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENTHEADER
// .FEBEX_EVENTHEADER
// Corr struct for: FEBEX_NOTRACE
// raw_array  .n_hit(DATA8)[16]
  // ---
// raw_array_multi_zero_suppress  .t(DATA12)[16][32]
// raw_array_multi_zero_suppress  .e(DATA32)[16][32]
  // ---
// DATA12 .t[16][32]
// 
// size= 1  chunks=512  mem= 512  line=1024  total=524288
// size=32  chunks= 16  mem= 512  line=528  total=270336
// size=512  chunks=  1  mem= 512  line=513  total=262656
// 
// corr structure: FEBEX_NOTRACE
  // DATA12 .t[16][32]
// .FEBEX_NOTRACE/512/.t/512/[16]/32/[32]// 
// size= 1  chunks=512  mem= 512  line=1024  total=524288
// size=32  chunks= 16  mem= 512  line=528  total=270336
// size=512  chunks=  1  mem= 512  line=513  total=262656
// 
// corr structure: FEBEX_NOTRACE
  // DATA12 .t[16][32]
// .FEBEX_NOTRACE/512/.t/512/[16]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_NOTRACE
// .FEBEX_NOTRACE
// Corr struct for: FEBEX_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING
// Corr struct for: FEBEX_TRACE
// raw_array_zero_suppress  .trace_length(DATA32)[16]
  // ---
// raw_array_zero_suppress  .trace[16](DATA16)[1000]
// raw_array_zero_suppress  .filter[16](DATA32)[1000]
  // ---
// DATA16 .trace[16][1000]
// 
// size= 1  chunks=16000  mem=16000  line=32000  total=512000000
// size=1000  chunks= 16  mem=16000  line=16016  total=256256000
// size=16000  chunks=  1  mem=16000  line=16001  total=256016000
// 
// corr structure: FEBEX_TRACE
  // DATA16 .trace[16][1000]
// .FEBEX_TRACE/16000/.trace/16000/[16]/1000/[1000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_TRACE
// .FEBEX_TRACE// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_TRACE
// .FEBEX_TRACE
// Corr struct for: GSI_CLOCKTDC_16PH_ITEM
// DATA32  .event_counter_lo32
  // ---
// DATA32  .event_counter_hi16
  // ---
// DATA32  .trigger_coarse_lo22
  // ---
// DATA32  .trigger_coarse_hi24
  // ---
// raw_array_multi_zero_suppress  .time_coarse(DATA12)[258][80]
// raw_array_multi_zero_suppress  .time_fine(DATA12)[258][80]
// uint32  ._0x34
  // ---
// uint32  .trigger_type
  // ---
// uint32  .sfp_id
  // ---
// uint32  .tdc_id
  // ---
// uint32  .channel_id
  // ---
// uint32  .u32
  // ---
// uint32  .channel_num
  // ---
// uint32  ._0x34
  // ---
// uint32  .trigger_type
  // ---
// uint32  .sfp_id
  // ---
// uint32  .tdc_id
  // ---
// uint32  .channel_id
  // ---
// uint32  .u32
  // ---
// uint32  .data_byte_num
  // ---
// uint32  .time_fine
  // ---
// uint32  .time_coarse
  // ---
// uint32  .time_coarse_ext
  // ---
// uint32  .edge
  // ---
// uint32  .ws
  // ---
// uint32  .time_coarse_overflow
  // ---
// uint32  .rb_overflow
  // ---
// uint32  .dummy
  // ---
// uint32  .is_data
  // ---
// uint32  .channel
  // ---
// uint32  .u32
  // ---
// DATA12 .time_coarse[258][80]
// DATA12 .time_fine[258][80]
// 
// size= 1  chunks=41280  mem=41280  line=82560  total=-886890496
// size=80  chunks=516  mem=41280  line=41796  total=1725338880
// size=20640  chunks=  2  mem=41280  line=41282  total=1704120960
// size=41280  chunks=  1  mem=41280  line=41281  total=1704079680
// 
// corr structure: GSI_CLOCKTDC_16PH_ITEM
  // DATA12 .time_coarse[258][80]
  // DATA12 .time_fine[258][80]
// .GSI_CLOCKTDC_16PH_ITEM/41280/.time_coarse/20640/[258]/80/[80]
                              // .time_fine/20640/[258]/80/[80]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_16PH_ITEM
// .GSI_CLOCKTDC_16PH_ITEM// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_16PH_ITEM
// .GSI_CLOCKTDC_16PH_ITEM
// Corr struct for: GSI_CLOCKTDC_BAD00BAD
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_BAD00BAD
// .GSI_CLOCKTDC_BAD00BAD// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_BAD00BAD
// .GSI_CLOCKTDC_BAD00BAD// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_BAD00BAD
// .GSI_CLOCKTDC_BAD00BAD
// Corr struct for: GSI_CLOCKTDC_FUSER
// uint32  .sfp0_num
  // ---
// uint32  .sfp1_num
  // ---
// uint32  .sfp2_num
  // ---
// uint32  .sfp3_num
  // ---
// uint32  .u32
  // ---
// uint32  .trig_window
  // ---
// uint32  .num
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_FUSER
// .GSI_CLOCKTDC_FUSER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_FUSER
// .GSI_CLOCKTDC_FUSER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_FUSER
// .GSI_CLOCKTDC_FUSER
// Corr struct for: GSI_CLOCKTDC_ITEM
// DATA32  .event_counter_lo32
  // ---
// DATA32  .event_counter_hi16
  // ---
// DATA32  .trigger_coarse_lo22
  // ---
// DATA32  .trigger_coarse_hi24
  // ---
// raw_array_multi_zero_suppress  .time_coarse(DATA12)[258][80]
// raw_array_multi_zero_suppress  .time_fine(DATA12)[258][80]
// uint32  ._0x34
  // ---
// uint32  .trigger_type
  // ---
// uint32  .sfp_id
  // ---
// uint32  .tdc_id
  // ---
// uint32  .channel_id
  // ---
// uint32  .u32
  // ---
// uint32  .channel_num
  // ---
// uint32  ._0x34
  // ---
// uint32  .trigger_type
  // ---
// uint32  .sfp_id
  // ---
// uint32  .tdc_id
  // ---
// uint32  .channel_id
  // ---
// uint32  .u32
  // ---
// uint32  .data_byte_num
  // ---
// uint32  .time_fine
  // ---
// uint32  .time_coarse
  // ---
// uint32  .time_coarse_ext
  // ---
// uint32  .edge
  // ---
// uint32  .ws
  // ---
// uint32  .time_coarse_overflow
  // ---
// uint32  .rb_overflow
  // ---
// uint32  .status
  // ---
// uint32  .channel
  // ---
// uint32  .u32
  // ---
// DATA12 .time_coarse[258][80]
// DATA12 .time_fine[258][80]
// 
// size= 1  chunks=41280  mem=41280  line=82560  total=-886890496
// size=80  chunks=516  mem=41280  line=41796  total=1725338880
// size=20640  chunks=  2  mem=41280  line=41282  total=1704120960
// size=41280  chunks=  1  mem=41280  line=41281  total=1704079680
// 
// corr structure: GSI_CLOCKTDC_ITEM
  // DATA12 .time_coarse[258][80]
  // DATA12 .time_fine[258][80]
// .GSI_CLOCKTDC_ITEM/41280/.time_coarse/20640/[258]/80/[80]
                         // .time_fine/20640/[258]/80/[80]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_ITEM
// .GSI_CLOCKTDC_ITEM// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_ITEM
// .GSI_CLOCKTDC_ITEM
// Corr struct for: GSI_CLOCKTDC_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_PADDING
// .GSI_CLOCKTDC_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_PADDING
// .GSI_CLOCKTDC_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_CLOCKTDC_PADDING
// .GSI_CLOCKTDC_PADDING
// Corr struct for: GSI_SAM_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_SAM_PADDING
// .GSI_SAM_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_SAM_PADDING
// .GSI_SAM_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: GSI_SAM_PADDING
// .GSI_SAM_PADDING
// Corr struct for: LAND_STD_VME
// uint32  .fail_general
  // ---
// uint32  .fail_data_corrupt
  // ---
// uint32  .fail_data_missing
  // ---
// uint32  .fail_data_too_much
  // ---
// uint32  .fail_event_counter_mismatch
  // ---
// uint32  .fail_readout_error_driver
  // ---
// uint32  .fail_unexpected_trigger
  // ---
// uint32  .fail_firmware_mismatch
  // ---
// uint32  .dummy_8_21
  // ---
// uint32  .has_multi_trlo_ii_counter0
  // ---
// uint32  .has_clock_counter_stamp
  // ---
// uint32  .has_continous_event_counter
  // ---
// uint32  .has_update_qdc_iped_value
  // ---
// uint32  .spurious_start_before_tcal
  // ---
// uint32  .has_no_zero_suppression
  // ---
// uint32  .has_multi_adctdc_counter0
  // ---
// uint32  .has_multi_scaler_counter0
  // ---
// uint32  .has_multi_event
  // ---
// uint32  .has_time_stamp
  // ---
// uint32  .u32
  // ---
// uint32  .continous_event_counter
  // ---
// uint32  .time_stamp
  // ---
// uint32  .clock_counter_stamp
  // ---
// uint32  .iped
  // ---
// uint32  .multi_events
  // ---
// uint32  .multi_trlo_ii_counter0
  // ---
// uint32  .multi_scaler_counter0
  // ---
// uint32  .multi_adctdc_counter0
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: LAND_STD_VME
// .LAND_STD_VME
// Corr struct for: MEGA_PULSER
// uint32  .mega
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MEGA_PULSER
// .MEGA_PULSER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MEGA_PULSER
// .MEGA_PULSER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MEGA_PULSER
// .MEGA_PULSER
// Corr struct for: TAMEX3_FH_DATA
// raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
// raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
// DATA12 .time_coarse[34][256]
// DATA12 .time_fine[34][256]
// 
// size= 1  chunks=17408  mem=17408  line=34816  total=606076928
// size=256  chunks= 68  mem=17408  line=17476  total=304222208
// size=8704  chunks=  2  mem=17408  line=17410  total=303073280
// size=17408  chunks=  1  mem=17408  line=17409  total=303055872
// 
// corr structure: TAMEX3_FH_DATA
  // DATA12 .time_coarse[34][256]
  // DATA12 .time_fine[34][256]
// .TAMEX3_FH_DATA/17408/.time_coarse/8704/[34]/256/[256]
                      // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_FH_DATA
// .TAMEX3_FH_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_FH_DATA
// .TAMEX3_FH_DATA
// Corr struct for: TAMEX3_FH_SFP
// TAMEX3_FH_DATA  .data
  // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
// DATA12 .data.time_coarse[34][256]
// DATA12 .data.time_fine[34][256]
// 
// size= 1  chunks=17408  mem=17408  line=34816  total=606076928
// size=256  chunks= 68  mem=17408  line=17476  total=304222208
// size=8704  chunks=  2  mem=17408  line=17410  total=303073280
// size=17408  chunks=  1  mem=17408  line=17409  total=303055872
// 
// corr structure: TAMEX3_FH_SFP
  // DATA12 .data.time_coarse[34][256]
  // DATA12 .data.time_fine[34][256]
// .TAMEX3_FH_SFP/17408/.data/17408/.time_coarse/8704/[34]/256/[256]
                                 // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_FH_SFP
// .TAMEX3_FH_SFP// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_FH_SFP
// .TAMEX3_FH_SFP
// Corr struct for: TAMEX3_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_PADDING
// .TAMEX3_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_PADDING
// .TAMEX3_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_PADDING
// .TAMEX3_PADDING
// Corr struct for: TAMEX3_SFP
// raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
// raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
// DATA12 .time_coarse[34][256]
// DATA12 .time_fine[34][256]
// 
// size= 1  chunks=17408  mem=17408  line=34816  total=606076928
// size=256  chunks= 68  mem=17408  line=17476  total=304222208
// size=8704  chunks=  2  mem=17408  line=17410  total=303073280
// size=17408  chunks=  1  mem=17408  line=17409  total=303055872
// 
// corr structure: TAMEX3_SFP
  // DATA12 .time_coarse[34][256]
  // DATA12 .time_fine[34][256]
// .TAMEX3_SFP/17408/.time_coarse/8704/[34]/256/[256]
                  // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_SFP
// .TAMEX3_SFP// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_SFP
// .TAMEX3_SFP
// Corr struct for: TAMEX3_WINDOW
// uint32  .post_trig_ns
  // ---
// uint32  .pre_trig_ns
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_WINDOW
// .TAMEX3_WINDOW// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_WINDOW
// .TAMEX3_WINDOW// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX3_WINDOW
// .TAMEX3_WINDOW
// Corr struct for: TIMESTAMP_WHITERABBIT
// DATA12  .subsystem_id
// DATA16  .t1
// DATA16  .t2
// DATA16  .t3
// DATA16  .t4
// DATA12 .subsystem_id
// DATA16 .t1
// DATA16 .t2
// DATA16 .t3
// DATA16 .t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: TIMESTAMP_WHITERABBIT
  // DATA12 .subsystem_id
  // DATA16 .t1
  // DATA16 .t2
  // DATA16 .t3
  // DATA16 .t4
// .TIMESTAMP_WHITERABBIT/5/.subsystem_id
                         // .t1
                         // .t2
                         // .t3
                         // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT
// Corr struct for: TRLOII_LMU_SCALERS
// raw_array_zero_suppress  .before_lmu(DATA32)[63]
  // ---
// raw_array_zero_suppress  .before_lmu_mux(DATA32)[31]
  // ---
// raw_array_zero_suppress  .before_lmu_aux(DATA32)[31]
  // ---
// raw_array_zero_suppress  .before_dt(DATA32)[127]
  // ---
// raw_array_zero_suppress  .after_dt(DATA32)[127]
  // ---
// raw_array_zero_suppress  .after_reduction(DATA32)[127]
  // ---
// uint32  .before_lmu
  // ---
// uint32  .before_lmu_mux
  // ---
// uint32  .before_lmu_aux
  // ---
// uint32  .after_lmu
  // ---
// uint32  .id
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_LMU_SCALERS
// .TRLOII_LMU_SCALERS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_LMU_SCALERS
// .TRLOII_LMU_SCALERS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_LMU_SCALERS
// .TRLOII_LMU_SCALERS
// Corr struct for: TRLOII_SAMPLER
// raw_array_zero_suppress  .sampler(DATA32)[512]
  // ---
// uint32  .word_num
  // ---
// uint32  .overflow
  // ---
// uint32  .dummy_11_15
  // ---
// uint32  .mark
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER
// .TRLOII_SAMPLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER
// .TRLOII_SAMPLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER
// .TRLOII_SAMPLER
// Corr struct for: TRLOII_SAMPLER_TWO
// raw_array_zero_suppress  .sampler_hi(DATA32)[512]
  // ---
// raw_array_zero_suppress  .sampler_lo(DATA32)[512]
  // ---
// uint32  .word_num
  // ---
// uint32  .overflow
  // ---
// uint32  .dummy_11_15
  // ---
// uint32  .mark
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER_TWO
// .TRLOII_SAMPLER_TWO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER_TWO
// .TRLOII_SAMPLER_TWO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_SAMPLER_TWO
// .TRLOII_SAMPLER_TWO
// Corr struct for: TRLOII_TPAT
// DATA32  .n
  // ---
// raw_list_ii_zero_suppress  .tpat(DATA16)[170]
// raw_list_ii_zero_suppress  .trig(DATA8)[170]
  // ---
// raw_list_ii_zero_suppress  .ts_lo(DATA32)[170]
  // ---
// raw_list_ii_zero_suppress  .ts_hi(DATA32)[170]
  // ---
// DATA16 .tpat[170]
// 
// size= 1  chunks=170  mem= 170  line=340  total=57800
// size=170  chunks=  1  mem= 170  line=171  total=29070
// 
// corr structure: TRLOII_TPAT
  // DATA16 .tpat[170]
// .TRLOII_TPAT/170/.tpat/170/[170]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_TPAT
// .TRLOII_TPAT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRLOII_TPAT
// .TRLOII_TPAT
// Corr struct for: VME_CAEN_V1190_SUBTDC
// uint32  .bunch_id
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .word_count
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SUBTDC
// .VME_CAEN_V1190_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SUBTDC
// .VME_CAEN_V1190_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SUBTDC
// .VME_CAEN_V1190_SUBTDC
// Corr struct for: VME_CAEN_V1190
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1190_SUBTDC  .tdc[4]
  // uint32  .bunch_id
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .word_count
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190
// .VME_CAEN_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190
// .VME_CAEN_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190
// .VME_CAEN_V1190
// Corr struct for: VME_CAEN_V1190_SHORT_SUBTDC
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC
// .VME_CAEN_V1190_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC
// .VME_CAEN_V1190_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC
// .VME_CAEN_V1190_SHORT_SUBTDC
// Corr struct for: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1190_SHORT_SUBTDC_ERROR
// Corr struct for: VME_CAEN_V1190_SHORT
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1190_SHORT_SUBTDC  .tdc[4]
// VME_CAEN_V1190_SHORT_SUBTDC_ERROR  .err[4]
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT
// .VME_CAEN_V1190_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT
// .VME_CAEN_V1190_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_SHORT
// .VME_CAEN_V1190_SHORT
// Corr struct for: VME_CAEN_V1290_SUBTDC
// uint32  .bunch_id
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .word_count
  // ---
// uint32  .event_id
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SUBTDC
// .VME_CAEN_V1290_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SUBTDC
// .VME_CAEN_V1290_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SUBTDC
// .VME_CAEN_V1290_SUBTDC
// Corr struct for: VME_CAEN_V1290
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1290_SUBTDC  .tdc[4]
  // uint32  .bunch_id
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
  // uint32  .word_count
    // ---
  // uint32  .event_id
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290
// .VME_CAEN_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290
// .VME_CAEN_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290
// .VME_CAEN_V1290
// Corr struct for: VME_CAEN_V1290_SHORT_SUBTDC
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC
// .VME_CAEN_V1290_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC
// .VME_CAEN_V1290_SHORT_SUBTDC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC
// .VME_CAEN_V1290_SHORT_SUBTDC
// Corr struct for: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// uint32  .flags
  // ---
// uint32  .dummy_15_23
  // ---
// uint32  .tdc
  // ---
// uint32  .dummy_26
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_SHORT_SUBTDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// .VME_CAEN_V1290_SHORT_SUBTDC_ERROR
// Corr struct for: VME_CAEN_V1290_SHORT
// raw_array_multi_zero_suppress  .data(DATA24)[32][128]
  // ---
// uint32  .geom
  // ---
// uint32  .event_number
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// VME_CAEN_V1290_SHORT_SUBTDC  .tdc[4]
// VME_CAEN_V1290_SHORT_SUBTDC_ERROR  .err[4]
  // uint32  .flags
    // ---
  // uint32  .dummy_15_23
    // ---
  // uint32  .tdc
    // ---
  // uint32  .dummy_26
    // ---
  // uint32  .unnamed_27_31
    // ---
  // uint32  .u32
    // ---
// uint32  .time_tag
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// uint32  .geom
  // ---
// uint32  .word_count
  // ---
// uint32  .dummy_20_23
  // ---
// uint32  .tdc_error
  // ---
// uint32  .buffer_overflow
  // ---
// uint32  .trigger_lost
  // ---
// uint32  .unnamed_27_31
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT
// .VME_CAEN_V1290_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT
// .VME_CAEN_V1290_SHORT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_SHORT
// .VME_CAEN_V1290_SHORT
// Corr struct for: VME_CAEN_V775
// raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
// uint32  .event_number
  // ---
// uint32  .unnamed_24_26
  // ---
// uint32  .geom
  // ---
// uint32  .u32
  // ---
// DATA12_OVERFLOW .data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: VME_CAEN_V775
  // DATA12_OVERFLOW .data[32]
// .VME_CAEN_V775/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V775
// .VME_CAEN_V775// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V775
// .VME_CAEN_V775
// Corr struct for: VME_CAEN_V830
// raw_array_zero_suppress  .data(DATA32)[32]
  // ---
// uint32  .event_number
  // ---
// uint32  .ts
  // ---
// uint32  .count
  // ---
// uint32  .dummy_24_25
  // ---
// uint32  .unnamed_26_26
  // ---
// uint32  .geom
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830
// Corr struct for: VME_GSI_VFTX2
// raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
// DATA16  .time_trigger
// uint32  .id
  // ---
// uint32  .internal_status
  // ---
// uint32  .count
  // ---
// uint32  .dummy_18_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .unnamed_0_7
  // ---
// uint32  .dummy_8_10
  // ---
// uint32  .trigger_timestamp
  // ---
// uint32  .dummy_24_28
  // ---
// uint32  .unnamed_29_30
  // ---
// uint32  .unnamed_31_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[32][32]
// DATA16 .time_coarse[32][32]
// DATA16 .time_trigger
// 
// size= 1  chunks=2049  mem=2049  line=4098  total=8396802
// size=32  chunks= 65  mem=2080  line=2145  total=4395105
// size=1024  chunks=  3  mem=3072  line=3075  total=6300675
// size=2049  chunks=  1  mem=2049  line=2050  total=4200450
// 
// corr structure: VME_GSI_VFTX2
  // DATA12 .time_fine[32][32]
  // DATA16 .time_coarse[32][32]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2/2049/.time_fine/1024/[32]/32/[32]
                    // .time_coarse/1024/[32]/32/[32]
                    // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2
// .VME_GSI_VFTX2// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2
// .VME_GSI_VFTX2
// Corr struct for: VME_GSI_VFTX2_7PS
// raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
// DATA16  .time_trigger
// uint32  .id
  // ---
// uint32  .internal_status
  // ---
// uint32  .count
  // ---
// uint32  .dummy_18_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[32][32]
// DATA16 .time_coarse[32][32]
// DATA16 .time_trigger
// 
// size= 1  chunks=2049  mem=2049  line=4098  total=8396802
// size=32  chunks= 65  mem=2080  line=2145  total=4395105
// size=1024  chunks=  3  mem=3072  line=3075  total=6300675
// size=2049  chunks=  1  mem=2049  line=2050  total=4200450
// 
// corr structure: VME_GSI_VFTX2_7PS
  // DATA12 .time_fine[32][32]
  // DATA16 .time_coarse[32][32]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2_7PS/2049/.time_fine/1024/[32]/32/[32]
                        // .time_coarse/1024/[32]/32/[32]
                        // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_7PS
// .VME_GSI_VFTX2_7PS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_7PS
// .VME_GSI_VFTX2_7PS
// Corr struct for: VME_GSI_VFTX2_LT
// raw_array_multi_zero_suppress  .time_fine(DATA12)[64][32]
// raw_array_multi_zero_suppress  .time_coarse(DATA16)[64][32]
// DATA16  .time_trigger
// uint32  .id
  // ---
// uint32  .internal_status
  // ---
// uint32  .count
  // ---
// uint32  .dummy_18_23
  // ---
// uint32  .unnamed_24_31
  // ---
// uint32  .u32
  // ---
// uint32  .unnamed_0_7
  // ---
// uint32  .dummy_8_10
  // ---
// uint32  .trigger_timestamp
  // ---
// uint32  .dummy_24_28
  // ---
// uint32  .unnamed_29_30
  // ---
// uint32  .unnamed_31_31
  // ---
// uint32  .u32
  // ---
// DATA12 .time_fine[64][32]
// DATA16 .time_coarse[64][32]
// DATA16 .time_trigger
// 
// size= 1  chunks=4097  mem=4097  line=8194  total=33570818
// size=32  chunks=129  mem=4128  line=4257  total=17440929
// size=2048  chunks=  3  mem=6144  line=6147  total=25184259
// size=4097  chunks=  1  mem=4097  line=4098  total=16789506
// 
// corr structure: VME_GSI_VFTX2_LT
  // DATA12 .time_fine[64][32]
  // DATA16 .time_coarse[64][32]
  // DATA16 .time_trigger
// .VME_GSI_VFTX2_LT/4097/.time_fine/2048/[64]/32/[32]
                       // .time_coarse/2048/[64]/32/[32]
                       // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_LT
// .VME_GSI_VFTX2_LT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_GSI_VFTX2_LT
// .VME_GSI_VFTX2_LT
// Corr struct for: VME_MESYTEC_MADC32
// raw_array_zero_suppress  .data(DATA14_OVERFLOW)[32]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA14_OVERFLOW .data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: VME_MESYTEC_MADC32
  // DATA14_OVERFLOW .data[32]
// .VME_MESYTEC_MADC32/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MADC32
// .VME_MESYTEC_MADC32// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MADC32
// .VME_MESYTEC_MADC32
// Corr struct for: VME_MESYTEC_MDPP16
// raw_array_multi_zero_suppress  .data(DATA16_OVERFLOW)[34][100]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA16_OVERFLOW .data[34][100]
// 
// size= 1  chunks=3400  mem=3400  line=6800  total=23120000
// size=100  chunks= 34  mem=3400  line=3434  total=11675600
// size=3400  chunks=  1  mem=3400  line=3401  total=11563400
// 
// corr structure: VME_MESYTEC_MDPP16
  // DATA16_OVERFLOW .data[34][100]
// .VME_MESYTEC_MDPP16/3400/.data/3400/[34]/100/[100]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MDPP16
// .VME_MESYTEC_MDPP16// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MDPP16
// .VME_MESYTEC_MDPP16
// Corr struct for: VME_MESYTEC_MQDC32
// raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA12_OVERFLOW .data[32]
// 
// size= 1  chunks= 32  mem=  32  line=64  total=2048
// size=32  chunks=  1  mem=  32  line=33  total=1056
// 
// corr structure: VME_MESYTEC_MQDC32
  // DATA12_OVERFLOW .data[32]
// .VME_MESYTEC_MQDC32/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MQDC32
// .VME_MESYTEC_MQDC32// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MQDC32
// .VME_MESYTEC_MQDC32
// Corr struct for: VME_MESYTEC_MTDC32
// raw_array_zero_suppress  .data(DATA16)[34]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA16 .data[34]
// 
// size= 1  chunks= 34  mem=  34  line=68  total=2312
// size=34  chunks=  1  mem=  34  line=35  total=1190
// 
// corr structure: VME_MESYTEC_MTDC32
  // DATA16 .data[34]
// .VME_MESYTEC_MTDC32/34/.data/34/[34]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MTDC32
// .VME_MESYTEC_MTDC32// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_MTDC32
// .VME_MESYTEC_MTDC32
// Corr struct for: VME_MESYTEC_VMMR8
// raw_array_multi_zero_suppress  .data(DATA12)[512][20]
// uint32  .counter
  // ---
// uint32  .unnamed_30_31
  // ---
// uint32  .u32
  // ---
// DATA12 .data[512][20]
// 
// size= 1  chunks=10240  mem=10240  line=20480  total=209715200
// size=20  chunks=512  mem=10240  line=10752  total=110100480
// size=10240  chunks=  1  mem=10240  line=10241  total=104867840
// 
// corr structure: VME_MESYTEC_VMMR8
  // DATA12 .data[512][20]
// .VME_MESYTEC_VMMR8/10240/.data/10240/[512]/20/[20]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_VMMR8
// .VME_MESYTEC_VMMR8// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_MESYTEC_VMMR8
// .VME_MESYTEC_VMMR8
// Corr struct for: WR_MULTI
// DATA32  .time_hi
  // ---
// DATA32  .time_lo
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI
// Corr struct for: fib1a_data
// GSI_CLOCKTDC_16PH_ITEM  .ctdc[4]
  // DATA32  .event_counter_lo32
    // ---
  // DATA32  .event_counter_hi16
    // ---
  // DATA32  .trigger_coarse_lo22
    // ---
  // DATA32  .trigger_coarse_hi24
    // ---
  // raw_array_multi_zero_suppress  .time_coarse(DATA12)[258][80]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[258][80]
  // uint32  ._0x34
    // ---
  // uint32  .trigger_type
    // ---
  // uint32  .sfp_id
    // ---
  // uint32  .tdc_id
    // ---
  // uint32  .channel_id
    // ---
  // uint32  .u32
    // ---
  // uint32  .channel_num
    // ---
  // uint32  ._0x34
    // ---
  // uint32  .trigger_type
    // ---
  // uint32  .sfp_id
    // ---
  // uint32  .tdc_id
    // ---
  // uint32  .channel_id
    // ---
  // uint32  .u32
    // ---
  // uint32  .data_byte_num
    // ---
  // uint32  .time_fine
    // ---
  // uint32  .time_coarse
    // ---
  // uint32  .time_coarse_ext
    // ---
  // uint32  .edge
    // ---
  // uint32  .ws
    // ---
  // uint32  .time_coarse_overflow
    // ---
  // uint32  .rb_overflow
    // ---
  // uint32  .dummy
    // ---
  // uint32  .is_data
    // ---
  // uint32  .channel
    // ---
  // uint32  .u32
    // ---
// TAMEX3_SFP  .tamex[2]
  // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
// BARRIER  .barrier
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .ctdc[4].time_coarse[258][80]
// DATA12 .ctdc[4].time_fine[258][80]
// DATA12 .tamex[2].time_coarse[34][256]
// DATA12 .tamex[2].time_fine[34][256]
// 
// size= 1  chunks=199936  mem=199936  line=399872  total=-1655570432
// size=80  chunks=36880  mem=2950400  line=2987280  total=264359936
// size=256  chunks=2200  mem=563200  line=565400  total=1374664704
// size=8704  chunks=2068  mem=17999872  line=18001940  total=53281792
// size=17408  chunks=2066  mem=35964928  line=35966994  total=1321658880
// size=20640  chunks= 10  mem=206400  line=206410  total=-1680883200
// size=34816  chunks=  9  mem=313344  line=313353  total=-1773964032
// size=41280  chunks=  5  mem=206400  line=206405  total=-1681882880
// size=165120  chunks=  2  mem=330240  line=330242  total=1602755072
// size=199936  chunks=  1  mem=199936  line=199937  total=1319898368
// 
// corr structure: fib1a_data
  // DATA12 .ctdc[4].time_coarse[258][80]
  // DATA12 .ctdc[4].time_fine[258][80]
  // DATA12 .tamex[2].time_coarse[34][256]
  // DATA12 .tamex[2].time_fine[34][256]
// .fib1a_data/199936/.ctdc/165120/[4]/41280/.time_coarse/20640/[258]/80/[80]
                                          // .time_fine/20640/[258]/80/[80]
                   // .tamex/34816/[2]/17408/.time_coarse/8704/[34]/256/[256]
                                          // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fib1a_data
// .fib1a_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fib1a_data
// .fib1a_data
// Corr struct for: fibsipm_data
// GSI_CLOCKTDC_ITEM  .ctdc[4]
  // DATA32  .event_counter_lo32
    // ---
  // DATA32  .event_counter_hi16
    // ---
  // DATA32  .trigger_coarse_lo22
    // ---
  // DATA32  .trigger_coarse_hi24
    // ---
  // raw_array_multi_zero_suppress  .time_coarse(DATA12)[258][80]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[258][80]
  // uint32  ._0x34
    // ---
  // uint32  .trigger_type
    // ---
  // uint32  .sfp_id
    // ---
  // uint32  .tdc_id
    // ---
  // uint32  .channel_id
    // ---
  // uint32  .u32
    // ---
  // uint32  .channel_num
    // ---
  // uint32  ._0x34
    // ---
  // uint32  .trigger_type
    // ---
  // uint32  .sfp_id
    // ---
  // uint32  .tdc_id
    // ---
  // uint32  .channel_id
    // ---
  // uint32  .u32
    // ---
  // uint32  .data_byte_num
    // ---
  // uint32  .time_fine
    // ---
  // uint32  .time_coarse
    // ---
  // uint32  .time_coarse_ext
    // ---
  // uint32  .edge
    // ---
  // uint32  .ws
    // ---
  // uint32  .time_coarse_overflow
    // ---
  // uint32  .rb_overflow
    // ---
  // uint32  .status
    // ---
  // uint32  .channel
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .ctdc[4].time_coarse[258][80]
// DATA12 .ctdc[4].time_fine[258][80]
// 
// size= 1  chunks=165120  mem=165120  line=330240  total=-1305346048
// size=80  chunks=2064  mem=165120  line=167184  total=1835618304
// size=20640  chunks=  8  mem=165120  line=165128  total=1496131584
// size=41280  chunks=  4  mem=165120  line=165124  total=1495471104
// size=165120  chunks=  1  mem=165120  line=165121  total=1494975744
// 
// corr structure: fibsipm_data
  // DATA12 .ctdc[4].time_coarse[258][80]
  // DATA12 .ctdc[4].time_fine[258][80]
// .fibsipm_data/165120/.ctdc/165120/[4]/41280/.time_coarse/20640/[258]/80/[80]
                                            // .time_fine/20640/[258]/80/[80]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fibsipm_data
// .fibsipm_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fibsipm_data
// .fibsipm_data
// Corr struct for: los_tamex_data
// TAMEX3_PADDING  .padding
// TAMEX3_SFP  .tamex
  // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .tamex.time_coarse[34][256]
// DATA12 .tamex.time_fine[34][256]
// 
// size= 1  chunks=17408  mem=17408  line=34816  total=606076928
// size=256  chunks= 68  mem=17408  line=17476  total=304222208
// size=8704  chunks=  2  mem=17408  line=17410  total=303073280
// size=17408  chunks=  1  mem=17408  line=17409  total=303055872
// 
// corr structure: los_tamex_data
  // DATA12 .tamex.time_coarse[34][256]
  // DATA12 .tamex.time_fine[34][256]
// .los_tamex_data/17408/.tamex/17408/.time_coarse/8704/[34]/256/[256]
                                   // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_tamex_data
// .los_tamex_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_tamex_data
// .los_tamex_data
// Corr struct for: los_vme_subev_data
// VME_GSI_VFTX2_7PS  .vftx21
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// VME_MESYTEC_MTDC32  .mtdc32
  // raw_array_zero_suppress  .data(DATA16)[34]
  // uint32  .counter
    // ---
  // uint32  .unnamed_30_31
    // ---
  // uint32  .u32
    // ---
// VME_GSI_VFTX2_7PS  .vftx22
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .vftx21.time_fine[32][32]
// DATA16 .vftx21.time_coarse[32][32]
// DATA16 .vftx21.time_trigger
// DATA16 .mtdc32.data[34]
// DATA12 .vftx22.time_fine[32][32]
// DATA16 .vftx22.time_coarse[32][32]
// DATA16 .vftx22.time_trigger
// 
// size= 1  chunks=4132  mem=4132  line=8264  total=34146848
// size=32  chunks=164  mem=5248  line=5412  total=22362384
// size=34  chunks=131  mem=4454  line=4585  total=18945220
// size=1024  chunks=  7  mem=7168  line=7175  total=29647100
// size=2049  chunks=  3  mem=6147  line=6150  total=25411800
// size=4132  chunks=  1  mem=4132  line=4133  total=17077556
// 
// corr structure: los_vme_subev_data
  // DATA12 .vftx21.time_fine[32][32]
  // DATA16 .vftx21.time_coarse[32][32]
  // DATA16 .vftx21.time_trigger
  // DATA16 .mtdc32.data[34]
  // DATA12 .vftx22.time_fine[32][32]
  // DATA16 .vftx22.time_coarse[32][32]
  // DATA16 .vftx22.time_trigger
// .los_vme_subev_data/4132/.vftx21/2049/.time_fine/1024/[32]/32/[32]
                                      // .time_coarse/1024/[32]/32/[32]
                                      // .time_trigger
                         // .mtdc32/34/.data/34/[34]
                         // .vftx22/2049/.time_fine/1024/[32]/32/[32]
                                      // .time_coarse/1024/[32]/32/[32]
                                      // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_vme_subev_data
// .los_vme_subev_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_vme_subev_data
// .los_vme_subev_data
// Corr struct for: neuland_sfp
// TAMEX3_FH_SFP  .card[35]
  // TAMEX3_FH_DATA  .data
    // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
// DATA12 .card[35].data.time_coarse[34][256]
// DATA12 .card[35].data.time_fine[34][256]
// 
// size= 1  chunks=609280  mem=609280  line=1218560  total=-585105408
// size=256  chunks=2380  mem=609280  line=611660  total=-989949952
// size=8704  chunks= 70  mem=609280  line=609350  total=1897580544
// size=17408  chunks= 35  mem=609280  line=609315  total=1876255744
// size=609280  chunks=  1  mem=609280  line=609281  total=1855540224
// 
// corr structure: neuland_sfp
  // DATA12 .card[35].data.time_coarse[34][256]
  // DATA12 .card[35].data.time_fine[34][256]
// .neuland_sfp/609280/.card/609280/[35]/17408/.data/17408/.time_coarse/8704/[34]/256/[256]
                                                        // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_sfp
// .neuland_sfp// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_sfp
// .neuland_sfp
// Corr struct for: neuland_tamex_subev_data
// TAMEX3_PADDING  .padding0
// neuland_sfp  .sfp[1]
  // TAMEX3_FH_SFP  .card[35]
    // TAMEX3_FH_DATA  .data
      // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .sfp[1].card[35].data.time_coarse[34][256]
// DATA12 .sfp[1].card[35].data.time_fine[34][256]
// 
// size= 1  chunks=609280  mem=609280  line=1218560  total=-585105408
// size=256  chunks=2380  mem=609280  line=611660  total=-989949952
// size=8704  chunks= 70  mem=609280  line=609350  total=1897580544
// size=17408  chunks= 35  mem=609280  line=609315  total=1876255744
// size=609280  chunks=  1  mem=609280  line=609281  total=1855540224
// 
// corr structure: neuland_tamex_subev_data
  // DATA12 .sfp[1].card[35].data.time_coarse[34][256]
  // DATA12 .sfp[1].card[35].data.time_fine[34][256]
// .neuland_tamex_subev_data/609280/.sfp/609280/[1]/609280/.card/609280/[35]/17408/.data/17408/.time_coarse/8704/[34]/256/[256]
                                                                                            // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_tamex_subev_data
// .neuland_tamex_subev_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_tamex_subev_data
// .neuland_tamex_subev_data
// Corr struct for: s2_vme_subev_data
// WR_MULTI  .ts
  // DATA32  .time_hi
    // ---
  // DATA32  .time_lo
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// VME_GSI_VFTX2_7PS  .vftx21
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// BARRIER  .b1
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
// BARRIER  .b2
  // uint32  .unnamed_0_31
    // ---
  // uint32  .u32
    // ---
// VME_MESYTEC_MQDC32  .mqdc
  // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
  // uint32  .counter
    // ---
  // uint32  .unnamed_30_31
    // ---
  // uint32  .u32
    // ---
// DATA12 .vftx21.time_fine[32][32]
// DATA16 .vftx21.time_coarse[32][32]
// DATA16 .vftx21.time_trigger
// DATA12_OVERFLOW .mqdc.data[32]
// 
// size= 1  chunks=2081  mem=2081  line=4162  total=8661122
// size=32  chunks= 66  mem=2112  line=2178  total=4532418
// size=1024  chunks=  4  mem=4096  line=4100  total=8532100
// size=2049  chunks=  2  mem=4098  line=4100  total=8532100
// size=2081  chunks=  1  mem=2081  line=2082  total=4332642
// 
// corr structure: s2_vme_subev_data
  // DATA12 .vftx21.time_fine[32][32]
  // DATA16 .vftx21.time_coarse[32][32]
  // DATA16 .vftx21.time_trigger
  // DATA12_OVERFLOW .mqdc.data[32]
// .s2_vme_subev_data/2081/.vftx21/2049/.time_fine/1024/[32]/32/[32]
                                     // .time_coarse/1024/[32]/32/[32]
                                     // .time_trigger
                        // .mqdc/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s2_vme_subev_data
// .s2_vme_subev_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s2_vme_subev_data
// .s2_vme_subev_data
// Corr struct for: s8_vme_subev_data
// VME_GSI_VFTX2_7PS  .vftx21
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .vftx21.time_fine[32][32]
// DATA16 .vftx21.time_coarse[32][32]
// DATA16 .vftx21.time_trigger
// 
// size= 1  chunks=2049  mem=2049  line=4098  total=8396802
// size=32  chunks= 65  mem=2080  line=2145  total=4395105
// size=1024  chunks=  3  mem=3072  line=3075  total=6300675
// size=2049  chunks=  1  mem=2049  line=2050  total=4200450
// 
// corr structure: s8_vme_subev_data
  // DATA12 .vftx21.time_fine[32][32]
  // DATA16 .vftx21.time_coarse[32][32]
  // DATA16 .vftx21.time_trigger
// .s8_vme_subev_data/2049/.vftx21/2049/.time_fine/1024/[32]/32/[32]
                                     // .time_coarse/1024/[32]/32/[32]
                                     // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s8_vme_subev_data
// .s8_vme_subev_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s8_vme_subev_data
// .s8_vme_subev_data
// Corr struct for: sofia_mwpc_subev_data
// VME_MESYTEC_VMMR8  .vmmr8
  // raw_array_multi_zero_suppress  .data(DATA12)[512][20]
  // uint32  .counter
    // ---
  // uint32  .unnamed_30_31
    // ---
  // uint32  .u32
    // ---
// VME_MESYTEC_MADC32  .madc32[2]
  // raw_array_zero_suppress  .data(DATA14_OVERFLOW)[32]
  // uint32  .counter
    // ---
  // uint32  .unnamed_30_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .vmmr8.data[512][20]
// DATA14_OVERFLOW .madc32[2].data[32]
// 
// size= 1  chunks=10304  mem=10304  line=20608  total=212344832
// size=20  chunks=576  mem=11520  line=12096  total=124637184
// size=32  chunks=514  mem=16448  line=16962  total=174776448
// size=64  chunks=513  mem=32832  line=33345  total=343586880
// size=10240  chunks=  2  mem=20480  line=20482  total=211046528
// size=10304  chunks=  1  mem=10304  line=10305  total=106182720
// 
// corr structure: sofia_mwpc_subev_data
  // DATA12 .vmmr8.data[512][20]
  // DATA14_OVERFLOW .madc32[2].data[32]
// .sofia_mwpc_subev_data/10304/.vmmr8/10240/.data/10240/[512]/20/[20]
                             // .madc32/64/[2]/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_mwpc_subev_data
// .sofia_mwpc_subev_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_mwpc_subev_data
// .sofia_mwpc_subev_data
// Corr struct for: sofia_tof_subev_data
// VME_GSI_VFTX2_7PS  .vftx2[4]
  // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
  // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
  // DATA16  .time_trigger
  // uint32  .id
    // ---
  // uint32  .internal_status
    // ---
  // uint32  .count
    // ---
  // uint32  .dummy_18_23
    // ---
  // uint32  .unnamed_24_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .vftx2[4].time_fine[32][32]
// DATA16 .vftx2[4].time_coarse[32][32]
// DATA16 .vftx2[4].time_trigger
// 
// size= 1  chunks=8196  mem=8196  line=16392  total=134348832
// size=32  chunks=260  mem=8320  line=8580  total=70321680
// size=1024  chunks= 12  mem=12288  line=12300  total=100810800
// size=2049  chunks=  4  mem=8196  line=8200  total=67207200
// size=8196  chunks=  1  mem=8196  line=8197  total=67182612
// 
// corr structure: sofia_tof_subev_data
  // DATA12 .vftx2[4].time_fine[32][32]
  // DATA16 .vftx2[4].time_coarse[32][32]
  // DATA16 .vftx2[4].time_trigger
// .sofia_tof_subev_data/8196/.vftx2/8196/[4]/2049/.time_fine/1024/[32]/32/[32]
                                                // .time_coarse/1024/[32]/32/[32]
                                                // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_tof_subev_data
// .sofia_tof_subev_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_tof_subev_data
// .sofia_tof_subev_data
// Corr struct for: sofia_trim_subev_data
// VME_MESYTEC_VMMR8  .vmmr8
  // raw_array_multi_zero_suppress  .data(DATA12)[512][20]
  // uint32  .counter
    // ---
  // uint32  .unnamed_30_31
    // ---
  // uint32  .u32
    // ---
// VME_MESYTEC_MDPP16  .mdpp
  // raw_array_multi_zero_suppress  .data(DATA16_OVERFLOW)[34][100]
  // uint32  .counter
    // ---
  // uint32  .unnamed_30_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA12 .vmmr8.data[512][20]
// DATA16_OVERFLOW .mdpp.data[34][100]
// 
// size= 1  chunks=13640  mem=13640  line=27280  total=372099200
// size=20  chunks=3912  mem=78240  line=82152  total=1120553280
// size=100  chunks=546  mem=54600  line=55146  total=752191440
// size=3400  chunks=513  mem=1744200  line=1744713  total=-1971918456
// size=10240  chunks=  2  mem=20480  line=20482  total=279374480
// size=13640  chunks=  1  mem=13640  line=13641  total=186063240
// 
// corr structure: sofia_trim_subev_data
  // DATA12 .vmmr8.data[512][20]
  // DATA16_OVERFLOW .mdpp.data[34][100]
// .sofia_trim_subev_data/13640/.vmmr8/10240/.data/10240/[512]/20/[20]
                             // .mdpp/3400/.data/3400/[34]/100/[100]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_trim_subev_data
// .sofia_trim_subev_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_trim_subev_data
// .sofia_trim_subev_data
// Corr struct for: sofia_twim_subev_data
// VME_MESYTEC_MDPP16  .mdpp16[2]
  // raw_array_multi_zero_suppress  .data(DATA16_OVERFLOW)[34][100]
  // uint32  .counter
    // ---
  // uint32  .unnamed_30_31
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA16_OVERFLOW .mdpp16[2].data[34][100]
// 
// size= 1  chunks=6800  mem=6800  line=13600  total=92480000
// size=100  chunks= 68  mem=6800  line=6868  total=46702400
// size=3400  chunks=  2  mem=6800  line=6802  total=46253600
// size=6800  chunks=  1  mem=6800  line=6801  total=46246800
// 
// corr structure: sofia_twim_subev_data
  // DATA16_OVERFLOW .mdpp16[2].data[34][100]
// .sofia_twim_subev_data/6800/.mdpp16/6800/[2]/3400/.data/3400/[34]/100/[100]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_twim_subev_data
// .sofia_twim_subev_data// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_twim_subev_data
// .sofia_twim_subev_data
// Corr struct for: CALIFA
//  : public unpack_subevent_base
// ---
// FEBEX3_CALIFA_BASE  .febex3
  // raw_array_zero_suppress  .energy(DATA16)[2048]
  // raw_array_zero_suppress  .ts_lsb(DATA32)[2048]
    // ---
  // raw_array_zero_suppress  .ts_msb(DATA32)[2048]
    // ---
  // raw_array_zero_suppress  .n_f(DATA16)[2048]
  // raw_array_zero_suppress  .n_s(DATA16)[2048]
// TIMESTAMP_WHITERABBIT  .ts400
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA16 .febex3.energy[2048]
// DATA16 .febex3.n_f[2048]
// DATA16 .febex3.n_s[2048]
// DATA12 .ts400.subsystem_id
// DATA16 .ts400.t1
// DATA16 .ts400.t2
// DATA16 .ts400.t3
// DATA16 .ts400.t4
// 
// size= 1  chunks=6149  mem=6149  line=12298  total=75620402
// size= 5  chunks=6145  mem=30725  line=36870  total=226713630
// size=2048  chunks=  4  mem=8192  line=8196  total=50397204
// size=6144  chunks=  2  mem=12288  line=12290  total=75571210
// size=6149  chunks=  1  mem=6149  line=6150  total=37816350
// 
// corr structure: CALIFA
  // DATA16 .febex3.energy[2048]
  // DATA16 .febex3.n_f[2048]
  // DATA16 .febex3.n_s[2048]
  // DATA12 .ts400.subsystem_id
  // DATA16 .ts400.t1
  // DATA16 .ts400.t2
  // DATA16 .ts400.t3
  // DATA16 .ts400.t4
// .CALIFA/6149/.febex3/6144/.energy/2048/[2048]
                          // .n_f/2048/[2048]
                          // .n_s/2048/[2048]
             // .ts400/5/.subsystem_id
                      // .t1
                      // .t2
                      // .t3
                      // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CALIFA
// .CALIFA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: CALIFA
// .CALIFA
// Corr struct for: ams_siderem1_subev
//  : public unpack_subevent_base
// ---
// GSI_SAM_PADDING  .padd
// EXT_SST  .sst[3]
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ams_siderem1_subev
// .ams_siderem1_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ams_siderem1_subev
// .ams_siderem1_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ams_siderem1_subev
// .ams_siderem1_subev
// Corr struct for: ams_siderem2_subev
//  : public unpack_subevent_base
// ---
// GSI_SAM_PADDING  .padd
// EXT_SST  .sst[3]
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ams_siderem2_subev
// .ams_siderem2_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ams_siderem2_subev
// .ams_siderem2_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ams_siderem2_subev
// .ams_siderem2_subev
// Corr struct for: ams_wr
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: ams_wr
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .ams_wr/5/.ts/5/.subsystem_id
                // .t1
                // .t2
                // .t3
                // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ams_wr
// .ams_wr// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ams_wr
// .ams_wr
// Corr struct for: fib1ab_subev
//  : public unpack_subevent_base
// ---
// fib1a_data  .data
  // GSI_CLOCKTDC_16PH_ITEM  .ctdc[4]
    // DATA32  .event_counter_lo32
      // ---
    // DATA32  .event_counter_hi16
      // ---
    // DATA32  .trigger_coarse_lo22
      // ---
    // DATA32  .trigger_coarse_hi24
      // ---
    // raw_array_multi_zero_suppress  .time_coarse(DATA12)[258][80]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[258][80]
    // uint32  ._0x34
      // ---
    // uint32  .trigger_type
      // ---
    // uint32  .sfp_id
      // ---
    // uint32  .tdc_id
      // ---
    // uint32  .channel_id
      // ---
    // uint32  .u32
      // ---
    // uint32  .channel_num
      // ---
    // uint32  ._0x34
      // ---
    // uint32  .trigger_type
      // ---
    // uint32  .sfp_id
      // ---
    // uint32  .tdc_id
      // ---
    // uint32  .channel_id
      // ---
    // uint32  .u32
      // ---
    // uint32  .data_byte_num
      // ---
    // uint32  .time_fine
      // ---
    // uint32  .time_coarse
      // ---
    // uint32  .time_coarse_ext
      // ---
    // uint32  .edge
      // ---
    // uint32  .ws
      // ---
    // uint32  .time_coarse_overflow
      // ---
    // uint32  .rb_overflow
      // ---
    // uint32  .dummy
      // ---
    // uint32  .is_data
      // ---
    // uint32  .channel
      // ---
    // uint32  .u32
      // ---
  // TAMEX3_SFP  .tamex[2]
    // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
  // BARRIER  .barrier
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA12 .data.ctdc[4].time_coarse[258][80]
// DATA12 .data.ctdc[4].time_fine[258][80]
// DATA12 .data.tamex[2].time_coarse[34][256]
// DATA12 .data.tamex[2].time_fine[34][256]
// 
// size= 1  chunks=199936  mem=199936  line=399872  total=-1655570432
// size=80  chunks=36880  mem=2950400  line=2987280  total=264359936
// size=256  chunks=2200  mem=563200  line=565400  total=1374664704
// size=8704  chunks=2068  mem=17999872  line=18001940  total=53281792
// size=17408  chunks=2066  mem=35964928  line=35966994  total=1321658880
// size=20640  chunks= 10  mem=206400  line=206410  total=-1680883200
// size=34816  chunks=  9  mem=313344  line=313353  total=-1773964032
// size=41280  chunks=  5  mem=206400  line=206405  total=-1681882880
// size=165120  chunks=  2  mem=330240  line=330242  total=1602755072
// size=199936  chunks=  1  mem=199936  line=199937  total=1319898368
// 
// corr structure: fib1ab_subev
  // DATA12 .data.ctdc[4].time_coarse[258][80]
  // DATA12 .data.ctdc[4].time_fine[258][80]
  // DATA12 .data.tamex[2].time_coarse[34][256]
  // DATA12 .data.tamex[2].time_fine[34][256]
// .fib1ab_subev/199936/.data/199936/.ctdc/165120/[4]/41280/.time_coarse/20640/[258]/80/[80]
                                                         // .time_fine/20640/[258]/80/[80]
                                  // .tamex/34816/[2]/17408/.time_coarse/8704/[34]/256/[256]
                                                         // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fib1ab_subev
// .fib1ab_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fib1ab_subev
// .fib1ab_subev
// Corr struct for: fibsipm_subev
//  : public unpack_subevent_base
// ---
// fibsipm_data  .data
  // GSI_CLOCKTDC_ITEM  .ctdc[4]
    // DATA32  .event_counter_lo32
      // ---
    // DATA32  .event_counter_hi16
      // ---
    // DATA32  .trigger_coarse_lo22
      // ---
    // DATA32  .trigger_coarse_hi24
      // ---
    // raw_array_multi_zero_suppress  .time_coarse(DATA12)[258][80]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[258][80]
    // uint32  ._0x34
      // ---
    // uint32  .trigger_type
      // ---
    // uint32  .sfp_id
      // ---
    // uint32  .tdc_id
      // ---
    // uint32  .channel_id
      // ---
    // uint32  .u32
      // ---
    // uint32  .channel_num
      // ---
    // uint32  ._0x34
      // ---
    // uint32  .trigger_type
      // ---
    // uint32  .sfp_id
      // ---
    // uint32  .tdc_id
      // ---
    // uint32  .channel_id
      // ---
    // uint32  .u32
      // ---
    // uint32  .data_byte_num
      // ---
    // uint32  .time_fine
      // ---
    // uint32  .time_coarse
      // ---
    // uint32  .time_coarse_ext
      // ---
    // uint32  .edge
      // ---
    // uint32  .ws
      // ---
    // uint32  .time_coarse_overflow
      // ---
    // uint32  .rb_overflow
      // ---
    // uint32  .status
      // ---
    // uint32  .channel
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA12 .data.ctdc[4].time_coarse[258][80]
// DATA12 .data.ctdc[4].time_fine[258][80]
// 
// size= 1  chunks=165120  mem=165120  line=330240  total=-1305346048
// size=80  chunks=2064  mem=165120  line=167184  total=1835618304
// size=20640  chunks=  8  mem=165120  line=165128  total=1496131584
// size=41280  chunks=  4  mem=165120  line=165124  total=1495471104
// size=165120  chunks=  1  mem=165120  line=165121  total=1494975744
// 
// corr structure: fibsipm_subev
  // DATA12 .data.ctdc[4].time_coarse[258][80]
  // DATA12 .data.ctdc[4].time_fine[258][80]
// .fibsipm_subev/165120/.data/165120/.ctdc/165120/[4]/41280/.time_coarse/20640/[258]/80/[80]
                                                          // .time_fine/20640/[258]/80/[80]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fibsipm_subev
// .fibsipm_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fibsipm_subev
// .fibsipm_subev
// Corr struct for: lmu_subev
//  : public unpack_subevent_base
// ---
// TRLOII_LMU_SCALERS  .scalers
  // raw_array_zero_suppress  .before_lmu(DATA32)[63]
    // ---
  // raw_array_zero_suppress  .before_lmu_mux(DATA32)[31]
    // ---
  // raw_array_zero_suppress  .before_lmu_aux(DATA32)[31]
    // ---
  // raw_array_zero_suppress  .before_dt(DATA32)[127]
    // ---
  // raw_array_zero_suppress  .after_dt(DATA32)[127]
    // ---
  // raw_array_zero_suppress  .after_reduction(DATA32)[127]
    // ---
  // uint32  .before_lmu
    // ---
  // uint32  .before_lmu_mux
    // ---
  // uint32  .before_lmu_aux
    // ---
  // uint32  .after_lmu
    // ---
  // uint32  .id
    // ---
  // uint32  .u32
    // ---
// MEGA_PULSER  .pulser
  // uint32  .mega
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: lmu_subev
// .lmu_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: lmu_subev
// .lmu_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: lmu_subev
// .lmu_subev
// Corr struct for: los_sampler_subev
//  : public unpack_subevent_base
// ---
// TRLOII_SAMPLER  .los
  // raw_array_zero_suppress  .sampler(DATA32)[512]
    // ---
  // uint32  .word_num
    // ---
  // uint32  .overflow
    // ---
  // uint32  .dummy_11_15
    // ---
  // uint32  .mark
    // ---
  // uint32  .u32
    // ---
// TRLOII_SAMPLER  .ms
  // raw_array_zero_suppress  .sampler(DATA32)[512]
    // ---
  // uint32  .word_num
    // ---
  // uint32  .overflow
    // ---
  // uint32  .dummy_11_15
    // ---
  // uint32  .mark
    // ---
  // uint32  .u32
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_sampler_subev
// .los_sampler_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_sampler_subev
// .los_sampler_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_sampler_subev
// .los_sampler_subev
// Corr struct for: los_tamex_subev
//  : public unpack_subevent_base
// ---
// los_tamex_data  .data
  // TAMEX3_PADDING  .padding
  // TAMEX3_SFP  .tamex
    // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA12 .data.tamex.time_coarse[34][256]
// DATA12 .data.tamex.time_fine[34][256]
// 
// size= 1  chunks=17408  mem=17408  line=34816  total=606076928
// size=256  chunks= 68  mem=17408  line=17476  total=304222208
// size=8704  chunks=  2  mem=17408  line=17410  total=303073280
// size=17408  chunks=  1  mem=17408  line=17409  total=303055872
// 
// corr structure: los_tamex_subev
  // DATA12 .data.tamex.time_coarse[34][256]
  // DATA12 .data.tamex.time_fine[34][256]
// .los_tamex_subev/17408/.data/17408/.tamex/17408/.time_coarse/8704/[34]/256/[256]
                                                // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_tamex_subev
// .los_tamex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_tamex_subev
// .los_tamex_subev
// Corr struct for: los_vme_subev
//  : public unpack_subevent_base
// ---
// los_vme_subev_data  .data
  // VME_GSI_VFTX2_7PS  .vftx21
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // VME_MESYTEC_MTDC32  .mtdc32
    // raw_array_zero_suppress  .data(DATA16)[34]
    // uint32  .counter
      // ---
    // uint32  .unnamed_30_31
      // ---
    // uint32  .u32
      // ---
  // VME_GSI_VFTX2_7PS  .vftx22
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA12 .data.vftx21.time_fine[32][32]
// DATA16 .data.vftx21.time_coarse[32][32]
// DATA16 .data.vftx21.time_trigger
// DATA16 .data.mtdc32.data[34]
// DATA12 .data.vftx22.time_fine[32][32]
// DATA16 .data.vftx22.time_coarse[32][32]
// DATA16 .data.vftx22.time_trigger
// 
// size= 1  chunks=4132  mem=4132  line=8264  total=34146848
// size=32  chunks=164  mem=5248  line=5412  total=22362384
// size=34  chunks=131  mem=4454  line=4585  total=18945220
// size=1024  chunks=  7  mem=7168  line=7175  total=29647100
// size=2049  chunks=  3  mem=6147  line=6150  total=25411800
// size=4132  chunks=  1  mem=4132  line=4133  total=17077556
// 
// corr structure: los_vme_subev
  // DATA12 .data.vftx21.time_fine[32][32]
  // DATA16 .data.vftx21.time_coarse[32][32]
  // DATA16 .data.vftx21.time_trigger
  // DATA16 .data.mtdc32.data[34]
  // DATA12 .data.vftx22.time_fine[32][32]
  // DATA16 .data.vftx22.time_coarse[32][32]
  // DATA16 .data.vftx22.time_trigger
// .los_vme_subev/4132/.data/4132/.vftx21/2049/.time_fine/1024/[32]/32/[32]
                                            // .time_coarse/1024/[32]/32/[32]
                                            // .time_trigger
                               // .mtdc32/34/.data/34/[34]
                               // .vftx22/2049/.time_fine/1024/[32]/32/[32]
                                            // .time_coarse/1024/[32]/32/[32]
                                            // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_vme_subev
// .los_vme_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_vme_subev
// .los_vme_subev
// Corr struct for: los_wr
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: los_wr
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .los_wr/5/.ts/5/.subsystem_id
                // .t1
                // .t2
                // .t3
                // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_wr
// .los_wr// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: los_wr
// .los_wr
// Corr struct for: neuland_tamex_subev
//  : public unpack_subevent_base
// ---
// neuland_tamex_subev_data  .data
  // TAMEX3_PADDING  .padding0
  // neuland_sfp  .sfp[1]
    // TAMEX3_FH_SFP  .card[35]
      // TAMEX3_FH_DATA  .data
        // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
        // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA12 .data.sfp[1].card[35].data.time_coarse[34][256]
// DATA12 .data.sfp[1].card[35].data.time_fine[34][256]
// 
// size= 1  chunks=609280  mem=609280  line=1218560  total=-585105408
// size=256  chunks=2380  mem=609280  line=611660  total=-989949952
// size=8704  chunks= 70  mem=609280  line=609350  total=1897580544
// size=17408  chunks= 35  mem=609280  line=609315  total=1876255744
// size=609280  chunks=  1  mem=609280  line=609281  total=1855540224
// 
// corr structure: neuland_tamex_subev
  // DATA12 .data.sfp[1].card[35].data.time_coarse[34][256]
  // DATA12 .data.sfp[1].card[35].data.time_fine[34][256]
// .neuland_tamex_subev/609280/.data/609280/.sfp/609280/[1]/609280/.card/609280/[35]/17408/.data/17408/.time_coarse/8704/[34]/256/[256]
                                                                                                    // .time_fine/8704/[34]/256/[256]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_tamex_subev
// .neuland_tamex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: neuland_tamex_subev
// .neuland_tamex_subev
// Corr struct for: s2_vme_subev
//  : public unpack_subevent_base
// ---
// s2_vme_subev_data  .data
  // WR_MULTI  .ts
    // DATA32  .time_hi
      // ---
    // DATA32  .time_lo
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
  // VME_GSI_VFTX2_7PS  .vftx21
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // BARRIER  .b1
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
  // BARRIER  .b2
    // uint32  .unnamed_0_31
      // ---
    // uint32  .u32
      // ---
  // VME_MESYTEC_MQDC32  .mqdc
    // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
    // uint32  .counter
      // ---
    // uint32  .unnamed_30_31
      // ---
    // uint32  .u32
      // ---
// DATA12 .data.vftx21.time_fine[32][32]
// DATA16 .data.vftx21.time_coarse[32][32]
// DATA16 .data.vftx21.time_trigger
// DATA12_OVERFLOW .data.mqdc.data[32]
// 
// size= 1  chunks=2081  mem=2081  line=4162  total=8661122
// size=32  chunks= 66  mem=2112  line=2178  total=4532418
// size=1024  chunks=  4  mem=4096  line=4100  total=8532100
// size=2049  chunks=  2  mem=4098  line=4100  total=8532100
// size=2081  chunks=  1  mem=2081  line=2082  total=4332642
// 
// corr structure: s2_vme_subev
  // DATA12 .data.vftx21.time_fine[32][32]
  // DATA16 .data.vftx21.time_coarse[32][32]
  // DATA16 .data.vftx21.time_trigger
  // DATA12_OVERFLOW .data.mqdc.data[32]
// .s2_vme_subev/2081/.data/2081/.vftx21/2049/.time_fine/1024/[32]/32/[32]
                                           // .time_coarse/1024/[32]/32/[32]
                                           // .time_trigger
                              // .mqdc/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s2_vme_subev
// .s2_vme_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s2_vme_subev
// .s2_vme_subev
// Corr struct for: s8_tpat_subev
//  : public unpack_subevent_base
// ---
// TRLOII_TPAT  .tpat
  // DATA32  .n
    // ---
  // raw_list_ii_zero_suppress  .tpat(DATA16)[170]
  // raw_list_ii_zero_suppress  .trig(DATA8)[170]
    // ---
  // raw_list_ii_zero_suppress  .ts_lo(DATA32)[170]
    // ---
  // raw_list_ii_zero_suppress  .ts_hi(DATA32)[170]
    // ---
// LAND_STD_VME  .land_vme
  // uint32  .fail_general
    // ---
  // uint32  .fail_data_corrupt
    // ---
  // uint32  .fail_data_missing
    // ---
  // uint32  .fail_data_too_much
    // ---
  // uint32  .fail_event_counter_mismatch
    // ---
  // uint32  .fail_readout_error_driver
    // ---
  // uint32  .fail_unexpected_trigger
    // ---
  // uint32  .fail_firmware_mismatch
    // ---
  // uint32  .dummy_8_21
    // ---
  // uint32  .has_multi_trlo_ii_counter0
    // ---
  // uint32  .has_clock_counter_stamp
    // ---
  // uint32  .has_continous_event_counter
    // ---
  // uint32  .has_update_qdc_iped_value
    // ---
  // uint32  .spurious_start_before_tcal
    // ---
  // uint32  .has_no_zero_suppression
    // ---
  // uint32  .has_multi_adctdc_counter0
    // ---
  // uint32  .has_multi_scaler_counter0
    // ---
  // uint32  .has_multi_event
    // ---
  // uint32  .has_time_stamp
    // ---
  // uint32  .u32
    // ---
  // uint32  .continous_event_counter
    // ---
  // uint32  .time_stamp
    // ---
  // uint32  .clock_counter_stamp
    // ---
  // uint32  .iped
    // ---
  // uint32  .multi_events
    // ---
  // uint32  .multi_trlo_ii_counter0
    // ---
  // uint32  .multi_scaler_counter0
    // ---
  // uint32  .multi_adctdc_counter0
    // ---
// DATA16 .tpat.tpat[170]
// 
// size= 1  chunks=170  mem= 170  line=340  total=57800
// size=170  chunks=  1  mem= 170  line=171  total=29070
// 
// corr structure: s8_tpat_subev
  // DATA16 .tpat.tpat[170]
// .s8_tpat_subev/170/.tpat/170/.tpat/170/[170]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s8_tpat_subev
// .s8_tpat_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s8_tpat_subev
// .s8_tpat_subev
// Corr struct for: s8_vme_subev
//  : public unpack_subevent_base
// ---
// s8_vme_subev_data  .data
  // VME_GSI_VFTX2_7PS  .vftx21
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA12 .data.vftx21.time_fine[32][32]
// DATA16 .data.vftx21.time_coarse[32][32]
// DATA16 .data.vftx21.time_trigger
// 
// size= 1  chunks=2049  mem=2049  line=4098  total=8396802
// size=32  chunks= 65  mem=2080  line=2145  total=4395105
// size=1024  chunks=  3  mem=3072  line=3075  total=6300675
// size=2049  chunks=  1  mem=2049  line=2050  total=4200450
// 
// corr structure: s8_vme_subev
  // DATA12 .data.vftx21.time_fine[32][32]
  // DATA16 .data.vftx21.time_coarse[32][32]
  // DATA16 .data.vftx21.time_trigger
// .s8_vme_subev/2049/.data/2049/.vftx21/2049/.time_fine/1024/[32]/32/[32]
                                           // .time_coarse/1024/[32]/32/[32]
                                           // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s8_vme_subev
// .s8_vme_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s8_vme_subev
// .s8_vme_subev
// Corr struct for: s8_wr
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: s8_wr
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .s8_wr/5/.ts/5/.subsystem_id
               // .t1
               // .t2
               // .t3
               // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s8_wr
// .s8_wr// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: s8_wr
// .s8_wr
// Corr struct for: sofia_mwpc_subev
//  : public unpack_subevent_base
// ---
// sofia_mwpc_subev_data  .data
  // VME_MESYTEC_VMMR8  .vmmr8
    // raw_array_multi_zero_suppress  .data(DATA12)[512][20]
    // uint32  .counter
      // ---
    // uint32  .unnamed_30_31
      // ---
    // uint32  .u32
      // ---
  // VME_MESYTEC_MADC32  .madc32[2]
    // raw_array_zero_suppress  .data(DATA14_OVERFLOW)[32]
    // uint32  .counter
      // ---
    // uint32  .unnamed_30_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA12 .data.vmmr8.data[512][20]
// DATA14_OVERFLOW .data.madc32[2].data[32]
// 
// size= 1  chunks=10304  mem=10304  line=20608  total=212344832
// size=20  chunks=576  mem=11520  line=12096  total=124637184
// size=32  chunks=514  mem=16448  line=16962  total=174776448
// size=64  chunks=513  mem=32832  line=33345  total=343586880
// size=10240  chunks=  2  mem=20480  line=20482  total=211046528
// size=10304  chunks=  1  mem=10304  line=10305  total=106182720
// 
// corr structure: sofia_mwpc_subev
  // DATA12 .data.vmmr8.data[512][20]
  // DATA14_OVERFLOW .data.madc32[2].data[32]
// .sofia_mwpc_subev/10304/.data/10304/.vmmr8/10240/.data/10240/[512]/20/[20]
                                    // .madc32/64/[2]/32/.data/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_mwpc_subev
// .sofia_mwpc_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_mwpc_subev
// .sofia_mwpc_subev
// Corr struct for: sofia_tof_subev
//  : public unpack_subevent_base
// ---
// sofia_tof_subev_data  .data
  // VME_GSI_VFTX2_7PS  .vftx2[4]
    // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
    // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
    // DATA16  .time_trigger
    // uint32  .id
      // ---
    // uint32  .internal_status
      // ---
    // uint32  .count
      // ---
    // uint32  .dummy_18_23
      // ---
    // uint32  .unnamed_24_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA12 .data.vftx2[4].time_fine[32][32]
// DATA16 .data.vftx2[4].time_coarse[32][32]
// DATA16 .data.vftx2[4].time_trigger
// 
// size= 1  chunks=8196  mem=8196  line=16392  total=134348832
// size=32  chunks=260  mem=8320  line=8580  total=70321680
// size=1024  chunks= 12  mem=12288  line=12300  total=100810800
// size=2049  chunks=  4  mem=8196  line=8200  total=67207200
// size=8196  chunks=  1  mem=8196  line=8197  total=67182612
// 
// corr structure: sofia_tof_subev
  // DATA12 .data.vftx2[4].time_fine[32][32]
  // DATA16 .data.vftx2[4].time_coarse[32][32]
  // DATA16 .data.vftx2[4].time_trigger
// .sofia_tof_subev/8196/.data/8196/.vftx2/8196/[4]/2049/.time_fine/1024/[32]/32/[32]
                                                      // .time_coarse/1024/[32]/32/[32]
                                                      // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_tof_subev
// .sofia_tof_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_tof_subev
// .sofia_tof_subev
// Corr struct for: sofia_trim_subev
//  : public unpack_subevent_base
// ---
// sofia_trim_subev_data  .data
  // VME_MESYTEC_VMMR8  .vmmr8
    // raw_array_multi_zero_suppress  .data(DATA12)[512][20]
    // uint32  .counter
      // ---
    // uint32  .unnamed_30_31
      // ---
    // uint32  .u32
      // ---
  // VME_MESYTEC_MDPP16  .mdpp
    // raw_array_multi_zero_suppress  .data(DATA16_OVERFLOW)[34][100]
    // uint32  .counter
      // ---
    // uint32  .unnamed_30_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA12 .data.vmmr8.data[512][20]
// DATA16_OVERFLOW .data.mdpp.data[34][100]
// 
// size= 1  chunks=13640  mem=13640  line=27280  total=372099200
// size=20  chunks=3912  mem=78240  line=82152  total=1120553280
// size=100  chunks=546  mem=54600  line=55146  total=752191440
// size=3400  chunks=513  mem=1744200  line=1744713  total=-1971918456
// size=10240  chunks=  2  mem=20480  line=20482  total=279374480
// size=13640  chunks=  1  mem=13640  line=13641  total=186063240
// 
// corr structure: sofia_trim_subev
  // DATA12 .data.vmmr8.data[512][20]
  // DATA16_OVERFLOW .data.mdpp.data[34][100]
// .sofia_trim_subev/13640/.data/13640/.vmmr8/10240/.data/10240/[512]/20/[20]
                                    // .mdpp/3400/.data/3400/[34]/100/[100]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_trim_subev
// .sofia_trim_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_trim_subev
// .sofia_trim_subev
// Corr struct for: sofia_twim_subev
//  : public unpack_subevent_base
// ---
// sofia_twim_subev_data  .data
  // VME_MESYTEC_MDPP16  .mdpp16[2]
    // raw_array_multi_zero_suppress  .data(DATA16_OVERFLOW)[34][100]
    // uint32  .counter
      // ---
    // uint32  .unnamed_30_31
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// DATA16_OVERFLOW .data.mdpp16[2].data[34][100]
// 
// size= 1  chunks=6800  mem=6800  line=13600  total=92480000
// size=100  chunks= 68  mem=6800  line=6868  total=46702400
// size=3400  chunks=  2  mem=6800  line=6802  total=46253600
// size=6800  chunks=  1  mem=6800  line=6801  total=46246800
// 
// corr structure: sofia_twim_subev
  // DATA16_OVERFLOW .data.mdpp16[2].data[34][100]
// .sofia_twim_subev/6800/.data/6800/.mdpp16/6800/[2]/3400/.data/3400/[34]/100/[100]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_twim_subev
// .sofia_twim_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: sofia_twim_subev
// .sofia_twim_subev
// Corr struct for: wr_neuland
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: wr_neuland
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .wr_neuland/5/.ts/5/.subsystem_id
                    // .t1
                    // .t2
                    // .t3
                    // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_neuland
// .wr_neuland// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_neuland
// .wr_neuland
// Corr struct for: wr_s2
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: wr_s2
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .wr_s2/5/.ts/5/.subsystem_id
               // .t1
               // .t2
               // .t3
               // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_s2
// .wr_s2// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_s2
// .wr_s2
// Corr struct for: wr_sofia
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: wr_sofia
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .wr_sofia/5/.ts/5/.subsystem_id
                  // .t1
                  // .t2
                  // .t3
                  // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_sofia
// .wr_sofia// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: wr_sofia
// .wr_sofia
// Corr struct for: unpack_event
//  : public unpack_event_base
// ---
// los_wr  .los_ts
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// los_vme_subev  .los_vme
  //  : public unpack_subevent_base
  // ---
  // los_vme_subev_data  .data
    // VME_GSI_VFTX2_7PS  .vftx21
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
      // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
      // DATA16  .time_trigger
      // uint32  .id
        // ---
      // uint32  .internal_status
        // ---
      // uint32  .count
        // ---
      // uint32  .dummy_18_23
        // ---
      // uint32  .unnamed_24_31
        // ---
      // uint32  .u32
        // ---
    // VME_MESYTEC_MTDC32  .mtdc32
      // raw_array_zero_suppress  .data(DATA16)[34]
      // uint32  .counter
        // ---
      // uint32  .unnamed_30_31
        // ---
      // uint32  .u32
        // ---
    // VME_GSI_VFTX2_7PS  .vftx22
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
      // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
      // DATA16  .time_trigger
      // uint32  .id
        // ---
      // uint32  .internal_status
        // ---
      // uint32  .count
        // ---
      // uint32  .dummy_18_23
        // ---
      // uint32  .unnamed_24_31
        // ---
      // uint32  .u32
        // ---
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// lmu_subev  .los_lmu
  //  : public unpack_subevent_base
  // ---
  // TRLOII_LMU_SCALERS  .scalers
    // raw_array_zero_suppress  .before_lmu(DATA32)[63]
      // ---
    // raw_array_zero_suppress  .before_lmu_mux(DATA32)[31]
      // ---
    // raw_array_zero_suppress  .before_lmu_aux(DATA32)[31]
      // ---
    // raw_array_zero_suppress  .before_dt(DATA32)[127]
      // ---
    // raw_array_zero_suppress  .after_dt(DATA32)[127]
      // ---
    // raw_array_zero_suppress  .after_reduction(DATA32)[127]
      // ---
    // uint32  .before_lmu
      // ---
    // uint32  .before_lmu_mux
      // ---
    // uint32  .before_lmu_aux
      // ---
    // uint32  .after_lmu
      // ---
    // uint32  .id
      // ---
    // uint32  .u32
      // ---
  // MEGA_PULSER  .pulser
    // uint32  .mega
      // ---
// los_tamex_subev  .los_tamex
  //  : public unpack_subevent_base
  // ---
  // los_tamex_data  .data
    // TAMEX3_PADDING  .padding
    // TAMEX3_SFP  .tamex
      // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// los_sampler_subev  .los_sampler
  //  : public unpack_subevent_base
  // ---
  // TRLOII_SAMPLER  .los
    // raw_array_zero_suppress  .sampler(DATA32)[512]
      // ---
    // uint32  .word_num
      // ---
    // uint32  .overflow
      // ---
    // uint32  .dummy_11_15
      // ---
    // uint32  .mark
      // ---
    // uint32  .u32
      // ---
  // TRLOII_SAMPLER  .ms
    // raw_array_zero_suppress  .sampler(DATA32)[512]
      // ---
    // uint32  .word_num
      // ---
    // uint32  .overflow
      // ---
    // uint32  .dummy_11_15
      // ---
    // uint32  .mark
      // ---
    // uint32  .u32
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// fib1ab_subev  .fib1ab
  //  : public unpack_subevent_base
  // ---
  // fib1a_data  .data
    // GSI_CLOCKTDC_16PH_ITEM  .ctdc[4]
      // DATA32  .event_counter_lo32
        // ---
      // DATA32  .event_counter_hi16
        // ---
      // DATA32  .trigger_coarse_lo22
        // ---
      // DATA32  .trigger_coarse_hi24
        // ---
      // raw_array_multi_zero_suppress  .time_coarse(DATA12)[258][80]
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[258][80]
      // uint32  ._0x34
        // ---
      // uint32  .trigger_type
        // ---
      // uint32  .sfp_id
        // ---
      // uint32  .tdc_id
        // ---
      // uint32  .channel_id
        // ---
      // uint32  .u32
        // ---
      // uint32  .channel_num
        // ---
      // uint32  ._0x34
        // ---
      // uint32  .trigger_type
        // ---
      // uint32  .sfp_id
        // ---
      // uint32  .tdc_id
        // ---
      // uint32  .channel_id
        // ---
      // uint32  .u32
        // ---
      // uint32  .data_byte_num
        // ---
      // uint32  .time_fine
        // ---
      // uint32  .time_coarse
        // ---
      // uint32  .time_coarse_ext
        // ---
      // uint32  .edge
        // ---
      // uint32  .ws
        // ---
      // uint32  .time_coarse_overflow
        // ---
      // uint32  .rb_overflow
        // ---
      // uint32  .dummy
        // ---
      // uint32  .is_data
        // ---
      // uint32  .channel
        // ---
      // uint32  .u32
        // ---
    // TAMEX3_SFP  .tamex[2]
      // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
    // BARRIER  .barrier
      // uint32  .unnamed_0_31
        // ---
      // uint32  .u32
        // ---
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// wr_neuland  .neuland_ts
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// neuland_tamex_subev  .neuland_tamex_1
  //  : public unpack_subevent_base
  // ---
  // neuland_tamex_subev_data  .data
    // TAMEX3_PADDING  .padding0
    // neuland_sfp  .sfp[1]
      // TAMEX3_FH_SFP  .card[35]
        // TAMEX3_FH_DATA  .data
          // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
          // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// neuland_tamex_subev  .neuland_tamex_2
  //  : public unpack_subevent_base
  // ---
  // neuland_tamex_subev_data  .data
    // TAMEX3_PADDING  .padding0
    // neuland_sfp  .sfp[1]
      // TAMEX3_FH_SFP  .card[35]
        // TAMEX3_FH_DATA  .data
          // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
          // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// neuland_tamex_subev  .neuland_tamex_3
  //  : public unpack_subevent_base
  // ---
  // neuland_tamex_subev_data  .data
    // TAMEX3_PADDING  .padding0
    // neuland_sfp  .sfp[1]
      // TAMEX3_FH_SFP  .card[35]
        // TAMEX3_FH_DATA  .data
          // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
          // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// neuland_tamex_subev  .neuland_tamex_4
  //  : public unpack_subevent_base
  // ---
  // neuland_tamex_subev_data  .data
    // TAMEX3_PADDING  .padding0
    // neuland_sfp  .sfp[1]
      // TAMEX3_FH_SFP  .card[35]
        // TAMEX3_FH_DATA  .data
          // raw_array_multi_zero_suppress  .time_coarse(DATA12)[34][256]
          // raw_array_multi_zero_suppress  .time_fine(DATA12)[34][256]
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// CALIFA  .califa
  //  : public unpack_subevent_base
  // ---
  // FEBEX3_CALIFA_BASE  .febex3
    // raw_array_zero_suppress  .energy(DATA16)[2048]
    // raw_array_zero_suppress  .ts_lsb(DATA32)[2048]
      // ---
    // raw_array_zero_suppress  .ts_msb(DATA32)[2048]
      // ---
    // raw_array_zero_suppress  .n_f(DATA16)[2048]
    // raw_array_zero_suppress  .n_s(DATA16)[2048]
  // TIMESTAMP_WHITERABBIT  .ts400
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// ams_wr  .ams_ts
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// ams_siderem1_subev  .ams_siderem_1
  //  : public unpack_subevent_base
  // ---
  // GSI_SAM_PADDING  .padd
  // EXT_SST  .sst[3]
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// ams_siderem2_subev  .ams_siderem_2
  //  : public unpack_subevent_base
  // ---
  // GSI_SAM_PADDING  .padd
  // EXT_SST  .sst[3]
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// sofia_tof_subev  .sofia_tof
  //  : public unpack_subevent_base
  // ---
  // sofia_tof_subev_data  .data
    // VME_GSI_VFTX2_7PS  .vftx2[4]
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
      // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
      // DATA16  .time_trigger
      // uint32  .id
        // ---
      // uint32  .internal_status
        // ---
      // uint32  .count
        // ---
      // uint32  .dummy_18_23
        // ---
      // uint32  .unnamed_24_31
        // ---
      // uint32  .u32
        // ---
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// sofia_mwpc_subev  .sofia_mwpc
  //  : public unpack_subevent_base
  // ---
  // sofia_mwpc_subev_data  .data
    // VME_MESYTEC_VMMR8  .vmmr8
      // raw_array_multi_zero_suppress  .data(DATA12)[512][20]
      // uint32  .counter
        // ---
      // uint32  .unnamed_30_31
        // ---
      // uint32  .u32
        // ---
    // VME_MESYTEC_MADC32  .madc32[2]
      // raw_array_zero_suppress  .data(DATA14_OVERFLOW)[32]
      // uint32  .counter
        // ---
      // uint32  .unnamed_30_31
        // ---
      // uint32  .u32
        // ---
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// sofia_twim_subev  .sofia_twim
  //  : public unpack_subevent_base
  // ---
  // sofia_twim_subev_data  .data
    // VME_MESYTEC_MDPP16  .mdpp16[2]
      // raw_array_multi_zero_suppress  .data(DATA16_OVERFLOW)[34][100]
      // uint32  .counter
        // ---
      // uint32  .unnamed_30_31
        // ---
      // uint32  .u32
        // ---
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// sofia_trim_subev  .sofia_trim
  //  : public unpack_subevent_base
  // ---
  // sofia_trim_subev_data  .data
    // VME_MESYTEC_VMMR8  .vmmr8
      // raw_array_multi_zero_suppress  .data(DATA12)[512][20]
      // uint32  .counter
        // ---
      // uint32  .unnamed_30_31
        // ---
      // uint32  .u32
        // ---
    // VME_MESYTEC_MDPP16  .mdpp
      // raw_array_multi_zero_suppress  .data(DATA16_OVERFLOW)[34][100]
      // uint32  .counter
        // ---
      // uint32  .unnamed_30_31
        // ---
      // uint32  .u32
        // ---
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// fibsipm_subev  .fibsipm
  //  : public unpack_subevent_base
  // ---
  // fibsipm_data  .data
    // GSI_CLOCKTDC_ITEM  .ctdc[4]
      // DATA32  .event_counter_lo32
        // ---
      // DATA32  .event_counter_hi16
        // ---
      // DATA32  .trigger_coarse_lo22
        // ---
      // DATA32  .trigger_coarse_hi24
        // ---
      // raw_array_multi_zero_suppress  .time_coarse(DATA12)[258][80]
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[258][80]
      // uint32  ._0x34
        // ---
      // uint32  .trigger_type
        // ---
      // uint32  .sfp_id
        // ---
      // uint32  .tdc_id
        // ---
      // uint32  .channel_id
        // ---
      // uint32  .u32
        // ---
      // uint32  .channel_num
        // ---
      // uint32  ._0x34
        // ---
      // uint32  .trigger_type
        // ---
      // uint32  .sfp_id
        // ---
      // uint32  .tdc_id
        // ---
      // uint32  .channel_id
        // ---
      // uint32  .u32
        // ---
      // uint32  .data_byte_num
        // ---
      // uint32  .time_fine
        // ---
      // uint32  .time_coarse
        // ---
      // uint32  .time_coarse_ext
        // ---
      // uint32  .edge
        // ---
      // uint32  .ws
        // ---
      // uint32  .time_coarse_overflow
        // ---
      // uint32  .rb_overflow
        // ---
      // uint32  .status
        // ---
      // uint32  .channel
        // ---
      // uint32  .u32
        // ---
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// wr_s2  .s2_ts
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// s2_vme_subev  .s2_vme
  //  : public unpack_subevent_base
  // ---
  // s2_vme_subev_data  .data
    // WR_MULTI  .ts
      // DATA32  .time_hi
        // ---
      // DATA32  .time_lo
        // ---
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
    // VME_GSI_VFTX2_7PS  .vftx21
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
      // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
      // DATA16  .time_trigger
      // uint32  .id
        // ---
      // uint32  .internal_status
        // ---
      // uint32  .count
        // ---
      // uint32  .dummy_18_23
        // ---
      // uint32  .unnamed_24_31
        // ---
      // uint32  .u32
        // ---
    // BARRIER  .b1
      // uint32  .unnamed_0_31
        // ---
      // uint32  .u32
        // ---
    // BARRIER  .b2
      // uint32  .unnamed_0_31
        // ---
      // uint32  .u32
        // ---
    // VME_MESYTEC_MQDC32  .mqdc
      // raw_array_zero_suppress  .data(DATA12_OVERFLOW)[32]
      // uint32  .counter
        // ---
      // uint32  .unnamed_30_31
        // ---
      // uint32  .u32
        // ---
// s8_wr  .s8_ts
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// s8_tpat_subev  .s8_tpat
  //  : public unpack_subevent_base
  // ---
  // TRLOII_TPAT  .tpat
    // DATA32  .n
      // ---
    // raw_list_ii_zero_suppress  .tpat(DATA16)[170]
    // raw_list_ii_zero_suppress  .trig(DATA8)[170]
      // ---
    // raw_list_ii_zero_suppress  .ts_lo(DATA32)[170]
      // ---
    // raw_list_ii_zero_suppress  .ts_hi(DATA32)[170]
      // ---
  // LAND_STD_VME  .land_vme
    // uint32  .fail_general
      // ---
    // uint32  .fail_data_corrupt
      // ---
    // uint32  .fail_data_missing
      // ---
    // uint32  .fail_data_too_much
      // ---
    // uint32  .fail_event_counter_mismatch
      // ---
    // uint32  .fail_readout_error_driver
      // ---
    // uint32  .fail_unexpected_trigger
      // ---
    // uint32  .fail_firmware_mismatch
      // ---
    // uint32  .dummy_8_21
      // ---
    // uint32  .has_multi_trlo_ii_counter0
      // ---
    // uint32  .has_clock_counter_stamp
      // ---
    // uint32  .has_continous_event_counter
      // ---
    // uint32  .has_update_qdc_iped_value
      // ---
    // uint32  .spurious_start_before_tcal
      // ---
    // uint32  .has_no_zero_suppression
      // ---
    // uint32  .has_multi_adctdc_counter0
      // ---
    // uint32  .has_multi_scaler_counter0
      // ---
    // uint32  .has_multi_event
      // ---
    // uint32  .has_time_stamp
      // ---
    // uint32  .u32
      // ---
    // uint32  .continous_event_counter
      // ---
    // uint32  .time_stamp
      // ---
    // uint32  .clock_counter_stamp
      // ---
    // uint32  .iped
      // ---
    // uint32  .multi_events
      // ---
    // uint32  .multi_trlo_ii_counter0
      // ---
    // uint32  .multi_scaler_counter0
      // ---
    // uint32  .multi_adctdc_counter0
      // ---
// s8_vme_subev  .s8_vme
  //  : public unpack_subevent_base
  // ---
  // s8_vme_subev_data  .data
    // VME_GSI_VFTX2_7PS  .vftx21
      // raw_array_multi_zero_suppress  .time_fine(DATA12)[32][32]
      // raw_array_multi_zero_suppress  .time_coarse(DATA16)[32][32]
      // DATA16  .time_trigger
      // uint32  .id
        // ---
      // uint32  .internal_status
        // ---
      // uint32  .count
        // ---
      // uint32  .dummy_18_23
        // ---
      // uint32  .unnamed_24_31
        // ---
      // uint32  .u32
        // ---
    // LAND_STD_VME  .land_vme
      // uint32  .fail_general
        // ---
      // uint32  .fail_data_corrupt
        // ---
      // uint32  .fail_data_missing
        // ---
      // uint32  .fail_data_too_much
        // ---
      // uint32  .fail_event_counter_mismatch
        // ---
      // uint32  .fail_readout_error_driver
        // ---
      // uint32  .fail_unexpected_trigger
        // ---
      // uint32  .fail_firmware_mismatch
        // ---
      // uint32  .dummy_8_21
        // ---
      // uint32  .has_multi_trlo_ii_counter0
        // ---
      // uint32  .has_clock_counter_stamp
        // ---
      // uint32  .has_continous_event_counter
        // ---
      // uint32  .has_update_qdc_iped_value
        // ---
      // uint32  .spurious_start_before_tcal
        // ---
      // uint32  .has_no_zero_suppression
        // ---
      // uint32  .has_multi_adctdc_counter0
        // ---
      // uint32  .has_multi_scaler_counter0
        // ---
      // uint32  .has_multi_event
        // ---
      // uint32  .has_time_stamp
        // ---
      // uint32  .u32
        // ---
      // uint32  .continous_event_counter
        // ---
      // uint32  .time_stamp
        // ---
      // uint32  .clock_counter_stamp
        // ---
      // uint32  .iped
        // ---
      // uint32  .multi_events
        // ---
      // uint32  .multi_trlo_ii_counter0
        // ---
      // uint32  .multi_scaler_counter0
        // ---
      // uint32  .multi_adctdc_counter0
        // ---
// DATA12 .los_ts.ts.subsystem_id
// DATA16 .los_ts.ts.t1
// DATA16 .los_ts.ts.t2
// DATA16 .los_ts.ts.t3
// DATA16 .los_ts.ts.t4
// DATA12 .los_vme.data.vftx21.time_fine[32][32]
// DATA16 .los_vme.data.vftx21.time_coarse[32][32]
// DATA16 .los_vme.data.vftx21.time_trigger
// DATA16 .los_vme.data.mtdc32.data[34]
// DATA12 .los_vme.data.vftx22.time_fine[32][32]
// DATA16 .los_vme.data.vftx22.time_coarse[32][32]
// DATA16 .los_vme.data.vftx22.time_trigger
// DATA12 .los_tamex.data.tamex.time_coarse[34][256]
// DATA12 .los_tamex.data.tamex.time_fine[34][256]
// DATA12 .fib1ab.data.ctdc[4].time_coarse[258][80]
// DATA12 .fib1ab.data.ctdc[4].time_fine[258][80]
// DATA12 .fib1ab.data.tamex[2].time_coarse[34][256]
// DATA12 .fib1ab.data.tamex[2].time_fine[34][256]
// DATA12 .neuland_ts.ts.subsystem_id
// DATA16 .neuland_ts.ts.t1
// DATA16 .neuland_ts.ts.t2
// DATA16 .neuland_ts.ts.t3
// DATA16 .neuland_ts.ts.t4
// DATA12 .neuland_tamex_1.data.sfp[1].card[35].data.time_coarse[34][256]
// DATA12 .neuland_tamex_1.data.sfp[1].card[35].data.time_fine[34][256]
// DATA12 .neuland_tamex_2.data.sfp[1].card[35].data.time_coarse[34][256]
// DATA12 .neuland_tamex_2.data.sfp[1].card[35].data.time_fine[34][256]
// DATA12 .neuland_tamex_3.data.sfp[1].card[35].data.time_coarse[34][256]
// DATA12 .neuland_tamex_3.data.sfp[1].card[35].data.time_fine[34][256]
// DATA12 .neuland_tamex_4.data.sfp[1].card[35].data.time_coarse[34][256]
// DATA12 .neuland_tamex_4.data.sfp[1].card[35].data.time_fine[34][256]
// DATA16 .califa.febex3.energy[2048]
// DATA16 .califa.febex3.n_f[2048]
// DATA16 .califa.febex3.n_s[2048]
// DATA12 .califa.ts400.subsystem_id
// DATA16 .califa.ts400.t1
// DATA16 .califa.ts400.t2
// DATA16 .califa.ts400.t3
// DATA16 .califa.ts400.t4
// DATA12 .ams_ts.ts.subsystem_id
// DATA16 .ams_ts.ts.t1
// DATA16 .ams_ts.ts.t2
// DATA16 .ams_ts.ts.t3
// DATA16 .ams_ts.ts.t4
// DATA12 .sofia_tof.data.vftx2[4].time_fine[32][32]
// DATA16 .sofia_tof.data.vftx2[4].time_coarse[32][32]
// DATA16 .sofia_tof.data.vftx2[4].time_trigger
// DATA12 .sofia_mwpc.data.vmmr8.data[512][20]
// DATA14_OVERFLOW .sofia_mwpc.data.madc32[2].data[32]
// DATA16_OVERFLOW .sofia_twim.data.mdpp16[2].data[34][100]
// DATA12 .sofia_trim.data.vmmr8.data[512][20]
// DATA16_OVERFLOW .sofia_trim.data.mdpp.data[34][100]
// DATA12 .fibsipm.data.ctdc[4].time_coarse[258][80]
// DATA12 .fibsipm.data.ctdc[4].time_fine[258][80]
// DATA12 .s2_ts.ts.subsystem_id
// DATA16 .s2_ts.ts.t1
// DATA16 .s2_ts.ts.t2
// DATA16 .s2_ts.ts.t3
// DATA16 .s2_ts.ts.t4
// DATA12 .s2_vme.data.vftx21.time_fine[32][32]
// DATA16 .s2_vme.data.vftx21.time_coarse[32][32]
// DATA16 .s2_vme.data.vftx21.time_trigger
// DATA12_OVERFLOW .s2_vme.data.mqdc.data[32]
// DATA12 .s8_ts.ts.subsystem_id
// DATA16 .s8_ts.ts.t1
// DATA16 .s8_ts.ts.t2
// DATA16 .s8_ts.ts.t3
// DATA16 .s8_ts.ts.t4
// DATA16 .s8_tpat.tpat.tpat[170]
// DATA12 .s8_vme.data.vftx21.time_fine[32][32]
// DATA16 .s8_vme.data.vftx21.time_coarse[32][32]
// DATA16 .s8_vme.data.vftx21.time_trigger
// 
// size= 1  chunks=2873130  mem=2873130  line=5746260  total=-102292024
// size= 5  chunks=2873106  mem=14365530  line=17238636  total=-720606792
// size=20  chunks=2853650  mem=57073000  line=59926650  total=406952452
// size=32  chunks=2837685  mem=90805920  line=93643605  total=614510322
// size=34  chunks=2837652  mem=96480168  line=99317820  total=-324002344
// size=64  chunks=2837651  mem=181609664  line=184447315  total=-2015605602
// size=80  chunks=2511539  mem=200923120  line=203434659  total=712434622
// size=100  chunks=2501441  mem=250144100  line=252645541  total=-349549038
// size=170  chunks=2501272  mem=425216240  line=427717512  total=-912380848
// size=256  chunks=21652  mem=5542912  line=5564564  total=1847489608
// size=1024  chunks=21156  mem=21663744  line=21684900  total=741141224
// size=2048  chunks=15015  mem=30750720  line=30765735  total=-765718426
// size=2049  chunks=14999  mem=30732951  line=30747950  total=-324727924
// size=2081  chunks=14998  mem=31210838  line=31225836  total=-1685659464
// size=3400  chunks=14899  mem=50656600  line=50671499  total=-702510642
// size=4132  chunks=14897  mem=61554404  line=61569301  total=-212238222
// size=6144  chunks=14895  mem=91514880  line=91529775  total=389878966
// size=6149  chunks=14894  mem=91583206  line=91598100  total=-872009400
// size=6800  chunks=14893  mem=101272400  line=101287293  total=1756029314
// size=8196  chunks=14890  mem=122038440  line=122053330  total=-405760908
// size=8704  chunks=5452  mem=47454208  line=47459660  total=1151222392
// size=10240  chunks=4430  mem=45363200  line=45367630  total=-863684404
// size=10304  chunks=4429  mem=45636416  line=45640845  total=-1860486622
// size=13640  chunks=4428  mem=60397920  line=60402348  total=1349547064
// size=17408  chunks=4285  mem=74593280  line=74597565  total=1043923458
// size=20640  chunks=173  mem=3570720  line=3570893  total=-1037065054
// size=34816  chunks=172  mem=5988352  line=5988524  total=168972344
// size=41280  chunks=164  mem=6769920  line=6770084  total=-575440664
// size=165120  chunks=158  mem=26088960  line=26089118  total=1658349548
// size=199936  chunks=157  mem=31389952  line=31390109  total=2140589762
// size=609280  chunks= 21  mem=12794880  line=12794901  total=788823666
// size=2873130  chunks=  1  mem=2873130  line=2873131  total=-48272882
// 
// corr structure: unpack_event
  // DATA12 .los_ts.ts.subsystem_id
  // DATA16 .los_ts.ts.t1
  // DATA16 .los_ts.ts.t2
  // DATA16 .los_ts.ts.t3
  // DATA16 .los_ts.ts.t4
  // DATA12 .los_vme.data.vftx21.time_fine[32][32]
  // DATA16 .los_vme.data.vftx21.time_coarse[32][32]
  // DATA16 .los_vme.data.vftx21.time_trigger
  // DATA16 .los_vme.data.mtdc32.data[34]
  // DATA12 .los_vme.data.vftx22.time_fine[32][32]
  // DATA16 .los_vme.data.vftx22.time_coarse[32][32]
  // DATA16 .los_vme.data.vftx22.time_trigger
  // DATA12 .los_tamex.data.tamex.time_coarse[34][256]
  // DATA12 .los_tamex.data.tamex.time_fine[34][256]
  // DATA12 .fib1ab.data.ctdc[4].time_coarse[258][80]
  // DATA12 .fib1ab.data.ctdc[4].time_fine[258][80]
  // DATA12 .fib1ab.data.tamex[2].time_coarse[34][256]
  // DATA12 .fib1ab.data.tamex[2].time_fine[34][256]
  // DATA12 .neuland_ts.ts.subsystem_id
  // DATA16 .neuland_ts.ts.t1
  // DATA16 .neuland_ts.ts.t2
  // DATA16 .neuland_ts.ts.t3
  // DATA16 .neuland_ts.ts.t4
  // DATA12 .neuland_tamex_1.data.sfp[1].card[35].data.time_coarse[34][256]
  // DATA12 .neuland_tamex_1.data.sfp[1].card[35].data.time_fine[34][256]
  // DATA12 .neuland_tamex_2.data.sfp[1].card[35].data.time_coarse[34][256]
  // DATA12 .neuland_tamex_2.data.sfp[1].card[35].data.time_fine[34][256]
  // DATA12 .neuland_tamex_3.data.sfp[1].card[35].data.time_coarse[34][256]
  // DATA12 .neuland_tamex_3.data.sfp[1].card[35].data.time_fine[34][256]
  // DATA12 .neuland_tamex_4.data.sfp[1].card[35].data.time_coarse[34][256]
  // DATA12 .neuland_tamex_4.data.sfp[1].card[35].data.time_fine[34][256]
  // DATA16 .califa.febex3.energy[2048]
  // DATA16 .califa.febex3.n_f[2048]
  // DATA16 .califa.febex3.n_s[2048]
  // DATA12 .califa.ts400.subsystem_id
  // DATA16 .califa.ts400.t1
  // DATA16 .califa.ts400.t2
  // DATA16 .califa.ts400.t3
  // DATA16 .califa.ts400.t4
  // DATA12 .ams_ts.ts.subsystem_id
  // DATA16 .ams_ts.ts.t1
  // DATA16 .ams_ts.ts.t2
  // DATA16 .ams_ts.ts.t3
  // DATA16 .ams_ts.ts.t4
  // DATA12 .sofia_tof.data.vftx2[4].time_fine[32][32]
  // DATA16 .sofia_tof.data.vftx2[4].time_coarse[32][32]
  // DATA16 .sofia_tof.data.vftx2[4].time_trigger
  // DATA12 .sofia_mwpc.data.vmmr8.data[512][20]
  // DATA14_OVERFLOW .sofia_mwpc.data.madc32[2].data[32]
  // DATA16_OVERFLOW .sofia_twim.data.mdpp16[2].data[34][100]
  // DATA12 .sofia_trim.data.vmmr8.data[512][20]
  // DATA16_OVERFLOW .sofia_trim.data.mdpp.data[34][100]
  // DATA12 .fibsipm.data.ctdc[4].time_coarse[258][80]
  // DATA12 .fibsipm.data.ctdc[4].time_fine[258][80]
  // DATA12 .s2_ts.ts.subsystem_id
  // DATA16 .s2_ts.ts.t1
  // DATA16 .s2_ts.ts.t2
  // DATA16 .s2_ts.ts.t3
  // DATA16 .s2_ts.ts.t4
  // DATA12 .s2_vme.data.vftx21.time_fine[32][32]
  // DATA16 .s2_vme.data.vftx21.time_coarse[32][32]
  // DATA16 .s2_vme.data.vftx21.time_trigger
  // DATA12_OVERFLOW .s2_vme.data.mqdc.data[32]
  // DATA12 .s8_ts.ts.subsystem_id
  // DATA16 .s8_ts.ts.t1
  // DATA16 .s8_ts.ts.t2
  // DATA16 .s8_ts.ts.t3
  // DATA16 .s8_ts.ts.t4
  // DATA16 .s8_tpat.tpat.tpat[170]
  // DATA12 .s8_vme.data.vftx21.time_fine[32][32]
  // DATA16 .s8_vme.data.vftx21.time_coarse[32][32]
  // DATA16 .s8_vme.data.vftx21.time_trigger
// .unpack_event/2873130/.los_ts/5/.ts/5/.subsystem_id
                                      // .t1
                                      // .t2
                                      // .t3
                                      // .t4
                      // .los_vme/4132/.data/4132/.vftx21/2049/.time_fine/1024/[32]/32/[32]
                                                            // .time_coarse/1024/[32]/32/[32]
                                                            // .time_trigger
                                               // .mtdc32/34/.data/34/[34]
                                               // .vftx22/2049/.time_fine/1024/[32]/32/[32]
                                                            // .time_coarse/1024/[32]/32/[32]
                                                            // .time_trigger
                      // .los_tamex/17408/.data/17408/.tamex/17408/.time_coarse/8704/[34]/256/[256]
                                                                // .time_fine/8704/[34]/256/[256]
                      // .fib1ab/199936/.data/199936/.ctdc/165120/[4]/41280/.time_coarse/20640/[258]/80/[80]
                                                                         // .time_fine/20640/[258]/80/[80]
                                                  // .tamex/34816/[2]/17408/.time_coarse/8704/[34]/256/[256]
                                                                         // .time_fine/8704/[34]/256/[256]
                      // .neuland_ts/5/.ts/5/.subsystem_id
                                          // .t1
                                          // .t2
                                          // .t3
                                          // .t4
                      // .neuland_tamex_1/609280/.data/609280/.sfp/609280/[1]/609280/.card/609280/[35]/17408/.data/17408/.time_coarse/8704/[34]/256/[256]
                                                                                                                      // .time_fine/8704/[34]/256/[256]
                      // .neuland_tamex_2/609280/.data/609280/.sfp/609280/[1]/609280/.card/609280/[35]/17408/.data/17408/.time_coarse/8704/[34]/256/[256]
                                                                                                                      // .time_fine/8704/[34]/256/[256]
                      // .neuland_tamex_3/609280/.data/609280/.sfp/609280/[1]/609280/.card/609280/[35]/17408/.data/17408/.time_coarse/8704/[34]/256/[256]
                                                                                                                      // .time_fine/8704/[34]/256/[256]
                      // .neuland_tamex_4/609280/.data/609280/.sfp/609280/[1]/609280/.card/609280/[35]/17408/.data/17408/.time_coarse/8704/[34]/256/[256]
                                                                                                                      // .time_fine/8704/[34]/256/[256]
                      // .califa/6149/.febex3/6144/.energy/2048/[2048]
                                                // .n_f/2048/[2048]
                                                // .n_s/2048/[2048]
                                   // .ts400/5/.subsystem_id
                                            // .t1
                                            // .t2
                                            // .t3
                                            // .t4
                      // .ams_ts/5/.ts/5/.subsystem_id
                                      // .t1
                                      // .t2
                                      // .t3
                                      // .t4
                      // .sofia_tof/8196/.data/8196/.vftx2/8196/[4]/2049/.time_fine/1024/[32]/32/[32]
                                                                      // .time_coarse/1024/[32]/32/[32]
                                                                      // .time_trigger
                      // .sofia_mwpc/10304/.data/10304/.vmmr8/10240/.data/10240/[512]/20/[20]
                                                    // .madc32/64/[2]/32/.data/32/[32]
                      // .sofia_twim/6800/.data/6800/.mdpp16/6800/[2]/3400/.data/3400/[34]/100/[100]
                      // .sofia_trim/13640/.data/13640/.vmmr8/10240/.data/10240/[512]/20/[20]
                                                    // .mdpp/3400/.data/3400/[34]/100/[100]
                      // .fibsipm/165120/.data/165120/.ctdc/165120/[4]/41280/.time_coarse/20640/[258]/80/[80]
                                                                          // .time_fine/20640/[258]/80/[80]
                      // .s2_ts/5/.ts/5/.subsystem_id
                                     // .t1
                                     // .t2
                                     // .t3
                                     // .t4
                      // .s2_vme/2081/.data/2081/.vftx21/2049/.time_fine/1024/[32]/32/[32]
                                                           // .time_coarse/1024/[32]/32/[32]
                                                           // .time_trigger
                                              // .mqdc/32/.data/32/[32]
                      // .s8_ts/5/.ts/5/.subsystem_id
                                     // .t1
                                     // .t2
                                     // .t3
                                     // .t4
                      // .s8_tpat/170/.tpat/170/.tpat/170/[170]
                      // .s8_vme/2049/.data/2049/.vftx21/2049/.time_fine/1024/[32]/32/[32]
                                                           // .time_coarse/1024/[32]/32/[32]
                                                           // .time_trigger// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event
// Corr struct for: unpack_sticky_event
//  : public unpack_sticky_event_base
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event

/** END_CORR_STRUCT ***************************************************/

