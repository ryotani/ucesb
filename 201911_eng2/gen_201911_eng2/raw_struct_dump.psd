
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

class raw_event_TIMESTAMP_LOS_WR
{
  DATA16 T[4];
} ;
class raw_event_TIMESTAMP_LOS
{
  DATA12 ID;
  raw_event_TIMESTAMP_LOS_WR WR;
} ;
class raw_event_TIMESTAMP_SCITWO_WR
{
  DATA16 T[4];
} ;
class raw_event_TIMESTAMP_SCITWO
{
  DATA12 ID;
  raw_event_TIMESTAMP_SCITWO_WR WR;
} ;
class raw_event_TIMESTAMP_SCIEIGHT_WR
{
  DATA16 T[4];
} ;
class raw_event_TIMESTAMP_SCIEIGHT
{
  DATA12 ID;
  raw_event_TIMESTAMP_SCIEIGHT_WR WR;
} ;
class raw_event_TIMESTAMP
{
  raw_event_TIMESTAMP_LOS LOS;
  raw_event_TIMESTAMP_SCITWO SCITWO;
  raw_event_TIMESTAMP_SCIEIGHT SCIEIGHT;
} ;
class raw_event_LOS
{
  raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
  raw_array_multi_zero_suppress<DATA16,DATA16,8,32> MT;
  raw_array_multi_zero_suppress<DATA12,DATA12,8,32> TTFL;
  raw_array_multi_zero_suppress<DATA12,DATA12,8,32> TTFT;
  raw_array_multi_zero_suppress<DATA12,DATA12,8,32> TTCL;
  raw_array_multi_zero_suppress<DATA12,DATA12,8,32> TTCT;
} ;
class raw_event_SCITWO
{
  raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
} ;
class raw_event_SCIEIGHT
{
  raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
} ;
class raw_event_FIBONEA
{
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMLC;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMLF;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMTC;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMTF;
  raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSLC;
  raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSLF;
  raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSTC;
  raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSTF;
} ;
class raw_event_FIBONEB
{
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMLC;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMLF;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMTC;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMTF;
  raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSLC;
  raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSLF;
  raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSTC;
  raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSTF;
} ;
class raw_event_SFIB
{
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TTLC;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> BTLC;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TTLF;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> BTLF;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TTTC;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> BTTC;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TTTF;
  raw_array_multi_zero_suppress<DATA12,DATA12,256,64> BTTF;
} ;
class raw_event_NN_WR
{
  DATA12 ID;
  DATA16 T[4];
} ;
class raw_event_NN_P_tcl_T
{
  raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
} ;
class raw_event_NN_P_tcl
{
  raw_event_NN_P_tcl_T T[2];
} ;
class raw_event_NN_P_tfl_T
{
  raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
} ;
class raw_event_NN_P_tfl
{
  raw_event_NN_P_tfl_T T[2];
} ;
class raw_event_NN_P_tct_T
{
  raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
} ;
class raw_event_NN_P_tct
{
  raw_event_NN_P_tct_T T[2];
} ;
class raw_event_NN_P_tft_T
{
  raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
} ;
class raw_event_NN_P_tft
{
  raw_event_NN_P_tft_T T[2];
} ;
class raw_event_NN_P
{
  raw_event_NN_P_tcl tcl;
  raw_event_NN_P_tfl tfl;
  raw_event_NN_P_tct tct;
  raw_event_NN_P_tft tft;
} ;
class raw_event_NN
{
  raw_event_NN_WR WR;
  raw_event_NN_P P[16];
} ;
class raw_event_MUSIC
{
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,8,10> E;
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,8,10> T;
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,10> TREF;
} ;
class raw_event_SOFSCI
{
  raw_array_multi_zero_suppress<DATA12,DATA12,3,10> TF;
  raw_array_multi_zero_suppress<DATA16,DATA16,3,10> TC;
} ;
class raw_event_SOFTWIM_S
{
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,16,10> E;
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,16,10> T;
  raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,10> TREF;
} ;
class raw_event_SOFTWIM
{
  raw_event_SOFTWIM_S S[1];
} ;
class raw_event_SOFTOFW_P
{
  raw_array_multi_zero_suppress<DATA12,DATA12,2,10> TF;
  raw_array_multi_zero_suppress<DATA16,DATA16,2,10> TC;
  DATA14 E[2];
} ;
class raw_event_SOFTOFW
{
  raw_event_SOFTOFW_P P[28];
} ;
class raw_event_SOFMWPC_Plane
{
  raw_array_zero_suppress<DATA12,DATA12,288> Q;
} ;
class raw_event_SOFMWPC
{
  raw_event_SOFMWPC_Plane Plane[3];
} ;
class raw_event_SST
{
  DATA12 E;
} ;
class raw_event_CALIFA
{
  raw_array_zero_suppress<DATA16,DATA16,2048> ENE;
  raw_array_zero_suppress<DATA32,DATA32,2048> TSLSB;
  raw_array_zero_suppress<DATA32,DATA32,2048> TSMSB;
  raw_array_zero_suppress<DATA16,DATA16,2048> NF;
  raw_array_zero_suppress<DATA16,DATA16,2048> NS;
} ;
class raw_event : public raw_event_base
{
  raw_event_TIMESTAMP TIMESTAMP;
  raw_event_LOS LOS[2];
  raw_event_SCITWO SCITWO;
  raw_event_SCIEIGHT SCIEIGHT;
  raw_event_FIBONEA FIBONEA;
  raw_event_FIBONEB FIBONEB;
  raw_event_SFIB SFIB;
  raw_event_NN NN;
  raw_array_zero_suppress<DATA32,DATA32,512> SAMP;
  raw_event_MUSIC MUSIC;
  raw_event_SOFSCI SOFSCI[1];
  raw_event_SOFTWIM SOFTWIM;
  raw_event_SOFTOFW SOFTOFW;
  raw_event_SOFMWPC SOFMWPC[4];
  raw_array_zero_suppress<raw_event_SST,raw_event_SST,1024> SST[6];
  raw_event_CALIFA CALIFA;
} ;
class raw_sticky : public raw_sticky_base
{
  ;
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_raw_event_TIMESTAMP_LOS_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_LOS_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_LOS_WR);
};
#endif//USER_DEF_raw_event_TIMESTAMP_LOS_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_LOS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_LOS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_LOS_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_LOS);
};
#endif//USER_DEF_raw_event_TIMESTAMP_LOS

#ifndef USER_DEF_raw_event_TIMESTAMP_SCITWO_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCITWO_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SCITWO_WR);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SCITWO_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SCITWO
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCITWO)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SCITWO_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SCITWO);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SCITWO

#ifndef USER_DEF_raw_event_TIMESTAMP_SCIEIGHT_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCIEIGHT_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SCIEIGHT_WR);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SCIEIGHT_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SCIEIGHT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCIEIGHT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SCIEIGHT_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP_SCIEIGHT);
};
#endif//USER_DEF_raw_event_TIMESTAMP_SCIEIGHT

#ifndef USER_DEF_raw_event_TIMESTAMP
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(LOS);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_LOS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(LOS);
  STRUCT_MIRROR_ITEM_CTRL(SCITWO);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SCITWO) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SCITWO);
  STRUCT_MIRROR_ITEM_CTRL(SCIEIGHT);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP_SCIEIGHT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SCIEIGHT);
  STRUCT_MIRROR_FCNS_DECL(raw_event_TIMESTAMP);
};
#endif//USER_DEF_raw_event_TIMESTAMP

#ifndef USER_DEF_raw_event_LOS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_LOS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(VTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),8,32> STRUCT_MIRROR_NAME(VTF);
  STRUCT_MIRROR_ITEM_CTRL(VTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),8,32> STRUCT_MIRROR_NAME(VTC);
  STRUCT_MIRROR_ITEM_CTRL(MT);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),8,32> STRUCT_MIRROR_NAME(MT);
  STRUCT_MIRROR_ITEM_CTRL(TTFL);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),8,32> STRUCT_MIRROR_NAME(TTFL);
  STRUCT_MIRROR_ITEM_CTRL(TTFT);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),8,32> STRUCT_MIRROR_NAME(TTFT);
  STRUCT_MIRROR_ITEM_CTRL(TTCL);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),8,32> STRUCT_MIRROR_NAME(TTCL);
  STRUCT_MIRROR_ITEM_CTRL(TTCT);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),8,32> STRUCT_MIRROR_NAME(TTCT);
  STRUCT_MIRROR_FCNS_DECL(raw_event_LOS);
};
#endif//USER_DEF_raw_event_LOS

#ifndef USER_DEF_raw_event_SCITWO
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SCITWO)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(VTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),8,32> STRUCT_MIRROR_NAME(VTF);
  STRUCT_MIRROR_ITEM_CTRL(VTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),8,32> STRUCT_MIRROR_NAME(VTC);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SCITWO);
};
#endif//USER_DEF_raw_event_SCITWO

#ifndef USER_DEF_raw_event_SCIEIGHT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SCIEIGHT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(VTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),8,32> STRUCT_MIRROR_NAME(VTF);
  STRUCT_MIRROR_ITEM_CTRL(VTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),8,32> STRUCT_MIRROR_NAME(VTC);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SCIEIGHT);
};
#endif//USER_DEF_raw_event_SCIEIGHT

#ifndef USER_DEF_raw_event_FIBONEA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_FIBONEA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(TMLC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TMLC);
  STRUCT_MIRROR_ITEM_CTRL(TMLF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TMLF);
  STRUCT_MIRROR_ITEM_CTRL(TMTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TMTC);
  STRUCT_MIRROR_ITEM_CTRL(TMTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TMTF);
  STRUCT_MIRROR_ITEM_CTRL(TSLC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1,64> STRUCT_MIRROR_NAME(TSLC);
  STRUCT_MIRROR_ITEM_CTRL(TSLF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1,64> STRUCT_MIRROR_NAME(TSLF);
  STRUCT_MIRROR_ITEM_CTRL(TSTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1,64> STRUCT_MIRROR_NAME(TSTC);
  STRUCT_MIRROR_ITEM_CTRL(TSTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1,64> STRUCT_MIRROR_NAME(TSTF);
  STRUCT_MIRROR_FCNS_DECL(raw_event_FIBONEA);
};
#endif//USER_DEF_raw_event_FIBONEA

#ifndef USER_DEF_raw_event_FIBONEB
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_FIBONEB)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(TMLC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TMLC);
  STRUCT_MIRROR_ITEM_CTRL(TMLF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TMLF);
  STRUCT_MIRROR_ITEM_CTRL(TMTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TMTC);
  STRUCT_MIRROR_ITEM_CTRL(TMTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TMTF);
  STRUCT_MIRROR_ITEM_CTRL(TSLC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1,64> STRUCT_MIRROR_NAME(TSLC);
  STRUCT_MIRROR_ITEM_CTRL(TSLF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1,64> STRUCT_MIRROR_NAME(TSLF);
  STRUCT_MIRROR_ITEM_CTRL(TSTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1,64> STRUCT_MIRROR_NAME(TSTC);
  STRUCT_MIRROR_ITEM_CTRL(TSTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1,64> STRUCT_MIRROR_NAME(TSTF);
  STRUCT_MIRROR_FCNS_DECL(raw_event_FIBONEB);
};
#endif//USER_DEF_raw_event_FIBONEB

#ifndef USER_DEF_raw_event_SFIB
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SFIB)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(TTLC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TTLC);
  STRUCT_MIRROR_ITEM_CTRL(BTLC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(BTLC);
  STRUCT_MIRROR_ITEM_CTRL(TTLF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TTLF);
  STRUCT_MIRROR_ITEM_CTRL(BTLF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(BTLF);
  STRUCT_MIRROR_ITEM_CTRL(TTTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TTTC);
  STRUCT_MIRROR_ITEM_CTRL(BTTC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(BTTC);
  STRUCT_MIRROR_ITEM_CTRL(TTTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(TTTF);
  STRUCT_MIRROR_ITEM_CTRL(BTTF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),256,64> STRUCT_MIRROR_NAME(BTTF);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SFIB);
};
#endif//USER_DEF_raw_event_SFIB

#ifndef USER_DEF_raw_event_NN_WR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_WR)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ID);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ID);
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[4]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_WR);
};
#endif//USER_DEF_raw_event_NN_WR

#ifndef USER_DEF_raw_event_NN_P_tcl_T
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tcl_T)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(B);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),50,200> STRUCT_MIRROR_NAME(B);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tcl_T);
};
#endif//USER_DEF_raw_event_NN_P_tcl_T

#ifndef USER_DEF_raw_event_NN_P_tcl
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tcl)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tcl_T) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tcl);
};
#endif//USER_DEF_raw_event_NN_P_tcl

#ifndef USER_DEF_raw_event_NN_P_tfl_T
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tfl_T)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(B);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),50,200> STRUCT_MIRROR_NAME(B);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tfl_T);
};
#endif//USER_DEF_raw_event_NN_P_tfl_T

#ifndef USER_DEF_raw_event_NN_P_tfl
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tfl)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tfl_T) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tfl);
};
#endif//USER_DEF_raw_event_NN_P_tfl

#ifndef USER_DEF_raw_event_NN_P_tct_T
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tct_T)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(B);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),50,200> STRUCT_MIRROR_NAME(B);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tct_T);
};
#endif//USER_DEF_raw_event_NN_P_tct_T

#ifndef USER_DEF_raw_event_NN_P_tct
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tct)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tct_T) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tct);
};
#endif//USER_DEF_raw_event_NN_P_tct

#ifndef USER_DEF_raw_event_NN_P_tft_T
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tft_T)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(B);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),50,200> STRUCT_MIRROR_NAME(B);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tft_T);
};
#endif//USER_DEF_raw_event_NN_P_tft_T

#ifndef USER_DEF_raw_event_NN_P_tft
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P_tft)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(T__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tft_T) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(T[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P_tft);
};
#endif//USER_DEF_raw_event_NN_P_tft

#ifndef USER_DEF_raw_event_NN_P
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN_P)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(tcl);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tcl) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tcl);
  STRUCT_MIRROR_ITEM_CTRL(tfl);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tfl) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tfl);
  STRUCT_MIRROR_ITEM_CTRL(tct);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tct) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tct);
  STRUCT_MIRROR_ITEM_CTRL(tft);
  STRUCT_MIRROR_TYPE(raw_event_NN_P_tft) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tft);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN_P);
};
#endif//USER_DEF_raw_event_NN_P

#ifndef USER_DEF_raw_event_NN
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_NN)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(WR);
  STRUCT_MIRROR_TYPE(raw_event_NN_WR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(WR);
  STRUCT_MIRROR_ITEM_CTRL(P);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(P__i0,,16);
  STRUCT_MIRROR_TYPE(raw_event_NN_P) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(P[16]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_NN);
};
#endif//USER_DEF_raw_event_NN

#ifndef USER_DEF_raw_event_MUSIC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_MUSIC)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(E);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),8,10> STRUCT_MIRROR_NAME(E);
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),8,10> STRUCT_MIRROR_NAME(T);
  STRUCT_MIRROR_ITEM_CTRL(TREF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),2,10> STRUCT_MIRROR_NAME(TREF);
  STRUCT_MIRROR_FCNS_DECL(raw_event_MUSIC);
};
#endif//USER_DEF_raw_event_MUSIC

#ifndef USER_DEF_raw_event_SOFSCI
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFSCI)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(TF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),3,10> STRUCT_MIRROR_NAME(TF);
  STRUCT_MIRROR_ITEM_CTRL(TC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),3,10> STRUCT_MIRROR_NAME(TC);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFSCI);
};
#endif//USER_DEF_raw_event_SOFSCI

#ifndef USER_DEF_raw_event_SOFTWIM_S
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFTWIM_S)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(E);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),16,10> STRUCT_MIRROR_NAME(E);
  STRUCT_MIRROR_ITEM_CTRL(T);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),16,10> STRUCT_MIRROR_NAME(T);
  STRUCT_MIRROR_ITEM_CTRL(TREF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),STRUCT_MIRROR_TEMPLATE_ARG(DATA16_OVERFLOW),2,10> STRUCT_MIRROR_NAME(TREF);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFTWIM_S);
};
#endif//USER_DEF_raw_event_SOFTWIM_S

#ifndef USER_DEF_raw_event_SOFTWIM
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFTWIM)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(S);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(S__i0,,1);
  STRUCT_MIRROR_TYPE(raw_event_SOFTWIM_S) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(S[1]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFTWIM);
};
#endif//USER_DEF_raw_event_SOFTWIM

#ifndef USER_DEF_raw_event_SOFTOFW_P
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFTOFW_P)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(TF);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),2,10> STRUCT_MIRROR_NAME(TF);
  STRUCT_MIRROR_ITEM_CTRL(TC);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),2,10> STRUCT_MIRROR_NAME(TC);
  STRUCT_MIRROR_ITEM_CTRL(E);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(E__i0,,2);
  STRUCT_MIRROR_TYPE(DATA14) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(E[2]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFTOFW_P);
};
#endif//USER_DEF_raw_event_SOFTOFW_P

#ifndef USER_DEF_raw_event_SOFTOFW
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFTOFW)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(P);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(P__i0,,28);
  STRUCT_MIRROR_TYPE(raw_event_SOFTOFW_P) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(P[28]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFTOFW);
};
#endif//USER_DEF_raw_event_SOFTOFW

#ifndef USER_DEF_raw_event_SOFMWPC_Plane
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFMWPC_Plane)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(Q);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),288> STRUCT_MIRROR_NAME(Q);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFMWPC_Plane);
};
#endif//USER_DEF_raw_event_SOFMWPC_Plane

#ifndef USER_DEF_raw_event_SOFMWPC
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SOFMWPC)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(Plane);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(Plane__i0,,3);
  STRUCT_MIRROR_TYPE(raw_event_SOFMWPC_Plane) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(Plane[3]);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SOFMWPC);
};
#endif//USER_DEF_raw_event_SOFMWPC

#ifndef USER_DEF_raw_event_SST
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_SST)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(E);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(E);
  STRUCT_MIRROR_FCNS_DECL(raw_event_SST);
};
#endif//USER_DEF_raw_event_SST

#ifndef USER_DEF_raw_event_CALIFA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event_CALIFA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(ENE);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),2048> STRUCT_MIRROR_NAME(ENE);
  STRUCT_MIRROR_ITEM_CTRL(TSLSB);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),2048> STRUCT_MIRROR_NAME(TSLSB);
  STRUCT_MIRROR_ITEM_CTRL(TSMSB);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),2048> STRUCT_MIRROR_NAME(TSMSB);
  STRUCT_MIRROR_ITEM_CTRL(NF);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),2048> STRUCT_MIRROR_NAME(NF);
  STRUCT_MIRROR_ITEM_CTRL(NS);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),2048> STRUCT_MIRROR_NAME(NS);
  STRUCT_MIRROR_FCNS_DECL(raw_event_CALIFA);
};
#endif//USER_DEF_raw_event_CALIFA

#ifndef USER_DEF_raw_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_event) : public STRUCT_MIRROR_BASE(raw_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(raw_event_base);
  STRUCT_MIRROR_ITEM_CTRL(TIMESTAMP);
  STRUCT_MIRROR_TYPE(raw_event_TIMESTAMP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(TIMESTAMP);
  STRUCT_MIRROR_ITEM_CTRL(LOS);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(LOS__i0,,2);
  STRUCT_MIRROR_TYPE(raw_event_LOS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(LOS[2]);
  STRUCT_MIRROR_ITEM_CTRL(SCITWO);
  STRUCT_MIRROR_TYPE(raw_event_SCITWO) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SCITWO);
  STRUCT_MIRROR_ITEM_CTRL(SCIEIGHT);
  STRUCT_MIRROR_TYPE(raw_event_SCIEIGHT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SCIEIGHT);
  STRUCT_MIRROR_ITEM_CTRL(FIBONEA);
  STRUCT_MIRROR_TYPE(raw_event_FIBONEA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(FIBONEA);
  STRUCT_MIRROR_ITEM_CTRL(FIBONEB);
  STRUCT_MIRROR_TYPE(raw_event_FIBONEB) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(FIBONEB);
  STRUCT_MIRROR_ITEM_CTRL(SFIB);
  STRUCT_MIRROR_TYPE(raw_event_SFIB) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SFIB);
  STRUCT_MIRROR_ITEM_CTRL(NN);
  STRUCT_MIRROR_TYPE(raw_event_NN) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(NN);
  STRUCT_MIRROR_ITEM_CTRL(SAMP);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),512> STRUCT_MIRROR_NAME(SAMP);
  STRUCT_MIRROR_ITEM_CTRL(MUSIC);
  STRUCT_MIRROR_TYPE(raw_event_MUSIC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(MUSIC);
  STRUCT_MIRROR_ITEM_CTRL(SOFSCI);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(SOFSCI__i0,,1);
  STRUCT_MIRROR_TYPE(raw_event_SOFSCI) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFSCI[1]);
  STRUCT_MIRROR_ITEM_CTRL(SOFTWIM);
  STRUCT_MIRROR_TYPE(raw_event_SOFTWIM) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFTWIM);
  STRUCT_MIRROR_ITEM_CTRL(SOFTOFW);
  STRUCT_MIRROR_TYPE(raw_event_SOFTOFW) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFTOFW);
  STRUCT_MIRROR_ITEM_CTRL(SOFMWPC);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(SOFMWPC__i0,,4);
  STRUCT_MIRROR_TYPE(raw_event_SOFMWPC) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(SOFMWPC[4]);
  STRUCT_MIRROR_ITEM_CTRL(SST);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(SST__i0,,6);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(raw_event_SST),STRUCT_MIRROR_TEMPLATE_ARG(raw_event_SST),1024> STRUCT_MIRROR_NAME(SST[6]);
  STRUCT_MIRROR_ITEM_CTRL(CALIFA);
  STRUCT_MIRROR_TYPE(raw_event_CALIFA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(CALIFA);
  STRUCT_MIRROR_FCNS_DECL(raw_event);
};
#endif//USER_DEF_raw_event

#ifndef USER_DEF_raw_sticky
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(raw_sticky) : public STRUCT_MIRROR_BASE(raw_sticky_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(raw_sticky_base);
  STRUCT_MIRROR_FCNS_DECL(raw_sticky);
};
#endif//USER_DEF_raw_sticky

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_LOS_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_LOS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCITWO_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCITWO);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCIEIGHT_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP_SCIEIGHT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_TIMESTAMP);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_LOS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SCITWO);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SCIEIGHT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_FIBONEA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_FIBONEB);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SFIB);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_WR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tcl_T);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tcl);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tfl_T);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tfl);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tct_T);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tct);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tft_T);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P_tft);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN_P);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_NN);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_MUSIC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFSCI);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFTWIM_S);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFTWIM);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFTOFW_P);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFTOFW);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFMWPC_Plane);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SOFMWPC);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_SST);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event_CALIFA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_event);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(raw_sticky);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_raw_event_TIMESTAMP_LOS_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_LOS_WR)::FCNCALL_NAME(raw_event_TIMESTAMP_LOS_WR)
{
  FCNCALL_INIT;
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_LOS_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_LOS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_LOS)::FCNCALL_NAME(raw_event_TIMESTAMP_LOS)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_LOS_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_LOS

#ifndef USER_DEF_raw_event_TIMESTAMP_SCITWO_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SCITWO_WR)::FCNCALL_NAME(raw_event_TIMESTAMP_SCITWO_WR)
{
  FCNCALL_INIT;
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SCITWO_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SCITWO
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SCITWO)::FCNCALL_NAME(raw_event_TIMESTAMP_SCITWO)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_SCITWO_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SCITWO

#ifndef USER_DEF_raw_event_TIMESTAMP_SCIEIGHT_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SCIEIGHT_WR)::FCNCALL_NAME(raw_event_TIMESTAMP_SCIEIGHT_WR)
{
  FCNCALL_INIT;
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SCIEIGHT_WR

#ifndef USER_DEF_raw_event_TIMESTAMP_SCIEIGHT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP_SCIEIGHT)::FCNCALL_NAME(raw_event_TIMESTAMP_SCIEIGHT)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_SCIEIGHT_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP_SCIEIGHT

#ifndef USER_DEF_raw_event_TIMESTAMP
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TIMESTAMP)::FCNCALL_NAME(raw_event_TIMESTAMP)
{
  FCNCALL_INIT;
  // raw_event_TIMESTAMP_LOS LOS;
  {
  FCNCALL_SUBNAME("LOS");
  { FCNCALL_CALL_CTRL_WRAP(LOS,LOS.FCNCALL_CALL(LOS)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_SCITWO SCITWO;
  {
  FCNCALL_SUBNAME("SCITWO");
  { FCNCALL_CALL_CTRL_WRAP(SCITWO,SCITWO.FCNCALL_CALL(SCITWO)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TIMESTAMP_SCIEIGHT SCIEIGHT;
  {
  FCNCALL_SUBNAME("SCIEIGHT");
  { FCNCALL_CALL_CTRL_WRAP(SCIEIGHT,SCIEIGHT.FCNCALL_CALL(SCIEIGHT)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TIMESTAMP

#ifndef USER_DEF_raw_event_LOS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_LOS)::FCNCALL_NAME(raw_event_LOS)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  {
  FCNCALL_SUBNAME("VTF");
  { FCNCALL_CALL_CTRL_WRAP(VTF,VTF.FCNCALL_CALL(VTF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
  {
  FCNCALL_SUBNAME("VTC");
  { FCNCALL_CALL_CTRL_WRAP(VTC,VTC.FCNCALL_CALL(VTC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,8,32> MT;
  {
  FCNCALL_SUBNAME("MT");
  { FCNCALL_CALL_CTRL_WRAP(MT,MT.FCNCALL_CALL(MT)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,8,32> TTFL;
  {
  FCNCALL_SUBNAME("TTFL");
  { FCNCALL_CALL_CTRL_WRAP(TTFL,TTFL.FCNCALL_CALL(TTFL)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,8,32> TTFT;
  {
  FCNCALL_SUBNAME("TTFT");
  { FCNCALL_CALL_CTRL_WRAP(TTFT,TTFT.FCNCALL_CALL(TTFT)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,8,32> TTCL;
  {
  FCNCALL_SUBNAME("TTCL");
  { FCNCALL_CALL_CTRL_WRAP(TTCL,TTCL.FCNCALL_CALL(TTCL)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,8,32> TTCT;
  {
  FCNCALL_SUBNAME("TTCT");
  { FCNCALL_CALL_CTRL_WRAP(TTCT,TTCT.FCNCALL_CALL(TTCT)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_LOS

#ifndef USER_DEF_raw_event_SCITWO
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SCITWO)::FCNCALL_NAME(raw_event_SCITWO)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  {
  FCNCALL_SUBNAME("VTF");
  { FCNCALL_CALL_CTRL_WRAP(VTF,VTF.FCNCALL_CALL(VTF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
  {
  FCNCALL_SUBNAME("VTC");
  { FCNCALL_CALL_CTRL_WRAP(VTC,VTC.FCNCALL_CALL(VTC)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SCITWO

#ifndef USER_DEF_raw_event_SCIEIGHT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SCIEIGHT)::FCNCALL_NAME(raw_event_SCIEIGHT)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,8,32> VTF;
  {
  FCNCALL_SUBNAME("VTF");
  { FCNCALL_CALL_CTRL_WRAP(VTF,VTF.FCNCALL_CALL(VTF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,8,32> VTC;
  {
  FCNCALL_SUBNAME("VTC");
  { FCNCALL_CALL_CTRL_WRAP(VTC,VTC.FCNCALL_CALL(VTC)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SCIEIGHT

#ifndef USER_DEF_raw_event_FIBONEA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_FIBONEA)::FCNCALL_NAME(raw_event_FIBONEA)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMLC;
  {
  FCNCALL_SUBNAME("TMLC");
  { FCNCALL_CALL_CTRL_WRAP(TMLC,TMLC.FCNCALL_CALL(TMLC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMLF;
  {
  FCNCALL_SUBNAME("TMLF");
  { FCNCALL_CALL_CTRL_WRAP(TMLF,TMLF.FCNCALL_CALL(TMLF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMTC;
  {
  FCNCALL_SUBNAME("TMTC");
  { FCNCALL_CALL_CTRL_WRAP(TMTC,TMTC.FCNCALL_CALL(TMTC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMTF;
  {
  FCNCALL_SUBNAME("TMTF");
  { FCNCALL_CALL_CTRL_WRAP(TMTF,TMTF.FCNCALL_CALL(TMTF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSLC;
  {
  FCNCALL_SUBNAME("TSLC");
  { FCNCALL_CALL_CTRL_WRAP(TSLC,TSLC.FCNCALL_CALL(TSLC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSLF;
  {
  FCNCALL_SUBNAME("TSLF");
  { FCNCALL_CALL_CTRL_WRAP(TSLF,TSLF.FCNCALL_CALL(TSLF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSTC;
  {
  FCNCALL_SUBNAME("TSTC");
  { FCNCALL_CALL_CTRL_WRAP(TSTC,TSTC.FCNCALL_CALL(TSTC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSTF;
  {
  FCNCALL_SUBNAME("TSTF");
  { FCNCALL_CALL_CTRL_WRAP(TSTF,TSTF.FCNCALL_CALL(TSTF)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_FIBONEA

#ifndef USER_DEF_raw_event_FIBONEB
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_FIBONEB)::FCNCALL_NAME(raw_event_FIBONEB)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMLC;
  {
  FCNCALL_SUBNAME("TMLC");
  { FCNCALL_CALL_CTRL_WRAP(TMLC,TMLC.FCNCALL_CALL(TMLC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMLF;
  {
  FCNCALL_SUBNAME("TMLF");
  { FCNCALL_CALL_CTRL_WRAP(TMLF,TMLF.FCNCALL_CALL(TMLF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMTC;
  {
  FCNCALL_SUBNAME("TMTC");
  { FCNCALL_CALL_CTRL_WRAP(TMTC,TMTC.FCNCALL_CALL(TMTC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TMTF;
  {
  FCNCALL_SUBNAME("TMTF");
  { FCNCALL_CALL_CTRL_WRAP(TMTF,TMTF.FCNCALL_CALL(TMTF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSLC;
  {
  FCNCALL_SUBNAME("TSLC");
  { FCNCALL_CALL_CTRL_WRAP(TSLC,TSLC.FCNCALL_CALL(TSLC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSLF;
  {
  FCNCALL_SUBNAME("TSLF");
  { FCNCALL_CALL_CTRL_WRAP(TSLF,TSLF.FCNCALL_CALL(TSLF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSTC;
  {
  FCNCALL_SUBNAME("TSTC");
  { FCNCALL_CALL_CTRL_WRAP(TSTC,TSTC.FCNCALL_CALL(TSTC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,1,64> TSTF;
  {
  FCNCALL_SUBNAME("TSTF");
  { FCNCALL_CALL_CTRL_WRAP(TSTF,TSTF.FCNCALL_CALL(TSTF)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_FIBONEB

#ifndef USER_DEF_raw_event_SFIB
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SFIB)::FCNCALL_NAME(raw_event_SFIB)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TTLC;
  {
  FCNCALL_SUBNAME("TTLC");
  { FCNCALL_CALL_CTRL_WRAP(TTLC,TTLC.FCNCALL_CALL(TTLC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> BTLC;
  {
  FCNCALL_SUBNAME("BTLC");
  { FCNCALL_CALL_CTRL_WRAP(BTLC,BTLC.FCNCALL_CALL(BTLC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TTLF;
  {
  FCNCALL_SUBNAME("TTLF");
  { FCNCALL_CALL_CTRL_WRAP(TTLF,TTLF.FCNCALL_CALL(TTLF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> BTLF;
  {
  FCNCALL_SUBNAME("BTLF");
  { FCNCALL_CALL_CTRL_WRAP(BTLF,BTLF.FCNCALL_CALL(BTLF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TTTC;
  {
  FCNCALL_SUBNAME("TTTC");
  { FCNCALL_CALL_CTRL_WRAP(TTTC,TTTC.FCNCALL_CALL(TTTC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> BTTC;
  {
  FCNCALL_SUBNAME("BTTC");
  { FCNCALL_CALL_CTRL_WRAP(BTTC,BTTC.FCNCALL_CALL(BTTC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> TTTF;
  {
  FCNCALL_SUBNAME("TTTF");
  { FCNCALL_CALL_CTRL_WRAP(TTTF,TTTF.FCNCALL_CALL(TTTF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA12,DATA12,256,64> BTTF;
  {
  FCNCALL_SUBNAME("BTTF");
  { FCNCALL_CALL_CTRL_WRAP(BTTF,BTTF.FCNCALL_CALL(BTTF)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SFIB

#ifndef USER_DEF_raw_event_NN_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_WR)::FCNCALL_NAME(raw_event_NN_WR)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_WR

#ifndef USER_DEF_raw_event_NN_P_tcl_T
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tcl_T)::FCNCALL_NAME(raw_event_NN_P_tcl_T)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
  {
  FCNCALL_SUBNAME("B");
  { FCNCALL_CALL_CTRL_WRAP(B,B.FCNCALL_CALL(B)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tcl_T

#ifndef USER_DEF_raw_event_NN_P_tcl
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tcl)::FCNCALL_NAME(raw_event_NN_P_tcl)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tcl_T T[2];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tcl

#ifndef USER_DEF_raw_event_NN_P_tfl_T
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tfl_T)::FCNCALL_NAME(raw_event_NN_P_tfl_T)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
  {
  FCNCALL_SUBNAME("B");
  { FCNCALL_CALL_CTRL_WRAP(B,B.FCNCALL_CALL(B)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tfl_T

#ifndef USER_DEF_raw_event_NN_P_tfl
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tfl)::FCNCALL_NAME(raw_event_NN_P_tfl)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tfl_T T[2];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tfl

#ifndef USER_DEF_raw_event_NN_P_tct_T
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tct_T)::FCNCALL_NAME(raw_event_NN_P_tct_T)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
  {
  FCNCALL_SUBNAME("B");
  { FCNCALL_CALL_CTRL_WRAP(B,B.FCNCALL_CALL(B)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tct_T

#ifndef USER_DEF_raw_event_NN_P_tct
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tct)::FCNCALL_NAME(raw_event_NN_P_tct)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tct_T T[2];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tct

#ifndef USER_DEF_raw_event_NN_P_tft_T
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tft_T)::FCNCALL_NAME(raw_event_NN_P_tft_T)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,50,200> B;
  {
  FCNCALL_SUBNAME("B");
  { FCNCALL_CALL_CTRL_WRAP(B,B.FCNCALL_CALL(B)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tft_T

#ifndef USER_DEF_raw_event_NN_P_tft
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P_tft)::FCNCALL_NAME(raw_event_NN_P_tft)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tft_T T[2];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P_tft

#ifndef USER_DEF_raw_event_NN_P
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN_P)::FCNCALL_NAME(raw_event_NN_P)
{
  FCNCALL_INIT;
  // raw_event_NN_P_tcl tcl;
  {
  FCNCALL_SUBNAME("tcl");
  { FCNCALL_CALL_CTRL_WRAP(tcl,tcl.FCNCALL_CALL(tcl)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN_P_tfl tfl;
  {
  FCNCALL_SUBNAME("tfl");
  { FCNCALL_CALL_CTRL_WRAP(tfl,tfl.FCNCALL_CALL(tfl)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN_P_tct tct;
  {
  FCNCALL_SUBNAME("tct");
  { FCNCALL_CALL_CTRL_WRAP(tct,tct.FCNCALL_CALL(tct)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN_P_tft tft;
  {
  FCNCALL_SUBNAME("tft");
  { FCNCALL_CALL_CTRL_WRAP(tft,tft.FCNCALL_CALL(tft)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN_P

#ifndef USER_DEF_raw_event_NN
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_NN)::FCNCALL_NAME(raw_event_NN)
{
  FCNCALL_INIT;
  // raw_event_NN_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN_P P[16];
  {
  FCNCALL_SUBNAME("P");
  FCNCALL_FOR(__i0,16)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(P__i0,,__i0,P[__i0].FCNCALL_CALL(P[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_NN

#ifndef USER_DEF_raw_event_MUSIC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_MUSIC)::FCNCALL_NAME(raw_event_MUSIC)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,8,10> E;
  {
  FCNCALL_SUBNAME("E");
  { FCNCALL_CALL_CTRL_WRAP(E,E.FCNCALL_CALL(E)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,8,10> T;
  {
  FCNCALL_SUBNAME("T");
  { FCNCALL_CALL_CTRL_WRAP(T,T.FCNCALL_CALL(T)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,10> TREF;
  {
  FCNCALL_SUBNAME("TREF");
  { FCNCALL_CALL_CTRL_WRAP(TREF,TREF.FCNCALL_CALL(TREF)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_MUSIC

#ifndef USER_DEF_raw_event_SOFSCI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFSCI)::FCNCALL_NAME(raw_event_SOFSCI)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,3,10> TF;
  {
  FCNCALL_SUBNAME("TF");
  { FCNCALL_CALL_CTRL_WRAP(TF,TF.FCNCALL_CALL(TF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,3,10> TC;
  {
  FCNCALL_SUBNAME("TC");
  { FCNCALL_CALL_CTRL_WRAP(TC,TC.FCNCALL_CALL(TC)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFSCI

#ifndef USER_DEF_raw_event_SOFTWIM_S
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFTWIM_S)::FCNCALL_NAME(raw_event_SOFTWIM_S)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,16,10> E;
  {
  FCNCALL_SUBNAME("E");
  { FCNCALL_CALL_CTRL_WRAP(E,E.FCNCALL_CALL(E)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,16,10> T;
  {
  FCNCALL_SUBNAME("T");
  { FCNCALL_CALL_CTRL_WRAP(T,T.FCNCALL_CALL(T)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16_OVERFLOW,DATA16_OVERFLOW,2,10> TREF;
  {
  FCNCALL_SUBNAME("TREF");
  { FCNCALL_CALL_CTRL_WRAP(TREF,TREF.FCNCALL_CALL(TREF)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFTWIM_S

#ifndef USER_DEF_raw_event_SOFTWIM
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFTWIM)::FCNCALL_NAME(raw_event_SOFTWIM)
{
  FCNCALL_INIT;
  // raw_event_SOFTWIM_S S[1];
  {
  FCNCALL_SUBNAME("S");
  FCNCALL_FOR(__i0,1)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(S__i0,,__i0,S[__i0].FCNCALL_CALL(S[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFTWIM

#ifndef USER_DEF_raw_event_SOFTOFW_P
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFTOFW_P)::FCNCALL_NAME(raw_event_SOFTOFW_P)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA12,DATA12,2,10> TF;
  {
  FCNCALL_SUBNAME("TF");
  { FCNCALL_CALL_CTRL_WRAP(TF,TF.FCNCALL_CALL(TF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA16,DATA16,2,10> TC;
  {
  FCNCALL_SUBNAME("TC");
  { FCNCALL_CALL_CTRL_WRAP(TC,TC.FCNCALL_CALL(TC)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA14 E[2];
  {
  FCNCALL_SUBNAME("E");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(E__i0,,__i0,E[__i0].FCNCALL_CALL(E[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFTOFW_P

#ifndef USER_DEF_raw_event_SOFTOFW
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFTOFW)::FCNCALL_NAME(raw_event_SOFTOFW)
{
  FCNCALL_INIT;
  // raw_event_SOFTOFW_P P[28];
  {
  FCNCALL_SUBNAME("P");
  FCNCALL_FOR(__i0,28)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(P__i0,,__i0,P[__i0].FCNCALL_CALL(P[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFTOFW

#ifndef USER_DEF_raw_event_SOFMWPC_Plane
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFMWPC_Plane)::FCNCALL_NAME(raw_event_SOFMWPC_Plane)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA12,DATA12,288> Q;
  {
  FCNCALL_SUBNAME("Q");
  { FCNCALL_CALL_CTRL_WRAP(Q,Q.FCNCALL_CALL(Q)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFMWPC_Plane

#ifndef USER_DEF_raw_event_SOFMWPC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SOFMWPC)::FCNCALL_NAME(raw_event_SOFMWPC)
{
  FCNCALL_INIT;
  // raw_event_SOFMWPC_Plane Plane[3];
  {
  FCNCALL_SUBNAME("Plane");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(Plane__i0,,__i0,Plane[__i0].FCNCALL_CALL(Plane[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SOFMWPC

#ifndef USER_DEF_raw_event_SST
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SST)::FCNCALL_NAME(raw_event_SST)
{
  FCNCALL_INIT;
  // DATA12 E;
  {
  FCNCALL_SUBNAME("E");
  { FCNCALL_CALL_CTRL_WRAP(E,E.FCNCALL_CALL(E)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SST

#ifndef USER_DEF_raw_event_CALIFA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_CALIFA)::FCNCALL_NAME(raw_event_CALIFA)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA16,DATA16,2048> ENE;
  {
  FCNCALL_SUBNAME("ENE");
  { FCNCALL_CALL_CTRL_WRAP(ENE,ENE.FCNCALL_CALL(ENE)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,2048> TSLSB;
  {
  FCNCALL_SUBNAME("TSLSB");
  { FCNCALL_CALL_CTRL_WRAP(TSLSB,TSLSB.FCNCALL_CALL(TSLSB)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,2048> TSMSB;
  {
  FCNCALL_SUBNAME("TSMSB");
  { FCNCALL_CALL_CTRL_WRAP(TSMSB,TSMSB.FCNCALL_CALL(TSMSB)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,2048> NF;
  {
  FCNCALL_SUBNAME("NF");
  { FCNCALL_CALL_CTRL_WRAP(NF,NF.FCNCALL_CALL(NF)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,2048> NS;
  {
  FCNCALL_SUBNAME("NS");
  { FCNCALL_CALL_CTRL_WRAP(NS,NS.FCNCALL_CALL(NS)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_CALIFA

#ifndef USER_DEF_raw_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event)::FCNCALL_NAME(raw_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(raw_event_base,FCNCALL_CLASS_NAME(raw_event_base)::FCNCALL_CALL_BASE());
  // raw_event_TIMESTAMP TIMESTAMP;
  {
  FCNCALL_SUBNAME("TIMESTAMP");
  { FCNCALL_CALL_CTRL_WRAP(TIMESTAMP,TIMESTAMP.FCNCALL_CALL(TIMESTAMP)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_LOS LOS[2];
  {
  FCNCALL_SUBNAME("LOS");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(LOS__i0,,__i0,LOS[__i0].FCNCALL_CALL(LOS[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SCITWO SCITWO;
  {
  FCNCALL_SUBNAME("SCITWO");
  { FCNCALL_CALL_CTRL_WRAP(SCITWO,SCITWO.FCNCALL_CALL(SCITWO)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SCIEIGHT SCIEIGHT;
  {
  FCNCALL_SUBNAME("SCIEIGHT");
  { FCNCALL_CALL_CTRL_WRAP(SCIEIGHT,SCIEIGHT.FCNCALL_CALL(SCIEIGHT)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_FIBONEA FIBONEA;
  {
  FCNCALL_SUBNAME("FIBONEA");
  { FCNCALL_CALL_CTRL_WRAP(FIBONEA,FIBONEA.FCNCALL_CALL(FIBONEA)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_FIBONEB FIBONEB;
  {
  FCNCALL_SUBNAME("FIBONEB");
  { FCNCALL_CALL_CTRL_WRAP(FIBONEB,FIBONEB.FCNCALL_CALL(FIBONEB)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SFIB SFIB;
  {
  FCNCALL_SUBNAME("SFIB");
  { FCNCALL_CALL_CTRL_WRAP(SFIB,SFIB.FCNCALL_CALL(SFIB)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_NN NN;
  {
  FCNCALL_SUBNAME("NN");
  { FCNCALL_CALL_CTRL_WRAP(NN,NN.FCNCALL_CALL(NN)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,512> SAMP;
  {
  FCNCALL_SUBNAME("SAMP");
  { FCNCALL_CALL_CTRL_WRAP(SAMP,SAMP.FCNCALL_CALL(SAMP)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_MUSIC MUSIC;
  {
  FCNCALL_SUBNAME("MUSIC");
  { FCNCALL_CALL_CTRL_WRAP(MUSIC,MUSIC.FCNCALL_CALL(MUSIC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SOFSCI SOFSCI[1];
  {
  FCNCALL_SUBNAME("SOFSCI");
  FCNCALL_FOR(__i0,1)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(SOFSCI__i0,,__i0,SOFSCI[__i0].FCNCALL_CALL(SOFSCI[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SOFTWIM SOFTWIM;
  {
  FCNCALL_SUBNAME("SOFTWIM");
  { FCNCALL_CALL_CTRL_WRAP(SOFTWIM,SOFTWIM.FCNCALL_CALL(SOFTWIM)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SOFTOFW SOFTOFW;
  {
  FCNCALL_SUBNAME("SOFTOFW");
  { FCNCALL_CALL_CTRL_WRAP(SOFTOFW,SOFTOFW.FCNCALL_CALL(SOFTOFW)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SOFMWPC SOFMWPC[4];
  {
  FCNCALL_SUBNAME("SOFMWPC");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(SOFMWPC__i0,,__i0,SOFMWPC[__i0].FCNCALL_CALL(SOFMWPC[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<raw_event_SST,raw_event_SST,1024> SST[6];
  {
  FCNCALL_SUBNAME("SST");
  FCNCALL_FOR(__i0,6)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(SST__i0,,__i0,SST[__i0].FCNCALL_CALL(SST[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_CALIFA CALIFA;
  {
  FCNCALL_SUBNAME("CALIFA");
  { FCNCALL_CALL_CTRL_WRAP(CALIFA,CALIFA.FCNCALL_CALL(CALIFA)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event

#ifndef USER_DEF_raw_sticky
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_sticky)::FCNCALL_NAME(raw_sticky)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(raw_sticky_base,FCNCALL_CLASS_NAME(raw_sticky_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_raw_sticky

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: raw_event_TIMESTAMP_LOS_WR
// DATA16  .T[4]
// DATA16 .T[4]
// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_LOS_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_LOS_WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_LOS_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_LOS_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_LOS_WR
// .raw_event_TIMESTAMP_LOS_WR
// Corr struct for: raw_event_TIMESTAMP_LOS
// DATA12  .ID
// raw_event_TIMESTAMP_LOS_WR  .WR
  // DATA16  .T[4]
// DATA12 .ID
// DATA16 .WR.T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_TIMESTAMP_LOS
  // DATA12 .ID
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_LOS/5/.ID
                           // .WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_LOS
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_LOS/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_LOS
// .raw_event_TIMESTAMP_LOS
// Corr struct for: raw_event_TIMESTAMP_SCITWO_WR
// DATA16  .T[4]
// DATA16 .T[4]
// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCITWO_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SCITWO_WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCITWO_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SCITWO_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SCITWO_WR
// .raw_event_TIMESTAMP_SCITWO_WR
// Corr struct for: raw_event_TIMESTAMP_SCITWO
// DATA12  .ID
// raw_event_TIMESTAMP_SCITWO_WR  .WR
  // DATA16  .T[4]
// DATA12 .ID
// DATA16 .WR.T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_TIMESTAMP_SCITWO
  // DATA12 .ID
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SCITWO/5/.ID
                              // .WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCITWO
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SCITWO/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SCITWO
// .raw_event_TIMESTAMP_SCITWO
// Corr struct for: raw_event_TIMESTAMP_SCIEIGHT_WR
// DATA16  .T[4]
// DATA16 .T[4]
// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SCIEIGHT_WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT_WR
  // DATA16 .T[4]
// .raw_event_TIMESTAMP_SCIEIGHT_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT_WR
// .raw_event_TIMESTAMP_SCIEIGHT_WR
// Corr struct for: raw_event_TIMESTAMP_SCIEIGHT
// DATA12  .ID
// raw_event_TIMESTAMP_SCIEIGHT_WR  .WR
  // DATA16  .T[4]
// DATA12 .ID
// DATA16 .WR.T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT
  // DATA12 .ID
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SCIEIGHT/5/.ID
                                // .WR/4/.T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT
  // DATA16 .WR.T[4]
// .raw_event_TIMESTAMP_SCIEIGHT/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP_SCIEIGHT
// .raw_event_TIMESTAMP_SCIEIGHT
// Corr struct for: raw_event_TIMESTAMP
// raw_event_TIMESTAMP_LOS  .LOS
  // DATA12  .ID
  // raw_event_TIMESTAMP_LOS_WR  .WR
    // DATA16  .T[4]
// raw_event_TIMESTAMP_SCITWO  .SCITWO
  // DATA12  .ID
  // raw_event_TIMESTAMP_SCITWO_WR  .WR
    // DATA16  .T[4]
// raw_event_TIMESTAMP_SCIEIGHT  .SCIEIGHT
  // DATA12  .ID
  // raw_event_TIMESTAMP_SCIEIGHT_WR  .WR
    // DATA16  .T[4]
// DATA12 .LOS.ID
// DATA16 .LOS.WR.T[4]
// DATA12 .SCITWO.ID
// DATA16 .SCITWO.WR.T[4]
// DATA12 .SCIEIGHT.ID
// DATA16 .SCIEIGHT.WR.T[4]
// 
// size= 1  chunks= 15  mem=  15  line=30  total=450
// size= 4  chunks=  6  mem=  24  line=30  total=450
// size= 5  chunks=  3  mem=  15  line=18  total=270
// size=15  chunks=  1  mem=  15  line=16  total=240
// 
// corr structure: raw_event_TIMESTAMP
  // DATA12 .LOS.ID
  // DATA16 .LOS.WR.T[4]
  // DATA12 .SCITWO.ID
  // DATA16 .SCITWO.WR.T[4]
  // DATA12 .SCIEIGHT.ID
  // DATA16 .SCIEIGHT.WR.T[4]
// .raw_event_TIMESTAMP/15/.LOS/5/.ID
                               // .WR/4/.T/4/[4]
                        // .SCITWO/5/.ID
                                  // .WR/4/.T/4/[4]
                        // .SCIEIGHT/5/.ID
                                    // .WR/4/.T/4/[4]// 
// size= 1  chunks= 12  mem=  12  line=24  total=288
// size= 4  chunks=  3  mem=  12  line=15  total=180
// size=12  chunks=  1  mem=  12  line=13  total=156
// 
// corr structure: raw_event_TIMESTAMP
  // DATA16 .LOS.WR.T[4]
  // DATA16 .SCITWO.WR.T[4]
  // DATA16 .SCIEIGHT.WR.T[4]
// .raw_event_TIMESTAMP/12/.LOS/4/.WR/4/.T/4/[4]
                        // .SCITWO/4/.WR/4/.T/4/[4]
                        // .SCIEIGHT/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_TIMESTAMP
// .raw_event_TIMESTAMP
// Corr struct for: raw_event_LOS
// raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
// raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
// raw_array_multi_zero_suppress  .MT(DATA16)[8][32]
// raw_array_multi_zero_suppress  .TTFL(DATA12)[8][32]
// raw_array_multi_zero_suppress  .TTFT(DATA12)[8][32]
// raw_array_multi_zero_suppress  .TTCL(DATA12)[8][32]
// raw_array_multi_zero_suppress  .TTCT(DATA12)[8][32]
// DATA12 .VTF[8][32]
// DATA16 .VTC[8][32]
// DATA16 .MT[8][32]
// DATA12 .TTFL[8][32]
// DATA12 .TTFT[8][32]
// DATA12 .TTCL[8][32]
// DATA12 .TTCT[8][32]
// 
// size= 1  chunks=1792  mem=1792  line=3584  total=6422528
// size=32  chunks= 56  mem=1792  line=1848  total=3311616
// size=256  chunks=  7  mem=1792  line=1799  total=3223808
// size=1792  chunks=  1  mem=1792  line=1793  total=3213056
// 
// corr structure: raw_event_LOS
  // DATA12 .VTF[8][32]
  // DATA16 .VTC[8][32]
  // DATA16 .MT[8][32]
  // DATA12 .TTFL[8][32]
  // DATA12 .TTFT[8][32]
  // DATA12 .TTCL[8][32]
  // DATA12 .TTCT[8][32]
// .raw_event_LOS/1792/.VTF/256/[8]/32/[32]
                    // .VTC/256/[8]/32/[32]
                    // .MT/256/[8]/32/[32]
                    // .TTFL/256/[8]/32/[32]
                    // .TTFT/256/[8]/32/[32]
                    // .TTCL/256/[8]/32/[32]
                    // .TTCT/256/[8]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_LOS
// .raw_event_LOS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_LOS
// .raw_event_LOS
// Corr struct for: raw_event_SCITWO
// raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
// raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
// DATA12 .VTF[8][32]
// DATA16 .VTC[8][32]
// 
// size= 1  chunks=512  mem= 512  line=1024  total=524288
// size=32  chunks= 16  mem= 512  line=528  total=270336
// size=256  chunks=  2  mem= 512  line=514  total=263168
// size=512  chunks=  1  mem= 512  line=513  total=262656
// 
// corr structure: raw_event_SCITWO
  // DATA12 .VTF[8][32]
  // DATA16 .VTC[8][32]
// .raw_event_SCITWO/512/.VTF/256/[8]/32/[32]
                      // .VTC/256/[8]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SCITWO
// .raw_event_SCITWO// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SCITWO
// .raw_event_SCITWO
// Corr struct for: raw_event_SCIEIGHT
// raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
// raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
// DATA12 .VTF[8][32]
// DATA16 .VTC[8][32]
// 
// size= 1  chunks=512  mem= 512  line=1024  total=524288
// size=32  chunks= 16  mem= 512  line=528  total=270336
// size=256  chunks=  2  mem= 512  line=514  total=263168
// size=512  chunks=  1  mem= 512  line=513  total=262656
// 
// corr structure: raw_event_SCIEIGHT
  // DATA12 .VTF[8][32]
  // DATA16 .VTC[8][32]
// .raw_event_SCIEIGHT/512/.VTF/256/[8]/32/[32]
                        // .VTC/256/[8]/32/[32]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SCIEIGHT
// .raw_event_SCIEIGHT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SCIEIGHT
// .raw_event_SCIEIGHT
// Corr struct for: raw_event_FIBONEA
// raw_array_multi_zero_suppress  .TMLC(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TMLF(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TMTC(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TMTF(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TSLC(DATA12)[1][64]
// raw_array_multi_zero_suppress  .TSLF(DATA12)[1][64]
// raw_array_multi_zero_suppress  .TSTC(DATA12)[1][64]
// raw_array_multi_zero_suppress  .TSTF(DATA12)[1][64]
// DATA12 .TMLC[256][64]
// DATA12 .TMLF[256][64]
// DATA12 .TMTC[256][64]
// DATA12 .TMTF[256][64]
// DATA12 .TSLC[1][64]
// DATA12 .TSLF[1][64]
// DATA12 .TSTC[1][64]
// DATA12 .TSTF[1][64]
// 
// size= 1  chunks=65792  mem=65792  line=131584  total=67239936
// size=64  chunks=1028  mem=65792  line=66820  total=101254144
// size=16384  chunks=  8  mem=131072  line=131080  total=34080768
// size=65792  chunks=  1  mem=65792  line=65793  total=33685760
// 
// corr structure: raw_event_FIBONEA
  // DATA12 .TMLC[256][64]
  // DATA12 .TMLF[256][64]
  // DATA12 .TMTC[256][64]
  // DATA12 .TMTF[256][64]
  // DATA12 .TSLC[1][64]
  // DATA12 .TSLF[1][64]
  // DATA12 .TSTC[1][64]
  // DATA12 .TSTF[1][64]
// .raw_event_FIBONEA/65792/.TMLC/16384/[256]/64/[64]
                         // .TMLF/16384/[256]/64/[64]
                         // .TMTC/16384/[256]/64/[64]
                         // .TMTF/16384/[256]/64/[64]
                         // .TSLC/64/[1]/64/[64]
                         // .TSLF/64/[1]/64/[64]
                         // .TSTC/64/[1]/64/[64]
                         // .TSTF/64/[1]/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_FIBONEA
// .raw_event_FIBONEA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_FIBONEA
// .raw_event_FIBONEA
// Corr struct for: raw_event_FIBONEB
// raw_array_multi_zero_suppress  .TMLC(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TMLF(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TMTC(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TMTF(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TSLC(DATA12)[1][64]
// raw_array_multi_zero_suppress  .TSLF(DATA12)[1][64]
// raw_array_multi_zero_suppress  .TSTC(DATA12)[1][64]
// raw_array_multi_zero_suppress  .TSTF(DATA12)[1][64]
// DATA12 .TMLC[256][64]
// DATA12 .TMLF[256][64]
// DATA12 .TMTC[256][64]
// DATA12 .TMTF[256][64]
// DATA12 .TSLC[1][64]
// DATA12 .TSLF[1][64]
// DATA12 .TSTC[1][64]
// DATA12 .TSTF[1][64]
// 
// size= 1  chunks=65792  mem=65792  line=131584  total=67239936
// size=64  chunks=1028  mem=65792  line=66820  total=101254144
// size=16384  chunks=  8  mem=131072  line=131080  total=34080768
// size=65792  chunks=  1  mem=65792  line=65793  total=33685760
// 
// corr structure: raw_event_FIBONEB
  // DATA12 .TMLC[256][64]
  // DATA12 .TMLF[256][64]
  // DATA12 .TMTC[256][64]
  // DATA12 .TMTF[256][64]
  // DATA12 .TSLC[1][64]
  // DATA12 .TSLF[1][64]
  // DATA12 .TSTC[1][64]
  // DATA12 .TSTF[1][64]
// .raw_event_FIBONEB/65792/.TMLC/16384/[256]/64/[64]
                         // .TMLF/16384/[256]/64/[64]
                         // .TMTC/16384/[256]/64/[64]
                         // .TMTF/16384/[256]/64/[64]
                         // .TSLC/64/[1]/64/[64]
                         // .TSLF/64/[1]/64/[64]
                         // .TSTC/64/[1]/64/[64]
                         // .TSTF/64/[1]/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_FIBONEB
// .raw_event_FIBONEB// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_FIBONEB
// .raw_event_FIBONEB
// Corr struct for: raw_event_SFIB
// raw_array_multi_zero_suppress  .TTLC(DATA12)[256][64]
// raw_array_multi_zero_suppress  .BTLC(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TTLF(DATA12)[256][64]
// raw_array_multi_zero_suppress  .BTLF(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TTTC(DATA12)[256][64]
// raw_array_multi_zero_suppress  .BTTC(DATA12)[256][64]
// raw_array_multi_zero_suppress  .TTTF(DATA12)[256][64]
// raw_array_multi_zero_suppress  .BTTF(DATA12)[256][64]
// DATA12 .TTLC[256][64]
// DATA12 .BTLC[256][64]
// DATA12 .TTLF[256][64]
// DATA12 .BTLF[256][64]
// DATA12 .TTTC[256][64]
// DATA12 .BTTC[256][64]
// DATA12 .TTTF[256][64]
// DATA12 .BTTF[256][64]
// 
// size= 1  chunks=131072  mem=131072  line=262144  total=0
// size=64  chunks=2048  mem=131072  line=133120  total=268435456
// size=16384  chunks=  8  mem=131072  line=131080  total=1048576
// size=131072  chunks=  1  mem=131072  line=131073  total=131072
// 
// corr structure: raw_event_SFIB
  // DATA12 .TTLC[256][64]
  // DATA12 .BTLC[256][64]
  // DATA12 .TTLF[256][64]
  // DATA12 .BTLF[256][64]
  // DATA12 .TTTC[256][64]
  // DATA12 .BTTC[256][64]
  // DATA12 .TTTF[256][64]
  // DATA12 .BTTF[256][64]
// .raw_event_SFIB/131072/.TTLC/16384/[256]/64/[64]
                       // .BTLC/16384/[256]/64/[64]
                       // .TTLF/16384/[256]/64/[64]
                       // .BTLF/16384/[256]/64/[64]
                       // .TTTC/16384/[256]/64/[64]
                       // .BTTC/16384/[256]/64/[64]
                       // .TTTF/16384/[256]/64/[64]
                       // .BTTF/16384/[256]/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SFIB
// .raw_event_SFIB// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SFIB
// .raw_event_SFIB
// Corr struct for: raw_event_NN_WR
// DATA12  .ID
// DATA16  .T[4]
// DATA12 .ID
// DATA16 .T[4]
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 4  chunks=  2  mem=   8  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: raw_event_NN_WR
  // DATA12 .ID
  // DATA16 .T[4]
// .raw_event_NN_WR/5/.ID
                   // .T/4/[4]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_NN_WR
  // DATA16 .T[4]
// .raw_event_NN_WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_WR
// .raw_event_NN_WR
// Corr struct for: raw_event_NN_P_tcl_T
// raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .B[50][200]
// 
// size= 1  chunks=10000  mem=10000  line=20000  total=200000000
// size=200  chunks= 50  mem=10000  line=10050  total=100500000
// size=10000  chunks=  1  mem=10000  line=10001  total=100010000
// 
// corr structure: raw_event_NN_P_tcl_T
  // DATA12 .B[50][200]
// .raw_event_NN_P_tcl_T/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tcl_T
// .raw_event_NN_P_tcl_T// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tcl_T
// .raw_event_NN_P_tcl_T
// Corr struct for: raw_event_NN_P_tcl
// raw_event_NN_P_tcl_T  .T[2]
  // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .T[2].B[50][200]
// 
// size= 1  chunks=20000  mem=20000  line=40000  total=800000000
// size=200  chunks=100  mem=20000  line=20100  total=402000000
// size=10000  chunks=  2  mem=20000  line=20002  total=400040000
// size=20000  chunks=  1  mem=20000  line=20001  total=400020000
// 
// corr structure: raw_event_NN_P_tcl
  // DATA12 .T[2].B[50][200]
// .raw_event_NN_P_tcl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tcl
// .raw_event_NN_P_tcl// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tcl
// .raw_event_NN_P_tcl
// Corr struct for: raw_event_NN_P_tfl_T
// raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .B[50][200]
// 
// size= 1  chunks=10000  mem=10000  line=20000  total=200000000
// size=200  chunks= 50  mem=10000  line=10050  total=100500000
// size=10000  chunks=  1  mem=10000  line=10001  total=100010000
// 
// corr structure: raw_event_NN_P_tfl_T
  // DATA12 .B[50][200]
// .raw_event_NN_P_tfl_T/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tfl_T
// .raw_event_NN_P_tfl_T// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tfl_T
// .raw_event_NN_P_tfl_T
// Corr struct for: raw_event_NN_P_tfl
// raw_event_NN_P_tfl_T  .T[2]
  // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .T[2].B[50][200]
// 
// size= 1  chunks=20000  mem=20000  line=40000  total=800000000
// size=200  chunks=100  mem=20000  line=20100  total=402000000
// size=10000  chunks=  2  mem=20000  line=20002  total=400040000
// size=20000  chunks=  1  mem=20000  line=20001  total=400020000
// 
// corr structure: raw_event_NN_P_tfl
  // DATA12 .T[2].B[50][200]
// .raw_event_NN_P_tfl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tfl
// .raw_event_NN_P_tfl// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tfl
// .raw_event_NN_P_tfl
// Corr struct for: raw_event_NN_P_tct_T
// raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .B[50][200]
// 
// size= 1  chunks=10000  mem=10000  line=20000  total=200000000
// size=200  chunks= 50  mem=10000  line=10050  total=100500000
// size=10000  chunks=  1  mem=10000  line=10001  total=100010000
// 
// corr structure: raw_event_NN_P_tct_T
  // DATA12 .B[50][200]
// .raw_event_NN_P_tct_T/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tct_T
// .raw_event_NN_P_tct_T// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tct_T
// .raw_event_NN_P_tct_T
// Corr struct for: raw_event_NN_P_tct
// raw_event_NN_P_tct_T  .T[2]
  // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .T[2].B[50][200]
// 
// size= 1  chunks=20000  mem=20000  line=40000  total=800000000
// size=200  chunks=100  mem=20000  line=20100  total=402000000
// size=10000  chunks=  2  mem=20000  line=20002  total=400040000
// size=20000  chunks=  1  mem=20000  line=20001  total=400020000
// 
// corr structure: raw_event_NN_P_tct
  // DATA12 .T[2].B[50][200]
// .raw_event_NN_P_tct/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tct
// .raw_event_NN_P_tct// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tct
// .raw_event_NN_P_tct
// Corr struct for: raw_event_NN_P_tft_T
// raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .B[50][200]
// 
// size= 1  chunks=10000  mem=10000  line=20000  total=200000000
// size=200  chunks= 50  mem=10000  line=10050  total=100500000
// size=10000  chunks=  1  mem=10000  line=10001  total=100010000
// 
// corr structure: raw_event_NN_P_tft_T
  // DATA12 .B[50][200]
// .raw_event_NN_P_tft_T/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tft_T
// .raw_event_NN_P_tft_T// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tft_T
// .raw_event_NN_P_tft_T
// Corr struct for: raw_event_NN_P_tft
// raw_event_NN_P_tft_T  .T[2]
  // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .T[2].B[50][200]
// 
// size= 1  chunks=20000  mem=20000  line=40000  total=800000000
// size=200  chunks=100  mem=20000  line=20100  total=402000000
// size=10000  chunks=  2  mem=20000  line=20002  total=400040000
// size=20000  chunks=  1  mem=20000  line=20001  total=400020000
// 
// corr structure: raw_event_NN_P_tft
  // DATA12 .T[2].B[50][200]
// .raw_event_NN_P_tft/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tft
// .raw_event_NN_P_tft// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P_tft
// .raw_event_NN_P_tft
// Corr struct for: raw_event_NN_P
// raw_event_NN_P_tcl  .tcl
  // raw_event_NN_P_tcl_T  .T[2]
    // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// raw_event_NN_P_tfl  .tfl
  // raw_event_NN_P_tfl_T  .T[2]
    // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// raw_event_NN_P_tct  .tct
  // raw_event_NN_P_tct_T  .T[2]
    // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// raw_event_NN_P_tft  .tft
  // raw_event_NN_P_tft_T  .T[2]
    // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .tcl.T[2].B[50][200]
// DATA12 .tfl.T[2].B[50][200]
// DATA12 .tct.T[2].B[50][200]
// DATA12 .tft.T[2].B[50][200]
// 
// size= 1  chunks=80000  mem=80000  line=160000  total=-84901888
// size=200  chunks=400  mem=80000  line=80400  total=2137032704
// size=10000  chunks=  8  mem=80000  line=80008  total=2105672704
// size=20000  chunks=  4  mem=80000  line=80004  total=2105352704
// size=80000  chunks=  1  mem=80000  line=80001  total=2105112704
// 
// corr structure: raw_event_NN_P
  // DATA12 .tcl.T[2].B[50][200]
  // DATA12 .tfl.T[2].B[50][200]
  // DATA12 .tct.T[2].B[50][200]
  // DATA12 .tft.T[2].B[50][200]
// .raw_event_NN_P/80000/.tcl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                      // .tfl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                      // .tct/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                      // .tft/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P
// .raw_event_NN_P// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN_P
// .raw_event_NN_P
// Corr struct for: raw_event_NN
// raw_event_NN_WR  .WR
  // DATA12  .ID
  // DATA16  .T[4]
// raw_event_NN_P  .P[16]
  // raw_event_NN_P_tcl  .tcl
    // raw_event_NN_P_tcl_T  .T[2]
      // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
  // raw_event_NN_P_tfl  .tfl
    // raw_event_NN_P_tfl_T  .T[2]
      // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
  // raw_event_NN_P_tct  .tct
    // raw_event_NN_P_tct_T  .T[2]
      // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
  // raw_event_NN_P_tft  .tft
    // raw_event_NN_P_tft_T  .T[2]
      // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// DATA12 .WR.ID
// DATA16 .WR.T[4]
// DATA12 .P[16].tcl.T[2].B[50][200]
// DATA12 .P[16].tfl.T[2].B[50][200]
// DATA12 .P[16].tct.T[2].B[50][200]
// DATA12 .P[16].tft.T[2].B[50][200]
// 
// size= 1  chunks=1280005  mem=1280005  line=2560010  total=-234446798
// size= 4  chunks=1280002  mem=5120008  line=6400010  total=1542166578
// size= 5  chunks=1280001  mem=6400005  line=7680006  total=-734060514
// size=200  chunks=6401  mem=1280200  line=1286601  total=1883238637
// size=10000  chunks=129  mem=1290000  line=1290129  total=2104128981
// size=20000  chunks= 65  mem=1300000  line=1300065  total=1937356773
// size=80000  chunks= 17  mem=1360000  line=1360017  total=1366805205
// size=1280000  chunks=  2  mem=2560000  line=2560002  total=-244686838
// size=1280005  chunks=  1  mem=1280005  line=1280006  total=2031540254
// 
// corr structure: raw_event_NN
  // DATA12 .WR.ID
  // DATA16 .WR.T[4]
  // DATA12 .P[16].tcl.T[2].B[50][200]
  // DATA12 .P[16].tfl.T[2].B[50][200]
  // DATA12 .P[16].tct.T[2].B[50][200]
  // DATA12 .P[16].tft.T[2].B[50][200]
// .raw_event_NN/1280005/.WR/5/.ID
                            // .T/4/[4]
                      // .P/1280000/[16]/80000/.tcl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                            // .tfl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                            // .tct/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                            // .tft/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]// 
// size= 1  chunks=  4  mem=   4  line=8  total=32
// size= 4  chunks=  1  mem=   4  line=5  total=20
// 
// corr structure: raw_event_NN
  // DATA16 .WR.T[4]
// .raw_event_NN/4/.WR/4/.T/4/[4]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_NN
// .raw_event_NN
// Corr struct for: raw_event_MUSIC
// raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[8][10]
// raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[8][10]
// raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][10]
// DATA16_OVERFLOW .E[8][10]
// DATA16_OVERFLOW .T[8][10]
// DATA16_OVERFLOW .TREF[2][10]
// 
// size= 1  chunks=180  mem= 180  line=360  total=64800
// size=10  chunks= 18  mem= 180  line=198  total=35640
// size=20  chunks= 17  mem= 340  line=357  total=64260
// size=80  chunks=  3  mem= 240  line=243  total=43740
// size=180  chunks=  1  mem= 180  line=181  total=32580
// 
// corr structure: raw_event_MUSIC
  // DATA16_OVERFLOW .E[8][10]
  // DATA16_OVERFLOW .T[8][10]
  // DATA16_OVERFLOW .TREF[2][10]
// .raw_event_MUSIC/180/.E/80/[8]/10/[10]
                     // .T/80/[8]/10/[10]
                     // .TREF/20/[2]/10/[10]// 
// size= 1  chunks= 80  mem=  80  line=160  total=12800
// size=10  chunks=  8  mem=  80  line=88  total=7040
// size=80  chunks=  1  mem=  80  line=81  total=6480
// 
// corr structure: raw_event_MUSIC
  // DATA16_OVERFLOW .T[8][10]
// .raw_event_MUSIC/80/.T/80/[8]/10/[10]// 
// size= 1  chunks= 80  mem=  80  line=160  total=12800
// size=10  chunks=  8  mem=  80  line=88  total=7040
// size=80  chunks=  1  mem=  80  line=81  total=6480
// 
// corr structure: raw_event_MUSIC
  // DATA16_OVERFLOW .E[8][10]
// .raw_event_MUSIC/80/.E/80/[8]/10/[10]
// Corr struct for: raw_event_SOFSCI
// raw_array_multi_zero_suppress  .TF(DATA12)[3][10]
// raw_array_multi_zero_suppress  .TC(DATA16)[3][10]
// DATA12 .TF[3][10]
// DATA16 .TC[3][10]
// 
// size= 1  chunks= 60  mem=  60  line=120  total=7200
// size=10  chunks=  6  mem=  60  line=66  total=3960
// size=30  chunks=  2  mem=  60  line=62  total=3720
// size=60  chunks=  1  mem=  60  line=61  total=3660
// 
// corr structure: raw_event_SOFSCI
  // DATA12 .TF[3][10]
  // DATA16 .TC[3][10]
// .raw_event_SOFSCI/60/.TF/30/[3]/10/[10]
                     // .TC/30/[3]/10/[10]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFSCI
// .raw_event_SOFSCI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFSCI
// .raw_event_SOFSCI
// Corr struct for: raw_event_SOFTWIM_S
// raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[16][10]
// raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[16][10]
// raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][10]
// DATA16_OVERFLOW .E[16][10]
// DATA16_OVERFLOW .T[16][10]
// DATA16_OVERFLOW .TREF[2][10]
// 
// size= 1  chunks=340  mem= 340  line=680  total=231200
// size=10  chunks= 34  mem= 340  line=374  total=127160
// size=20  chunks= 33  mem= 660  line=693  total=235620
// size=160  chunks=  3  mem= 480  line=483  total=164220
// size=340  chunks=  1  mem= 340  line=341  total=115940
// 
// corr structure: raw_event_SOFTWIM_S
  // DATA16_OVERFLOW .E[16][10]
  // DATA16_OVERFLOW .T[16][10]
  // DATA16_OVERFLOW .TREF[2][10]
// .raw_event_SOFTWIM_S/340/.E/160/[16]/10/[10]
                         // .T/160/[16]/10/[10]
                         // .TREF/20/[2]/10/[10]// 
// size= 1  chunks=160  mem= 160  line=320  total=51200
// size=10  chunks= 16  mem= 160  line=176  total=28160
// size=160  chunks=  1  mem= 160  line=161  total=25760
// 
// corr structure: raw_event_SOFTWIM_S
  // DATA16_OVERFLOW .T[16][10]
// .raw_event_SOFTWIM_S/160/.T/160/[16]/10/[10]// 
// size= 1  chunks=160  mem= 160  line=320  total=51200
// size=10  chunks= 16  mem= 160  line=176  total=28160
// size=160  chunks=  1  mem= 160  line=161  total=25760
// 
// corr structure: raw_event_SOFTWIM_S
  // DATA16_OVERFLOW .E[16][10]
// .raw_event_SOFTWIM_S/160/.E/160/[16]/10/[10]
// Corr struct for: raw_event_SOFTWIM
// raw_event_SOFTWIM_S  .S[1]
  // raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[16][10]
  // raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[16][10]
  // raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][10]
// DATA16_OVERFLOW .S[1].E[16][10]
// DATA16_OVERFLOW .S[1].T[16][10]
// DATA16_OVERFLOW .S[1].TREF[2][10]
// 
// size= 1  chunks=340  mem= 340  line=680  total=231200
// size=10  chunks= 34  mem= 340  line=374  total=127160
// size=20  chunks= 33  mem= 660  line=693  total=235620
// size=160  chunks=  3  mem= 480  line=483  total=164220
// size=340  chunks=  1  mem= 340  line=341  total=115940
// 
// corr structure: raw_event_SOFTWIM
  // DATA16_OVERFLOW .S[1].E[16][10]
  // DATA16_OVERFLOW .S[1].T[16][10]
  // DATA16_OVERFLOW .S[1].TREF[2][10]
// .raw_event_SOFTWIM/340/.S/340/[1]/340/.E/160/[16]/10/[10]
                                      // .T/160/[16]/10/[10]
                                      // .TREF/20/[2]/10/[10]// 
// size= 1  chunks=160  mem= 160  line=320  total=51200
// size=10  chunks= 16  mem= 160  line=176  total=28160
// size=160  chunks=  1  mem= 160  line=161  total=25760
// 
// corr structure: raw_event_SOFTWIM
  // DATA16_OVERFLOW .S[1].T[16][10]
// .raw_event_SOFTWIM/160/.S/160/[1]/160/.T/160/[16]/10/[10]// 
// size= 1  chunks=160  mem= 160  line=320  total=51200
// size=10  chunks= 16  mem= 160  line=176  total=28160
// size=160  chunks=  1  mem= 160  line=161  total=25760
// 
// corr structure: raw_event_SOFTWIM
  // DATA16_OVERFLOW .S[1].E[16][10]
// .raw_event_SOFTWIM/160/.S/160/[1]/160/.E/160/[16]/10/[10]
// Corr struct for: raw_event_SOFTOFW_P
// raw_array_multi_zero_suppress  .TF(DATA12)[2][10]
// raw_array_multi_zero_suppress  .TC(DATA16)[2][10]
// DATA14  .E[2]
// DATA12 .TF[2][10]
// DATA16 .TC[2][10]
// DATA14 .E[2]
// 
// size= 1  chunks= 42  mem=  42  line=84  total=3528
// size= 2  chunks= 41  mem=  82  line=123  total=5166
// size=10  chunks=  5  mem=  50  line=55  total=2310
// size=20  chunks=  3  mem=  60  line=63  total=2646
// size=42  chunks=  1  mem=  42  line=43  total=1806
// 
// corr structure: raw_event_SOFTOFW_P
  // DATA12 .TF[2][10]
  // DATA16 .TC[2][10]
  // DATA14 .E[2]
// .raw_event_SOFTOFW_P/42/.TF/20/[2]/10/[10]
                        // .TC/20/[2]/10/[10]
                        // .E/2/[2]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFTOFW_P
// .raw_event_SOFTOFW_P// 
// size= 1  chunks=  2  mem=   2  line=4  total=8
// size= 2  chunks=  1  mem=   2  line=3  total=6
// 
// corr structure: raw_event_SOFTOFW_P
  // DATA14 .E[2]
// .raw_event_SOFTOFW_P/2/.E/2/[2]
// Corr struct for: raw_event_SOFTOFW
// raw_event_SOFTOFW_P  .P[28]
  // raw_array_multi_zero_suppress  .TF(DATA12)[2][10]
  // raw_array_multi_zero_suppress  .TC(DATA16)[2][10]
  // DATA14  .E[2]
// DATA12 .P[28].TF[2][10]
// DATA16 .P[28].TC[2][10]
// DATA14 .P[28].E[2]
// 
// size= 1  chunks=1176  mem=1176  line=2352  total=2765952
// size= 2  chunks=1148  mem=2296  line=3444  total=4050144
// size=10  chunks=140  mem=1400  line=1540  total=1811040
// size=20  chunks= 84  mem=1680  line=1764  total=2074464
// size=42  chunks= 28  mem=1176  line=1204  total=1415904
// size=1176  chunks=  1  mem=1176  line=1177  total=1384152
// 
// corr structure: raw_event_SOFTOFW
  // DATA12 .P[28].TF[2][10]
  // DATA16 .P[28].TC[2][10]
  // DATA14 .P[28].E[2]
// .raw_event_SOFTOFW/1176/.P/1176/[28]/42/.TF/20/[2]/10/[10]
                                        // .TC/20/[2]/10/[10]
                                        // .E/2/[2]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFTOFW
// .raw_event_SOFTOFW// 
// size= 1  chunks= 56  mem=  56  line=112  total=6272
// size= 2  chunks= 28  mem=  56  line=84  total=4704
// size=56  chunks=  1  mem=  56  line=57  total=3192
// 
// corr structure: raw_event_SOFTOFW
  // DATA14 .P[28].E[2]
// .raw_event_SOFTOFW/56/.P/56/[28]/2/.E/2/[2]
// Corr struct for: raw_event_SOFMWPC_Plane
// raw_array_zero_suppress  .Q(DATA12)[288]
// DATA12 .Q[288]
// 
// size= 1  chunks=288  mem= 288  line=576  total=165888
// size=288  chunks=  1  mem= 288  line=289  total=83232
// 
// corr structure: raw_event_SOFMWPC_Plane
  // DATA12 .Q[288]
// .raw_event_SOFMWPC_Plane/288/.Q/288/[288]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFMWPC_Plane
// .raw_event_SOFMWPC_Plane// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFMWPC_Plane
// .raw_event_SOFMWPC_Plane
// Corr struct for: raw_event_SOFMWPC
// raw_event_SOFMWPC_Plane  .Plane[3]
  // raw_array_zero_suppress  .Q(DATA12)[288]
// DATA12 .Plane[3].Q[288]
// 
// size= 1  chunks=864  mem= 864  line=1728  total=1492992
// size=288  chunks=  3  mem= 864  line=867  total=749088
// size=864  chunks=  1  mem= 864  line=865  total=747360
// 
// corr structure: raw_event_SOFMWPC
  // DATA12 .Plane[3].Q[288]
// .raw_event_SOFMWPC/864/.Plane/864/[3]/288/.Q/288/[288]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFMWPC
// .raw_event_SOFMWPC// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SOFMWPC
// .raw_event_SOFMWPC
// Corr struct for: raw_event_SST
// DATA12  .E
// DATA12 .E
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SST
  // DATA12 .E
// .raw_event_SST/1/.E// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SST
// .raw_event_SST// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_SST
  // DATA12 .E
// .raw_event_SST/1/.E
// Corr struct for: raw_event_CALIFA
// raw_array_zero_suppress  .ENE(DATA16)[2048]
// raw_array_zero_suppress  .TSLSB(DATA32)[2048]
  // ---
// raw_array_zero_suppress  .TSMSB(DATA32)[2048]
  // ---
// raw_array_zero_suppress  .NF(DATA16)[2048]
// raw_array_zero_suppress  .NS(DATA16)[2048]
// DATA16 .ENE[2048]
// DATA16 .NF[2048]
// DATA16 .NS[2048]
// 
// size= 1  chunks=6144  mem=6144  line=12288  total=75497472
// size=2048  chunks=  3  mem=6144  line=6147  total=37767168
// size=6144  chunks=  1  mem=6144  line=6145  total=37754880
// 
// corr structure: raw_event_CALIFA
  // DATA16 .ENE[2048]
  // DATA16 .NF[2048]
  // DATA16 .NS[2048]
// .raw_event_CALIFA/6144/.ENE/2048/[2048]
                       // .NF/2048/[2048]
                       // .NS/2048/[2048]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_CALIFA
// .raw_event_CALIFA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_event_CALIFA
// .raw_event_CALIFA
// Corr struct for: raw_event
//  : public raw_event_base
// ---
// raw_event_TIMESTAMP  .TIMESTAMP
  // raw_event_TIMESTAMP_LOS  .LOS
    // DATA12  .ID
    // raw_event_TIMESTAMP_LOS_WR  .WR
      // DATA16  .T[4]
  // raw_event_TIMESTAMP_SCITWO  .SCITWO
    // DATA12  .ID
    // raw_event_TIMESTAMP_SCITWO_WR  .WR
      // DATA16  .T[4]
  // raw_event_TIMESTAMP_SCIEIGHT  .SCIEIGHT
    // DATA12  .ID
    // raw_event_TIMESTAMP_SCIEIGHT_WR  .WR
      // DATA16  .T[4]
// raw_event_LOS  .LOS[2]
  // raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
  // raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
  // raw_array_multi_zero_suppress  .MT(DATA16)[8][32]
  // raw_array_multi_zero_suppress  .TTFL(DATA12)[8][32]
  // raw_array_multi_zero_suppress  .TTFT(DATA12)[8][32]
  // raw_array_multi_zero_suppress  .TTCL(DATA12)[8][32]
  // raw_array_multi_zero_suppress  .TTCT(DATA12)[8][32]
// raw_event_SCITWO  .SCITWO
  // raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
  // raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
// raw_event_SCIEIGHT  .SCIEIGHT
  // raw_array_multi_zero_suppress  .VTF(DATA12)[8][32]
  // raw_array_multi_zero_suppress  .VTC(DATA16)[8][32]
// raw_event_FIBONEA  .FIBONEA
  // raw_array_multi_zero_suppress  .TMLC(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TMLF(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TMTC(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TMTF(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TSLC(DATA12)[1][64]
  // raw_array_multi_zero_suppress  .TSLF(DATA12)[1][64]
  // raw_array_multi_zero_suppress  .TSTC(DATA12)[1][64]
  // raw_array_multi_zero_suppress  .TSTF(DATA12)[1][64]
// raw_event_FIBONEB  .FIBONEB
  // raw_array_multi_zero_suppress  .TMLC(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TMLF(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TMTC(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TMTF(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TSLC(DATA12)[1][64]
  // raw_array_multi_zero_suppress  .TSLF(DATA12)[1][64]
  // raw_array_multi_zero_suppress  .TSTC(DATA12)[1][64]
  // raw_array_multi_zero_suppress  .TSTF(DATA12)[1][64]
// raw_event_SFIB  .SFIB
  // raw_array_multi_zero_suppress  .TTLC(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .BTLC(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TTLF(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .BTLF(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TTTC(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .BTTC(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .TTTF(DATA12)[256][64]
  // raw_array_multi_zero_suppress  .BTTF(DATA12)[256][64]
// raw_event_NN  .NN
  // raw_event_NN_WR  .WR
    // DATA12  .ID
    // DATA16  .T[4]
  // raw_event_NN_P  .P[16]
    // raw_event_NN_P_tcl  .tcl
      // raw_event_NN_P_tcl_T  .T[2]
        // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
    // raw_event_NN_P_tfl  .tfl
      // raw_event_NN_P_tfl_T  .T[2]
        // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
    // raw_event_NN_P_tct  .tct
      // raw_event_NN_P_tct_T  .T[2]
        // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
    // raw_event_NN_P_tft  .tft
      // raw_event_NN_P_tft_T  .T[2]
        // raw_array_multi_zero_suppress  .B(DATA12)[50][200]
// raw_array_zero_suppress  .SAMP(DATA32)[512]
  // ---
// raw_event_MUSIC  .MUSIC
  // raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[8][10]
  // raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[8][10]
  // raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][10]
// raw_event_SOFSCI  .SOFSCI[1]
  // raw_array_multi_zero_suppress  .TF(DATA12)[3][10]
  // raw_array_multi_zero_suppress  .TC(DATA16)[3][10]
// raw_event_SOFTWIM  .SOFTWIM
  // raw_event_SOFTWIM_S  .S[1]
    // raw_array_multi_zero_suppress  .E(DATA16_OVERFLOW)[16][10]
    // raw_array_multi_zero_suppress  .T(DATA16_OVERFLOW)[16][10]
    // raw_array_multi_zero_suppress  .TREF(DATA16_OVERFLOW)[2][10]
// raw_event_SOFTOFW  .SOFTOFW
  // raw_event_SOFTOFW_P  .P[28]
    // raw_array_multi_zero_suppress  .TF(DATA12)[2][10]
    // raw_array_multi_zero_suppress  .TC(DATA16)[2][10]
    // DATA14  .E[2]
// raw_event_SOFMWPC  .SOFMWPC[4]
  // raw_event_SOFMWPC_Plane  .Plane[3]
    // raw_array_zero_suppress  .Q(DATA12)[288]
// raw_array_zero_suppress  .SST[6](raw_event_SST)[1024]
  // DATA12  .E
// raw_event_CALIFA  .CALIFA
  // raw_array_zero_suppress  .ENE(DATA16)[2048]
  // raw_array_zero_suppress  .TSLSB(DATA32)[2048]
    // ---
  // raw_array_zero_suppress  .TSMSB(DATA32)[2048]
    // ---
  // raw_array_zero_suppress  .NF(DATA16)[2048]
  // raw_array_zero_suppress  .NS(DATA16)[2048]
// DATA12 .TIMESTAMP.LOS.ID
// DATA16 .TIMESTAMP.LOS.WR.T[4]
// DATA12 .TIMESTAMP.SCITWO.ID
// DATA16 .TIMESTAMP.SCITWO.WR.T[4]
// DATA12 .TIMESTAMP.SCIEIGHT.ID
// DATA16 .TIMESTAMP.SCIEIGHT.WR.T[4]
// DATA12 .LOS[2].VTF[8][32]
// DATA16 .LOS[2].VTC[8][32]
// DATA16 .LOS[2].MT[8][32]
// DATA12 .LOS[2].TTFL[8][32]
// DATA12 .LOS[2].TTFT[8][32]
// DATA12 .LOS[2].TTCL[8][32]
// DATA12 .LOS[2].TTCT[8][32]
// DATA12 .SCITWO.VTF[8][32]
// DATA16 .SCITWO.VTC[8][32]
// DATA12 .SCIEIGHT.VTF[8][32]
// DATA16 .SCIEIGHT.VTC[8][32]
// DATA12 .FIBONEA.TMLC[256][64]
// DATA12 .FIBONEA.TMLF[256][64]
// DATA12 .FIBONEA.TMTC[256][64]
// DATA12 .FIBONEA.TMTF[256][64]
// DATA12 .FIBONEA.TSLC[1][64]
// DATA12 .FIBONEA.TSLF[1][64]
// DATA12 .FIBONEA.TSTC[1][64]
// DATA12 .FIBONEA.TSTF[1][64]
// DATA12 .FIBONEB.TMLC[256][64]
// DATA12 .FIBONEB.TMLF[256][64]
// DATA12 .FIBONEB.TMTC[256][64]
// DATA12 .FIBONEB.TMTF[256][64]
// DATA12 .FIBONEB.TSLC[1][64]
// DATA12 .FIBONEB.TSLF[1][64]
// DATA12 .FIBONEB.TSTC[1][64]
// DATA12 .FIBONEB.TSTF[1][64]
// DATA12 .SFIB.TTLC[256][64]
// DATA12 .SFIB.BTLC[256][64]
// DATA12 .SFIB.TTLF[256][64]
// DATA12 .SFIB.BTLF[256][64]
// DATA12 .SFIB.TTTC[256][64]
// DATA12 .SFIB.BTTC[256][64]
// DATA12 .SFIB.TTTF[256][64]
// DATA12 .SFIB.BTTF[256][64]
// DATA12 .NN.WR.ID
// DATA16 .NN.WR.T[4]
// DATA12 .NN.P[16].tcl.T[2].B[50][200]
// DATA12 .NN.P[16].tfl.T[2].B[50][200]
// DATA12 .NN.P[16].tct.T[2].B[50][200]
// DATA12 .NN.P[16].tft.T[2].B[50][200]
// DATA16_OVERFLOW .MUSIC.E[8][10]
// DATA16_OVERFLOW .MUSIC.T[8][10]
// DATA16_OVERFLOW .MUSIC.TREF[2][10]
// DATA12 .SOFSCI[1].TF[3][10]
// DATA16 .SOFSCI[1].TC[3][10]
// DATA16_OVERFLOW .SOFTWIM.S[1].E[16][10]
// DATA16_OVERFLOW .SOFTWIM.S[1].T[16][10]
// DATA16_OVERFLOW .SOFTWIM.S[1].TREF[2][10]
// DATA12 .SOFTOFW.P[28].TF[2][10]
// DATA16 .SOFTOFW.P[28].TC[2][10]
// DATA14 .SOFTOFW.P[28].E[2]
// DATA12 .SOFMWPC[4].Plane[3].Q[288]
// DATA12 .SST[6][1024].E
// DATA16 .CALIFA.ENE[2048]
// DATA16 .CALIFA.NF[2048]
// DATA16 .CALIFA.NS[2048]
// 
// size= 1  chunks=1564784  mem=1564784  line=3129568  total=835215872
// size= 2  chunks=1564756  mem=3129512  line=4694268  total=1121381952
// size= 4  chunks=1564744  mem=6258976  line=7823720  total=1775082880
// size= 5  chunks=1564740  mem=7823700  line=9388440  total=2092544640
// size=10  chunks=1563210  mem=15632100  line=17195310  total=-1024146400
// size=15  chunks=1563208  mem=23448120  line=25011328  total=1583872000
// size=20  chunks=1563150  mem=31263000  line=32826150  total=-1974558560
// size=30  chunks=1563146  mem=46894380  line=48457526  total=-2086246496
// size=32  chunks=1558682  mem=49877824  line=51436506  total=-665522336
// size=42  chunks=1558626  mem=65462292  line=67020918  total=-1251282016
// size=60  chunks=1558625  mem=93517500  line=95076125  total=227015856
// size=64  chunks=1300073  mem=83204672  line=84504745  total=-1780209168
// size=80  chunks=1300059  mem=104004720  line=105304779  total=-1481975600
// size=160  chunks=1300029  mem=208004640  line=209304669  total=-428947280
// size=180  chunks=1300027  mem=234004860  line=235304887  total=-1929019376
// size=200  chunks=26427  mem=5285400  line=5311827  total=1100182608
// size=256  chunks=26301  mem=6733056  line=6759357  total=-1570766160
// size=288  chunks=22857  mem=6582816  line=6605673  total=-1534861840
// size=340  chunks=22855  mem=7770700  line=7793555  total=1818013776
// size=512  chunks=22853  mem=11700736  line=11723589  total=1079168560
// size=864  chunks=22845  mem=19738080  line=19760925  total=2109701296
// size=1024  chunks=16707  mem=17107968  line=17124675  total=116485456
// size=1176  chunks=16680  mem=19615680  line=19632360  total=-1498258048
// size=1792  chunks=16668  mem=29869056  line=29885724  total=1098824768
// size=2048  chunks=10527  mem=21559296  line=21569823  total=-2034066032
// size=3456  chunks=10524  mem=36370944  line=36381468  total=-652485568
// size=3584  chunks=10523  mem=37714432  line=37724955  total=1375468496
// size=6144  chunks=10516  mem=64610304  line=64620820  total=1210153152
// size=10000  chunks=4244  mem=42440000  line=42444244  total=-1300362048
// size=16384  chunks=164  mem=2686976  line=2687140  total=20694976
// size=20000  chunks=100  mem=2000000  line=2000100  total=-1306680384
// size=65792  chunks= 86  mem=5658112  line=5658198  total=1930102176
// size=80000  chunks= 38  mem=3040000  line=3040038  total=-1820942176
// size=131072  chunks= 31  mem=4063232  line=4063263  total=1577332112
// size=1280000  chunks= 16  mem=20480000  line=20480016  total=2050361088
// size=1280005  chunks= 15  mem=19200075  line=19200090  total=697395040
// size=1564784  chunks=  1  mem=1564784  line=1564785  total=419172720
// 
// corr structure: raw_event
  // DATA12 .TIMESTAMP.LOS.ID
  // DATA16 .TIMESTAMP.LOS.WR.T[4]
  // DATA12 .TIMESTAMP.SCITWO.ID
  // DATA16 .TIMESTAMP.SCITWO.WR.T[4]
  // DATA12 .TIMESTAMP.SCIEIGHT.ID
  // DATA16 .TIMESTAMP.SCIEIGHT.WR.T[4]
  // DATA12 .LOS[2].VTF[8][32]
  // DATA16 .LOS[2].VTC[8][32]
  // DATA16 .LOS[2].MT[8][32]
  // DATA12 .LOS[2].TTFL[8][32]
  // DATA12 .LOS[2].TTFT[8][32]
  // DATA12 .LOS[2].TTCL[8][32]
  // DATA12 .LOS[2].TTCT[8][32]
  // DATA12 .SCITWO.VTF[8][32]
  // DATA16 .SCITWO.VTC[8][32]
  // DATA12 .SCIEIGHT.VTF[8][32]
  // DATA16 .SCIEIGHT.VTC[8][32]
  // DATA12 .FIBONEA.TMLC[256][64]
  // DATA12 .FIBONEA.TMLF[256][64]
  // DATA12 .FIBONEA.TMTC[256][64]
  // DATA12 .FIBONEA.TMTF[256][64]
  // DATA12 .FIBONEA.TSLC[1][64]
  // DATA12 .FIBONEA.TSLF[1][64]
  // DATA12 .FIBONEA.TSTC[1][64]
  // DATA12 .FIBONEA.TSTF[1][64]
  // DATA12 .FIBONEB.TMLC[256][64]
  // DATA12 .FIBONEB.TMLF[256][64]
  // DATA12 .FIBONEB.TMTC[256][64]
  // DATA12 .FIBONEB.TMTF[256][64]
  // DATA12 .FIBONEB.TSLC[1][64]
  // DATA12 .FIBONEB.TSLF[1][64]
  // DATA12 .FIBONEB.TSTC[1][64]
  // DATA12 .FIBONEB.TSTF[1][64]
  // DATA12 .SFIB.TTLC[256][64]
  // DATA12 .SFIB.BTLC[256][64]
  // DATA12 .SFIB.TTLF[256][64]
  // DATA12 .SFIB.BTLF[256][64]
  // DATA12 .SFIB.TTTC[256][64]
  // DATA12 .SFIB.BTTC[256][64]
  // DATA12 .SFIB.TTTF[256][64]
  // DATA12 .SFIB.BTTF[256][64]
  // DATA12 .NN.WR.ID
  // DATA16 .NN.WR.T[4]
  // DATA12 .NN.P[16].tcl.T[2].B[50][200]
  // DATA12 .NN.P[16].tfl.T[2].B[50][200]
  // DATA12 .NN.P[16].tct.T[2].B[50][200]
  // DATA12 .NN.P[16].tft.T[2].B[50][200]
  // DATA16_OVERFLOW .MUSIC.E[8][10]
  // DATA16_OVERFLOW .MUSIC.T[8][10]
  // DATA16_OVERFLOW .MUSIC.TREF[2][10]
  // DATA12 .SOFSCI[1].TF[3][10]
  // DATA16 .SOFSCI[1].TC[3][10]
  // DATA16_OVERFLOW .SOFTWIM.S[1].E[16][10]
  // DATA16_OVERFLOW .SOFTWIM.S[1].T[16][10]
  // DATA16_OVERFLOW .SOFTWIM.S[1].TREF[2][10]
  // DATA12 .SOFTOFW.P[28].TF[2][10]
  // DATA16 .SOFTOFW.P[28].TC[2][10]
  // DATA14 .SOFTOFW.P[28].E[2]
  // DATA12 .SOFMWPC[4].Plane[3].Q[288]
  // DATA12 .SST[6][1024].E
  // DATA16 .CALIFA.ENE[2048]
  // DATA16 .CALIFA.NF[2048]
  // DATA16 .CALIFA.NS[2048]
// .raw_event/1564784/.TIMESTAMP/15/.LOS/5/.ID
                                        // .WR/4/.T/4/[4]
                                 // .SCITWO/5/.ID
                                           // .WR/4/.T/4/[4]
                                 // .SCIEIGHT/5/.ID
                                             // .WR/4/.T/4/[4]
                   // .LOS/3584/[2]/1792/.VTF/256/[8]/32/[32]
                                      // .VTC/256/[8]/32/[32]
                                      // .MT/256/[8]/32/[32]
                                      // .TTFL/256/[8]/32/[32]
                                      // .TTFT/256/[8]/32/[32]
                                      // .TTCL/256/[8]/32/[32]
                                      // .TTCT/256/[8]/32/[32]
                   // .SCITWO/512/.VTF/256/[8]/32/[32]
                               // .VTC/256/[8]/32/[32]
                   // .SCIEIGHT/512/.VTF/256/[8]/32/[32]
                                 // .VTC/256/[8]/32/[32]
                   // .FIBONEA/65792/.TMLC/16384/[256]/64/[64]
                                  // .TMLF/16384/[256]/64/[64]
                                  // .TMTC/16384/[256]/64/[64]
                                  // .TMTF/16384/[256]/64/[64]
                                  // .TSLC/64/[1]/64/[64]
                                  // .TSLF/64/[1]/64/[64]
                                  // .TSTC/64/[1]/64/[64]
                                  // .TSTF/64/[1]/64/[64]
                   // .FIBONEB/65792/.TMLC/16384/[256]/64/[64]
                                  // .TMLF/16384/[256]/64/[64]
                                  // .TMTC/16384/[256]/64/[64]
                                  // .TMTF/16384/[256]/64/[64]
                                  // .TSLC/64/[1]/64/[64]
                                  // .TSLF/64/[1]/64/[64]
                                  // .TSTC/64/[1]/64/[64]
                                  // .TSTF/64/[1]/64/[64]
                   // .SFIB/131072/.TTLC/16384/[256]/64/[64]
                                // .BTLC/16384/[256]/64/[64]
                                // .TTLF/16384/[256]/64/[64]
                                // .BTLF/16384/[256]/64/[64]
                                // .TTTC/16384/[256]/64/[64]
                                // .BTTC/16384/[256]/64/[64]
                                // .TTTF/16384/[256]/64/[64]
                                // .BTTF/16384/[256]/64/[64]
                   // .NN/1280005/.WR/5/.ID
                                     // .T/4/[4]
                               // .P/1280000/[16]/80000/.tcl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                                     // .tfl/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                                     // .tct/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                                                     // .tft/20000/.T/20000/[2]/10000/.B/10000/[50]/200/[200]
                   // .MUSIC/180/.E/80/[8]/10/[10]
                              // .T/80/[8]/10/[10]
                              // .TREF/20/[2]/10/[10]
                   // .SOFSCI/60/[1]/60/.TF/30/[3]/10/[10]
                                     // .TC/30/[3]/10/[10]
                   // .SOFTWIM/340/.S/340/[1]/340/.E/160/[16]/10/[10]
                                               // .T/160/[16]/10/[10]
                                               // .TREF/20/[2]/10/[10]
                   // .SOFTOFW/1176/.P/1176/[28]/42/.TF/20/[2]/10/[10]
                                                 // .TC/20/[2]/10/[10]
                                                 // .E/2/[2]
                   // .SOFMWPC/3456/[4]/864/.Plane/864/[3]/288/.Q/288/[288]
                   // .SST/6144/[6]/1024/[1024]/1/.E
                   // .CALIFA/6144/.ENE/2048/[2048]
                                // .NF/2048/[2048]
                                // .NS/2048/[2048]// 
// size= 1  chunks=256  mem= 256  line=512  total=131072
// size= 4  chunks=244  mem= 976  line=1220  total=312320
// size=10  chunks= 28  mem= 280  line=308  total=78848
// size=12  chunks= 26  mem= 312  line=338  total=86528
// size=80  chunks= 19  mem=1520  line=1539  total=393984
// size=160  chunks=  4  mem= 640  line=644  total=164864
// size=256  chunks=  1  mem= 256  line=257  total=65792
// 
// corr structure: raw_event
  // DATA16 .TIMESTAMP.LOS.WR.T[4]
  // DATA16 .TIMESTAMP.SCITWO.WR.T[4]
  // DATA16 .TIMESTAMP.SCIEIGHT.WR.T[4]
  // DATA16 .NN.WR.T[4]
  // DATA16_OVERFLOW .MUSIC.T[8][10]
  // DATA16_OVERFLOW .SOFTWIM.S[1].T[16][10]
// .raw_event/256/.TIMESTAMP/12/.LOS/4/.WR/4/.T/4/[4]
                             // .SCITWO/4/.WR/4/.T/4/[4]
                             // .SCIEIGHT/4/.WR/4/.T/4/[4]
               // .NN/4/.WR/4/.T/4/[4]
               // .MUSIC/80/.T/80/[8]/10/[10]
               // .SOFTWIM/160/.S/160/[1]/160/.T/160/[16]/10/[10]// 
// size= 1  chunks=6440  mem=6440  line=12880  total=82947200
// size= 2  chunks=6412  mem=12824  line=19236  total=123879840
// size=10  chunks=6196  mem=61960  line=68156  total=438924640
// size=56  chunks=6169  mem=345464  line=351633  total=-2030450776
// size=80  chunks=6162  mem=492960  line=499122  total=-1080621616
// size=160  chunks=6147  mem=983520  line=989667  total=2078488184
// size=1024  chunks=  9  mem=9216  line=9225  total=59409000
// size=6144  chunks=  4  mem=24576  line=24580  total=158295200
// size=6440  chunks=  1  mem=6440  line=6441  total=41480040
// 
// corr structure: raw_event
  // DATA16_OVERFLOW .MUSIC.E[8][10]
  // DATA16_OVERFLOW .SOFTWIM.S[1].E[16][10]
  // DATA14 .SOFTOFW.P[28].E[2]
  // DATA12 .SST[6][1024].E
// .raw_event/6440/.MUSIC/80/.E/80/[8]/10/[10]
                // .SOFTWIM/160/.S/160/[1]/160/.E/160/[16]/10/[10]
                // .SOFTOFW/56/.P/56/[28]/2/.E/2/[2]
                // .SST/6144/[6]/1024/[1024]/1/.E
// Corr struct for: raw_sticky
//  : public raw_sticky_base
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_sticky
// .raw_sticky// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_sticky
// .raw_sticky// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: raw_sticky
// .raw_sticky

/** END_CORR_STRUCT ***************************************************/

